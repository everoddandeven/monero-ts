/*! For license information please see monero.worker.js.LICENSE.txt */
(()=>{var t,e,r={9809:(t,e,r)=>{"use strict";const i=e;i.bignum=r(4590),i.define=r(2500).define,i.base=r(1979),i.constants=r(6826),i.decoders=r(8307),i.encoders=r(6579)},2500:(t,e,r)=>{"use strict";const i=r(6579),n=r(8307),s=r(5717);function o(t,e){this.name=t,this.body=e,this.decoders={},this.encoders={}}e.define=function(t,e){return new o(t,e)},o.prototype._createNamed=function(t){const e=this.name;function r(t){this._initNamed(t,e)}return s(r,t),r.prototype._initNamed=function(e,r){t.call(this,e,r)},new r(this)},o.prototype._getDecoder=function(t){return t=t||"der",this.decoders.hasOwnProperty(t)||(this.decoders[t]=this._createNamed(n[t])),this.decoders[t]},o.prototype.decode=function(t,e,r){return this._getDecoder(e).decode(t,r)},o.prototype._getEncoder=function(t){return t=t||"der",this.encoders.hasOwnProperty(t)||(this.encoders[t]=this._createNamed(i[t])),this.encoders[t]},o.prototype.encode=function(t,e,r){return this._getEncoder(e).encode(t,r)}},6625:(t,e,r)=>{"use strict";const i=r(5717),n=r(8465).b,s=r(2399).Buffer;function o(t,e){n.call(this,e),s.isBuffer(t)?(this.base=t,this.offset=0,this.length=t.length):this.error("Input not Buffer")}function a(t,e){if(Array.isArray(t))this.length=0,this.value=t.map((function(t){return a.isEncoderBuffer(t)||(t=new a(t,e)),this.length+=t.length,t}),this);else if("number"==typeof t){if(!(0<=t&&t<=255))return e.error("non-byte EncoderBuffer value");this.value=t,this.length=1}else if("string"==typeof t)this.value=t,this.length=s.byteLength(t);else{if(!s.isBuffer(t))return e.error("Unsupported type: "+typeof t);this.value=t,this.length=t.length}}i(o,n),e.C=o,o.isDecoderBuffer=function(t){return t instanceof o||"object"==typeof t&&s.isBuffer(t.base)&&"DecoderBuffer"===t.constructor.name&&"number"==typeof t.offset&&"number"==typeof t.length&&"function"==typeof t.save&&"function"==typeof t.restore&&"function"==typeof t.isEmpty&&"function"==typeof t.readUInt8&&"function"==typeof t.skip&&"function"==typeof t.raw},o.prototype.save=function(){return{offset:this.offset,reporter:n.prototype.save.call(this)}},o.prototype.restore=function(t){const e=new o(this.base);return e.offset=t.offset,e.length=this.offset,this.offset=t.offset,n.prototype.restore.call(this,t.reporter),e},o.prototype.isEmpty=function(){return this.offset===this.length},o.prototype.readUInt8=function(t){return this.offset+1<=this.length?this.base.readUInt8(this.offset++,!0):this.error(t||"DecoderBuffer overrun")},o.prototype.skip=function(t,e){if(!(this.offset+t<=this.length))return this.error(e||"DecoderBuffer overrun");const r=new o(this.base);return r._reporterState=this._reporterState,r.offset=this.offset,r.length=this.offset+t,this.offset+=t,r},o.prototype.raw=function(t){return this.base.slice(t?t.offset:this.offset,this.length)},e.R=a,a.isEncoderBuffer=function(t){return t instanceof a||"object"==typeof t&&"EncoderBuffer"===t.constructor.name&&"number"==typeof t.length&&"function"==typeof t.join},a.prototype.join=function(t,e){return t||(t=s.alloc(this.length)),e||(e=0),0===this.length||(Array.isArray(this.value)?this.value.forEach((function(r){r.join(t,e),e+=r.length})):("number"==typeof this.value?t[e]=this.value:"string"==typeof this.value?t.write(this.value,e):s.isBuffer(this.value)&&this.value.copy(t,e),e+=this.length)),t}},1979:(t,e,r)=>{"use strict";const i=e;i.Reporter=r(8465).b,i.DecoderBuffer=r(6625).C,i.EncoderBuffer=r(6625).R,i.Node=r(1949)},1949:(t,e,r)=>{"use strict";const i=r(8465).b,n=r(6625).R,s=r(6625).C,o=r(9746),a=["seq","seqof","set","setof","objid","bool","gentime","utctime","null_","enum","int","objDesc","bitstr","bmpstr","charstr","genstr","graphstr","ia5str","iso646str","numstr","octstr","printstr","t61str","unistr","utf8str","videostr"],u=["key","obj","use","optional","explicit","implicit","def","choice","any","contains"].concat(a);function h(t,e,r){const i={};this._baseState=i,i.name=r,i.enc=t,i.parent=e||null,i.children=null,i.tag=null,i.args=null,i.reverseArgs=null,i.choice=null,i.optional=!1,i.any=!1,i.obj=!1,i.use=null,i.useDecoder=null,i.key=null,i.default=null,i.explicit=null,i.implicit=null,i.contains=null,i.parent||(i.children=[],this._wrap())}t.exports=h;const c=["enc","parent","children","tag","args","reverseArgs","choice","optional","any","obj","use","alteredUse","key","default","explicit","implicit","contains"];h.prototype.clone=function(){const t=this._baseState,e={};c.forEach((function(r){e[r]=t[r]}));const r=new this.constructor(e.parent);return r._baseState=e,r},h.prototype._wrap=function(){const t=this._baseState;u.forEach((function(e){this[e]=function(){const r=new this.constructor(this);return t.children.push(r),r[e].apply(r,arguments)}}),this)},h.prototype._init=function(t){const e=this._baseState;o(null===e.parent),t.call(this),e.children=e.children.filter((function(t){return t._baseState.parent===this}),this),o.equal(e.children.length,1,"Root node can have only one child")},h.prototype._useArgs=function(t){const e=this._baseState,r=t.filter((function(t){return t instanceof this.constructor}),this);t=t.filter((function(t){return!(t instanceof this.constructor)}),this),0!==r.length&&(o(null===e.children),e.children=r,r.forEach((function(t){t._baseState.parent=this}),this)),0!==t.length&&(o(null===e.args),e.args=t,e.reverseArgs=t.map((function(t){if("object"!=typeof t||t.constructor!==Object)return t;const e={};return Object.keys(t).forEach((function(r){r==(0|r)&&(r|=0);const i=t[r];e[i]=r})),e})))},["_peekTag","_decodeTag","_use","_decodeStr","_decodeObjid","_decodeTime","_decodeNull","_decodeInt","_decodeBool","_decodeList","_encodeComposite","_encodeStr","_encodeObjid","_encodeTime","_encodeNull","_encodeInt","_encodeBool"].forEach((function(t){h.prototype[t]=function(){const e=this._baseState;throw new Error(t+" not implemented for encoding: "+e.enc)}})),a.forEach((function(t){h.prototype[t]=function(){const e=this._baseState,r=Array.prototype.slice.call(arguments);return o(null===e.tag),e.tag=t,this._useArgs(r),this}})),h.prototype.use=function(t){o(t);const e=this._baseState;return o(null===e.use),e.use=t,this},h.prototype.optional=function(){return this._baseState.optional=!0,this},h.prototype.def=function(t){const e=this._baseState;return o(null===e.default),e.default=t,e.optional=!0,this},h.prototype.explicit=function(t){const e=this._baseState;return o(null===e.explicit&&null===e.implicit),e.explicit=t,this},h.prototype.implicit=function(t){const e=this._baseState;return o(null===e.explicit&&null===e.implicit),e.implicit=t,this},h.prototype.obj=function(){const t=this._baseState,e=Array.prototype.slice.call(arguments);return t.obj=!0,0!==e.length&&this._useArgs(e),this},h.prototype.key=function(t){const e=this._baseState;return o(null===e.key),e.key=t,this},h.prototype.any=function(){return this._baseState.any=!0,this},h.prototype.choice=function(t){const e=this._baseState;return o(null===e.choice),e.choice=t,this._useArgs(Object.keys(t).map((function(e){return t[e]}))),this},h.prototype.contains=function(t){const e=this._baseState;return o(null===e.use),e.contains=t,this},h.prototype._decode=function(t,e){const r=this._baseState;if(null===r.parent)return t.wrapResult(r.children[0]._decode(t,e));let i,n=r.default,o=!0,a=null;if(null!==r.key&&(a=t.enterKey(r.key)),r.optional){let i=null;if(null!==r.explicit?i=r.explicit:null!==r.implicit?i=r.implicit:null!==r.tag&&(i=r.tag),null!==i||r.any){if(o=this._peekTag(t,i,r.any),t.isError(o))return o}else{const i=t.save();try{null===r.choice?this._decodeGeneric(r.tag,t,e):this._decodeChoice(t,e),o=!0}catch(t){o=!1}t.restore(i)}}if(r.obj&&o&&(i=t.enterObject()),o){if(null!==r.explicit){const e=this._decodeTag(t,r.explicit);if(t.isError(e))return e;t=e}const i=t.offset;if(null===r.use&&null===r.choice){let e;r.any&&(e=t.save());const i=this._decodeTag(t,null!==r.implicit?r.implicit:r.tag,r.any);if(t.isError(i))return i;r.any?n=t.raw(e):t=i}if(e&&e.track&&null!==r.tag&&e.track(t.path(),i,t.length,"tagged"),e&&e.track&&null!==r.tag&&e.track(t.path(),t.offset,t.length,"content"),r.any||(n=null===r.choice?this._decodeGeneric(r.tag,t,e):this._decodeChoice(t,e)),t.isError(n))return n;if(r.any||null!==r.choice||null===r.children||r.children.forEach((function(r){r._decode(t,e)})),r.contains&&("octstr"===r.tag||"bitstr"===r.tag)){const i=new s(n);n=this._getUse(r.contains,t._reporterState.obj)._decode(i,e)}}return r.obj&&o&&(n=t.leaveObject(i)),null===r.key||null===n&&!0!==o?null!==a&&t.exitKey(a):t.leaveKey(a,r.key,n),n},h.prototype._decodeGeneric=function(t,e,r){const i=this._baseState;return"seq"===t||"set"===t?null:"seqof"===t||"setof"===t?this._decodeList(e,t,i.args[0],r):/str$/.test(t)?this._decodeStr(e,t,r):"objid"===t&&i.args?this._decodeObjid(e,i.args[0],i.args[1],r):"objid"===t?this._decodeObjid(e,null,null,r):"gentime"===t||"utctime"===t?this._decodeTime(e,t,r):"null_"===t?this._decodeNull(e,r):"bool"===t?this._decodeBool(e,r):"objDesc"===t?this._decodeStr(e,t,r):"int"===t||"enum"===t?this._decodeInt(e,i.args&&i.args[0],r):null!==i.use?this._getUse(i.use,e._reporterState.obj)._decode(e,r):e.error("unknown tag: "+t)},h.prototype._getUse=function(t,e){const r=this._baseState;return r.useDecoder=this._use(t,e),o(null===r.useDecoder._baseState.parent),r.useDecoder=r.useDecoder._baseState.children[0],r.implicit!==r.useDecoder._baseState.implicit&&(r.useDecoder=r.useDecoder.clone(),r.useDecoder._baseState.implicit=r.implicit),r.useDecoder},h.prototype._decodeChoice=function(t,e){const r=this._baseState;let i=null,n=!1;return Object.keys(r.choice).some((function(s){const o=t.save(),a=r.choice[s];try{const r=a._decode(t,e);if(t.isError(r))return!1;i={type:s,value:r},n=!0}catch(e){return t.restore(o),!1}return!0}),this),n?i:t.error("Choice not matched")},h.prototype._createEncoderBuffer=function(t){return new n(t,this.reporter)},h.prototype._encode=function(t,e,r){const i=this._baseState;if(null!==i.default&&i.default===t)return;const n=this._encodeValue(t,e,r);return void 0===n||this._skipDefault(n,e,r)?void 0:n},h.prototype._encodeValue=function(t,e,r){const n=this._baseState;if(null===n.parent)return n.children[0]._encode(t,e||new i);let s=null;if(this.reporter=e,n.optional&&void 0===t){if(null===n.default)return;t=n.default}let o=null,a=!1;if(n.any)s=this._createEncoderBuffer(t);else if(n.choice)s=this._encodeChoice(t,e);else if(n.contains)o=this._getUse(n.contains,r)._encode(t,e),a=!0;else if(n.children)o=n.children.map((function(r){if("null_"===r._baseState.tag)return r._encode(null,e,t);if(null===r._baseState.key)return e.error("Child should have a key");const i=e.enterKey(r._baseState.key);if("object"!=typeof t)return e.error("Child expected, but input is not object");const n=r._encode(t[r._baseState.key],e,t);return e.leaveKey(i),n}),this).filter((function(t){return t})),o=this._createEncoderBuffer(o);else if("seqof"===n.tag||"setof"===n.tag){if(!n.args||1!==n.args.length)return e.error("Too many args for : "+n.tag);if(!Array.isArray(t))return e.error("seqof/setof, but data is not Array");const r=this.clone();r._baseState.implicit=null,o=this._createEncoderBuffer(t.map((function(r){const i=this._baseState;return this._getUse(i.args[0],t)._encode(r,e)}),r))}else null!==n.use?s=this._getUse(n.use,r)._encode(t,e):(o=this._encodePrimitive(n.tag,t),a=!0);if(!n.any&&null===n.choice){const t=null!==n.implicit?n.implicit:n.tag,r=null===n.implicit?"universal":"context";null===t?null===n.use&&e.error("Tag could be omitted only for .use()"):null===n.use&&(s=this._encodeComposite(t,a,r,o))}return null!==n.explicit&&(s=this._encodeComposite(n.explicit,!1,"context",s)),s},h.prototype._encodeChoice=function(t,e){const r=this._baseState,i=r.choice[t.type];return i||o(!1,t.type+" not found in "+JSON.stringify(Object.keys(r.choice))),i._encode(t.value,e)},h.prototype._encodePrimitive=function(t,e){const r=this._baseState;if(/str$/.test(t))return this._encodeStr(e,t);if("objid"===t&&r.args)return this._encodeObjid(e,r.reverseArgs[0],r.args[1]);if("objid"===t)return this._encodeObjid(e,null,null);if("gentime"===t||"utctime"===t)return this._encodeTime(e,t);if("null_"===t)return this._encodeNull();if("int"===t||"enum"===t)return this._encodeInt(e,r.args&&r.reverseArgs[0]);if("bool"===t)return this._encodeBool(e);if("objDesc"===t)return this._encodeStr(e,t);throw new Error("Unsupported tag: "+t)},h.prototype._isNumstr=function(t){return/^[0-9 ]*$/.test(t)},h.prototype._isPrintstr=function(t){return/^[A-Za-z0-9 '()+,-./:=?]*$/.test(t)}},8465:(t,e,r)=>{"use strict";const i=r(5717);function n(t){this._reporterState={obj:null,path:[],options:t||{},errors:[]}}function s(t,e){this.path=t,this.rethrow(e)}e.b=n,n.prototype.isError=function(t){return t instanceof s},n.prototype.save=function(){const t=this._reporterState;return{obj:t.obj,pathLen:t.path.length}},n.prototype.restore=function(t){const e=this._reporterState;e.obj=t.obj,e.path=e.path.slice(0,t.pathLen)},n.prototype.enterKey=function(t){return this._reporterState.path.push(t)},n.prototype.exitKey=function(t){const e=this._reporterState;e.path=e.path.slice(0,t-1)},n.prototype.leaveKey=function(t,e,r){const i=this._reporterState;this.exitKey(t),null!==i.obj&&(i.obj[e]=r)},n.prototype.path=function(){return this._reporterState.path.join("/")},n.prototype.enterObject=function(){const t=this._reporterState,e=t.obj;return t.obj={},e},n.prototype.leaveObject=function(t){const e=this._reporterState,r=e.obj;return e.obj=t,r},n.prototype.error=function(t){let e;const r=this._reporterState,i=t instanceof s;if(e=i?t:new s(r.path.map((function(t){return"["+JSON.stringify(t)+"]"})).join(""),t.message||t,t.stack),!r.options.partial)throw e;return i||r.errors.push(e),e},n.prototype.wrapResult=function(t){const e=this._reporterState;return e.options.partial?{result:this.isError(t)?null:t,errors:e.errors}:t},i(s,Error),s.prototype.rethrow=function(t){if(this.message=t+" at: "+(this.path||"(shallow)"),Error.captureStackTrace&&Error.captureStackTrace(this,s),!this.stack)try{throw new Error(this.message)}catch(t){this.stack=t.stack}return this}},160:(t,e)=>{"use strict";function r(t){const e={};return Object.keys(t).forEach((function(r){(0|r)==r&&(r|=0);const i=t[r];e[i]=r})),e}e.tagClass={0:"universal",1:"application",2:"context",3:"private"},e.tagClassByName=r(e.tagClass),e.tag={0:"end",1:"bool",2:"int",3:"bitstr",4:"octstr",5:"null_",6:"objid",7:"objDesc",8:"external",9:"real",10:"enum",11:"embed",12:"utf8str",13:"relativeOid",16:"seq",17:"set",18:"numstr",19:"printstr",20:"t61str",21:"videostr",22:"ia5str",23:"utctime",24:"gentime",25:"graphstr",26:"iso646str",27:"genstr",28:"unistr",29:"charstr",30:"bmpstr"},e.tagByName=r(e.tag)},6826:(t,e,r)=>{"use strict";const i=e;i._reverse=function(t){const e={};return Object.keys(t).forEach((function(r){(0|r)==r&&(r|=0);const i=t[r];e[i]=r})),e},i.der=r(160)},1671:(t,e,r)=>{"use strict";const i=r(5717),n=r(4590),s=r(6625).C,o=r(1949),a=r(160);function u(t){this.enc="der",this.name=t.name,this.entity=t,this.tree=new h,this.tree._init(t.body)}function h(t){o.call(this,"der",t)}function c(t,e){let r=t.readUInt8(e);if(t.isError(r))return r;const i=a.tagClass[r>>6],n=0==(32&r);if(31==(31&r)){let i=r;for(r=0;128==(128&i);){if(i=t.readUInt8(e),t.isError(i))return i;r<<=7,r|=127&i}}else r&=31;return{cls:i,primitive:n,tag:r,tagStr:a.tag[r]}}function l(t,e,r){let i=t.readUInt8(r);if(t.isError(i))return i;if(!e&&128===i)return null;if(0==(128&i))return i;const n=127&i;if(n>4)return t.error("length octect is too long");i=0;for(let e=0;e<n;e++){i<<=8;const e=t.readUInt8(r);if(t.isError(e))return e;i|=e}return i}t.exports=u,u.prototype.decode=function(t,e){return s.isDecoderBuffer(t)||(t=new s(t,e)),this.tree._decode(t,e)},i(h,o),h.prototype._peekTag=function(t,e,r){if(t.isEmpty())return!1;const i=t.save(),n=c(t,'Failed to peek tag: "'+e+'"');return t.isError(n)?n:(t.restore(i),n.tag===e||n.tagStr===e||n.tagStr+"of"===e||r)},h.prototype._decodeTag=function(t,e,r){const i=c(t,'Failed to decode tag of "'+e+'"');if(t.isError(i))return i;let n=l(t,i.primitive,'Failed to get length of "'+e+'"');if(t.isError(n))return n;if(!r&&i.tag!==e&&i.tagStr!==e&&i.tagStr+"of"!==e)return t.error('Failed to match tag: "'+e+'"');if(i.primitive||null!==n)return t.skip(n,'Failed to match body of: "'+e+'"');const s=t.save(),o=this._skipUntilEnd(t,'Failed to skip indefinite length body: "'+this.tag+'"');return t.isError(o)?o:(n=t.offset-s.offset,t.restore(s),t.skip(n,'Failed to match body of: "'+e+'"'))},h.prototype._skipUntilEnd=function(t,e){for(;;){const r=c(t,e);if(t.isError(r))return r;const i=l(t,r.primitive,e);if(t.isError(i))return i;let n;if(n=r.primitive||null!==i?t.skip(i):this._skipUntilEnd(t,e),t.isError(n))return n;if("end"===r.tagStr)break}},h.prototype._decodeList=function(t,e,r,i){const n=[];for(;!t.isEmpty();){const e=this._peekTag(t,"end");if(t.isError(e))return e;const s=r.decode(t,"der",i);if(t.isError(s)&&e)break;n.push(s)}return n},h.prototype._decodeStr=function(t,e){if("bitstr"===e){const e=t.readUInt8();return t.isError(e)?e:{unused:e,data:t.raw()}}if("bmpstr"===e){const e=t.raw();if(e.length%2==1)return t.error("Decoding of string type: bmpstr length mismatch");let r="";for(let t=0;t<e.length/2;t++)r+=String.fromCharCode(e.readUInt16BE(2*t));return r}if("numstr"===e){const e=t.raw().toString("ascii");return this._isNumstr(e)?e:t.error("Decoding of string type: numstr unsupported characters")}if("octstr"===e)return t.raw();if("objDesc"===e)return t.raw();if("printstr"===e){const e=t.raw().toString("ascii");return this._isPrintstr(e)?e:t.error("Decoding of string type: printstr unsupported characters")}return/str$/.test(e)?t.raw().toString():t.error("Decoding of string type: "+e+" unsupported")},h.prototype._decodeObjid=function(t,e,r){let i;const n=[];let s=0,o=0;for(;!t.isEmpty();)o=t.readUInt8(),s<<=7,s|=127&o,0==(128&o)&&(n.push(s),s=0);128&o&&n.push(s);const a=n[0]/40|0,u=n[0]%40;if(i=r?n:[a,u].concat(n.slice(1)),e){let t=e[i.join(" ")];void 0===t&&(t=e[i.join(".")]),void 0!==t&&(i=t)}return i},h.prototype._decodeTime=function(t,e){const r=t.raw().toString();let i,n,s,o,a,u;if("gentime"===e)i=0|r.slice(0,4),n=0|r.slice(4,6),s=0|r.slice(6,8),o=0|r.slice(8,10),a=0|r.slice(10,12),u=0|r.slice(12,14);else{if("utctime"!==e)return t.error("Decoding "+e+" time is not supported yet");i=0|r.slice(0,2),n=0|r.slice(2,4),s=0|r.slice(4,6),o=0|r.slice(6,8),a=0|r.slice(8,10),u=0|r.slice(10,12),i=i<70?2e3+i:1900+i}return Date.UTC(i,n-1,s,o,a,u,0)},h.prototype._decodeNull=function(){return null},h.prototype._decodeBool=function(t){const e=t.readUInt8();return t.isError(e)?e:0!==e},h.prototype._decodeInt=function(t,e){const r=t.raw();let i=new n(r);return e&&(i=e[i.toString(10)]||i),i},h.prototype._use=function(t,e){return"function"==typeof t&&(t=t(e)),t._getDecoder("der").tree}},8307:(t,e,r)=>{"use strict";const i=e;i.der=r(1671),i.pem=r(9631)},9631:(t,e,r)=>{"use strict";const i=r(5717),n=r(2399).Buffer,s=r(1671);function o(t){s.call(this,t),this.enc="pem"}i(o,s),t.exports=o,o.prototype.decode=function(t,e){const r=t.toString().split(/[\r\n]+/g),i=e.label.toUpperCase(),o=/^-----(BEGIN|END) ([^-]+)-----$/;let a=-1,u=-1;for(let t=0;t<r.length;t++){const e=r[t].match(o);if(null!==e&&e[2]===i){if(-1!==a){if("END"!==e[1])break;u=t;break}if("BEGIN"!==e[1])break;a=t}}if(-1===a||-1===u)throw new Error("PEM section not found for: "+i);const h=r.slice(a+1,u).join("");h.replace(/[^a-z0-9+/=]+/gi,"");const c=n.from(h,"base64");return s.prototype.decode.call(this,c,e)}},6984:(t,e,r)=>{"use strict";const i=r(5717),n=r(2399).Buffer,s=r(1949),o=r(160);function a(t){this.enc="der",this.name=t.name,this.entity=t,this.tree=new u,this.tree._init(t.body)}function u(t){s.call(this,"der",t)}function h(t){return t<10?"0"+t:t}t.exports=a,a.prototype.encode=function(t,e){return this.tree._encode(t,e).join()},i(u,s),u.prototype._encodeComposite=function(t,e,r,i){const s=function(t,e,r,i){let n;if("seqof"===t?t="seq":"setof"===t&&(t="set"),o.tagByName.hasOwnProperty(t))n=o.tagByName[t];else{if("number"!=typeof t||(0|t)!==t)return i.error("Unknown tag: "+t);n=t}return n>=31?i.error("Multi-octet tag encoding unsupported"):(e||(n|=32),n|=o.tagClassByName[r||"universal"]<<6,n)}(t,e,r,this.reporter);if(i.length<128){const t=n.alloc(2);return t[0]=s,t[1]=i.length,this._createEncoderBuffer([t,i])}let a=1;for(let t=i.length;t>=256;t>>=8)a++;const u=n.alloc(2+a);u[0]=s,u[1]=128|a;for(let t=1+a,e=i.length;e>0;t--,e>>=8)u[t]=255&e;return this._createEncoderBuffer([u,i])},u.prototype._encodeStr=function(t,e){if("bitstr"===e)return this._createEncoderBuffer([0|t.unused,t.data]);if("bmpstr"===e){const e=n.alloc(2*t.length);for(let r=0;r<t.length;r++)e.writeUInt16BE(t.charCodeAt(r),2*r);return this._createEncoderBuffer(e)}return"numstr"===e?this._isNumstr(t)?this._createEncoderBuffer(t):this.reporter.error("Encoding of string type: numstr supports only digits and space"):"printstr"===e?this._isPrintstr(t)?this._createEncoderBuffer(t):this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark"):/str$/.test(e)||"objDesc"===e?this._createEncoderBuffer(t):this.reporter.error("Encoding of string type: "+e+" unsupported")},u.prototype._encodeObjid=function(t,e,r){if("string"==typeof t){if(!e)return this.reporter.error("string objid given, but no values map found");if(!e.hasOwnProperty(t))return this.reporter.error("objid not found in values map");t=e[t].split(/[\s.]+/g);for(let e=0;e<t.length;e++)t[e]|=0}else if(Array.isArray(t)){t=t.slice();for(let e=0;e<t.length;e++)t[e]|=0}if(!Array.isArray(t))return this.reporter.error("objid() should be either array or string, got: "+JSON.stringify(t));if(!r){if(t[1]>=40)return this.reporter.error("Second objid identifier OOB");t.splice(0,2,40*t[0]+t[1])}let i=0;for(let e=0;e<t.length;e++){let r=t[e];for(i++;r>=128;r>>=7)i++}const s=n.alloc(i);let o=s.length-1;for(let e=t.length-1;e>=0;e--){let r=t[e];for(s[o--]=127&r;(r>>=7)>0;)s[o--]=128|127&r}return this._createEncoderBuffer(s)},u.prototype._encodeTime=function(t,e){let r;const i=new Date(t);return"gentime"===e?r=[h(i.getUTCFullYear()),h(i.getUTCMonth()+1),h(i.getUTCDate()),h(i.getUTCHours()),h(i.getUTCMinutes()),h(i.getUTCSeconds()),"Z"].join(""):"utctime"===e?r=[h(i.getUTCFullYear()%100),h(i.getUTCMonth()+1),h(i.getUTCDate()),h(i.getUTCHours()),h(i.getUTCMinutes()),h(i.getUTCSeconds()),"Z"].join(""):this.reporter.error("Encoding "+e+" time is not supported yet"),this._encodeStr(r,"octstr")},u.prototype._encodeNull=function(){return this._createEncoderBuffer("")},u.prototype._encodeInt=function(t,e){if("string"==typeof t){if(!e)return this.reporter.error("String int or enum given, but no values map");if(!e.hasOwnProperty(t))return this.reporter.error("Values map doesn't contain: "+JSON.stringify(t));t=e[t]}if("number"!=typeof t&&!n.isBuffer(t)){const e=t.toArray();!t.sign&&128&e[0]&&e.unshift(0),t=n.from(e)}if(n.isBuffer(t)){let e=t.length;0===t.length&&e++;const r=n.alloc(e);return t.copy(r),0===t.length&&(r[0]=0),this._createEncoderBuffer(r)}if(t<128)return this._createEncoderBuffer(t);if(t<256)return this._createEncoderBuffer([0,t]);let r=1;for(let e=t;e>=256;e>>=8)r++;const i=new Array(r);for(let e=i.length-1;e>=0;e--)i[e]=255&t,t>>=8;return 128&i[0]&&i.unshift(0),this._createEncoderBuffer(n.from(i))},u.prototype._encodeBool=function(t){return this._createEncoderBuffer(t?255:0)},u.prototype._use=function(t,e){return"function"==typeof t&&(t=t(e)),t._getEncoder("der").tree},u.prototype._skipDefault=function(t,e,r){const i=this._baseState;let n;if(null===i.default)return!1;const s=t.join();if(void 0===i.defaultBuffer&&(i.defaultBuffer=this._encodeValue(i.default,e,r).join()),s.length!==i.defaultBuffer.length)return!1;for(n=0;n<s.length;n++)if(s[n]!==i.defaultBuffer[n])return!1;return!0}},6579:(t,e,r)=>{"use strict";const i=e;i.der=r(6984),i.pem=r(2883)},2883:(t,e,r)=>{"use strict";const i=r(5717),n=r(6984);function s(t){n.call(this,t),this.enc="pem"}i(s,n),t.exports=s,s.prototype.encode=function(t,e){const r=n.prototype.encode.call(this,t).toString("base64"),i=["-----BEGIN "+e.label+"-----"];for(let t=0;t<r.length;t+=64)i.push(r.slice(t,t+64));return i.push("-----END "+e.label+"-----"),i.join("\n")}},4590:function(t,e,r){!function(t,e){"use strict";function i(t,e){if(!t)throw new Error(e||"Assertion failed")}function n(t,e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}function s(t,e,r){if(s.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==e&&"be"!==e||(r=e,e=10),this._init(t||0,e||10,r||"be"))}var o;"object"==typeof t?t.exports=s:e.BN=s,s.BN=s,s.wordSize=26;try{o="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:r(950).Buffer}catch(t){}function a(t,e){var r=t.charCodeAt(e);return r>=65&&r<=70?r-55:r>=97&&r<=102?r-87:r-48&15}function u(t,e,r){var i=a(t,r);return r-1>=e&&(i|=a(t,r-1)<<4),i}function h(t,e,r,i){for(var n=0,s=Math.min(t.length,r),o=e;o<s;o++){var a=t.charCodeAt(o)-48;n*=i,n+=a>=49?a-49+10:a>=17?a-17+10:a}return n}s.isBN=function(t){return t instanceof s||null!==t&&"object"==typeof t&&t.constructor.wordSize===s.wordSize&&Array.isArray(t.words)},s.max=function(t,e){return t.cmp(e)>0?t:e},s.min=function(t,e){return t.cmp(e)<0?t:e},s.prototype._init=function(t,e,r){if("number"==typeof t)return this._initNumber(t,e,r);if("object"==typeof t)return this._initArray(t,e,r);"hex"===e&&(e=16),i(e===(0|e)&&e>=2&&e<=36);var n=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&(n++,this.negative=1),n<t.length&&(16===e?this._parseHex(t,n,r):(this._parseBase(t,e,n),"le"===r&&this._initArray(this.toArray(),e,r)))},s.prototype._initNumber=function(t,e,r){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(i(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===r&&this._initArray(this.toArray(),e,r)},s.prototype._initArray=function(t,e,r){if(i("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var s,o,a=0;if("be"===r)for(n=t.length-1,s=0;n>=0;n-=3)o=t[n]|t[n-1]<<8|t[n-2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);else if("le"===r)for(n=0,s=0;n<t.length;n+=3)o=t[n]|t[n+1]<<8|t[n+2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);return this.strip()},s.prototype._parseHex=function(t,e,r){this.length=Math.ceil((t.length-e)/6),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var n,s=0,o=0;if("be"===r)for(i=t.length-1;i>=e;i-=2)n=u(t,e,i)<<s,this.words[o]|=67108863&n,s>=18?(s-=18,o+=1,this.words[o]|=n>>>26):s+=8;else for(i=(t.length-e)%2==0?e+1:e;i<t.length;i+=2)n=u(t,e,i)<<s,this.words[o]|=67108863&n,s>=18?(s-=18,o+=1,this.words[o]|=n>>>26):s+=8;this.strip()},s.prototype._parseBase=function(t,e,r){this.words=[0],this.length=1;for(var i=0,n=1;n<=67108863;n*=e)i++;i--,n=n/e|0;for(var s=t.length-r,o=s%i,a=Math.min(s,s-o)+r,u=0,c=r;c<a;c+=i)u=h(t,c,c+i,e),this.imuln(n),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u);if(0!==o){var l=1;for(u=h(t,c,t.length,e),c=0;c<o;c++)l*=e;this.imuln(l),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u)}this.strip()},s.prototype.copy=function(t){t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];t.length=this.length,t.negative=this.negative,t.red=this.red},s.prototype.clone=function(){var t=new s(null);return this.copy(t),t},s.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},s.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},s.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},s.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var c=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],l=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],d=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function f(t,e,r){r.negative=e.negative^t.negative;var i=t.length+e.length|0;r.length=i,i=i-1|0;var n=0|t.words[0],s=0|e.words[0],o=n*s,a=67108863&o,u=o/67108864|0;r.words[0]=a;for(var h=1;h<i;h++){for(var c=u>>>26,l=67108863&u,d=Math.min(h,e.length-1),f=Math.max(0,h-t.length+1);f<=d;f++){var p=h-f|0;c+=(o=(n=0|t.words[p])*(s=0|e.words[f])+l)/67108864|0,l=67108863&o}r.words[h]=0|l,u=0|c}return 0!==u?r.words[h]=0|u:r.length--,r.strip()}s.prototype.toString=function(t,e){var r;if(e=0|e||1,16===(t=t||10)||"hex"===t){r="";for(var n=0,s=0,o=0;o<this.length;o++){var a=this.words[o],u=(16777215&(a<<n|s)).toString(16);r=0!=(s=a>>>24-n&16777215)||o!==this.length-1?c[6-u.length]+u+r:u+r,(n+=2)>=26&&(n-=26,o--)}for(0!==s&&(r=s.toString(16)+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}if(t===(0|t)&&t>=2&&t<=36){var h=l[t],f=d[t];r="";var p=this.clone();for(p.negative=0;!p.isZero();){var g=p.modn(f).toString(t);r=(p=p.idivn(f)).isZero()?g+r:c[h-g.length]+g+r}for(this.isZero()&&(r="0"+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}i(!1,"Base should be between 2 and 36")},s.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&i(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},s.prototype.toJSON=function(){return this.toString(16)},s.prototype.toBuffer=function(t,e){return i(void 0!==o),this.toArrayLike(o,t,e)},s.prototype.toArray=function(t,e){return this.toArrayLike(Array,t,e)},s.prototype.toArrayLike=function(t,e,r){var n=this.byteLength(),s=r||Math.max(1,n);i(n<=s,"byte array longer than desired length"),i(s>0,"Requested array length <= 0"),this.strip();var o,a,u="le"===e,h=new t(s),c=this.clone();if(u){for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[a]=o;for(;a<s;a++)h[a]=0}else{for(a=0;a<s-n;a++)h[a]=0;for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[s-a-1]=o}return h},Math.clz32?s.prototype._countBits=function(t){return 32-Math.clz32(t)}:s.prototype._countBits=function(t){var e=t,r=0;return e>=4096&&(r+=13,e>>>=13),e>=64&&(r+=7,e>>>=7),e>=8&&(r+=4,e>>>=4),e>=2&&(r+=2,e>>>=2),r+e},s.prototype._zeroBits=function(t){if(0===t)return 26;var e=t,r=0;return 0==(8191&e)&&(r+=13,e>>>=13),0==(127&e)&&(r+=7,e>>>=7),0==(15&e)&&(r+=4,e>>>=4),0==(3&e)&&(r+=2,e>>>=2),0==(1&e)&&r++,r},s.prototype.bitLength=function(){var t=this.words[this.length-1],e=this._countBits(t);return 26*(this.length-1)+e},s.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,e=0;e<this.length;e++){var r=this._zeroBits(this.words[e]);if(t+=r,26!==r)break}return t},s.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},s.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},s.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},s.prototype.isNeg=function(){return 0!==this.negative},s.prototype.neg=function(){return this.clone().ineg()},s.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},s.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]|t.words[e];return this.strip()},s.prototype.ior=function(t){return i(0==(this.negative|t.negative)),this.iuor(t)},s.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},s.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},s.prototype.iuand=function(t){var e;e=this.length>t.length?t:this;for(var r=0;r<e.length;r++)this.words[r]=this.words[r]&t.words[r];return this.length=e.length,this.strip()},s.prototype.iand=function(t){return i(0==(this.negative|t.negative)),this.iuand(t)},s.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},s.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},s.prototype.iuxor=function(t){var e,r;this.length>t.length?(e=this,r=t):(e=t,r=this);for(var i=0;i<r.length;i++)this.words[i]=e.words[i]^r.words[i];if(this!==e)for(;i<e.length;i++)this.words[i]=e.words[i];return this.length=e.length,this.strip()},s.prototype.ixor=function(t){return i(0==(this.negative|t.negative)),this.iuxor(t)},s.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},s.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},s.prototype.inotn=function(t){i("number"==typeof t&&t>=0);var e=0|Math.ceil(t/26),r=t%26;this._expand(e),r>0&&e--;for(var n=0;n<e;n++)this.words[n]=67108863&~this.words[n];return r>0&&(this.words[n]=~this.words[n]&67108863>>26-r),this.strip()},s.prototype.notn=function(t){return this.clone().inotn(t)},s.prototype.setn=function(t,e){i("number"==typeof t&&t>=0);var r=t/26|0,n=t%26;return this._expand(r+1),this.words[r]=e?this.words[r]|1<<n:this.words[r]&~(1<<n),this.strip()},s.prototype.iadd=function(t){var e,r,i;if(0!==this.negative&&0===t.negative)return this.negative=0,e=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,e=this.isub(t),t.negative=1,e._normSign();this.length>t.length?(r=this,i=t):(r=t,i=this);for(var n=0,s=0;s<i.length;s++)e=(0|r.words[s])+(0|i.words[s])+n,this.words[s]=67108863&e,n=e>>>26;for(;0!==n&&s<r.length;s++)e=(0|r.words[s])+n,this.words[s]=67108863&e,n=e>>>26;if(this.length=r.length,0!==n)this.words[this.length]=n,this.length++;else if(r!==this)for(;s<r.length;s++)this.words[s]=r.words[s];return this},s.prototype.add=function(t){var e;return 0!==t.negative&&0===this.negative?(t.negative=0,e=this.sub(t),t.negative^=1,e):0===t.negative&&0!==this.negative?(this.negative=0,e=t.sub(this),this.negative=1,e):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},s.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var e=this.iadd(t);return t.negative=1,e._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var r,i,n=this.cmp(t);if(0===n)return this.negative=0,this.length=1,this.words[0]=0,this;n>0?(r=this,i=t):(r=t,i=this);for(var s=0,o=0;o<i.length;o++)s=(e=(0|r.words[o])-(0|i.words[o])+s)>>26,this.words[o]=67108863&e;for(;0!==s&&o<r.length;o++)s=(e=(0|r.words[o])+s)>>26,this.words[o]=67108863&e;if(0===s&&o<r.length&&r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this.length=Math.max(this.length,o),r!==this&&(this.negative=1),this.strip()},s.prototype.sub=function(t){return this.clone().isub(t)};var p=function(t,e,r){var i,n,s,o=t.words,a=e.words,u=r.words,h=0,c=0|o[0],l=8191&c,d=c>>>13,f=0|o[1],p=8191&f,g=f>>>13,m=0|o[2],y=8191&m,v=m>>>13,b=0|o[3],w=8191&b,E=b>>>13,S=0|o[4],N=8191&S,M=S>>>13,x=0|o[5],I=8191&x,A=x>>>13,P=0|o[6],T=8191&P,R=P>>>13,k=0|o[7],B=8191&k,O=k>>>13,C=0|o[8],L=8191&C,j=C>>>13,Z=0|o[9],D=8191&Z,F=Z>>>13,z=0|a[0],H=8191&z,W=z>>>13,K=0|a[1],q=8191&K,U=K>>>13,V=0|a[2],X=8191&V,G=V>>>13,Y=0|a[3],Q=8191&Y,J=Y>>>13,_=0|a[4],$=8191&_,tt=_>>>13,et=0|a[5],rt=8191&et,it=et>>>13,nt=0|a[6],st=8191&nt,ot=nt>>>13,at=0|a[7],ut=8191&at,ht=at>>>13,ct=0|a[8],lt=8191&ct,dt=ct>>>13,ft=0|a[9],pt=8191&ft,gt=ft>>>13;r.negative=t.negative^e.negative,r.length=19;var mt=(h+(i=Math.imul(l,H))|0)+((8191&(n=(n=Math.imul(l,W))+Math.imul(d,H)|0))<<13)|0;h=((s=Math.imul(d,W))+(n>>>13)|0)+(mt>>>26)|0,mt&=67108863,i=Math.imul(p,H),n=(n=Math.imul(p,W))+Math.imul(g,H)|0,s=Math.imul(g,W);var yt=(h+(i=i+Math.imul(l,q)|0)|0)+((8191&(n=(n=n+Math.imul(l,U)|0)+Math.imul(d,q)|0))<<13)|0;h=((s=s+Math.imul(d,U)|0)+(n>>>13)|0)+(yt>>>26)|0,yt&=67108863,i=Math.imul(y,H),n=(n=Math.imul(y,W))+Math.imul(v,H)|0,s=Math.imul(v,W),i=i+Math.imul(p,q)|0,n=(n=n+Math.imul(p,U)|0)+Math.imul(g,q)|0,s=s+Math.imul(g,U)|0;var vt=(h+(i=i+Math.imul(l,X)|0)|0)+((8191&(n=(n=n+Math.imul(l,G)|0)+Math.imul(d,X)|0))<<13)|0;h=((s=s+Math.imul(d,G)|0)+(n>>>13)|0)+(vt>>>26)|0,vt&=67108863,i=Math.imul(w,H),n=(n=Math.imul(w,W))+Math.imul(E,H)|0,s=Math.imul(E,W),i=i+Math.imul(y,q)|0,n=(n=n+Math.imul(y,U)|0)+Math.imul(v,q)|0,s=s+Math.imul(v,U)|0,i=i+Math.imul(p,X)|0,n=(n=n+Math.imul(p,G)|0)+Math.imul(g,X)|0,s=s+Math.imul(g,G)|0;var bt=(h+(i=i+Math.imul(l,Q)|0)|0)+((8191&(n=(n=n+Math.imul(l,J)|0)+Math.imul(d,Q)|0))<<13)|0;h=((s=s+Math.imul(d,J)|0)+(n>>>13)|0)+(bt>>>26)|0,bt&=67108863,i=Math.imul(N,H),n=(n=Math.imul(N,W))+Math.imul(M,H)|0,s=Math.imul(M,W),i=i+Math.imul(w,q)|0,n=(n=n+Math.imul(w,U)|0)+Math.imul(E,q)|0,s=s+Math.imul(E,U)|0,i=i+Math.imul(y,X)|0,n=(n=n+Math.imul(y,G)|0)+Math.imul(v,X)|0,s=s+Math.imul(v,G)|0,i=i+Math.imul(p,Q)|0,n=(n=n+Math.imul(p,J)|0)+Math.imul(g,Q)|0,s=s+Math.imul(g,J)|0;var wt=(h+(i=i+Math.imul(l,$)|0)|0)+((8191&(n=(n=n+Math.imul(l,tt)|0)+Math.imul(d,$)|0))<<13)|0;h=((s=s+Math.imul(d,tt)|0)+(n>>>13)|0)+(wt>>>26)|0,wt&=67108863,i=Math.imul(I,H),n=(n=Math.imul(I,W))+Math.imul(A,H)|0,s=Math.imul(A,W),i=i+Math.imul(N,q)|0,n=(n=n+Math.imul(N,U)|0)+Math.imul(M,q)|0,s=s+Math.imul(M,U)|0,i=i+Math.imul(w,X)|0,n=(n=n+Math.imul(w,G)|0)+Math.imul(E,X)|0,s=s+Math.imul(E,G)|0,i=i+Math.imul(y,Q)|0,n=(n=n+Math.imul(y,J)|0)+Math.imul(v,Q)|0,s=s+Math.imul(v,J)|0,i=i+Math.imul(p,$)|0,n=(n=n+Math.imul(p,tt)|0)+Math.imul(g,$)|0,s=s+Math.imul(g,tt)|0;var Et=(h+(i=i+Math.imul(l,rt)|0)|0)+((8191&(n=(n=n+Math.imul(l,it)|0)+Math.imul(d,rt)|0))<<13)|0;h=((s=s+Math.imul(d,it)|0)+(n>>>13)|0)+(Et>>>26)|0,Et&=67108863,i=Math.imul(T,H),n=(n=Math.imul(T,W))+Math.imul(R,H)|0,s=Math.imul(R,W),i=i+Math.imul(I,q)|0,n=(n=n+Math.imul(I,U)|0)+Math.imul(A,q)|0,s=s+Math.imul(A,U)|0,i=i+Math.imul(N,X)|0,n=(n=n+Math.imul(N,G)|0)+Math.imul(M,X)|0,s=s+Math.imul(M,G)|0,i=i+Math.imul(w,Q)|0,n=(n=n+Math.imul(w,J)|0)+Math.imul(E,Q)|0,s=s+Math.imul(E,J)|0,i=i+Math.imul(y,$)|0,n=(n=n+Math.imul(y,tt)|0)+Math.imul(v,$)|0,s=s+Math.imul(v,tt)|0,i=i+Math.imul(p,rt)|0,n=(n=n+Math.imul(p,it)|0)+Math.imul(g,rt)|0,s=s+Math.imul(g,it)|0;var St=(h+(i=i+Math.imul(l,st)|0)|0)+((8191&(n=(n=n+Math.imul(l,ot)|0)+Math.imul(d,st)|0))<<13)|0;h=((s=s+Math.imul(d,ot)|0)+(n>>>13)|0)+(St>>>26)|0,St&=67108863,i=Math.imul(B,H),n=(n=Math.imul(B,W))+Math.imul(O,H)|0,s=Math.imul(O,W),i=i+Math.imul(T,q)|0,n=(n=n+Math.imul(T,U)|0)+Math.imul(R,q)|0,s=s+Math.imul(R,U)|0,i=i+Math.imul(I,X)|0,n=(n=n+Math.imul(I,G)|0)+Math.imul(A,X)|0,s=s+Math.imul(A,G)|0,i=i+Math.imul(N,Q)|0,n=(n=n+Math.imul(N,J)|0)+Math.imul(M,Q)|0,s=s+Math.imul(M,J)|0,i=i+Math.imul(w,$)|0,n=(n=n+Math.imul(w,tt)|0)+Math.imul(E,$)|0,s=s+Math.imul(E,tt)|0,i=i+Math.imul(y,rt)|0,n=(n=n+Math.imul(y,it)|0)+Math.imul(v,rt)|0,s=s+Math.imul(v,it)|0,i=i+Math.imul(p,st)|0,n=(n=n+Math.imul(p,ot)|0)+Math.imul(g,st)|0,s=s+Math.imul(g,ot)|0;var Nt=(h+(i=i+Math.imul(l,ut)|0)|0)+((8191&(n=(n=n+Math.imul(l,ht)|0)+Math.imul(d,ut)|0))<<13)|0;h=((s=s+Math.imul(d,ht)|0)+(n>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,i=Math.imul(L,H),n=(n=Math.imul(L,W))+Math.imul(j,H)|0,s=Math.imul(j,W),i=i+Math.imul(B,q)|0,n=(n=n+Math.imul(B,U)|0)+Math.imul(O,q)|0,s=s+Math.imul(O,U)|0,i=i+Math.imul(T,X)|0,n=(n=n+Math.imul(T,G)|0)+Math.imul(R,X)|0,s=s+Math.imul(R,G)|0,i=i+Math.imul(I,Q)|0,n=(n=n+Math.imul(I,J)|0)+Math.imul(A,Q)|0,s=s+Math.imul(A,J)|0,i=i+Math.imul(N,$)|0,n=(n=n+Math.imul(N,tt)|0)+Math.imul(M,$)|0,s=s+Math.imul(M,tt)|0,i=i+Math.imul(w,rt)|0,n=(n=n+Math.imul(w,it)|0)+Math.imul(E,rt)|0,s=s+Math.imul(E,it)|0,i=i+Math.imul(y,st)|0,n=(n=n+Math.imul(y,ot)|0)+Math.imul(v,st)|0,s=s+Math.imul(v,ot)|0,i=i+Math.imul(p,ut)|0,n=(n=n+Math.imul(p,ht)|0)+Math.imul(g,ut)|0,s=s+Math.imul(g,ht)|0;var Mt=(h+(i=i+Math.imul(l,lt)|0)|0)+((8191&(n=(n=n+Math.imul(l,dt)|0)+Math.imul(d,lt)|0))<<13)|0;h=((s=s+Math.imul(d,dt)|0)+(n>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,i=Math.imul(D,H),n=(n=Math.imul(D,W))+Math.imul(F,H)|0,s=Math.imul(F,W),i=i+Math.imul(L,q)|0,n=(n=n+Math.imul(L,U)|0)+Math.imul(j,q)|0,s=s+Math.imul(j,U)|0,i=i+Math.imul(B,X)|0,n=(n=n+Math.imul(B,G)|0)+Math.imul(O,X)|0,s=s+Math.imul(O,G)|0,i=i+Math.imul(T,Q)|0,n=(n=n+Math.imul(T,J)|0)+Math.imul(R,Q)|0,s=s+Math.imul(R,J)|0,i=i+Math.imul(I,$)|0,n=(n=n+Math.imul(I,tt)|0)+Math.imul(A,$)|0,s=s+Math.imul(A,tt)|0,i=i+Math.imul(N,rt)|0,n=(n=n+Math.imul(N,it)|0)+Math.imul(M,rt)|0,s=s+Math.imul(M,it)|0,i=i+Math.imul(w,st)|0,n=(n=n+Math.imul(w,ot)|0)+Math.imul(E,st)|0,s=s+Math.imul(E,ot)|0,i=i+Math.imul(y,ut)|0,n=(n=n+Math.imul(y,ht)|0)+Math.imul(v,ut)|0,s=s+Math.imul(v,ht)|0,i=i+Math.imul(p,lt)|0,n=(n=n+Math.imul(p,dt)|0)+Math.imul(g,lt)|0,s=s+Math.imul(g,dt)|0;var xt=(h+(i=i+Math.imul(l,pt)|0)|0)+((8191&(n=(n=n+Math.imul(l,gt)|0)+Math.imul(d,pt)|0))<<13)|0;h=((s=s+Math.imul(d,gt)|0)+(n>>>13)|0)+(xt>>>26)|0,xt&=67108863,i=Math.imul(D,q),n=(n=Math.imul(D,U))+Math.imul(F,q)|0,s=Math.imul(F,U),i=i+Math.imul(L,X)|0,n=(n=n+Math.imul(L,G)|0)+Math.imul(j,X)|0,s=s+Math.imul(j,G)|0,i=i+Math.imul(B,Q)|0,n=(n=n+Math.imul(B,J)|0)+Math.imul(O,Q)|0,s=s+Math.imul(O,J)|0,i=i+Math.imul(T,$)|0,n=(n=n+Math.imul(T,tt)|0)+Math.imul(R,$)|0,s=s+Math.imul(R,tt)|0,i=i+Math.imul(I,rt)|0,n=(n=n+Math.imul(I,it)|0)+Math.imul(A,rt)|0,s=s+Math.imul(A,it)|0,i=i+Math.imul(N,st)|0,n=(n=n+Math.imul(N,ot)|0)+Math.imul(M,st)|0,s=s+Math.imul(M,ot)|0,i=i+Math.imul(w,ut)|0,n=(n=n+Math.imul(w,ht)|0)+Math.imul(E,ut)|0,s=s+Math.imul(E,ht)|0,i=i+Math.imul(y,lt)|0,n=(n=n+Math.imul(y,dt)|0)+Math.imul(v,lt)|0,s=s+Math.imul(v,dt)|0;var It=(h+(i=i+Math.imul(p,pt)|0)|0)+((8191&(n=(n=n+Math.imul(p,gt)|0)+Math.imul(g,pt)|0))<<13)|0;h=((s=s+Math.imul(g,gt)|0)+(n>>>13)|0)+(It>>>26)|0,It&=67108863,i=Math.imul(D,X),n=(n=Math.imul(D,G))+Math.imul(F,X)|0,s=Math.imul(F,G),i=i+Math.imul(L,Q)|0,n=(n=n+Math.imul(L,J)|0)+Math.imul(j,Q)|0,s=s+Math.imul(j,J)|0,i=i+Math.imul(B,$)|0,n=(n=n+Math.imul(B,tt)|0)+Math.imul(O,$)|0,s=s+Math.imul(O,tt)|0,i=i+Math.imul(T,rt)|0,n=(n=n+Math.imul(T,it)|0)+Math.imul(R,rt)|0,s=s+Math.imul(R,it)|0,i=i+Math.imul(I,st)|0,n=(n=n+Math.imul(I,ot)|0)+Math.imul(A,st)|0,s=s+Math.imul(A,ot)|0,i=i+Math.imul(N,ut)|0,n=(n=n+Math.imul(N,ht)|0)+Math.imul(M,ut)|0,s=s+Math.imul(M,ht)|0,i=i+Math.imul(w,lt)|0,n=(n=n+Math.imul(w,dt)|0)+Math.imul(E,lt)|0,s=s+Math.imul(E,dt)|0;var At=(h+(i=i+Math.imul(y,pt)|0)|0)+((8191&(n=(n=n+Math.imul(y,gt)|0)+Math.imul(v,pt)|0))<<13)|0;h=((s=s+Math.imul(v,gt)|0)+(n>>>13)|0)+(At>>>26)|0,At&=67108863,i=Math.imul(D,Q),n=(n=Math.imul(D,J))+Math.imul(F,Q)|0,s=Math.imul(F,J),i=i+Math.imul(L,$)|0,n=(n=n+Math.imul(L,tt)|0)+Math.imul(j,$)|0,s=s+Math.imul(j,tt)|0,i=i+Math.imul(B,rt)|0,n=(n=n+Math.imul(B,it)|0)+Math.imul(O,rt)|0,s=s+Math.imul(O,it)|0,i=i+Math.imul(T,st)|0,n=(n=n+Math.imul(T,ot)|0)+Math.imul(R,st)|0,s=s+Math.imul(R,ot)|0,i=i+Math.imul(I,ut)|0,n=(n=n+Math.imul(I,ht)|0)+Math.imul(A,ut)|0,s=s+Math.imul(A,ht)|0,i=i+Math.imul(N,lt)|0,n=(n=n+Math.imul(N,dt)|0)+Math.imul(M,lt)|0,s=s+Math.imul(M,dt)|0;var Pt=(h+(i=i+Math.imul(w,pt)|0)|0)+((8191&(n=(n=n+Math.imul(w,gt)|0)+Math.imul(E,pt)|0))<<13)|0;h=((s=s+Math.imul(E,gt)|0)+(n>>>13)|0)+(Pt>>>26)|0,Pt&=67108863,i=Math.imul(D,$),n=(n=Math.imul(D,tt))+Math.imul(F,$)|0,s=Math.imul(F,tt),i=i+Math.imul(L,rt)|0,n=(n=n+Math.imul(L,it)|0)+Math.imul(j,rt)|0,s=s+Math.imul(j,it)|0,i=i+Math.imul(B,st)|0,n=(n=n+Math.imul(B,ot)|0)+Math.imul(O,st)|0,s=s+Math.imul(O,ot)|0,i=i+Math.imul(T,ut)|0,n=(n=n+Math.imul(T,ht)|0)+Math.imul(R,ut)|0,s=s+Math.imul(R,ht)|0,i=i+Math.imul(I,lt)|0,n=(n=n+Math.imul(I,dt)|0)+Math.imul(A,lt)|0,s=s+Math.imul(A,dt)|0;var Tt=(h+(i=i+Math.imul(N,pt)|0)|0)+((8191&(n=(n=n+Math.imul(N,gt)|0)+Math.imul(M,pt)|0))<<13)|0;h=((s=s+Math.imul(M,gt)|0)+(n>>>13)|0)+(Tt>>>26)|0,Tt&=67108863,i=Math.imul(D,rt),n=(n=Math.imul(D,it))+Math.imul(F,rt)|0,s=Math.imul(F,it),i=i+Math.imul(L,st)|0,n=(n=n+Math.imul(L,ot)|0)+Math.imul(j,st)|0,s=s+Math.imul(j,ot)|0,i=i+Math.imul(B,ut)|0,n=(n=n+Math.imul(B,ht)|0)+Math.imul(O,ut)|0,s=s+Math.imul(O,ht)|0,i=i+Math.imul(T,lt)|0,n=(n=n+Math.imul(T,dt)|0)+Math.imul(R,lt)|0,s=s+Math.imul(R,dt)|0;var Rt=(h+(i=i+Math.imul(I,pt)|0)|0)+((8191&(n=(n=n+Math.imul(I,gt)|0)+Math.imul(A,pt)|0))<<13)|0;h=((s=s+Math.imul(A,gt)|0)+(n>>>13)|0)+(Rt>>>26)|0,Rt&=67108863,i=Math.imul(D,st),n=(n=Math.imul(D,ot))+Math.imul(F,st)|0,s=Math.imul(F,ot),i=i+Math.imul(L,ut)|0,n=(n=n+Math.imul(L,ht)|0)+Math.imul(j,ut)|0,s=s+Math.imul(j,ht)|0,i=i+Math.imul(B,lt)|0,n=(n=n+Math.imul(B,dt)|0)+Math.imul(O,lt)|0,s=s+Math.imul(O,dt)|0;var kt=(h+(i=i+Math.imul(T,pt)|0)|0)+((8191&(n=(n=n+Math.imul(T,gt)|0)+Math.imul(R,pt)|0))<<13)|0;h=((s=s+Math.imul(R,gt)|0)+(n>>>13)|0)+(kt>>>26)|0,kt&=67108863,i=Math.imul(D,ut),n=(n=Math.imul(D,ht))+Math.imul(F,ut)|0,s=Math.imul(F,ht),i=i+Math.imul(L,lt)|0,n=(n=n+Math.imul(L,dt)|0)+Math.imul(j,lt)|0,s=s+Math.imul(j,dt)|0;var Bt=(h+(i=i+Math.imul(B,pt)|0)|0)+((8191&(n=(n=n+Math.imul(B,gt)|0)+Math.imul(O,pt)|0))<<13)|0;h=((s=s+Math.imul(O,gt)|0)+(n>>>13)|0)+(Bt>>>26)|0,Bt&=67108863,i=Math.imul(D,lt),n=(n=Math.imul(D,dt))+Math.imul(F,lt)|0,s=Math.imul(F,dt);var Ot=(h+(i=i+Math.imul(L,pt)|0)|0)+((8191&(n=(n=n+Math.imul(L,gt)|0)+Math.imul(j,pt)|0))<<13)|0;h=((s=s+Math.imul(j,gt)|0)+(n>>>13)|0)+(Ot>>>26)|0,Ot&=67108863;var Ct=(h+(i=Math.imul(D,pt))|0)+((8191&(n=(n=Math.imul(D,gt))+Math.imul(F,pt)|0))<<13)|0;return h=((s=Math.imul(F,gt))+(n>>>13)|0)+(Ct>>>26)|0,Ct&=67108863,u[0]=mt,u[1]=yt,u[2]=vt,u[3]=bt,u[4]=wt,u[5]=Et,u[6]=St,u[7]=Nt,u[8]=Mt,u[9]=xt,u[10]=It,u[11]=At,u[12]=Pt,u[13]=Tt,u[14]=Rt,u[15]=kt,u[16]=Bt,u[17]=Ot,u[18]=Ct,0!==h&&(u[19]=h,r.length++),r};function g(t,e,r){return(new m).mulp(t,e,r)}function m(t,e){this.x=t,this.y=e}Math.imul||(p=f),s.prototype.mulTo=function(t,e){var r,i=this.length+t.length;return r=10===this.length&&10===t.length?p(this,t,e):i<63?f(this,t,e):i<1024?function(t,e,r){r.negative=e.negative^t.negative,r.length=t.length+e.length;for(var i=0,n=0,s=0;s<r.length-1;s++){var o=n;n=0;for(var a=67108863&i,u=Math.min(s,e.length-1),h=Math.max(0,s-t.length+1);h<=u;h++){var c=s-h,l=(0|t.words[c])*(0|e.words[h]),d=67108863&l;a=67108863&(d=d+a|0),n+=(o=(o=o+(l/67108864|0)|0)+(d>>>26)|0)>>>26,o&=67108863}r.words[s]=a,i=o,o=n}return 0!==i?r.words[s]=i:r.length--,r.strip()}(this,t,e):g(this,t,e),r},m.prototype.makeRBT=function(t){for(var e=new Array(t),r=s.prototype._countBits(t)-1,i=0;i<t;i++)e[i]=this.revBin(i,r,t);return e},m.prototype.revBin=function(t,e,r){if(0===t||t===r-1)return t;for(var i=0,n=0;n<e;n++)i|=(1&t)<<e-n-1,t>>=1;return i},m.prototype.permute=function(t,e,r,i,n,s){for(var o=0;o<s;o++)i[o]=e[t[o]],n[o]=r[t[o]]},m.prototype.transform=function(t,e,r,i,n,s){this.permute(s,t,e,r,i,n);for(var o=1;o<n;o<<=1)for(var a=o<<1,u=Math.cos(2*Math.PI/a),h=Math.sin(2*Math.PI/a),c=0;c<n;c+=a)for(var l=u,d=h,f=0;f<o;f++){var p=r[c+f],g=i[c+f],m=r[c+f+o],y=i[c+f+o],v=l*m-d*y;y=l*y+d*m,m=v,r[c+f]=p+m,i[c+f]=g+y,r[c+f+o]=p-m,i[c+f+o]=g-y,f!==a&&(v=u*l-h*d,d=u*d+h*l,l=v)}},m.prototype.guessLen13b=function(t,e){var r=1|Math.max(e,t),i=1&r,n=0;for(r=r/2|0;r;r>>>=1)n++;return 1<<n+1+i},m.prototype.conjugate=function(t,e,r){if(!(r<=1))for(var i=0;i<r/2;i++){var n=t[i];t[i]=t[r-i-1],t[r-i-1]=n,n=e[i],e[i]=-e[r-i-1],e[r-i-1]=-n}},m.prototype.normalize13b=function(t,e){for(var r=0,i=0;i<e/2;i++){var n=8192*Math.round(t[2*i+1]/e)+Math.round(t[2*i]/e)+r;t[i]=67108863&n,r=n<67108864?0:n/67108864|0}return t},m.prototype.convert13b=function(t,e,r,n){for(var s=0,o=0;o<e;o++)s+=0|t[o],r[2*o]=8191&s,s>>>=13,r[2*o+1]=8191&s,s>>>=13;for(o=2*e;o<n;++o)r[o]=0;i(0===s),i(0==(-8192&s))},m.prototype.stub=function(t){for(var e=new Array(t),r=0;r<t;r++)e[r]=0;return e},m.prototype.mulp=function(t,e,r){var i=2*this.guessLen13b(t.length,e.length),n=this.makeRBT(i),s=this.stub(i),o=new Array(i),a=new Array(i),u=new Array(i),h=new Array(i),c=new Array(i),l=new Array(i),d=r.words;d.length=i,this.convert13b(t.words,t.length,o,i),this.convert13b(e.words,e.length,h,i),this.transform(o,s,a,u,i,n),this.transform(h,s,c,l,i,n);for(var f=0;f<i;f++){var p=a[f]*c[f]-u[f]*l[f];u[f]=a[f]*l[f]+u[f]*c[f],a[f]=p}return this.conjugate(a,u,i),this.transform(a,u,d,s,i,n),this.conjugate(d,s,i),this.normalize13b(d,i),r.negative=t.negative^e.negative,r.length=t.length+e.length,r.strip()},s.prototype.mul=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),this.mulTo(t,e)},s.prototype.mulf=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),g(this,t,e)},s.prototype.imul=function(t){return this.clone().mulTo(t,this)},s.prototype.imuln=function(t){i("number"==typeof t),i(t<67108864);for(var e=0,r=0;r<this.length;r++){var n=(0|this.words[r])*t,s=(67108863&n)+(67108863&e);e>>=26,e+=n/67108864|0,e+=s>>>26,this.words[r]=67108863&s}return 0!==e&&(this.words[r]=e,this.length++),this},s.prototype.muln=function(t){return this.clone().imuln(t)},s.prototype.sqr=function(){return this.mul(this)},s.prototype.isqr=function(){return this.imul(this.clone())},s.prototype.pow=function(t){var e=function(t){for(var e=new Array(t.bitLength()),r=0;r<e.length;r++){var i=r/26|0,n=r%26;e[r]=(t.words[i]&1<<n)>>>n}return e}(t);if(0===e.length)return new s(1);for(var r=this,i=0;i<e.length&&0===e[i];i++,r=r.sqr());if(++i<e.length)for(var n=r.sqr();i<e.length;i++,n=n.sqr())0!==e[i]&&(r=r.mul(n));return r},s.prototype.iushln=function(t){i("number"==typeof t&&t>=0);var e,r=t%26,n=(t-r)/26,s=67108863>>>26-r<<26-r;if(0!==r){var o=0;for(e=0;e<this.length;e++){var a=this.words[e]&s,u=(0|this.words[e])-a<<r;this.words[e]=u|o,o=a>>>26-r}o&&(this.words[e]=o,this.length++)}if(0!==n){for(e=this.length-1;e>=0;e--)this.words[e+n]=this.words[e];for(e=0;e<n;e++)this.words[e]=0;this.length+=n}return this.strip()},s.prototype.ishln=function(t){return i(0===this.negative),this.iushln(t)},s.prototype.iushrn=function(t,e,r){var n;i("number"==typeof t&&t>=0),n=e?(e-e%26)/26:0;var s=t%26,o=Math.min((t-s)/26,this.length),a=67108863^67108863>>>s<<s,u=r;if(n-=o,n=Math.max(0,n),u){for(var h=0;h<o;h++)u.words[h]=this.words[h];u.length=o}if(0===o);else if(this.length>o)for(this.length-=o,h=0;h<this.length;h++)this.words[h]=this.words[h+o];else this.words[0]=0,this.length=1;var c=0;for(h=this.length-1;h>=0&&(0!==c||h>=n);h--){var l=0|this.words[h];this.words[h]=c<<26-s|l>>>s,c=l&a}return u&&0!==c&&(u.words[u.length++]=c),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},s.prototype.ishrn=function(t,e,r){return i(0===this.negative),this.iushrn(t,e,r)},s.prototype.shln=function(t){return this.clone().ishln(t)},s.prototype.ushln=function(t){return this.clone().iushln(t)},s.prototype.shrn=function(t){return this.clone().ishrn(t)},s.prototype.ushrn=function(t){return this.clone().iushrn(t)},s.prototype.testn=function(t){i("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26,n=1<<e;return!(this.length<=r||!(this.words[r]&n))},s.prototype.imaskn=function(t){i("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26;if(i(0===this.negative,"imaskn works only with positive numbers"),this.length<=r)return this;if(0!==e&&r++,this.length=Math.min(r,this.length),0!==e){var n=67108863^67108863>>>e<<e;this.words[this.length-1]&=n}return this.strip()},s.prototype.maskn=function(t){return this.clone().imaskn(t)},s.prototype.iaddn=function(t){return i("number"==typeof t),i(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},s.prototype._iaddn=function(t){this.words[0]+=t;for(var e=0;e<this.length&&this.words[e]>=67108864;e++)this.words[e]-=67108864,e===this.length-1?this.words[e+1]=1:this.words[e+1]++;return this.length=Math.max(this.length,e+1),this},s.prototype.isubn=function(t){if(i("number"==typeof t),i(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var e=0;e<this.length&&this.words[e]<0;e++)this.words[e]+=67108864,this.words[e+1]-=1;return this.strip()},s.prototype.addn=function(t){return this.clone().iaddn(t)},s.prototype.subn=function(t){return this.clone().isubn(t)},s.prototype.iabs=function(){return this.negative=0,this},s.prototype.abs=function(){return this.clone().iabs()},s.prototype._ishlnsubmul=function(t,e,r){var n,s,o=t.length+r;this._expand(o);var a=0;for(n=0;n<t.length;n++){s=(0|this.words[n+r])+a;var u=(0|t.words[n])*e;a=((s-=67108863&u)>>26)-(u/67108864|0),this.words[n+r]=67108863&s}for(;n<this.length-r;n++)a=(s=(0|this.words[n+r])+a)>>26,this.words[n+r]=67108863&s;if(0===a)return this.strip();for(i(-1===a),a=0,n=0;n<this.length;n++)a=(s=-(0|this.words[n])+a)>>26,this.words[n]=67108863&s;return this.negative=1,this.strip()},s.prototype._wordDiv=function(t,e){var r=(this.length,t.length),i=this.clone(),n=t,o=0|n.words[n.length-1];0!=(r=26-this._countBits(o))&&(n=n.ushln(r),i.iushln(r),o=0|n.words[n.length-1]);var a,u=i.length-n.length;if("mod"!==e){(a=new s(null)).length=u+1,a.words=new Array(a.length);for(var h=0;h<a.length;h++)a.words[h]=0}var c=i.clone()._ishlnsubmul(n,1,u);0===c.negative&&(i=c,a&&(a.words[u]=1));for(var l=u-1;l>=0;l--){var d=67108864*(0|i.words[n.length+l])+(0|i.words[n.length+l-1]);for(d=Math.min(d/o|0,67108863),i._ishlnsubmul(n,d,l);0!==i.negative;)d--,i.negative=0,i._ishlnsubmul(n,1,l),i.isZero()||(i.negative^=1);a&&(a.words[l]=d)}return a&&a.strip(),i.strip(),"div"!==e&&0!==r&&i.iushrn(r),{div:a||null,mod:i}},s.prototype.divmod=function(t,e,r){return i(!t.isZero()),this.isZero()?{div:new s(0),mod:new s(0)}:0!==this.negative&&0===t.negative?(a=this.neg().divmod(t,e),"mod"!==e&&(n=a.div.neg()),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.iadd(t)),{div:n,mod:o}):0===this.negative&&0!==t.negative?(a=this.divmod(t.neg(),e),"mod"!==e&&(n=a.div.neg()),{div:n,mod:a.mod}):0!=(this.negative&t.negative)?(a=this.neg().divmod(t.neg(),e),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.isub(t)),{div:a.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new s(0),mod:this}:1===t.length?"div"===e?{div:this.divn(t.words[0]),mod:null}:"mod"===e?{div:null,mod:new s(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new s(this.modn(t.words[0]))}:this._wordDiv(t,e);var n,o,a},s.prototype.div=function(t){return this.divmod(t,"div",!1).div},s.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},s.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},s.prototype.divRound=function(t){var e=this.divmod(t);if(e.mod.isZero())return e.div;var r=0!==e.div.negative?e.mod.isub(t):e.mod,i=t.ushrn(1),n=t.andln(1),s=r.cmp(i);return s<0||1===n&&0===s?e.div:0!==e.div.negative?e.div.isubn(1):e.div.iaddn(1)},s.prototype.modn=function(t){i(t<=67108863);for(var e=(1<<26)%t,r=0,n=this.length-1;n>=0;n--)r=(e*r+(0|this.words[n]))%t;return r},s.prototype.idivn=function(t){i(t<=67108863);for(var e=0,r=this.length-1;r>=0;r--){var n=(0|this.words[r])+67108864*e;this.words[r]=n/t|0,e=n%t}return this.strip()},s.prototype.divn=function(t){return this.clone().idivn(t)},s.prototype.egcd=function(t){i(0===t.negative),i(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var n=new s(1),o=new s(0),a=new s(0),u=new s(1),h=0;e.isEven()&&r.isEven();)e.iushrn(1),r.iushrn(1),++h;for(var c=r.clone(),l=e.clone();!e.isZero();){for(var d=0,f=1;0==(e.words[0]&f)&&d<26;++d,f<<=1);if(d>0)for(e.iushrn(d);d-- >0;)(n.isOdd()||o.isOdd())&&(n.iadd(c),o.isub(l)),n.iushrn(1),o.iushrn(1);for(var p=0,g=1;0==(r.words[0]&g)&&p<26;++p,g<<=1);if(p>0)for(r.iushrn(p);p-- >0;)(a.isOdd()||u.isOdd())&&(a.iadd(c),u.isub(l)),a.iushrn(1),u.iushrn(1);e.cmp(r)>=0?(e.isub(r),n.isub(a),o.isub(u)):(r.isub(e),a.isub(n),u.isub(o))}return{a,b:u,gcd:r.iushln(h)}},s.prototype._invmp=function(t){i(0===t.negative),i(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var n,o=new s(1),a=new s(0),u=r.clone();e.cmpn(1)>0&&r.cmpn(1)>0;){for(var h=0,c=1;0==(e.words[0]&c)&&h<26;++h,c<<=1);if(h>0)for(e.iushrn(h);h-- >0;)o.isOdd()&&o.iadd(u),o.iushrn(1);for(var l=0,d=1;0==(r.words[0]&d)&&l<26;++l,d<<=1);if(l>0)for(r.iushrn(l);l-- >0;)a.isOdd()&&a.iadd(u),a.iushrn(1);e.cmp(r)>=0?(e.isub(r),o.isub(a)):(r.isub(e),a.isub(o))}return(n=0===e.cmpn(1)?o:a).cmpn(0)<0&&n.iadd(t),n},s.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var e=this.clone(),r=t.clone();e.negative=0,r.negative=0;for(var i=0;e.isEven()&&r.isEven();i++)e.iushrn(1),r.iushrn(1);for(;;){for(;e.isEven();)e.iushrn(1);for(;r.isEven();)r.iushrn(1);var n=e.cmp(r);if(n<0){var s=e;e=r,r=s}else if(0===n||0===r.cmpn(1))break;e.isub(r)}return r.iushln(i)},s.prototype.invm=function(t){return this.egcd(t).a.umod(t)},s.prototype.isEven=function(){return 0==(1&this.words[0])},s.prototype.isOdd=function(){return 1==(1&this.words[0])},s.prototype.andln=function(t){return this.words[0]&t},s.prototype.bincn=function(t){i("number"==typeof t);var e=t%26,r=(t-e)/26,n=1<<e;if(this.length<=r)return this._expand(r+1),this.words[r]|=n,this;for(var s=n,o=r;0!==s&&o<this.length;o++){var a=0|this.words[o];s=(a+=s)>>>26,a&=67108863,this.words[o]=a}return 0!==s&&(this.words[o]=s,this.length++),this},s.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},s.prototype.cmpn=function(t){var e,r=t<0;if(0!==this.negative&&!r)return-1;if(0===this.negative&&r)return 1;if(this.strip(),this.length>1)e=1;else{r&&(t=-t),i(t<=67108863,"Number is too big");var n=0|this.words[0];e=n===t?0:n<t?-1:1}return 0!==this.negative?0|-e:e},s.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var e=this.ucmp(t);return 0!==this.negative?0|-e:e},s.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var e=0,r=this.length-1;r>=0;r--){var i=0|this.words[r],n=0|t.words[r];if(i!==n){i<n?e=-1:i>n&&(e=1);break}}return e},s.prototype.gtn=function(t){return 1===this.cmpn(t)},s.prototype.gt=function(t){return 1===this.cmp(t)},s.prototype.gten=function(t){return this.cmpn(t)>=0},s.prototype.gte=function(t){return this.cmp(t)>=0},s.prototype.ltn=function(t){return-1===this.cmpn(t)},s.prototype.lt=function(t){return-1===this.cmp(t)},s.prototype.lten=function(t){return this.cmpn(t)<=0},s.prototype.lte=function(t){return this.cmp(t)<=0},s.prototype.eqn=function(t){return 0===this.cmpn(t)},s.prototype.eq=function(t){return 0===this.cmp(t)},s.red=function(t){return new N(t)},s.prototype.toRed=function(t){return i(!this.red,"Already a number in reduction context"),i(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},s.prototype.fromRed=function(){return i(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},s.prototype._forceRed=function(t){return this.red=t,this},s.prototype.forceRed=function(t){return i(!this.red,"Already a number in reduction context"),this._forceRed(t)},s.prototype.redAdd=function(t){return i(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},s.prototype.redIAdd=function(t){return i(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},s.prototype.redSub=function(t){return i(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},s.prototype.redISub=function(t){return i(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},s.prototype.redShl=function(t){return i(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},s.prototype.redMul=function(t){return i(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},s.prototype.redIMul=function(t){return i(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},s.prototype.redSqr=function(){return i(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},s.prototype.redISqr=function(){return i(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},s.prototype.redSqrt=function(){return i(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},s.prototype.redInvm=function(){return i(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},s.prototype.redNeg=function(){return i(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},s.prototype.redPow=function(t){return i(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var y={k256:null,p224:null,p192:null,p25519:null};function v(t,e){this.name=t,this.p=new s(e,16),this.n=this.p.bitLength(),this.k=new s(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function b(){v.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function w(){v.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function E(){v.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function S(){v.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function N(t){if("string"==typeof t){var e=s._prime(t);this.m=e.p,this.prime=e}else i(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function M(t){N.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new s(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}v.prototype._tmp=function(){var t=new s(null);return t.words=new Array(Math.ceil(this.n/13)),t},v.prototype.ireduce=function(t){var e,r=t;do{this.split(r,this.tmp),e=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(e>this.n);var i=e<this.n?-1:r.ucmp(this.p);return 0===i?(r.words[0]=0,r.length=1):i>0?r.isub(this.p):void 0!==r.strip?r.strip():r._strip(),r},v.prototype.split=function(t,e){t.iushrn(this.n,0,e)},v.prototype.imulK=function(t){return t.imul(this.k)},n(b,v),b.prototype.split=function(t,e){for(var r=4194303,i=Math.min(t.length,9),n=0;n<i;n++)e.words[n]=t.words[n];if(e.length=i,t.length<=9)return t.words[0]=0,void(t.length=1);var s=t.words[9];for(e.words[e.length++]=s&r,n=10;n<t.length;n++){var o=0|t.words[n];t.words[n-10]=(o&r)<<4|s>>>22,s=o}s>>>=22,t.words[n-10]=s,0===s&&t.length>10?t.length-=10:t.length-=9},b.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var e=0,r=0;r<t.length;r++){var i=0|t.words[r];e+=977*i,t.words[r]=67108863&e,e=64*i+(e/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},n(w,v),n(E,v),n(S,v),S.prototype.imulK=function(t){for(var e=0,r=0;r<t.length;r++){var i=19*(0|t.words[r])+e,n=67108863&i;i>>>=26,t.words[r]=n,e=i}return 0!==e&&(t.words[t.length++]=e),t},s._prime=function(t){if(y[t])return y[t];var e;if("k256"===t)e=new b;else if("p224"===t)e=new w;else if("p192"===t)e=new E;else{if("p25519"!==t)throw new Error("Unknown prime "+t);e=new S}return y[t]=e,e},N.prototype._verify1=function(t){i(0===t.negative,"red works only with positives"),i(t.red,"red works only with red numbers")},N.prototype._verify2=function(t,e){i(0==(t.negative|e.negative),"red works only with positives"),i(t.red&&t.red===e.red,"red works only with red numbers")},N.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},N.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},N.prototype.add=function(t,e){this._verify2(t,e);var r=t.add(e);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},N.prototype.iadd=function(t,e){this._verify2(t,e);var r=t.iadd(e);return r.cmp(this.m)>=0&&r.isub(this.m),r},N.prototype.sub=function(t,e){this._verify2(t,e);var r=t.sub(e);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},N.prototype.isub=function(t,e){this._verify2(t,e);var r=t.isub(e);return r.cmpn(0)<0&&r.iadd(this.m),r},N.prototype.shl=function(t,e){return this._verify1(t),this.imod(t.ushln(e))},N.prototype.imul=function(t,e){return this._verify2(t,e),this.imod(t.imul(e))},N.prototype.mul=function(t,e){return this._verify2(t,e),this.imod(t.mul(e))},N.prototype.isqr=function(t){return this.imul(t,t.clone())},N.prototype.sqr=function(t){return this.mul(t,t)},N.prototype.sqrt=function(t){if(t.isZero())return t.clone();var e=this.m.andln(3);if(i(e%2==1),3===e){var r=this.m.add(new s(1)).iushrn(2);return this.pow(t,r)}for(var n=this.m.subn(1),o=0;!n.isZero()&&0===n.andln(1);)o++,n.iushrn(1);i(!n.isZero());var a=new s(1).toRed(this),u=a.redNeg(),h=this.m.subn(1).iushrn(1),c=this.m.bitLength();for(c=new s(2*c*c).toRed(this);0!==this.pow(c,h).cmp(u);)c.redIAdd(u);for(var l=this.pow(c,n),d=this.pow(t,n.addn(1).iushrn(1)),f=this.pow(t,n),p=o;0!==f.cmp(a);){for(var g=f,m=0;0!==g.cmp(a);m++)g=g.redSqr();i(m<p);var y=this.pow(l,new s(1).iushln(p-m-1));d=d.redMul(y),l=y.redSqr(),f=f.redMul(l),p=m}return d},N.prototype.invm=function(t){var e=t._invmp(this.m);return 0!==e.negative?(e.negative=0,this.imod(e).redNeg()):this.imod(e)},N.prototype.pow=function(t,e){if(e.isZero())return new s(1).toRed(this);if(0===e.cmpn(1))return t.clone();var r=new Array(16);r[0]=new s(1).toRed(this),r[1]=t;for(var i=2;i<r.length;i++)r[i]=this.mul(r[i-1],t);var n=r[0],o=0,a=0,u=e.bitLength()%26;for(0===u&&(u=26),i=e.length-1;i>=0;i--){for(var h=e.words[i],c=u-1;c>=0;c--){var l=h>>c&1;n!==r[0]&&(n=this.sqr(n)),0!==l||0!==o?(o<<=1,o|=l,(4==++a||0===i&&0===c)&&(n=this.mul(n,r[o]),a=0,o=0)):a=0}u=26}return n},N.prototype.convertTo=function(t){var e=t.umod(this.m);return e===t?e.clone():e},N.prototype.convertFrom=function(t){var e=t.clone();return e.red=null,e},s.mont=function(t){return new M(t)},n(M,N),M.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},M.prototype.convertFrom=function(t){var e=this.imod(t.mul(this.rinv));return e.red=null,e},M.prototype.imul=function(t,e){if(t.isZero()||e.isZero())return t.words[0]=0,t.length=1,t;var r=t.imul(e),i=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=r.isub(i).iushrn(this.shift),s=n;return n.cmp(this.m)>=0?s=n.isub(this.m):n.cmpn(0)<0&&(s=n.iadd(this.m)),s._forceRed(this)},M.prototype.mul=function(t,e){if(t.isZero()||e.isZero())return new s(0)._forceRed(this);var r=t.mul(e),i=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=r.isub(i).iushrn(this.shift),o=n;return n.cmp(this.m)>=0?o=n.isub(this.m):n.cmpn(0)<0&&(o=n.iadd(this.m)),o._forceRed(this)},M.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=r.nmd(t),this)},9282:(t,e,r)=>{"use strict";var i=r(4155);function n(t){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},n(t)}function s(t,e){for(var r=0;r<e.length;r++){var i=e[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,(void 0,s=function(t,e){if("object"!==n(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var i=r.call(t,"string");if("object"!==n(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(i.key),"symbol"===n(s)?s:String(s)),i)}var s}function o(t,e,r){return e&&s(t.prototype,e),r&&s(t,r),Object.defineProperty(t,"prototype",{writable:!1}),t}var a,u,h=r(2136).codes,c=h.ERR_AMBIGUOUS_ARGUMENT,l=h.ERR_INVALID_ARG_TYPE,d=h.ERR_INVALID_ARG_VALUE,f=h.ERR_INVALID_RETURN_VALUE,p=h.ERR_MISSING_ARGS,g=r(5961),m=r(9539).inspect,y=r(9539).types,v=y.isPromise,b=y.isRegExp,w=r(8162)(),E=r(5624)(),S=r(1924)("RegExp.prototype.test");function N(){var t=r(9158);a=t.isDeepEqual,u=t.isDeepStrictEqual}new Map;var M=!1,x=t.exports=T,I={};function A(t){if(t.message instanceof Error)throw t.message;throw new g(t)}function P(t,e,r,i){if(!r){var n=!1;if(0===e)n=!0,i="No value argument passed to `assert.ok()`";else if(i instanceof Error)throw i;var s=new g({actual:r,expected:!0,message:i,operator:"==",stackStartFn:t});throw s.generatedMessage=n,s}}function T(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];P.apply(void 0,[T,e.length].concat(e))}x.fail=function t(e,r,n,s,o){var a,u=arguments.length;if(0===u?a="Failed":1===u?(n=e,e=void 0):(!1===M&&(M=!0,(i.emitWarning?i.emitWarning:console.warn.bind(console))("assert.fail() with more than one argument is deprecated. Please use assert.strictEqual() instead or only pass a message.","DeprecationWarning","DEP0094")),2===u&&(s="!=")),n instanceof Error)throw n;var h={actual:e,expected:r,operator:void 0===s?"fail":s,stackStartFn:o||t};void 0!==n&&(h.message=n);var c=new g(h);throw a&&(c.message=a,c.generatedMessage=!0),c},x.AssertionError=g,x.ok=T,x.equal=function t(e,r,i){if(arguments.length<2)throw new p("actual","expected");e!=r&&A({actual:e,expected:r,message:i,operator:"==",stackStartFn:t})},x.notEqual=function t(e,r,i){if(arguments.length<2)throw new p("actual","expected");e==r&&A({actual:e,expected:r,message:i,operator:"!=",stackStartFn:t})},x.deepEqual=function t(e,r,i){if(arguments.length<2)throw new p("actual","expected");void 0===a&&N(),a(e,r)||A({actual:e,expected:r,message:i,operator:"deepEqual",stackStartFn:t})},x.notDeepEqual=function t(e,r,i){if(arguments.length<2)throw new p("actual","expected");void 0===a&&N(),a(e,r)&&A({actual:e,expected:r,message:i,operator:"notDeepEqual",stackStartFn:t})},x.deepStrictEqual=function t(e,r,i){if(arguments.length<2)throw new p("actual","expected");void 0===a&&N(),u(e,r)||A({actual:e,expected:r,message:i,operator:"deepStrictEqual",stackStartFn:t})},x.notDeepStrictEqual=function t(e,r,i){if(arguments.length<2)throw new p("actual","expected");void 0===a&&N(),u(e,r)&&A({actual:e,expected:r,message:i,operator:"notDeepStrictEqual",stackStartFn:t})},x.strictEqual=function t(e,r,i){if(arguments.length<2)throw new p("actual","expected");E(e,r)||A({actual:e,expected:r,message:i,operator:"strictEqual",stackStartFn:t})},x.notStrictEqual=function t(e,r,i){if(arguments.length<2)throw new p("actual","expected");E(e,r)&&A({actual:e,expected:r,message:i,operator:"notStrictEqual",stackStartFn:t})};var R=o((function t(e,r,i){var n=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),r.forEach((function(t){t in e&&(void 0!==i&&"string"==typeof i[t]&&b(e[t])&&S(e[t],i[t])?n[t]=i[t]:n[t]=e[t])}))}));function k(t,e,r,i){if("function"!=typeof e){if(b(e))return S(e,t);if(2===arguments.length)throw new l("expected",["Function","RegExp"],e);if("object"!==n(t)||null===t){var s=new g({actual:t,expected:e,message:r,operator:"deepStrictEqual",stackStartFn:i});throw s.operator=i.name,s}var o=Object.keys(e);if(e instanceof Error)o.push("name","message");else if(0===o.length)throw new d("error",e,"may not be an empty object");return void 0===a&&N(),o.forEach((function(n){"string"==typeof t[n]&&b(e[n])&&S(e[n],t[n])||function(t,e,r,i,n,s){if(!(r in t)||!u(t[r],e[r])){if(!i){var o=new R(t,n),a=new R(e,n,t),h=new g({actual:o,expected:a,operator:"deepStrictEqual",stackStartFn:s});throw h.actual=t,h.expected=e,h.operator=s.name,h}A({actual:t,expected:e,message:i,operator:s.name,stackStartFn:s})}}(t,e,n,r,o,i)})),!0}return void 0!==e.prototype&&t instanceof e||!Error.isPrototypeOf(e)&&!0===e.call({},t)}function B(t){if("function"!=typeof t)throw new l("fn","Function",t);try{t()}catch(t){return t}return I}function O(t){return v(t)||null!==t&&"object"===n(t)&&"function"==typeof t.then&&"function"==typeof t.catch}function C(t){return Promise.resolve().then((function(){var e;if("function"==typeof t){if(!O(e=t()))throw new f("instance of Promise","promiseFn",e)}else{if(!O(t))throw new l("promiseFn",["Function","Promise"],t);e=t}return Promise.resolve().then((function(){return e})).then((function(){return I})).catch((function(t){return t}))}))}function L(t,e,r,i){if("string"==typeof r){if(4===arguments.length)throw new l("error",["Object","Error","Function","RegExp"],r);if("object"===n(e)&&null!==e){if(e.message===r)throw new c("error/message",'The error message "'.concat(e.message,'" is identical to the message.'))}else if(e===r)throw new c("error/message",'The error "'.concat(e,'" is identical to the message.'));i=r,r=void 0}else if(null!=r&&"object"!==n(r)&&"function"!=typeof r)throw new l("error",["Object","Error","Function","RegExp"],r);if(e===I){var s="";r&&r.name&&(s+=" (".concat(r.name,")")),s+=i?": ".concat(i):".";var o="rejects"===t.name?"rejection":"exception";A({actual:void 0,expected:r,operator:t.name,message:"Missing expected ".concat(o).concat(s),stackStartFn:t})}if(r&&!k(e,r,i,t))throw e}function j(t,e,r,i){if(e!==I){if("string"==typeof r&&(i=r,r=void 0),!r||k(e,r)){var n=i?": ".concat(i):".",s="doesNotReject"===t.name?"rejection":"exception";A({actual:e,expected:r,operator:t.name,message:"Got unwanted ".concat(s).concat(n,"\n")+'Actual message: "'.concat(e&&e.message,'"'),stackStartFn:t})}throw e}}function Z(t,e,r,i,s){if(!b(e))throw new l("regexp","RegExp",e);var o="match"===s;if("string"!=typeof t||S(e,t)!==o){if(r instanceof Error)throw r;var a=!r;r=r||("string"!=typeof t?'The "string" argument must be of type string. Received type '+"".concat(n(t)," (").concat(m(t),")"):(o?"The input did not match the regular expression ":"The input was expected to not match the regular expression ")+"".concat(m(e),". Input:\n\n").concat(m(t),"\n"));var u=new g({actual:t,expected:e,message:r,operator:s,stackStartFn:i});throw u.generatedMessage=a,u}}function D(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];P.apply(void 0,[D,e.length].concat(e))}x.throws=function t(e){for(var r=arguments.length,i=new Array(r>1?r-1:0),n=1;n<r;n++)i[n-1]=arguments[n];L.apply(void 0,[t,B(e)].concat(i))},x.rejects=function t(e){for(var r=arguments.length,i=new Array(r>1?r-1:0),n=1;n<r;n++)i[n-1]=arguments[n];return C(e).then((function(e){return L.apply(void 0,[t,e].concat(i))}))},x.doesNotThrow=function t(e){for(var r=arguments.length,i=new Array(r>1?r-1:0),n=1;n<r;n++)i[n-1]=arguments[n];j.apply(void 0,[t,B(e)].concat(i))},x.doesNotReject=function t(e){for(var r=arguments.length,i=new Array(r>1?r-1:0),n=1;n<r;n++)i[n-1]=arguments[n];return C(e).then((function(e){return j.apply(void 0,[t,e].concat(i))}))},x.ifError=function t(e){if(null!=e){var r="ifError got unwanted exception: ";"object"===n(e)&&"string"==typeof e.message?0===e.message.length&&e.constructor?r+=e.constructor.name:r+=e.message:r+=m(e);var i=new g({actual:e,expected:null,operator:"ifError",message:r,stackStartFn:t}),s=e.stack;if("string"==typeof s){var o=s.split("\n");o.shift();for(var a=i.stack.split("\n"),u=0;u<o.length;u++){var h=a.indexOf(o[u]);if(-1!==h){a=a.slice(0,h);break}}i.stack="".concat(a.join("\n"),"\n").concat(o.join("\n"))}throw i}},x.match=function t(e,r,i){Z(e,r,i,t,"match")},x.doesNotMatch=function t(e,r,i){Z(e,r,i,t,"doesNotMatch")},x.strict=w(D,x,{equal:x.strictEqual,deepEqual:x.deepStrictEqual,notEqual:x.notStrictEqual,notDeepEqual:x.notDeepStrictEqual}),x.strict.strict=x.strict},5961:(t,e,r)=>{"use strict";var i=r(4155);function n(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,i)}return r}function s(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?n(Object(r),!0).forEach((function(e){var i,n,s;i=t,n=e,s=r[e],(n=a(n))in i?Object.defineProperty(i,n,{value:s,enumerable:!0,configurable:!0,writable:!0}):i[n]=s})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function o(t,e){for(var r=0;r<e.length;r++){var i=e[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,a(i.key),i)}}function a(t){var e=function(t,e){if("object"!==g(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var i=r.call(t,"string");if("object"!==g(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===g(e)?e:String(e)}function u(t,e){if(e&&("object"===g(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return h(t)}function h(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function c(t){var e="function"==typeof Map?new Map:void 0;return c=function(t){if(null===t||(r=t,-1===Function.toString.call(r).indexOf("[native code]")))return t;var r;if("function"!=typeof t)throw new TypeError("Super expression must either be null or a function");if(void 0!==e){if(e.has(t))return e.get(t);e.set(t,i)}function i(){return l(t,arguments,p(this).constructor)}return i.prototype=Object.create(t.prototype,{constructor:{value:i,enumerable:!1,writable:!0,configurable:!0}}),f(i,t)},c(t)}function l(t,e,r){return l=d()?Reflect.construct.bind():function(t,e,r){var i=[null];i.push.apply(i,e);var n=new(Function.bind.apply(t,i));return r&&f(n,r.prototype),n},l.apply(null,arguments)}function d(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}function f(t,e){return f=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},f(t,e)}function p(t){return p=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},p(t)}function g(t){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},g(t)}var m=r(9539).inspect,y=r(2136).codes.ERR_INVALID_ARG_TYPE;function v(t,e,r){return(void 0===r||r>t.length)&&(r=t.length),t.substring(r-e.length,r)===e}var b="",w="",E="",S="",N={deepStrictEqual:"Expected values to be strictly deep-equal:",strictEqual:"Expected values to be strictly equal:",strictEqualObject:'Expected "actual" to be reference-equal to "expected":',deepEqual:"Expected values to be loosely deep-equal:",equal:"Expected values to be loosely equal:",notDeepStrictEqual:'Expected "actual" not to be strictly deep-equal to:',notStrictEqual:'Expected "actual" to be strictly unequal to:',notStrictEqualObject:'Expected "actual" not to be reference-equal to "expected":',notDeepEqual:'Expected "actual" not to be loosely deep-equal to:',notEqual:'Expected "actual" to be loosely unequal to:',notIdentical:"Values identical but not reference-equal:"};function M(t){var e=Object.keys(t),r=Object.create(Object.getPrototypeOf(t));return e.forEach((function(e){r[e]=t[e]})),Object.defineProperty(r,"message",{value:t.message}),r}function x(t){return m(t,{compact:!1,customInspect:!1,depth:1e3,maxArrayLength:1/0,showHidden:!1,breakLength:1/0,showProxy:!1,sorted:!0,getters:!0})}var I=function(t,e){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&f(t,e)}(I,t);var r,n,a,c,l=(r=I,n=d(),function(){var t,e=p(r);if(n){var i=p(this).constructor;t=Reflect.construct(e,arguments,i)}else t=e.apply(this,arguments);return u(this,t)});function I(t){var e;if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,I),"object"!==g(t)||null===t)throw new y("options","Object",t);var r=t.message,n=t.operator,s=t.stackStartFn,o=t.actual,a=t.expected,c=Error.stackTraceLimit;if(Error.stackTraceLimit=0,null!=r)e=l.call(this,String(r));else if(i.stderr&&i.stderr.isTTY&&(i.stderr&&i.stderr.getColorDepth&&1!==i.stderr.getColorDepth()?(b="[34m",w="[32m",S="[39m",E="[31m"):(b="",w="",S="",E="")),"object"===g(o)&&null!==o&&"object"===g(a)&&null!==a&&"stack"in o&&o instanceof Error&&"stack"in a&&a instanceof Error&&(o=M(o),a=M(a)),"deepStrictEqual"===n||"strictEqual"===n)e=l.call(this,function(t,e,r){var n="",s="",o=0,a="",u=!1,h=x(t),c=h.split("\n"),l=x(e).split("\n"),d=0,f="";if("strictEqual"===r&&"object"===g(t)&&"object"===g(e)&&null!==t&&null!==e&&(r="strictEqualObject"),1===c.length&&1===l.length&&c[0]!==l[0]){var p=c[0].length+l[0].length;if(p<=10){if(!("object"===g(t)&&null!==t||"object"===g(e)&&null!==e||0===t&&0===e))return"".concat(N[r],"\n\n")+"".concat(c[0]," !== ").concat(l[0],"\n")}else if("strictEqualObject"!==r&&p<(i.stderr&&i.stderr.isTTY?i.stderr.columns:80)){for(;c[0][d]===l[0][d];)d++;d>2&&(f="\n  ".concat(function(t,e){if(e=Math.floor(e),0==t.length||0==e)return"";var r=t.length*e;for(e=Math.floor(Math.log(e)/Math.log(2));e;)t+=t,e--;return t+t.substring(0,r-t.length)}(" ",d),"^"),d=0)}}for(var m=c[c.length-1],y=l[l.length-1];m===y&&(d++<2?a="\n  ".concat(m).concat(a):n=m,c.pop(),l.pop(),0!==c.length&&0!==l.length);)m=c[c.length-1],y=l[l.length-1];var M=Math.max(c.length,l.length);if(0===M){var I=h.split("\n");if(I.length>30)for(I[26]="".concat(b,"...").concat(S);I.length>27;)I.pop();return"".concat(N.notIdentical,"\n\n").concat(I.join("\n"),"\n")}d>3&&(a="\n".concat(b,"...").concat(S).concat(a),u=!0),""!==n&&(a="\n  ".concat(n).concat(a),n="");var A=0,P=N[r]+"\n".concat(w,"+ actual").concat(S," ").concat(E,"- expected").concat(S),T=" ".concat(b,"...").concat(S," Lines skipped");for(d=0;d<M;d++){var R=d-o;if(c.length<d+1)R>1&&d>2&&(R>4?(s+="\n".concat(b,"...").concat(S),u=!0):R>3&&(s+="\n  ".concat(l[d-2]),A++),s+="\n  ".concat(l[d-1]),A++),o=d,n+="\n".concat(E,"-").concat(S," ").concat(l[d]),A++;else if(l.length<d+1)R>1&&d>2&&(R>4?(s+="\n".concat(b,"...").concat(S),u=!0):R>3&&(s+="\n  ".concat(c[d-2]),A++),s+="\n  ".concat(c[d-1]),A++),o=d,s+="\n".concat(w,"+").concat(S," ").concat(c[d]),A++;else{var k=l[d],B=c[d],O=B!==k&&(!v(B,",")||B.slice(0,-1)!==k);O&&v(k,",")&&k.slice(0,-1)===B&&(O=!1,B+=","),O?(R>1&&d>2&&(R>4?(s+="\n".concat(b,"...").concat(S),u=!0):R>3&&(s+="\n  ".concat(c[d-2]),A++),s+="\n  ".concat(c[d-1]),A++),o=d,s+="\n".concat(w,"+").concat(S," ").concat(B),n+="\n".concat(E,"-").concat(S," ").concat(k),A+=2):(s+=n,n="",1!==R&&0!==d||(s+="\n  ".concat(B),A++))}if(A>20&&d<M-2)return"".concat(P).concat(T,"\n").concat(s,"\n").concat(b,"...").concat(S).concat(n,"\n")+"".concat(b,"...").concat(S)}return"".concat(P).concat(u?T:"","\n").concat(s).concat(n).concat(a).concat(f)}(o,a,n));else if("notDeepStrictEqual"===n||"notStrictEqual"===n){var d=N[n],f=x(o).split("\n");if("notStrictEqual"===n&&"object"===g(o)&&null!==o&&(d=N.notStrictEqualObject),f.length>30)for(f[26]="".concat(b,"...").concat(S);f.length>27;)f.pop();e=1===f.length?l.call(this,"".concat(d," ").concat(f[0])):l.call(this,"".concat(d,"\n\n").concat(f.join("\n"),"\n"))}else{var p=x(o),m="",A=N[n];"notDeepEqual"===n||"notEqual"===n?(p="".concat(N[n],"\n\n").concat(p)).length>1024&&(p="".concat(p.slice(0,1021),"...")):(m="".concat(x(a)),p.length>512&&(p="".concat(p.slice(0,509),"...")),m.length>512&&(m="".concat(m.slice(0,509),"...")),"deepEqual"===n||"equal"===n?p="".concat(A,"\n\n").concat(p,"\n\nshould equal\n\n"):m=" ".concat(n," ").concat(m)),e=l.call(this,"".concat(p).concat(m))}return Error.stackTraceLimit=c,e.generatedMessage=!r,Object.defineProperty(h(e),"name",{value:"AssertionError [ERR_ASSERTION]",enumerable:!1,writable:!0,configurable:!0}),e.code="ERR_ASSERTION",e.actual=o,e.expected=a,e.operator=n,Error.captureStackTrace&&Error.captureStackTrace(h(e),s),e.stack,e.name="AssertionError",u(e)}return a=I,(c=[{key:"toString",value:function(){return"".concat(this.name," [").concat(this.code,"]: ").concat(this.message)}},{key:e,value:function(t,e){return m(this,s(s({},e),{},{customInspect:!1,depth:0}))}}])&&o(a.prototype,c),Object.defineProperty(a,"prototype",{writable:!1}),I}(c(Error),m.custom);t.exports=I},2136:(t,e,r)=>{"use strict";function i(t){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},i(t)}function n(t,e){return n=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},n(t,e)}function s(t){return s=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},s(t)}var o,a,u={};function h(t,e,r){r||(r=Error);var o=function(r){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&n(t,e)}(c,r);var o,a,u,h=(a=c,u=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=s(a);if(u){var r=s(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===i(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function c(r,i,n){var s;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,c),s=h.call(this,function(t,r,i){return"string"==typeof e?e:e(t,r,i)}(r,i,n)),s.code=t,s}return o=c,Object.defineProperty(o,"prototype",{writable:!1}),o}(r);u[t]=o}function c(t,e){if(Array.isArray(t)){var r=t.length;return t=t.map((function(t){return String(t)})),r>2?"one of ".concat(e," ").concat(t.slice(0,r-1).join(", "),", or ")+t[r-1]:2===r?"one of ".concat(e," ").concat(t[0]," or ").concat(t[1]):"of ".concat(e," ").concat(t[0])}return"of ".concat(e," ").concat(String(t))}h("ERR_AMBIGUOUS_ARGUMENT",'The "%s" argument is ambiguous. %s',TypeError),h("ERR_INVALID_ARG_TYPE",(function(t,e,n){var s,a,u,h,l;if(void 0===o&&(o=r(9282)),o("string"==typeof t,"'name' must be a string"),"string"==typeof e&&(a="not ",e.substr(0,4)===a)?(s="must not be",e=e.replace(/^not /,"")):s="must be",function(t,e,r){return(void 0===r||r>t.length)&&(r=t.length),t.substring(r-9,r)===e}(t," argument"))u="The ".concat(t," ").concat(s," ").concat(c(e,"type"));else{var d=("number"!=typeof l&&(l=0),l+1>(h=t).length||-1===h.indexOf(".",l)?"argument":"property");u='The "'.concat(t,'" ').concat(d," ").concat(s," ").concat(c(e,"type"))}return u+". Received type ".concat(i(n))}),TypeError),h("ERR_INVALID_ARG_VALUE",(function(t,e){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"is invalid";void 0===a&&(a=r(9539));var n=a.inspect(e);return n.length>128&&(n="".concat(n.slice(0,128),"...")),"The argument '".concat(t,"' ").concat(i,". Received ").concat(n)}),TypeError,RangeError),h("ERR_INVALID_RETURN_VALUE",(function(t,e,r){var n;return n=r&&r.constructor&&r.constructor.name?"instance of ".concat(r.constructor.name):"type ".concat(i(r)),"Expected ".concat(t,' to be returned from the "').concat(e,'"')+" function but got ".concat(n,".")}),TypeError),h("ERR_MISSING_ARGS",(function(){for(var t=arguments.length,e=new Array(t),i=0;i<t;i++)e[i]=arguments[i];void 0===o&&(o=r(9282)),o(e.length>0,"At least one arg needs to be specified");var n="The ",s=e.length;switch(e=e.map((function(t){return'"'.concat(t,'"')})),s){case 1:n+="".concat(e[0]," argument");break;case 2:n+="".concat(e[0]," and ").concat(e[1]," arguments");break;default:n+=e.slice(0,s-1).join(", "),n+=", and ".concat(e[s-1]," arguments")}return"".concat(n," must be specified")}),TypeError),t.exports.codes=u},9158:(t,e,r)=>{"use strict";function i(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var i,n,s,o,a=[],u=!0,h=!1;try{if(s=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;u=!1}else for(;!(u=(i=s.call(r)).done)&&(a.push(i.value),a.length!==e);u=!0);}catch(t){h=!0,n=t}finally{try{if(!u&&null!=r.return&&(o=r.return(),Object(o)!==o))return}finally{if(h)throw n}}return a}}(t,e)||function(t,e){if(t){if("string"==typeof t)return n(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function n(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,i=new Array(e);r<e;r++)i[r]=t[r];return i}function s(t){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},s(t)}var o=void 0!==/a/g.flags,a=function(t){var e=[];return t.forEach((function(t){return e.push(t)})),e},u=function(t){var e=[];return t.forEach((function(t,r){return e.push([r,t])})),e},h=Object.is?Object.is:r(609),c=Object.getOwnPropertySymbols?Object.getOwnPropertySymbols:function(){return[]},l=Number.isNaN?Number.isNaN:r(360);function d(t){return t.call.bind(t)}var f=d(Object.prototype.hasOwnProperty),p=d(Object.prototype.propertyIsEnumerable),g=d(Object.prototype.toString),m=r(9539).types,y=m.isAnyArrayBuffer,v=m.isArrayBufferView,b=m.isDate,w=m.isMap,E=m.isRegExp,S=m.isSet,N=m.isNativeError,M=m.isBoxedPrimitive,x=m.isNumberObject,I=m.isStringObject,A=m.isBooleanObject,P=m.isBigIntObject,T=m.isSymbolObject,R=m.isFloat32Array,k=m.isFloat64Array;function B(t){if(0===t.length||t.length>10)return!0;for(var e=0;e<t.length;e++){var r=t.charCodeAt(e);if(r<48||r>57)return!0}return 10===t.length&&t>=Math.pow(2,32)}function O(t){return Object.keys(t).filter(B).concat(c(t).filter(Object.prototype.propertyIsEnumerable.bind(t)))}function C(t,e){if(t===e)return 0;for(var r=t.length,i=e.length,n=0,s=Math.min(r,i);n<s;++n)if(t[n]!==e[n]){r=t[n],i=e[n];break}return r<i?-1:i<r?1:0}var L=0,j=1,Z=2,D=3;function F(t,e,r,i){if(t===e)return 0!==t||!r||h(t,e);if(r){if("object"!==s(t))return"number"==typeof t&&l(t)&&l(e);if("object"!==s(e)||null===t||null===e)return!1;if(Object.getPrototypeOf(t)!==Object.getPrototypeOf(e))return!1}else{if(null===t||"object"!==s(t))return(null===e||"object"!==s(e))&&t==e;if(null===e||"object"!==s(e))return!1}var n,a,u,c,d=g(t);if(d!==g(e))return!1;if(Array.isArray(t)){if(t.length!==e.length)return!1;var f=O(t),p=O(e);return f.length===p.length&&H(t,e,r,i,j,f)}if("[object Object]"===d&&(!w(t)&&w(e)||!S(t)&&S(e)))return!1;if(b(t)){if(!b(e)||Date.prototype.getTime.call(t)!==Date.prototype.getTime.call(e))return!1}else if(E(t)){if(!E(e)||(u=t,c=e,!(o?u.source===c.source&&u.flags===c.flags:RegExp.prototype.toString.call(u)===RegExp.prototype.toString.call(c))))return!1}else if(N(t)||t instanceof Error){if(t.message!==e.message||t.name!==e.name)return!1}else{if(v(t)){if(r||!R(t)&&!k(t)){if(!function(t,e){return t.byteLength===e.byteLength&&0===C(new Uint8Array(t.buffer,t.byteOffset,t.byteLength),new Uint8Array(e.buffer,e.byteOffset,e.byteLength))}(t,e))return!1}else if(!function(t,e){if(t.byteLength!==e.byteLength)return!1;for(var r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0}(t,e))return!1;var m=O(t),B=O(e);return m.length===B.length&&H(t,e,r,i,L,m)}if(S(t))return!(!S(e)||t.size!==e.size)&&H(t,e,r,i,Z);if(w(t))return!(!w(e)||t.size!==e.size)&&H(t,e,r,i,D);if(y(t)){if(a=e,(n=t).byteLength!==a.byteLength||0!==C(new Uint8Array(n),new Uint8Array(a)))return!1}else if(M(t)&&!function(t,e){return x(t)?x(e)&&h(Number.prototype.valueOf.call(t),Number.prototype.valueOf.call(e)):I(t)?I(e)&&String.prototype.valueOf.call(t)===String.prototype.valueOf.call(e):A(t)?A(e)&&Boolean.prototype.valueOf.call(t)===Boolean.prototype.valueOf.call(e):P(t)?P(e)&&BigInt.prototype.valueOf.call(t)===BigInt.prototype.valueOf.call(e):T(e)&&Symbol.prototype.valueOf.call(t)===Symbol.prototype.valueOf.call(e)}(t,e))return!1}return H(t,e,r,i,L)}function z(t,e){return e.filter((function(e){return p(t,e)}))}function H(t,e,r,n,o,h){if(5===arguments.length){h=Object.keys(t);var l=Object.keys(e);if(h.length!==l.length)return!1}for(var d=0;d<h.length;d++)if(!f(e,h[d]))return!1;if(r&&5===arguments.length){var g=c(t);if(0!==g.length){var m=0;for(d=0;d<g.length;d++){var y=g[d];if(p(t,y)){if(!p(e,y))return!1;h.push(y),m++}else if(p(e,y))return!1}var v=c(e);if(g.length!==v.length&&z(e,v).length!==m)return!1}else{var b=c(e);if(0!==b.length&&0!==z(e,b).length)return!1}}if(0===h.length&&(o===L||o===j&&0===t.length||0===t.size))return!0;if(void 0===n)n={val1:new Map,val2:new Map,position:0};else{var w=n.val1.get(t);if(void 0!==w){var E=n.val2.get(e);if(void 0!==E)return w===E}n.position++}n.val1.set(t,n.position),n.val2.set(e,n.position);var S=function(t,e,r,n,o,h){var c=0;if(h===Z){if(!function(t,e,r,i){for(var n=null,o=a(t),u=0;u<o.length;u++){var h=o[u];if("object"===s(h)&&null!==h)null===n&&(n=new Set),n.add(h);else if(!e.has(h)){if(r)return!1;if(!q(t,e,h))return!1;null===n&&(n=new Set),n.add(h)}}if(null!==n){for(var c=a(e),l=0;l<c.length;l++){var d=c[l];if("object"===s(d)&&null!==d){if(!W(n,d,r,i))return!1}else if(!r&&!t.has(d)&&!W(n,d,r,i))return!1}return 0===n.size}return!0}(t,e,r,o))return!1}else if(h===D){if(!function(t,e,r,n){for(var o=null,a=u(t),h=0;h<a.length;h++){var c=i(a[h],2),l=c[0],d=c[1];if("object"===s(l)&&null!==l)null===o&&(o=new Set),o.add(l);else{var f=e.get(l);if(void 0===f&&!e.has(l)||!F(d,f,r,n)){if(r)return!1;if(!U(t,e,l,d,n))return!1;null===o&&(o=new Set),o.add(l)}}}if(null!==o){for(var p=u(e),g=0;g<p.length;g++){var m=i(p[g],2),y=m[0],v=m[1];if("object"===s(y)&&null!==y){if(!V(o,t,y,v,r,n))return!1}else if(!(r||t.has(y)&&F(t.get(y),v,!1,n)||V(o,t,y,v,!1,n)))return!1}return 0===o.size}return!0}(t,e,r,o))return!1}else if(h===j)for(;c<t.length;c++){if(!f(t,c)){if(f(e,c))return!1;for(var l=Object.keys(t);c<l.length;c++){var d=l[c];if(!f(e,d)||!F(t[d],e[d],r,o))return!1}return l.length===Object.keys(e).length}if(!f(e,c)||!F(t[c],e[c],r,o))return!1}for(c=0;c<n.length;c++){var p=n[c];if(!F(t[p],e[p],r,o))return!1}return!0}(t,e,r,h,n,o);return n.val1.delete(t),n.val2.delete(e),S}function W(t,e,r,i){for(var n=a(t),s=0;s<n.length;s++){var o=n[s];if(F(e,o,r,i))return t.delete(o),!0}return!1}function K(t){switch(s(t)){case"undefined":return null;case"object":return;case"symbol":return!1;case"string":t=+t;case"number":if(l(t))return!1}return!0}function q(t,e,r){var i=K(r);return null!=i?i:e.has(i)&&!t.has(i)}function U(t,e,r,i,n){var s=K(r);if(null!=s)return s;var o=e.get(s);return!(void 0===o&&!e.has(s)||!F(i,o,!1,n))&&!t.has(s)&&F(i,o,!1,n)}function V(t,e,r,i,n,s){for(var o=a(t),u=0;u<o.length;u++){var h=o[u];if(F(r,h,n,s)&&F(i,e.get(h),n,s))return t.delete(h),!0}return!1}t.exports={isDeepEqual:function(t,e){return F(t,e,!1)},isDeepStrictEqual:function(t,e){return F(t,e,!0)}}},1195:function(t,e,r){t=r.nmd(t);var i=r(4155);!function(e){"use strict";function n(t,e){e|=0;for(var r=Math.max(t.length-e,0),i=Array(r),n=0;n<r;n++)i[n]=t[e+n];return i}var s=function(t){var e=n(arguments,1);return function(){var r=n(arguments);return t.apply(null,e.concat(r))}},o=function(t){return function(){var e=n(arguments),r=e.pop();t.call(this,e,r)}};function a(t){var e=typeof t;return null!=t&&("object"==e||"function"==e)}var u="function"==typeof setImmediate&&setImmediate,h="object"==typeof i&&"function"==typeof i.nextTick;function c(t){setTimeout(t,0)}function l(t){return function(e){var r=n(arguments,1);t((function(){e.apply(null,r)}))}}var d=l(u?setImmediate:h?i.nextTick:c);function f(t){return o((function(e,r){var i;try{i=t.apply(this,e)}catch(t){return r(t)}a(i)&&"function"==typeof i.then?i.then((function(t){p(r,null,t)}),(function(t){p(r,t.message?t:new Error(t))})):r(null,i)}))}function p(t,e,r){try{t(e,r)}catch(t){d(g,t)}}function g(t){throw t}var m="function"==typeof Symbol;function y(t){return m&&"AsyncFunction"===t[Symbol.toStringTag]}function v(t){return y(t)?f(t):t}function b(t){return function(e){var r=n(arguments,1),i=o((function(r,i){var n=this;return t(e,(function(t,e){v(t).apply(n,r.concat(e))}),i)}));return r.length?i.apply(this,r):i}}var w="object"==typeof r.g&&r.g&&r.g.Object===Object&&r.g,E="object"==typeof self&&self&&self.Object===Object&&self,S=w||E||Function("return this")(),N=S.Symbol,M=Object.prototype,x=M.hasOwnProperty,I=M.toString,A=N?N.toStringTag:void 0;var P=Object.prototype.toString;var T="[object Null]",R="[object Undefined]",k=N?N.toStringTag:void 0;function B(t){return null==t?void 0===t?R:T:k&&k in Object(t)?function(t){var e=x.call(t,A),r=t[A];try{t[A]=void 0;var i=!0}catch(t){}var n=I.call(t);return i&&(e?t[A]=r:delete t[A]),n}(t):function(t){return P.call(t)}(t)}var O="[object AsyncFunction]",C="[object Function]",L="[object GeneratorFunction]",j="[object Proxy]";var Z=9007199254740991;function D(t){return"number"==typeof t&&t>-1&&t%1==0&&t<=Z}function F(t){return null!=t&&D(t.length)&&!function(t){if(!a(t))return!1;var e=B(t);return e==C||e==L||e==O||e==j}(t)}var z={};function H(){}function W(t){return function(){if(null!==t){var e=t;t=null,e.apply(this,arguments)}}}var K="function"==typeof Symbol&&Symbol.iterator,q=function(t){return K&&t[K]&&t[K]()};function U(t){return null!=t&&"object"==typeof t}function V(t){return U(t)&&"[object Arguments]"==B(t)}var X=Object.prototype,G=X.hasOwnProperty,Y=X.propertyIsEnumerable,Q=V(function(){return arguments}())?V:function(t){return U(t)&&G.call(t,"callee")&&!Y.call(t,"callee")},J=Array.isArray;var _="object"==typeof e&&e&&!e.nodeType&&e,$=_&&t&&!t.nodeType&&t,tt=$&&$.exports===_?S.Buffer:void 0,et=(tt?tt.isBuffer:void 0)||function(){return!1},rt=9007199254740991,it=/^(?:0|[1-9]\d*)$/;function nt(t,e){var r=typeof t;return!!(e=null==e?rt:e)&&("number"==r||"symbol"!=r&&it.test(t))&&t>-1&&t%1==0&&t<e}var st={};st["[object Float32Array]"]=st["[object Float64Array]"]=st["[object Int8Array]"]=st["[object Int16Array]"]=st["[object Int32Array]"]=st["[object Uint8Array]"]=st["[object Uint8ClampedArray]"]=st["[object Uint16Array]"]=st["[object Uint32Array]"]=!0,st["[object Arguments]"]=st["[object Array]"]=st["[object ArrayBuffer]"]=st["[object Boolean]"]=st["[object DataView]"]=st["[object Date]"]=st["[object Error]"]=st["[object Function]"]=st["[object Map]"]=st["[object Number]"]=st["[object Object]"]=st["[object RegExp]"]=st["[object Set]"]=st["[object String]"]=st["[object WeakMap]"]=!1;var ot,at="object"==typeof e&&e&&!e.nodeType&&e,ut=at&&t&&!t.nodeType&&t,ht=ut&&ut.exports===at&&w.process,ct=function(){try{return ut&&ut.require&&ut.require("util").types||ht&&ht.binding&&ht.binding("util")}catch(t){}}(),lt=ct&&ct.isTypedArray,dt=lt?(ot=lt,function(t){return ot(t)}):function(t){return U(t)&&D(t.length)&&!!st[B(t)]},ft=Object.prototype.hasOwnProperty;function pt(t,e){var r=J(t),i=!r&&Q(t),n=!r&&!i&&et(t),s=!r&&!i&&!n&&dt(t),o=r||i||n||s,a=o?function(t,e){for(var r=-1,i=Array(t);++r<t;)i[r]=e(r);return i}(t.length,String):[],u=a.length;for(var h in t)!e&&!ft.call(t,h)||o&&("length"==h||n&&("offset"==h||"parent"==h)||s&&("buffer"==h||"byteLength"==h||"byteOffset"==h)||nt(h,u))||a.push(h);return a}var gt=Object.prototype;var mt=function(t,e){return function(r){return t(e(r))}}(Object.keys,Object),yt=Object.prototype.hasOwnProperty;function vt(t){if(r=(e=t)&&e.constructor,e!==("function"==typeof r&&r.prototype||gt))return mt(t);var e,r,i=[];for(var n in Object(t))yt.call(t,n)&&"constructor"!=n&&i.push(n);return i}function bt(t){return F(t)?pt(t):vt(t)}function wt(t){if(F(t))return function(t){var e=-1,r=t.length;return function(){return++e<r?{value:t[e],key:e}:null}}(t);var e,r,i,n,s=q(t);return s?function(t){var e=-1;return function(){var r=t.next();return r.done?null:(e++,{value:r.value,key:e})}}(s):(r=bt(e=t),i=-1,n=r.length,function t(){var s=r[++i];return"__proto__"===s?t():i<n?{value:e[s],key:s}:null})}function Et(t){return function(){if(null===t)throw new Error("Callback was already called.");var e=t;t=null,e.apply(this,arguments)}}function St(t){return function(e,r,i){if(i=W(i||H),t<=0||!e)return i(null);var n=wt(e),s=!1,o=0,a=!1;function u(t,e){if(o-=1,t)s=!0,i(t);else{if(e===z||s&&o<=0)return s=!0,i(null);a||h()}}function h(){for(a=!0;o<t&&!s;){var e=n();if(null===e)return s=!0,void(o<=0&&i(null));o+=1,r(e.value,e.key,Et(u))}a=!1}h()}}function Nt(t,e,r,i){St(e)(t,v(r),i)}function Mt(t,e){return function(r,i,n){return t(r,e,i,n)}}function xt(t,e,r){r=W(r||H);var i=0,n=0,s=t.length;function o(t,e){t?r(t):++n!==s&&e!==z||r(null)}for(0===s&&r(null);i<s;i++)e(t[i],i,Et(o))}var It=Mt(Nt,1/0),At=function(t,e,r){(F(t)?xt:It)(t,v(e),r)};function Pt(t){return function(e,r,i){return t(At,e,v(r),i)}}function Tt(t,e,r,i){i=i||H,e=e||[];var n=[],s=0,o=v(r);t(e,(function(t,e,r){var i=s++;o(t,(function(t,e){n[i]=e,r(t)}))}),(function(t){i(t,n)}))}var Rt=Pt(Tt),kt=b(Rt);function Bt(t){return function(e,r,i,n){return t(St(r),e,v(i),n)}}var Ot=Bt(Tt),Ct=Mt(Ot,1),Lt=b(Ct);function jt(t,e){for(var r=-1,i=null==t?0:t.length;++r<i&&!1!==e(t[r],r,t););return t}var Zt,Dt=function(t,e,r){for(var i=-1,n=Object(t),s=r(t),o=s.length;o--;){var a=s[Zt?o:++i];if(!1===e(n[a],a,n))break}return t};function Ft(t,e){return t&&Dt(t,e,bt)}function zt(t){return t!=t}function Ht(t,e,r){return e==e?function(t,e,r){for(var i=r-1,n=t.length;++i<n;)if(t[i]===e)return i;return-1}(t,e,r):function(t,e,r,i){for(var n=t.length,s=r+(i?1:-1);i?s--:++s<n;)if(e(t[s],s,t))return s;return-1}(t,zt,r)}var Wt=function(t,e,r){"function"==typeof e&&(r=e,e=null),r=W(r||H);var i=bt(t).length;if(!i)return r(null);e||(e=i);var s={},o=0,a=!1,u=Object.create(null),h=[],c=[],l={};function d(t,e){h.push((function(){!function(t,e){if(!a){var i=Et((function(e,i){if(o--,arguments.length>2&&(i=n(arguments,1)),e){var h={};Ft(s,(function(t,e){h[e]=t})),h[t]=i,a=!0,u=Object.create(null),r(e,h)}else s[t]=i,jt(u[t]||[],(function(t){t()})),f()}));o++;var h=v(e[e.length-1]);e.length>1?h(s,i):h(i)}}(t,e)}))}function f(){if(0===h.length&&0===o)return r(null,s);for(;h.length&&o<e;)h.shift()()}function p(e){var r=[];return Ft(t,(function(t,i){J(t)&&Ht(t,e,0)>=0&&r.push(i)})),r}Ft(t,(function(e,r){if(!J(e))return d(r,[e]),void c.push(r);var i=e.slice(0,e.length-1),n=i.length;if(0===n)return d(r,e),void c.push(r);l[r]=n,jt(i,(function(s){if(!t[s])throw new Error("async.auto task `"+r+"` has a non-existent dependency `"+s+"` in "+i.join(", "));var o,a,h;a=function(){0==--n&&d(r,e)},(h=u[o=s])||(h=u[o]=[]),h.push(a)}))})),function(){for(var t=0;c.length;)t++,jt(p(c.pop()),(function(t){0==--l[t]&&c.push(t)}));if(t!==i)throw new Error("async.auto cannot execute tasks due to a recursive dependency")}(),f()};function Kt(t,e){for(var r=-1,i=null==t?0:t.length,n=Array(i);++r<i;)n[r]=e(t[r],r,t);return n}var qt="[object Symbol]";var Ut=1/0,Vt=N?N.prototype:void 0,Xt=Vt?Vt.toString:void 0;function Gt(t){if("string"==typeof t)return t;if(J(t))return Kt(t,Gt)+"";if(function(t){return"symbol"==typeof t||U(t)&&B(t)==qt}(t))return Xt?Xt.call(t):"";var e=t+"";return"0"==e&&1/t==-Ut?"-0":e}function Yt(t,e,r){var i=t.length;return r=void 0===r?i:r,!e&&r>=i?t:function(t,e,r){var i=-1,n=t.length;e<0&&(e=-e>n?0:n+e),(r=r>n?n:r)<0&&(r+=n),n=e>r?0:r-e>>>0,e>>>=0;for(var s=Array(n);++i<n;)s[i]=t[i+e];return s}(t,e,r)}var Qt=RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\ufe0e\\ufe0f]");var Jt="\\ud800-\\udfff",_t="["+Jt+"]",$t="[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]",te="\\ud83c[\\udffb-\\udfff]",ee="[^"+Jt+"]",re="(?:\\ud83c[\\udde6-\\uddff]){2}",ie="[\\ud800-\\udbff][\\udc00-\\udfff]",ne="(?:"+$t+"|"+te+")?",se="[\\ufe0e\\ufe0f]?",oe=se+ne+("(?:\\u200d(?:"+[ee,re,ie].join("|")+")"+se+ne+")*"),ae="(?:"+[ee+$t+"?",$t,re,ie,_t].join("|")+")",ue=RegExp(te+"(?="+te+")|"+ae+oe,"g");function he(t){return function(t){return Qt.test(t)}(t)?function(t){return t.match(ue)||[]}(t):function(t){return t.split("")}(t)}var ce=/^\s+|\s+$/g;function le(t,e,r){if((t=null==(i=t)?"":Gt(i))&&(r||void 0===e))return t.replace(ce,"");var i;if(!t||!(e=Gt(e)))return t;var n=he(t),s=he(e);return Yt(n,function(t,e){for(var r=-1,i=t.length;++r<i&&Ht(e,t[r],0)>-1;);return r}(n,s),function(t,e){for(var r=t.length;r--&&Ht(e,t[r],0)>-1;);return r}(n,s)+1).join("")}var de=/^(?:async\s+)?(function)?\s*[^\(]*\(\s*([^\)]*)\)/m,fe=/,/,pe=/(=.+)?(\s*)$/,ge=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm;function me(t,e){var r={};Ft(t,(function(t,e){var i,n=y(t),s=!n&&1===t.length||n&&0===t.length;if(J(t))i=t.slice(0,-1),t=t[t.length-1],r[e]=i.concat(i.length>0?o:t);else if(s)r[e]=t;else{if(i=function(t){return(t=(t=(t=t.toString().replace(ge,"")).match(de)[2].replace(" ",""))?t.split(fe):[]).map((function(t){return le(t.replace(pe,""))}))}(t),0===t.length&&!n&&0===i.length)throw new Error("autoInject task functions require explicit parameters.");n||i.pop(),r[e]=i.concat(o)}function o(e,r){var n=Kt(i,(function(t){return e[t]}));n.push(r),v(t).apply(null,n)}})),Wt(r,e)}function ye(){this.head=this.tail=null,this.length=0}function ve(t,e){t.length=1,t.head=t.tail=e}function be(t,e,r){if(null==e)e=1;else if(0===e)throw new Error("Concurrency must not be zero");var i=v(t),n=0,s=[],o=!1;function a(t,e,r){if(null!=r&&"function"!=typeof r)throw new Error("task callback must be a function");if(c.started=!0,J(t)||(t=[t]),0===t.length&&c.idle())return d((function(){c.drain()}));for(var i=0,n=t.length;i<n;i++){var s={data:t[i],callback:r||H};e?c._tasks.unshift(s):c._tasks.push(s)}o||(o=!0,d((function(){o=!1,c.process()})))}function u(t){return function(e){n-=1;for(var r=0,i=t.length;r<i;r++){var o=t[r],a=Ht(s,o,0);0===a?s.shift():a>0&&s.splice(a,1),o.callback.apply(o,arguments),null!=e&&c.error(e,o.data)}n<=c.concurrency-c.buffer&&c.unsaturated(),c.idle()&&c.drain(),c.process()}}var h=!1,c={_tasks:new ye,concurrency:e,payload:r,saturated:H,unsaturated:H,buffer:e/4,empty:H,drain:H,error:H,started:!1,paused:!1,push:function(t,e){a(t,!1,e)},kill:function(){c.drain=H,c._tasks.empty()},unshift:function(t,e){a(t,!0,e)},remove:function(t){c._tasks.remove(t)},process:function(){if(!h){for(h=!0;!c.paused&&n<c.concurrency&&c._tasks.length;){var t=[],e=[],r=c._tasks.length;c.payload&&(r=Math.min(r,c.payload));for(var o=0;o<r;o++){var a=c._tasks.shift();t.push(a),s.push(a),e.push(a.data)}n+=1,0===c._tasks.length&&c.empty(),n===c.concurrency&&c.saturated();var l=Et(u(t));i(e,l)}h=!1}},length:function(){return c._tasks.length},running:function(){return n},workersList:function(){return s},idle:function(){return c._tasks.length+n===0},pause:function(){c.paused=!0},resume:function(){!1!==c.paused&&(c.paused=!1,d(c.process))}};return c}function we(t,e){return be(t,1,e)}ye.prototype.removeLink=function(t){return t.prev?t.prev.next=t.next:this.head=t.next,t.next?t.next.prev=t.prev:this.tail=t.prev,t.prev=t.next=null,this.length-=1,t},ye.prototype.empty=function(){for(;this.head;)this.shift();return this},ye.prototype.insertAfter=function(t,e){e.prev=t,e.next=t.next,t.next?t.next.prev=e:this.tail=e,t.next=e,this.length+=1},ye.prototype.insertBefore=function(t,e){e.prev=t.prev,e.next=t,t.prev?t.prev.next=e:this.head=e,t.prev=e,this.length+=1},ye.prototype.unshift=function(t){this.head?this.insertBefore(this.head,t):ve(this,t)},ye.prototype.push=function(t){this.tail?this.insertAfter(this.tail,t):ve(this,t)},ye.prototype.shift=function(){return this.head&&this.removeLink(this.head)},ye.prototype.pop=function(){return this.tail&&this.removeLink(this.tail)},ye.prototype.toArray=function(){for(var t=Array(this.length),e=this.head,r=0;r<this.length;r++)t[r]=e.data,e=e.next;return t},ye.prototype.remove=function(t){for(var e=this.head;e;){var r=e.next;t(e)&&this.removeLink(e),e=r}return this};var Ee=Mt(Nt,1);function Se(t,e,r,i){i=W(i||H);var n=v(r);Ee(t,(function(t,r,i){n(e,t,(function(t,r){e=r,i(t)}))}),(function(t){i(t,e)}))}function Ne(){var t=Kt(arguments,v);return function(){var e=n(arguments),r=this,i=e[e.length-1];"function"==typeof i?e.pop():i=H,Se(t,e,(function(t,e,i){e.apply(r,t.concat((function(t){var e=n(arguments,1);i(t,e)})))}),(function(t,e){i.apply(r,[t].concat(e))}))}}var Me=function(){return Ne.apply(null,n(arguments).reverse())},xe=Array.prototype.concat,Ie=function(t,e,r,i){i=i||H;var s=v(r);Ot(t,e,(function(t,e){s(t,(function(t){return t?e(t):e(null,n(arguments,1))}))}),(function(t,e){for(var r=[],n=0;n<e.length;n++)e[n]&&(r=xe.apply(r,e[n]));return i(t,r)}))},Ae=Mt(Ie,1/0),Pe=Mt(Ie,1),Te=function(){var t=n(arguments),e=[null].concat(t);return function(){return arguments[arguments.length-1].apply(this,e)}};function Re(t){return t}function ke(t,e){return function(r,i,n,s){s=s||H;var o,a=!1;r(i,(function(r,i,s){n(r,(function(i,n){i?s(i):t(n)&&!o?(a=!0,o=e(!0,r),s(null,z)):s()}))}),(function(t){t?s(t):s(null,a?o:e(!1))}))}}function Be(t,e){return e}var Oe=Pt(ke(Re,Be)),Ce=Bt(ke(Re,Be)),Le=Mt(Ce,1);function je(t){return function(e){var r=n(arguments,1);r.push((function(e){var r=n(arguments,1);"object"==typeof console&&(e?console.error&&console.error(e):console[t]&&jt(r,(function(e){console[t](e)})))})),v(e).apply(null,r)}}var Ze=je("dir");function De(t,e,r){r=Et(r||H);var i=v(t),s=v(e);function o(t){if(t)return r(t);var e=n(arguments,1);e.push(a),s.apply(this,e)}function a(t,e){return t?r(t):e?void i(o):r(null)}a(null,!0)}function Fe(t,e,r){r=Et(r||H);var i=v(t),s=function(t){if(t)return r(t);var o=n(arguments,1);if(e.apply(this,o))return i(s);r.apply(null,[null].concat(o))};i(s)}function ze(t,e,r){Fe(t,(function(){return!e.apply(this,arguments)}),r)}function He(t,e,r){r=Et(r||H);var i=v(e),n=v(t);function s(t){if(t)return r(t);n(o)}function o(t,e){return t?r(t):e?void i(s):r(null)}n(o)}function We(t){return function(e,r,i){return t(e,i)}}function Ke(t,e,r){At(t,We(v(e)),r)}function qe(t,e,r,i){St(e)(t,We(v(r)),i)}var Ue=Mt(qe,1);function Ve(t){return y(t)?t:o((function(e,r){var i=!0;e.push((function(){var t=arguments;i?d((function(){r.apply(null,t)})):r.apply(null,t)})),t.apply(this,e),i=!1}))}function Xe(t){return!t}var Ge=Pt(ke(Xe,Xe)),Ye=Bt(ke(Xe,Xe)),Qe=Mt(Ye,1);function Je(t){return function(e){return null==e?void 0:e[t]}}function _e(t,e,r,i){var n=new Array(e.length);t(e,(function(t,e,i){r(t,(function(t,r){n[e]=!!r,i(t)}))}),(function(t){if(t)return i(t);for(var r=[],s=0;s<e.length;s++)n[s]&&r.push(e[s]);i(null,r)}))}function $e(t,e,r,i){var n=[];t(e,(function(t,e,i){r(t,(function(r,s){r?i(r):(s&&n.push({index:e,value:t}),i())}))}),(function(t){t?i(t):i(null,Kt(n.sort((function(t,e){return t.index-e.index})),Je("value")))}))}function tr(t,e,r,i){(F(e)?_e:$e)(t,e,v(r),i||H)}var er=Pt(tr),rr=Bt(tr),ir=Mt(rr,1);function nr(t,e){var r=Et(e||H),i=v(Ve(t));!function t(e){if(e)return r(e);i(t)}()}var sr=function(t,e,r,i){i=i||H;var n=v(r);Ot(t,e,(function(t,e){n(t,(function(r,i){return r?e(r):e(null,{key:i,val:t})}))}),(function(t,e){for(var r={},n=Object.prototype.hasOwnProperty,s=0;s<e.length;s++)if(e[s]){var o=e[s].key,a=e[s].val;n.call(r,o)?r[o].push(a):r[o]=[a]}return i(t,r)}))},or=Mt(sr,1/0),ar=Mt(sr,1),ur=je("log");function hr(t,e,r,i){i=W(i||H);var n={},s=v(r);Nt(t,e,(function(t,e,r){s(t,e,(function(t,i){if(t)return r(t);n[e]=i,r()}))}),(function(t){i(t,n)}))}var cr=Mt(hr,1/0),lr=Mt(hr,1);function dr(t,e){return e in t}function fr(t,e){var r=Object.create(null),i=Object.create(null);e=e||Re;var s=v(t),a=o((function(t,o){var a=e.apply(null,t);dr(r,a)?d((function(){o.apply(null,r[a])})):dr(i,a)?i[a].push(o):(i[a]=[o],s.apply(null,t.concat((function(){var t=n(arguments);r[a]=t;var e=i[a];delete i[a];for(var s=0,o=e.length;s<o;s++)e[s].apply(null,t)}))))}));return a.memo=r,a.unmemoized=t,a}var pr=l(h?i.nextTick:u?setImmediate:c);function gr(t,e,r){r=r||H;var i=F(e)?[]:{};t(e,(function(t,e,r){v(t)((function(t,s){arguments.length>2&&(s=n(arguments,1)),i[e]=s,r(t)}))}),(function(t){r(t,i)}))}function mr(t,e){gr(At,t,e)}function yr(t,e,r){gr(St(e),t,r)}var vr=function(t,e){var r=v(t);return be((function(t,e){r(t[0],e)}),e,1)},br=function(t,e){var r=vr(t,e);return r.push=function(t,e,i){if(null==i&&(i=H),"function"!=typeof i)throw new Error("task callback must be a function");if(r.started=!0,J(t)||(t=[t]),0===t.length)return d((function(){r.drain()}));e=e||0;for(var n=r._tasks.head;n&&e>=n.priority;)n=n.next;for(var s=0,o=t.length;s<o;s++){var a={data:t[s],priority:e,callback:i};n?r._tasks.insertBefore(n,a):r._tasks.push(a)}d(r.process)},delete r.unshift,r};function wr(t,e){if(e=W(e||H),!J(t))return e(new TypeError("First argument to race must be an array of functions"));if(!t.length)return e();for(var r=0,i=t.length;r<i;r++)v(t[r])(e)}function Er(t,e,r,i){Se(n(t).reverse(),e,r,i)}function Sr(t){var e=v(t);return o((function(t,r){return t.push((function(t,e){var i;t?r(null,{error:t}):(i=arguments.length<=2?e:n(arguments,1),r(null,{value:i}))})),e.apply(this,t)}))}function Nr(t){var e;return J(t)?e=Kt(t,Sr):(e={},Ft(t,(function(t,r){e[r]=Sr.call(this,t)}))),e}function Mr(t,e,r,i){tr(t,e,(function(t,e){r(t,(function(t,r){e(t,!r)}))}),i)}var xr=Pt(Mr),Ir=Bt(Mr),Ar=Mt(Ir,1);function Pr(t){return function(){return t}}function Tr(t,e,r){var i={times:5,intervalFunc:Pr(0)};if(arguments.length<3&&"function"==typeof t?(r=e||H,e=t):(function(t,e){if("object"==typeof e)t.times=+e.times||5,t.intervalFunc="function"==typeof e.interval?e.interval:Pr(+e.interval||0),t.errorFilter=e.errorFilter;else{if("number"!=typeof e&&"string"!=typeof e)throw new Error("Invalid arguments for async.retry");t.times=+e||5}}(i,t),r=r||H),"function"!=typeof e)throw new Error("Invalid arguments for async.retry");var n=v(e),s=1;!function t(){n((function(e){e&&s++<i.times&&("function"!=typeof i.errorFilter||i.errorFilter(e))?setTimeout(t,i.intervalFunc(s)):r.apply(null,arguments)}))}()}var Rr=function(t,e){e||(e=t,t=null);var r=v(e);return o((function(e,i){function n(t){r.apply(null,e.concat(t))}t?Tr(t,n,i):Tr(n,i)}))};function kr(t,e){gr(Ee,t,e)}var Br=Pt(ke(Boolean,Re)),Or=Bt(ke(Boolean,Re)),Cr=Mt(Or,1);function Lr(t,e,r){var i=v(e);function n(t,e){var r=t.criteria,i=e.criteria;return r<i?-1:r>i?1:0}Rt(t,(function(t,e){i(t,(function(r,i){if(r)return e(r);e(null,{value:t,criteria:i})}))}),(function(t,e){if(t)return r(t);r(null,Kt(e.sort(n),Je("value")))}))}function jr(t,e,r){var i=v(t);return o((function(n,s){var o,a=!1;n.push((function(){a||(s.apply(null,arguments),clearTimeout(o))})),o=setTimeout((function(){var e=t.name||"anonymous",i=new Error('Callback function "'+e+'" timed out.');i.code="ETIMEDOUT",r&&(i.info=r),a=!0,s(i)}),e),i.apply(null,n)}))}var Zr=Math.ceil,Dr=Math.max;function Fr(t,e,r,i){var n=v(r);Ot(function(t,e,r,i){for(var n=-1,s=Dr(Zr((e-t)/(r||1)),0),o=Array(s);s--;)o[i?s:++n]=t,t+=r;return o}(0,t,1),e,n,i)}var zr=Mt(Fr,1/0),Hr=Mt(Fr,1);function Wr(t,e,r,i){arguments.length<=3&&(i=r,r=e,e=J(t)?[]:{}),i=W(i||H);var n=v(r);At(t,(function(t,r,i){n(e,t,r,i)}),(function(t){i(t,e)}))}function Kr(t,e){var r,i=null;e=e||H,Ue(t,(function(t,e){v(t)((function(t,s){r=arguments.length>2?n(arguments,1):s,i=t,e(!t)}))}),(function(){e(i,r)}))}function qr(t){return function(){return(t.unmemoized||t).apply(null,arguments)}}function Ur(t,e,r){r=Et(r||H);var i=v(e);if(!t())return r(null);var s=function(e){if(e)return r(e);if(t())return i(s);var o=n(arguments,1);r.apply(null,[null].concat(o))};i(s)}function Vr(t,e,r){Ur((function(){return!t.apply(this,arguments)}),e,r)}var Xr=function(t,e){if(e=W(e||H),!J(t))return e(new Error("First argument to waterfall must be an array of functions"));if(!t.length)return e();var r=0;function i(e){var i=v(t[r++]);e.push(Et(s)),i.apply(null,e)}function s(s){if(s||r===t.length)return e.apply(null,arguments);i(n(arguments,1))}i([])},Gr={apply:s,applyEach:kt,applyEachSeries:Lt,asyncify:f,auto:Wt,autoInject:me,cargo:we,compose:Me,concat:Ae,concatLimit:Ie,concatSeries:Pe,constant:Te,detect:Oe,detectLimit:Ce,detectSeries:Le,dir:Ze,doDuring:De,doUntil:ze,doWhilst:Fe,during:He,each:Ke,eachLimit:qe,eachOf:At,eachOfLimit:Nt,eachOfSeries:Ee,eachSeries:Ue,ensureAsync:Ve,every:Ge,everyLimit:Ye,everySeries:Qe,filter:er,filterLimit:rr,filterSeries:ir,forever:nr,groupBy:or,groupByLimit:sr,groupBySeries:ar,log:ur,map:Rt,mapLimit:Ot,mapSeries:Ct,mapValues:cr,mapValuesLimit:hr,mapValuesSeries:lr,memoize:fr,nextTick:pr,parallel:mr,parallelLimit:yr,priorityQueue:br,queue:vr,race:wr,reduce:Se,reduceRight:Er,reflect:Sr,reflectAll:Nr,reject:xr,rejectLimit:Ir,rejectSeries:Ar,retry:Tr,retryable:Rr,seq:Ne,series:kr,setImmediate:d,some:Br,someLimit:Or,someSeries:Cr,sortBy:Lr,timeout:jr,times:zr,timesLimit:Fr,timesSeries:Hr,transform:Wr,tryEach:Kr,unmemoize:qr,until:Vr,waterfall:Xr,whilst:Ur,all:Ge,allLimit:Ye,allSeries:Qe,any:Br,anyLimit:Or,anySeries:Cr,find:Oe,findLimit:Ce,findSeries:Le,forEach:Ke,forEachSeries:Ue,forEachLimit:qe,forEachOf:At,forEachOfSeries:Ee,forEachOfLimit:Nt,inject:Se,foldl:Se,foldr:Er,select:er,selectLimit:rr,selectSeries:ir,wrapSync:f};e.default=Gr,e.apply=s,e.applyEach=kt,e.applyEachSeries=Lt,e.asyncify=f,e.auto=Wt,e.autoInject=me,e.cargo=we,e.compose=Me,e.concat=Ae,e.concatLimit=Ie,e.concatSeries=Pe,e.constant=Te,e.detect=Oe,e.detectLimit=Ce,e.detectSeries=Le,e.dir=Ze,e.doDuring=De,e.doUntil=ze,e.doWhilst=Fe,e.during=He,e.each=Ke,e.eachLimit=qe,e.eachOf=At,e.eachOfLimit=Nt,e.eachOfSeries=Ee,e.eachSeries=Ue,e.ensureAsync=Ve,e.every=Ge,e.everyLimit=Ye,e.everySeries=Qe,e.filter=er,e.filterLimit=rr,e.filterSeries=ir,e.forever=nr,e.groupBy=or,e.groupByLimit=sr,e.groupBySeries=ar,e.log=ur,e.map=Rt,e.mapLimit=Ot,e.mapSeries=Ct,e.mapValues=cr,e.mapValuesLimit=hr,e.mapValuesSeries=lr,e.memoize=fr,e.nextTick=pr,e.parallel=mr,e.parallelLimit=yr,e.priorityQueue=br,e.queue=vr,e.race=wr,e.reduce=Se,e.reduceRight=Er,e.reflect=Sr,e.reflectAll=Nr,e.reject=xr,e.rejectLimit=Ir,e.rejectSeries=Ar,e.retry=Tr,e.retryable=Rr,e.seq=Ne,e.series=kr,e.setImmediate=d,e.some=Br,e.someLimit=Or,e.someSeries=Cr,e.sortBy=Lr,e.timeout=jr,e.times=zr,e.timesLimit=Fr,e.timesSeries=Hr,e.transform=Wr,e.tryEach=Kr,e.unmemoize=qr,e.until=Vr,e.waterfall=Xr,e.whilst=Ur,e.all=Ge,e.allLimit=Ye,e.allSeries=Qe,e.any=Br,e.anyLimit=Or,e.anySeries=Cr,e.find=Oe,e.findLimit=Ce,e.findSeries=Le,e.forEach=Ke,e.forEachSeries=Ue,e.forEachLimit=qe,e.forEachOf=At,e.forEachOfSeries=Ee,e.forEachOfLimit=Nt,e.inject=Se,e.foldl=Se,e.foldr=Er,e.select=er,e.selectLimit=rr,e.selectSeries=ir,e.wrapSync=f,Object.defineProperty(e,"__esModule",{value:!0})}(e)},7905:(t,e,r)=>{var i,n=r(4155),s=r(8764).Buffer,o=(i=(i="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(t){var e,o,a=void 0!==(t=t||{})?t:{};a.ready=new Promise((function(t,r){e=t,o=r}));var u,h,c,l,d,f=Object.assign({},a),p=[],g="./this.program",m=(t,e)=>{throw e},y="object"==typeof window,v="function"==typeof importScripts,b="object"==typeof n&&"object"==typeof n.versions&&"string"==typeof n.versions.node,w="";b?(w=v?r(6470).dirname(w)+"/":"//",l=r(6551),d=r(6470),u=(t,e)=>{var r=Be(t);return r?e?r:r.toString():(t=d.normalize(t),l.readFileSync(t,e?void 0:"utf8"))},c=t=>{var e=u(t,!0);return e.buffer||(e=new Uint8Array(e)),e},h=(t,e,r)=>{var i=Be(t);i&&e(i),t=d.normalize(t),l.readFile(t,(function(t,i){t?r(t):e(i.buffer)}))},n.argv.length>1&&(g=n.argv[1].replace(/\\/g,"/")),p=n.argv.slice(2),n.on("unhandledRejection",(function(t){throw t})),m=(t,e)=>{if(J())throw n.exitCode=t,e;var r;(r=e)instanceof ct||S("exiting due to exception: "+r),n.exit(t)},a.inspect=function(){return"[Emscripten Module object]"}):(y||v)&&(v?w=self.location.href:"undefined"!=typeof document&&document.currentScript&&(w=document.currentScript.src),i&&(w=i),w=0!==w.indexOf("blob:")?w.substr(0,w.replace(/[?#].*/,"").lastIndexOf("/")+1):"",u=t=>{try{var e=new XMLHttpRequest;return e.open("GET",t,!1),e.send(null),e.responseText}catch(e){var r=Be(t);if(r)return dt(r);throw e}},v&&(c=t=>{try{var e=new XMLHttpRequest;return e.open("GET",t,!1),e.responseType="arraybuffer",e.send(null),new Uint8Array(e.response)}catch(e){var r=Be(t);if(r)return r;throw e}}),h=(t,e,r)=>{var i=new XMLHttpRequest;i.open("GET",t,!0),i.responseType="arraybuffer",i.onload=()=>{if(200==i.status||0==i.status&&i.response)e(i.response);else{var n=Be(t);n?e(n.buffer):r()}},i.onerror=r,i.send(null)});var E=a.print||console.log.bind(console),S=a.printErr||console.warn.bind(console);Object.assign(a,f),f=null,a.arguments&&(p=a.arguments),a.thisProgram&&(g=a.thisProgram),a.quit&&(m=a.quit);var N;a.wasmBinary&&(N=a.wasmBinary);var M,x=a.noExitRuntime||!0;"object"!=typeof WebAssembly&&it("no native wasm support detected");var I,A=!1;function P(t,e){t||it(e)}var T,R,k,B,O,C,L,j,Z,D,F,z="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function H(t,e,r){for(var i=e+r,n=e;t[n]&&!(n>=i);)++n;if(n-e>16&&t.buffer&&z)return z.decode(t.subarray(e,n));for(var s="";e<n;){var o=t[e++];if(128&o){var a=63&t[e++];if(192!=(224&o)){var u=63&t[e++];if((o=224==(240&o)?(15&o)<<12|a<<6|u:(7&o)<<18|a<<12|u<<6|63&t[e++])<65536)s+=String.fromCharCode(o);else{var h=o-65536;s+=String.fromCharCode(55296|h>>10,56320|1023&h)}}else s+=String.fromCharCode((31&o)<<6|a)}else s+=String.fromCharCode(o)}return s}function W(t,e){return t?H(k,t,e):""}function K(t,e,r,i){if(!(i>0))return 0;for(var n=r,s=r+i-1,o=0;o<t.length;++o){var a=t.charCodeAt(o);if(a>=55296&&a<=57343&&(a=65536+((1023&a)<<10)|1023&t.charCodeAt(++o)),a<=127){if(r>=s)break;e[r++]=a}else if(a<=2047){if(r+1>=s)break;e[r++]=192|a>>6,e[r++]=128|63&a}else if(a<=65535){if(r+2>=s)break;e[r++]=224|a>>12,e[r++]=128|a>>6&63,e[r++]=128|63&a}else{if(r+3>=s)break;e[r++]=240|a>>18,e[r++]=128|a>>12&63,e[r++]=128|a>>6&63,e[r++]=128|63&a}}return e[r]=0,r-n}function q(t,e,r){return K(t,k,e,r)}function U(t){for(var e=0,r=0;r<t.length;++r){var i=t.charCodeAt(r);i<=127?e++:i<=2047?e+=2:i>=55296&&i<=57343?(e+=4,++r):e+=3}return e}function V(t){T=t,a.HEAP8=R=new Int8Array(t),a.HEAP16=B=new Int16Array(t),a.HEAP32=C=new Int32Array(t),a.HEAPU8=k=new Uint8Array(t),a.HEAPU16=O=new Uint16Array(t),a.HEAPU32=L=new Uint32Array(t),a.HEAPF32=j=new Float32Array(t),a.HEAPF64=F=new Float64Array(t),a.HEAP64=Z=new BigInt64Array(t),a.HEAPU64=D=new BigUint64Array(t)}a.INITIAL_MEMORY;var X,G=[],Y=[],Q=[];function J(){return x}var _=0,$=null,tt=null;function et(t){_++,a.monitorRunDependencies&&a.monitorRunDependencies(_)}function rt(t){if(_--,a.monitorRunDependencies&&a.monitorRunDependencies(_),0==_&&(null!==$&&(clearInterval($),$=null),tt)){var e=tt;tt=null,e()}}function it(t){a.onAbort&&a.onAbort(t),S(t="Aborted("+t+")"),A=!0,I=1,t+=". Build with -sASSERTIONS for more info.";var e=new WebAssembly.RuntimeError(t);throw o(e),e}var nt,st,ot,at,ut="data:application/octet-stream;base64,";function ht(t){return t.startsWith(ut)}function ct(t){this.name="ExitStatus",this.message="Program terminated with exit("+t+")",this.status=t}function lt(t){for(;t.length>0;)t.shift()(a)}function dt(t){for(var e=[],r=0;r<t.length;r++){var i=t[r];i>255&&(Te&&P(!1,"Character code "+i+" ("+String.fromCharCode(i)+")  at offset "+r+" not in 0x00-0xFF."),i&=255),e.push(String.fromCharCode(i))}return e.join("")}ht(nt="data:application/octet-stream;base64,")||(st=nt,nt=a.locateFile?a.locateFile(st,w):w+st);var ft=[];function pt(t){t.add_ref()}var gt=0;function mt(t){this.excPtr=t,this.ptr=t-24,this.set_type=function(t){L[this.ptr+4>>2]=t},this.get_type=function(){return L[this.ptr+4>>2]},this.set_destructor=function(t){L[this.ptr+8>>2]=t},this.get_destructor=function(){return L[this.ptr+8>>2]},this.set_refcount=function(t){C[this.ptr>>2]=t},this.set_caught=function(t){t=t?1:0,R[this.ptr+12>>0]=t},this.get_caught=function(){return 0!=R[this.ptr+12>>0]},this.set_rethrown=function(t){t=t?1:0,R[this.ptr+13>>0]=t},this.get_rethrown=function(){return 0!=R[this.ptr+13>>0]},this.init=function(t,e){this.set_adjusted_ptr(0),this.set_type(t),this.set_destructor(e),this.set_refcount(0),this.set_caught(!1),this.set_rethrown(!1)},this.add_ref=function(){var t=C[this.ptr>>2];C[this.ptr>>2]=t+1},this.release_ref=function(){var t=C[this.ptr>>2];return C[this.ptr>>2]=t-1,1===t},this.set_adjusted_ptr=function(t){L[this.ptr+16>>2]=t},this.get_adjusted_ptr=function(){return L[this.ptr+16>>2]},this.get_exception_ptr=function(){if(Ve(this.get_type()))return L[this.excPtr>>2];var t=this.get_adjusted_ptr();return 0!==t?t:this.excPtr}}function yt(t){return Le(new mt(t).ptr)}function vt(t){if(t.release_ref()&&!t.get_rethrown()){var e=t.get_destructor();e&&(r=t.excPtr,Xe.apply(null,[e,r])),yt(t.excPtr)}var r}var bt=0;function wt(){var t=ft.pop();t||it("no exception to throw");var e=t.excPtr;throw t.get_rethrown()||(ft.push(t),t.set_rethrown(!0),t.set_caught(!1),gt++),bt=e,e}var Et={isAbs:t=>"/"===t.charAt(0),splitPath:t=>/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(t).slice(1),normalizeArray:(t,e)=>{for(var r=0,i=t.length-1;i>=0;i--){var n=t[i];"."===n?t.splice(i,1):".."===n?(t.splice(i,1),r++):r&&(t.splice(i,1),r--)}if(e)for(;r;r--)t.unshift("..");return t},normalize:t=>{var e=Et.isAbs(t),r="/"===t.substr(-1);return(t=Et.normalizeArray(t.split("/").filter((t=>!!t)),!e).join("/"))||e||(t="."),t&&r&&(t+="/"),(e?"/":"")+t},dirname:t=>{var e=Et.splitPath(t),r=e[0],i=e[1];return r||i?(i&&(i=i.substr(0,i.length-1)),r+i):"."},basename:t=>{if("/"===t)return"/";var e=(t=(t=Et.normalize(t)).replace(/\/$/,"")).lastIndexOf("/");return-1===e?t:t.substr(e+1)},join:function(){var t=Array.prototype.slice.call(arguments);return Et.normalize(t.join("/"))},join2:(t,e)=>Et.normalize(t+"/"+e)},St={resolve:function(){for(var t="",e=!1,r=arguments.length-1;r>=-1&&!e;r--){var i=r>=0?arguments[r]:At.cwd();if("string"!=typeof i)throw new TypeError("Arguments to path.resolve must be strings");if(!i)return"";t=i+"/"+t,e=Et.isAbs(i)}return(e?"/":"")+(t=Et.normalizeArray(t.split("/").filter((t=>!!t)),!e).join("/"))||"."},relative:(t,e)=>{function r(t){for(var e=0;e<t.length&&""===t[e];e++);for(var r=t.length-1;r>=0&&""===t[r];r--);return e>r?[]:t.slice(e,r-e+1)}t=St.resolve(t).substr(1),e=St.resolve(e).substr(1);for(var i=r(t.split("/")),n=r(e.split("/")),s=Math.min(i.length,n.length),o=s,a=0;a<s;a++)if(i[a]!==n[a]){o=a;break}var u=[];for(a=o;a<i.length;a++)u.push("..");return(u=u.concat(n.slice(o))).join("/")}};function Nt(t,e,r){var i=r>0?r:U(t)+1,n=new Array(i),s=K(t,n,0,n.length);return e&&(n.length=s),n}var Mt={ttys:[],init:function(){},shutdown:function(){},register:function(t,e){Mt.ttys[t]={input:[],output:[],ops:e},At.registerDevice(t,Mt.stream_ops)},stream_ops:{open:function(t){var e=Mt.ttys[t.node.rdev];if(!e)throw new At.ErrnoError(43);t.tty=e,t.seekable=!1},close:function(t){t.tty.ops.fsync(t.tty)},fsync:function(t){t.tty.ops.fsync(t.tty)},read:function(t,e,r,i,n){if(!t.tty||!t.tty.ops.get_char)throw new At.ErrnoError(60);for(var s=0,o=0;o<i;o++){var a;try{a=t.tty.ops.get_char(t.tty)}catch(t){throw new At.ErrnoError(29)}if(void 0===a&&0===s)throw new At.ErrnoError(6);if(null==a)break;s++,e[r+o]=a}return s&&(t.node.timestamp=Date.now()),s},write:function(t,e,r,i,n){if(!t.tty||!t.tty.ops.put_char)throw new At.ErrnoError(60);try{for(var s=0;s<i;s++)t.tty.ops.put_char(t.tty,e[r+s])}catch(t){throw new At.ErrnoError(29)}return i&&(t.node.timestamp=Date.now()),s}},default_tty_ops:{get_char:function(t){if(!t.input.length){var e=null;if(b){var r=s.alloc(256),i=0;try{i=l.readSync(n.stdin.fd,r,0,256,-1)}catch(t){if(!t.toString().includes("EOF"))throw t;i=0}e=i>0?r.slice(0,i).toString("utf-8"):null}else"undefined"!=typeof window&&"function"==typeof window.prompt?null!==(e=window.prompt("Input: "))&&(e+="\n"):"function"==typeof readline&&null!==(e=readline())&&(e+="\n");if(!e)return null;t.input=Nt(e,!0)}return t.input.shift()},put_char:function(t,e){null===e||10===e?(E(H(t.output,0)),t.output=[]):0!=e&&t.output.push(e)},fsync:function(t){t.output&&t.output.length>0&&(E(H(t.output,0)),t.output=[])}},default_tty1_ops:{put_char:function(t,e){null===e||10===e?(S(H(t.output,0)),t.output=[]):0!=e&&t.output.push(e)},fsync:function(t){t.output&&t.output.length>0&&(S(H(t.output,0)),t.output=[])}}};function xt(t){t=function(t,e){return 65536*Math.ceil(t/65536)}(t);var e=ze(65536,t);return e?function(t,e){return k.fill(0,t,t+e),t}(e,t):0}var It={ops_table:null,mount:function(t){return It.createNode(null,"/",16895,0)},createNode:function(t,e,r,i){if(At.isBlkdev(r)||At.isFIFO(r))throw new At.ErrnoError(63);It.ops_table||(It.ops_table={dir:{node:{getattr:It.node_ops.getattr,setattr:It.node_ops.setattr,lookup:It.node_ops.lookup,mknod:It.node_ops.mknod,rename:It.node_ops.rename,unlink:It.node_ops.unlink,rmdir:It.node_ops.rmdir,readdir:It.node_ops.readdir,symlink:It.node_ops.symlink},stream:{llseek:It.stream_ops.llseek}},file:{node:{getattr:It.node_ops.getattr,setattr:It.node_ops.setattr},stream:{llseek:It.stream_ops.llseek,read:It.stream_ops.read,write:It.stream_ops.write,allocate:It.stream_ops.allocate,mmap:It.stream_ops.mmap,msync:It.stream_ops.msync}},link:{node:{getattr:It.node_ops.getattr,setattr:It.node_ops.setattr,readlink:It.node_ops.readlink},stream:{}},chrdev:{node:{getattr:It.node_ops.getattr,setattr:It.node_ops.setattr},stream:At.chrdev_stream_ops}});var n=At.createNode(t,e,r,i);return At.isDir(n.mode)?(n.node_ops=It.ops_table.dir.node,n.stream_ops=It.ops_table.dir.stream,n.contents={}):At.isFile(n.mode)?(n.node_ops=It.ops_table.file.node,n.stream_ops=It.ops_table.file.stream,n.usedBytes=0,n.contents=null):At.isLink(n.mode)?(n.node_ops=It.ops_table.link.node,n.stream_ops=It.ops_table.link.stream):At.isChrdev(n.mode)&&(n.node_ops=It.ops_table.chrdev.node,n.stream_ops=It.ops_table.chrdev.stream),n.timestamp=Date.now(),t&&(t.contents[e]=n,t.timestamp=n.timestamp),n},getFileDataAsTypedArray:function(t){return t.contents?t.contents.subarray?t.contents.subarray(0,t.usedBytes):new Uint8Array(t.contents):new Uint8Array(0)},expandFileStorage:function(t,e){var r=t.contents?t.contents.length:0;if(!(r>=e)){e=Math.max(e,r*(r<1048576?2:1.125)>>>0),0!=r&&(e=Math.max(e,256));var i=t.contents;t.contents=new Uint8Array(e),t.usedBytes>0&&t.contents.set(i.subarray(0,t.usedBytes),0)}},resizeFileStorage:function(t,e){if(t.usedBytes!=e)if(0==e)t.contents=null,t.usedBytes=0;else{var r=t.contents;t.contents=new Uint8Array(e),r&&t.contents.set(r.subarray(0,Math.min(e,t.usedBytes))),t.usedBytes=e}},node_ops:{getattr:function(t){var e={};return e.dev=At.isChrdev(t.mode)?t.id:1,e.ino=t.id,e.mode=t.mode,e.nlink=1,e.uid=0,e.gid=0,e.rdev=t.rdev,At.isDir(t.mode)?e.size=4096:At.isFile(t.mode)?e.size=t.usedBytes:At.isLink(t.mode)?e.size=t.link.length:e.size=0,e.atime=new Date(t.timestamp),e.mtime=new Date(t.timestamp),e.ctime=new Date(t.timestamp),e.blksize=4096,e.blocks=Math.ceil(e.size/e.blksize),e},setattr:function(t,e){void 0!==e.mode&&(t.mode=e.mode),void 0!==e.timestamp&&(t.timestamp=e.timestamp),void 0!==e.size&&It.resizeFileStorage(t,e.size)},lookup:function(t,e){throw At.genericErrors[44]},mknod:function(t,e,r,i){return It.createNode(t,e,r,i)},rename:function(t,e,r){if(At.isDir(t.mode)){var i;try{i=At.lookupNode(e,r)}catch(t){}if(i)for(var n in i.contents)throw new At.ErrnoError(55)}delete t.parent.contents[t.name],t.parent.timestamp=Date.now(),t.name=r,e.contents[r]=t,e.timestamp=t.parent.timestamp,t.parent=e},unlink:function(t,e){delete t.contents[e],t.timestamp=Date.now()},rmdir:function(t,e){var r=At.lookupNode(t,e);for(var i in r.contents)throw new At.ErrnoError(55);delete t.contents[e],t.timestamp=Date.now()},readdir:function(t){var e=[".",".."];for(var r in t.contents)t.contents.hasOwnProperty(r)&&e.push(r);return e},symlink:function(t,e,r){var i=It.createNode(t,e,41471,0);return i.link=r,i},readlink:function(t){if(!At.isLink(t.mode))throw new At.ErrnoError(28);return t.link}},stream_ops:{read:function(t,e,r,i,n){var s=t.node.contents;if(n>=t.node.usedBytes)return 0;var o=Math.min(t.node.usedBytes-n,i);if(o>8&&s.subarray)e.set(s.subarray(n,n+o),r);else for(var a=0;a<o;a++)e[r+a]=s[n+a];return o},write:function(t,e,r,i,n,s){if(e.buffer===R.buffer&&(s=!1),!i)return 0;var o=t.node;if(o.timestamp=Date.now(),e.subarray&&(!o.contents||o.contents.subarray)){if(s)return o.contents=e.subarray(r,r+i),o.usedBytes=i,i;if(0===o.usedBytes&&0===n)return o.contents=e.slice(r,r+i),o.usedBytes=i,i;if(n+i<=o.usedBytes)return o.contents.set(e.subarray(r,r+i),n),i}if(It.expandFileStorage(o,n+i),o.contents.subarray&&e.subarray)o.contents.set(e.subarray(r,r+i),n);else for(var a=0;a<i;a++)o.contents[n+a]=e[r+a];return o.usedBytes=Math.max(o.usedBytes,n+i),i},llseek:function(t,e,r){var i=e;if(1===r?i+=t.position:2===r&&At.isFile(t.node.mode)&&(i+=t.node.usedBytes),i<0)throw new At.ErrnoError(28);return i},allocate:function(t,e,r){It.expandFileStorage(t.node,e+r),t.node.usedBytes=Math.max(t.node.usedBytes,e+r)},mmap:function(t,e,r,i,n){if(!At.isFile(t.node.mode))throw new At.ErrnoError(43);var s,o,a=t.node.contents;if(2&n||a.buffer!==T){if((r>0||r+e<a.length)&&(a=a.subarray?a.subarray(r,r+e):Array.prototype.slice.call(a,r,r+e)),o=!0,!(s=xt(e)))throw new At.ErrnoError(48);R.set(a,s)}else o=!1,s=a.byteOffset;return{ptr:s,allocated:o}},msync:function(t,e,r,i,n){return It.stream_ops.write(t,e,0,i,r,!1),0}}},At={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:(t,e={})=>{if(!(t=St.resolve(t)))return{path:"",node:null};if((e=Object.assign({follow_mount:!0,recurse_count:0},e)).recurse_count>8)throw new At.ErrnoError(32);for(var r=t.split("/").filter((t=>!!t)),i=At.root,n="/",s=0;s<r.length;s++){var o=s===r.length-1;if(o&&e.parent)break;if(i=At.lookupNode(i,r[s]),n=Et.join2(n,r[s]),At.isMountpoint(i)&&(!o||o&&e.follow_mount)&&(i=i.mounted.root),!o||e.follow)for(var a=0;At.isLink(i.mode);){var u=At.readlink(n);if(n=St.resolve(Et.dirname(n),u),i=At.lookupPath(n,{recurse_count:e.recurse_count+1}).node,a++>40)throw new At.ErrnoError(32)}}return{path:n,node:i}},getPath:t=>{for(var e;;){if(At.isRoot(t)){var r=t.mount.mountpoint;return e?"/"!==r[r.length-1]?r+"/"+e:r+e:r}e=e?t.name+"/"+e:t.name,t=t.parent}},hashName:(t,e)=>{for(var r=0,i=0;i<e.length;i++)r=(r<<5)-r+e.charCodeAt(i)|0;return(t+r>>>0)%At.nameTable.length},hashAddNode:t=>{var e=At.hashName(t.parent.id,t.name);t.name_next=At.nameTable[e],At.nameTable[e]=t},hashRemoveNode:t=>{var e=At.hashName(t.parent.id,t.name);if(At.nameTable[e]===t)At.nameTable[e]=t.name_next;else for(var r=At.nameTable[e];r;){if(r.name_next===t){r.name_next=t.name_next;break}r=r.name_next}},lookupNode:(t,e)=>{var r=At.mayLookup(t);if(r)throw new At.ErrnoError(r,t);for(var i=At.hashName(t.id,e),n=At.nameTable[i];n;n=n.name_next){var s=n.name;if(n.parent.id===t.id&&s===e)return n}return At.lookup(t,e)},createNode:(t,e,r,i)=>{var n=new At.FSNode(t,e,r,i);return At.hashAddNode(n),n},destroyNode:t=>{At.hashRemoveNode(t)},isRoot:t=>t===t.parent,isMountpoint:t=>!!t.mounted,isFile:t=>32768==(61440&t),isDir:t=>16384==(61440&t),isLink:t=>40960==(61440&t),isChrdev:t=>8192==(61440&t),isBlkdev:t=>24576==(61440&t),isFIFO:t=>4096==(61440&t),isSocket:t=>49152==(49152&t),flagModes:{r:0,"r+":2,w:577,"w+":578,a:1089,"a+":1090},modeStringToFlags:t=>{var e=At.flagModes[t];if(void 0===e)throw new Error("Unknown file open mode: "+t);return e},flagsToPermissionString:t=>{var e=["r","w","rw"][3&t];return 512&t&&(e+="w"),e},nodePermissions:(t,e)=>At.ignorePermissions||(!e.includes("r")||292&t.mode)&&(!e.includes("w")||146&t.mode)&&(!e.includes("x")||73&t.mode)?0:2,mayLookup:t=>At.nodePermissions(t,"x")||(t.node_ops.lookup?0:2),mayCreate:(t,e)=>{try{return At.lookupNode(t,e),20}catch(t){}return At.nodePermissions(t,"wx")},mayDelete:(t,e,r)=>{var i;try{i=At.lookupNode(t,e)}catch(t){return t.errno}var n=At.nodePermissions(t,"wx");if(n)return n;if(r){if(!At.isDir(i.mode))return 54;if(At.isRoot(i)||At.getPath(i)===At.cwd())return 10}else if(At.isDir(i.mode))return 31;return 0},mayOpen:(t,e)=>t?At.isLink(t.mode)?32:At.isDir(t.mode)&&("r"!==At.flagsToPermissionString(e)||512&e)?31:At.nodePermissions(t,At.flagsToPermissionString(e)):44,MAX_OPEN_FDS:4096,nextfd:(t=0,e=At.MAX_OPEN_FDS)=>{for(var r=t;r<=e;r++)if(!At.streams[r])return r;throw new At.ErrnoError(33)},getStream:t=>At.streams[t],createStream:(t,e,r)=>{At.FSStream||(At.FSStream=function(){this.shared={}},At.FSStream.prototype={},Object.defineProperties(At.FSStream.prototype,{object:{get:function(){return this.node},set:function(t){this.node=t}},isRead:{get:function(){return 1!=(2097155&this.flags)}},isWrite:{get:function(){return 0!=(2097155&this.flags)}},isAppend:{get:function(){return 1024&this.flags}},flags:{get:function(){return this.shared.flags},set:function(t){this.shared.flags=t}},position:{get:function(){return this.shared.position},set:function(t){this.shared.position=t}}})),t=Object.assign(new At.FSStream,t);var i=At.nextfd(e,r);return t.fd=i,At.streams[i]=t,t},closeStream:t=>{At.streams[t]=null},chrdev_stream_ops:{open:t=>{var e=At.getDevice(t.node.rdev);t.stream_ops=e.stream_ops,t.stream_ops.open&&t.stream_ops.open(t)},llseek:()=>{throw new At.ErrnoError(70)}},major:t=>t>>8,minor:t=>255&t,makedev:(t,e)=>t<<8|e,registerDevice:(t,e)=>{At.devices[t]={stream_ops:e}},getDevice:t=>At.devices[t],getMounts:t=>{for(var e=[],r=[t];r.length;){var i=r.pop();e.push(i),r.push.apply(r,i.mounts)}return e},syncfs:(t,e)=>{"function"==typeof t&&(e=t,t=!1),At.syncFSRequests++,At.syncFSRequests>1&&S("warning: "+At.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work");var r=At.getMounts(At.root.mount),i=0;function n(t){return At.syncFSRequests--,e(t)}function s(t){if(t)return s.errored?void 0:(s.errored=!0,n(t));++i>=r.length&&n(null)}r.forEach((e=>{if(!e.type.syncfs)return s(null);e.type.syncfs(e,t,s)}))},mount:(t,e,r)=>{var i,n="/"===r,s=!r;if(n&&At.root)throw new At.ErrnoError(10);if(!n&&!s){var o=At.lookupPath(r,{follow_mount:!1});if(r=o.path,i=o.node,At.isMountpoint(i))throw new At.ErrnoError(10);if(!At.isDir(i.mode))throw new At.ErrnoError(54)}var a={type:t,opts:e,mountpoint:r,mounts:[]},u=t.mount(a);return u.mount=a,a.root=u,n?At.root=u:i&&(i.mounted=a,i.mount&&i.mount.mounts.push(a)),u},unmount:t=>{var e=At.lookupPath(t,{follow_mount:!1});if(!At.isMountpoint(e.node))throw new At.ErrnoError(28);var r=e.node,i=r.mounted,n=At.getMounts(i);Object.keys(At.nameTable).forEach((t=>{for(var e=At.nameTable[t];e;){var r=e.name_next;n.includes(e.mount)&&At.destroyNode(e),e=r}})),r.mounted=null;var s=r.mount.mounts.indexOf(i);r.mount.mounts.splice(s,1)},lookup:(t,e)=>t.node_ops.lookup(t,e),mknod:(t,e,r)=>{var i=At.lookupPath(t,{parent:!0}).node,n=Et.basename(t);if(!n||"."===n||".."===n)throw new At.ErrnoError(28);var s=At.mayCreate(i,n);if(s)throw new At.ErrnoError(s);if(!i.node_ops.mknod)throw new At.ErrnoError(63);return i.node_ops.mknod(i,n,e,r)},create:(t,e)=>(e=void 0!==e?e:438,e&=4095,e|=32768,At.mknod(t,e,0)),mkdir:(t,e)=>(e=void 0!==e?e:511,e&=1023,e|=16384,At.mknod(t,e,0)),mkdirTree:(t,e)=>{for(var r=t.split("/"),i="",n=0;n<r.length;++n)if(r[n]){i+="/"+r[n];try{At.mkdir(i,e)}catch(t){if(20!=t.errno)throw t}}},mkdev:(t,e,r)=>(void 0===r&&(r=e,e=438),e|=8192,At.mknod(t,e,r)),symlink:(t,e)=>{if(!St.resolve(t))throw new At.ErrnoError(44);var r=At.lookupPath(e,{parent:!0}).node;if(!r)throw new At.ErrnoError(44);var i=Et.basename(e),n=At.mayCreate(r,i);if(n)throw new At.ErrnoError(n);if(!r.node_ops.symlink)throw new At.ErrnoError(63);return r.node_ops.symlink(r,i,t)},rename:(t,e)=>{var r,i,n=Et.dirname(t),s=Et.dirname(e),o=Et.basename(t),a=Et.basename(e);if(r=At.lookupPath(t,{parent:!0}).node,i=At.lookupPath(e,{parent:!0}).node,!r||!i)throw new At.ErrnoError(44);if(r.mount!==i.mount)throw new At.ErrnoError(75);var u,h=At.lookupNode(r,o),c=St.relative(t,s);if("."!==c.charAt(0))throw new At.ErrnoError(28);if("."!==(c=St.relative(e,n)).charAt(0))throw new At.ErrnoError(55);try{u=At.lookupNode(i,a)}catch(t){}if(h!==u){var l=At.isDir(h.mode),d=At.mayDelete(r,o,l);if(d)throw new At.ErrnoError(d);if(d=u?At.mayDelete(i,a,l):At.mayCreate(i,a))throw new At.ErrnoError(d);if(!r.node_ops.rename)throw new At.ErrnoError(63);if(At.isMountpoint(h)||u&&At.isMountpoint(u))throw new At.ErrnoError(10);if(i!==r&&(d=At.nodePermissions(r,"w")))throw new At.ErrnoError(d);At.hashRemoveNode(h);try{r.node_ops.rename(h,i,a)}catch(t){throw t}finally{At.hashAddNode(h)}}},rmdir:t=>{var e=At.lookupPath(t,{parent:!0}).node,r=Et.basename(t),i=At.lookupNode(e,r),n=At.mayDelete(e,r,!0);if(n)throw new At.ErrnoError(n);if(!e.node_ops.rmdir)throw new At.ErrnoError(63);if(At.isMountpoint(i))throw new At.ErrnoError(10);e.node_ops.rmdir(e,r),At.destroyNode(i)},readdir:t=>{var e=At.lookupPath(t,{follow:!0}).node;if(!e.node_ops.readdir)throw new At.ErrnoError(54);return e.node_ops.readdir(e)},unlink:t=>{var e=At.lookupPath(t,{parent:!0}).node;if(!e)throw new At.ErrnoError(44);var r=Et.basename(t),i=At.lookupNode(e,r),n=At.mayDelete(e,r,!1);if(n)throw new At.ErrnoError(n);if(!e.node_ops.unlink)throw new At.ErrnoError(63);if(At.isMountpoint(i))throw new At.ErrnoError(10);e.node_ops.unlink(e,r),At.destroyNode(i)},readlink:t=>{var e=At.lookupPath(t).node;if(!e)throw new At.ErrnoError(44);if(!e.node_ops.readlink)throw new At.ErrnoError(28);return St.resolve(At.getPath(e.parent),e.node_ops.readlink(e))},stat:(t,e)=>{var r=At.lookupPath(t,{follow:!e}).node;if(!r)throw new At.ErrnoError(44);if(!r.node_ops.getattr)throw new At.ErrnoError(63);return r.node_ops.getattr(r)},lstat:t=>At.stat(t,!0),chmod:(t,e,r)=>{var i;if(!(i="string"==typeof t?At.lookupPath(t,{follow:!r}).node:t).node_ops.setattr)throw new At.ErrnoError(63);i.node_ops.setattr(i,{mode:4095&e|-4096&i.mode,timestamp:Date.now()})},lchmod:(t,e)=>{At.chmod(t,e,!0)},fchmod:(t,e)=>{var r=At.getStream(t);if(!r)throw new At.ErrnoError(8);At.chmod(r.node,e)},chown:(t,e,r,i)=>{var n;if(!(n="string"==typeof t?At.lookupPath(t,{follow:!i}).node:t).node_ops.setattr)throw new At.ErrnoError(63);n.node_ops.setattr(n,{timestamp:Date.now()})},lchown:(t,e,r)=>{At.chown(t,e,r,!0)},fchown:(t,e,r)=>{var i=At.getStream(t);if(!i)throw new At.ErrnoError(8);At.chown(i.node,e,r)},truncate:(t,e)=>{if(e<0)throw new At.ErrnoError(28);var r;if(!(r="string"==typeof t?At.lookupPath(t,{follow:!0}).node:t).node_ops.setattr)throw new At.ErrnoError(63);if(At.isDir(r.mode))throw new At.ErrnoError(31);if(!At.isFile(r.mode))throw new At.ErrnoError(28);var i=At.nodePermissions(r,"w");if(i)throw new At.ErrnoError(i);r.node_ops.setattr(r,{size:e,timestamp:Date.now()})},ftruncate:(t,e)=>{var r=At.getStream(t);if(!r)throw new At.ErrnoError(8);if(0==(2097155&r.flags))throw new At.ErrnoError(28);At.truncate(r.node,e)},utime:(t,e,r)=>{var i=At.lookupPath(t,{follow:!0}).node;i.node_ops.setattr(i,{timestamp:Math.max(e,r)})},open:(t,e,r)=>{if(""===t)throw new At.ErrnoError(44);var i;if(r=void 0===r?438:r,r=64&(e="string"==typeof e?At.modeStringToFlags(e):e)?4095&r|32768:0,"object"==typeof t)i=t;else{t=Et.normalize(t);try{i=At.lookupPath(t,{follow:!(131072&e)}).node}catch(t){}}var n=!1;if(64&e)if(i){if(128&e)throw new At.ErrnoError(20)}else i=At.mknod(t,r,0),n=!0;if(!i)throw new At.ErrnoError(44);if(At.isChrdev(i.mode)&&(e&=-513),65536&e&&!At.isDir(i.mode))throw new At.ErrnoError(54);if(!n){var s=At.mayOpen(i,e);if(s)throw new At.ErrnoError(s)}512&e&&!n&&At.truncate(i,0),e&=-131713;var o=At.createStream({node:i,path:At.getPath(i),flags:e,seekable:!0,position:0,stream_ops:i.stream_ops,ungotten:[],error:!1});return o.stream_ops.open&&o.stream_ops.open(o),!a.logReadFiles||1&e||(At.readFiles||(At.readFiles={}),t in At.readFiles||(At.readFiles[t]=1)),o},close:t=>{if(At.isClosed(t))throw new At.ErrnoError(8);t.getdents&&(t.getdents=null);try{t.stream_ops.close&&t.stream_ops.close(t)}catch(t){throw t}finally{At.closeStream(t.fd)}t.fd=null},isClosed:t=>null===t.fd,llseek:(t,e,r)=>{if(At.isClosed(t))throw new At.ErrnoError(8);if(!t.seekable||!t.stream_ops.llseek)throw new At.ErrnoError(70);if(0!=r&&1!=r&&2!=r)throw new At.ErrnoError(28);return t.position=t.stream_ops.llseek(t,e,r),t.ungotten=[],t.position},read:(t,e,r,i,n)=>{if(i<0||n<0)throw new At.ErrnoError(28);if(At.isClosed(t))throw new At.ErrnoError(8);if(1==(2097155&t.flags))throw new At.ErrnoError(8);if(At.isDir(t.node.mode))throw new At.ErrnoError(31);if(!t.stream_ops.read)throw new At.ErrnoError(28);var s=void 0!==n;if(s){if(!t.seekable)throw new At.ErrnoError(70)}else n=t.position;var o=t.stream_ops.read(t,e,r,i,n);return s||(t.position+=o),o},write:(t,e,r,i,n,s)=>{if(i<0||n<0)throw new At.ErrnoError(28);if(At.isClosed(t))throw new At.ErrnoError(8);if(0==(2097155&t.flags))throw new At.ErrnoError(8);if(At.isDir(t.node.mode))throw new At.ErrnoError(31);if(!t.stream_ops.write)throw new At.ErrnoError(28);t.seekable&&1024&t.flags&&At.llseek(t,0,2);var o=void 0!==n;if(o){if(!t.seekable)throw new At.ErrnoError(70)}else n=t.position;var a=t.stream_ops.write(t,e,r,i,n,s);return o||(t.position+=a),a},allocate:(t,e,r)=>{if(At.isClosed(t))throw new At.ErrnoError(8);if(e<0||r<=0)throw new At.ErrnoError(28);if(0==(2097155&t.flags))throw new At.ErrnoError(8);if(!At.isFile(t.node.mode)&&!At.isDir(t.node.mode))throw new At.ErrnoError(43);if(!t.stream_ops.allocate)throw new At.ErrnoError(138);t.stream_ops.allocate(t,e,r)},mmap:(t,e,r,i,n)=>{if(0!=(2&i)&&0==(2&n)&&2!=(2097155&t.flags))throw new At.ErrnoError(2);if(1==(2097155&t.flags))throw new At.ErrnoError(2);if(!t.stream_ops.mmap)throw new At.ErrnoError(43);return t.stream_ops.mmap(t,e,r,i,n)},msync:(t,e,r,i,n)=>t.stream_ops.msync?t.stream_ops.msync(t,e,r,i,n):0,munmap:t=>0,ioctl:(t,e,r)=>{if(!t.stream_ops.ioctl)throw new At.ErrnoError(59);return t.stream_ops.ioctl(t,e,r)},readFile:(t,e={})=>{if(e.flags=e.flags||0,e.encoding=e.encoding||"binary","utf8"!==e.encoding&&"binary"!==e.encoding)throw new Error('Invalid encoding type "'+e.encoding+'"');var r,i=At.open(t,e.flags),n=At.stat(t).size,s=new Uint8Array(n);return At.read(i,s,0,n,0),"utf8"===e.encoding?r=H(s,0):"binary"===e.encoding&&(r=s),At.close(i),r},writeFile:(t,e,r={})=>{r.flags=r.flags||577;var i=At.open(t,r.flags,r.mode);if("string"==typeof e){var n=new Uint8Array(U(e)+1),s=K(e,n,0,n.length);At.write(i,n,0,s,void 0,r.canOwn)}else{if(!ArrayBuffer.isView(e))throw new Error("Unsupported data type");At.write(i,e,0,e.byteLength,void 0,r.canOwn)}At.close(i)},cwd:()=>At.currentPath,chdir:t=>{var e=At.lookupPath(t,{follow:!0});if(null===e.node)throw new At.ErrnoError(44);if(!At.isDir(e.node.mode))throw new At.ErrnoError(54);var r=At.nodePermissions(e.node,"x");if(r)throw new At.ErrnoError(r);At.currentPath=e.path},createDefaultDirectories:()=>{At.mkdir("/tmp"),At.mkdir("/home"),At.mkdir("/home/web_user")},createDefaultDevices:()=>{At.mkdir("/dev"),At.registerDevice(At.makedev(1,3),{read:()=>0,write:(t,e,r,i,n)=>i}),At.mkdev("/dev/null",At.makedev(1,3)),Mt.register(At.makedev(5,0),Mt.default_tty_ops),Mt.register(At.makedev(6,0),Mt.default_tty1_ops),At.mkdev("/dev/tty",At.makedev(5,0)),At.mkdev("/dev/tty1",At.makedev(6,0));var t=function(){if("object"==typeof crypto&&"function"==typeof crypto.getRandomValues){var t=new Uint8Array(1);return()=>(crypto.getRandomValues(t),t[0])}if(b)try{var e=r(5835);return()=>e.randomBytes(1)[0]}catch(t){}return()=>it("randomDevice")}();At.createDevice("/dev","random",t),At.createDevice("/dev","urandom",t),At.mkdir("/dev/shm"),At.mkdir("/dev/shm/tmp")},createSpecialDirectories:()=>{At.mkdir("/proc");var t=At.mkdir("/proc/self");At.mkdir("/proc/self/fd"),At.mount({mount:()=>{var e=At.createNode(t,"fd",16895,73);return e.node_ops={lookup:(t,e)=>{var r=+e,i=At.getStream(r);if(!i)throw new At.ErrnoError(8);var n={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:()=>i.path}};return n.parent=n,n}},e}},{},"/proc/self/fd")},createStandardStreams:()=>{a.stdin?At.createDevice("/dev","stdin",a.stdin):At.symlink("/dev/tty","/dev/stdin"),a.stdout?At.createDevice("/dev","stdout",null,a.stdout):At.symlink("/dev/tty","/dev/stdout"),a.stderr?At.createDevice("/dev","stderr",null,a.stderr):At.symlink("/dev/tty1","/dev/stderr"),At.open("/dev/stdin",0),At.open("/dev/stdout",1),At.open("/dev/stderr",1)},ensureErrnoError:()=>{At.ErrnoError||(At.ErrnoError=function(t,e){this.node=e,this.setErrno=function(t){this.errno=t},this.setErrno(t),this.message="FS error"},At.ErrnoError.prototype=new Error,At.ErrnoError.prototype.constructor=At.ErrnoError,[44].forEach((t=>{At.genericErrors[t]=new At.ErrnoError(t),At.genericErrors[t].stack="<generic error, no stack>"})))},staticInit:()=>{At.ensureErrnoError(),At.nameTable=new Array(4096),At.mount(It,{},"/"),At.createDefaultDirectories(),At.createDefaultDevices(),At.createSpecialDirectories(),At.filesystems={MEMFS:It}},init:(t,e,r)=>{At.init.initialized=!0,At.ensureErrnoError(),a.stdin=t||a.stdin,a.stdout=e||a.stdout,a.stderr=r||a.stderr,At.createStandardStreams()},quit:()=>{At.init.initialized=!1;for(var t=0;t<At.streams.length;t++){var e=At.streams[t];e&&At.close(e)}},getMode:(t,e)=>{var r=0;return t&&(r|=365),e&&(r|=146),r},findObject:(t,e)=>{var r=At.analyzePath(t,e);return r.exists?r.object:null},analyzePath:(t,e)=>{try{t=(i=At.lookupPath(t,{follow:!e})).path}catch(t){}var r={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var i=At.lookupPath(t,{parent:!0});r.parentExists=!0,r.parentPath=i.path,r.parentObject=i.node,r.name=Et.basename(t),i=At.lookupPath(t,{follow:!e}),r.exists=!0,r.path=i.path,r.object=i.node,r.name=i.node.name,r.isRoot="/"===i.path}catch(t){r.error=t.errno}return r},createPath:(t,e,r,i)=>{t="string"==typeof t?t:At.getPath(t);for(var n=e.split("/").reverse();n.length;){var s=n.pop();if(s){var o=Et.join2(t,s);try{At.mkdir(o)}catch(t){}t=o}}return o},createFile:(t,e,r,i,n)=>{var s=Et.join2("string"==typeof t?t:At.getPath(t),e),o=At.getMode(i,n);return At.create(s,o)},createDataFile:(t,e,r,i,n,s)=>{var o=e;t&&(t="string"==typeof t?t:At.getPath(t),o=e?Et.join2(t,e):t);var a=At.getMode(i,n),u=At.create(o,a);if(r){if("string"==typeof r){for(var h=new Array(r.length),c=0,l=r.length;c<l;++c)h[c]=r.charCodeAt(c);r=h}At.chmod(u,146|a);var d=At.open(u,577);At.write(d,r,0,r.length,0,s),At.close(d),At.chmod(u,a)}return u},createDevice:(t,e,r,i)=>{var n=Et.join2("string"==typeof t?t:At.getPath(t),e),s=At.getMode(!!r,!!i);At.createDevice.major||(At.createDevice.major=64);var o=At.makedev(At.createDevice.major++,0);return At.registerDevice(o,{open:t=>{t.seekable=!1},close:t=>{i&&i.buffer&&i.buffer.length&&i(10)},read:(t,e,i,n,s)=>{for(var o=0,a=0;a<n;a++){var u;try{u=r()}catch(t){throw new At.ErrnoError(29)}if(void 0===u&&0===o)throw new At.ErrnoError(6);if(null==u)break;o++,e[i+a]=u}return o&&(t.node.timestamp=Date.now()),o},write:(t,e,r,n,s)=>{for(var o=0;o<n;o++)try{i(e[r+o])}catch(t){throw new At.ErrnoError(29)}return n&&(t.node.timestamp=Date.now()),o}}),At.mkdev(n,s,o)},forceLoadFile:t=>{if(t.isDevice||t.isFolder||t.link||t.contents)return!0;if("undefined"!=typeof XMLHttpRequest)throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");if(!u)throw new Error("Cannot load without read() or XMLHttpRequest.");try{t.contents=Nt(u(t.url),!0),t.usedBytes=t.contents.length}catch(t){throw new At.ErrnoError(29)}},createLazyFile:(t,e,r,i,n)=>{function s(){this.lengthKnown=!1,this.chunks=[]}if(s.prototype.get=function(t){if(!(t>this.length-1||t<0)){var e=t%this.chunkSize,r=t/this.chunkSize|0;return this.getter(r)[e]}},s.prototype.setDataGetter=function(t){this.getter=t},s.prototype.cacheLength=function(){var t=new XMLHttpRequest;if(t.open("HEAD",r,!1),t.send(null),!(t.status>=200&&t.status<300||304===t.status))throw new Error("Couldn't load "+r+". Status: "+t.status);var e,i=Number(t.getResponseHeader("Content-length")),n=(e=t.getResponseHeader("Accept-Ranges"))&&"bytes"===e,s=(e=t.getResponseHeader("Content-Encoding"))&&"gzip"===e,o=1048576;n||(o=i);var a=this;a.setDataGetter((t=>{var e=t*o,n=(t+1)*o-1;if(n=Math.min(n,i-1),void 0===a.chunks[t]&&(a.chunks[t]=((t,e)=>{if(t>e)throw new Error("invalid range ("+t+", "+e+") or no bytes requested!");if(e>i-1)throw new Error("only "+i+" bytes available! programmer error!");var n=new XMLHttpRequest;if(n.open("GET",r,!1),i!==o&&n.setRequestHeader("Range","bytes="+t+"-"+e),n.responseType="arraybuffer",n.overrideMimeType&&n.overrideMimeType("text/plain; charset=x-user-defined"),n.send(null),!(n.status>=200&&n.status<300||304===n.status))throw new Error("Couldn't load "+r+". Status: "+n.status);return void 0!==n.response?new Uint8Array(n.response||[]):Nt(n.responseText||"",!0)})(e,n)),void 0===a.chunks[t])throw new Error("doXHR failed!");return a.chunks[t]})),!s&&i||(o=i=1,i=this.getter(0).length,o=i,E("LazyFiles on gzip forces download of the whole file when length is accessed")),this._length=i,this._chunkSize=o,this.lengthKnown=!0},"undefined"!=typeof XMLHttpRequest){if(!v)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var o=new s;Object.defineProperties(o,{length:{get:function(){return this.lengthKnown||this.cacheLength(),this._length}},chunkSize:{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}}});var a={isDevice:!1,contents:o}}else a={isDevice:!1,url:r};var u=At.createFile(t,e,a,i,n);a.contents?u.contents=a.contents:a.url&&(u.contents=null,u.url=a.url),Object.defineProperties(u,{usedBytes:{get:function(){return this.contents.length}}});var h={};function c(t,e,r,i,n){var s=t.node.contents;if(n>=s.length)return 0;var o=Math.min(s.length-n,i);if(s.slice)for(var a=0;a<o;a++)e[r+a]=s[n+a];else for(a=0;a<o;a++)e[r+a]=s.get(n+a);return o}return Object.keys(u.stream_ops).forEach((t=>{var e=u.stream_ops[t];h[t]=function(){return At.forceLoadFile(u),e.apply(null,arguments)}})),h.read=(t,e,r,i,n)=>(At.forceLoadFile(u),c(t,e,r,i,n)),h.mmap=(t,e,r,i,n)=>{At.forceLoadFile(u);var s=xt(e);if(!s)throw new At.ErrnoError(48);return c(t,R,s,e,r),{ptr:s,allocated:!0}},u.stream_ops=h,u},createPreloadedFile:(t,e,r,i,n,s,o,a,u,c)=>{var l=e?St.resolve(Et.join2(t,e)):t;function d(r){function h(r){c&&c(),a||At.createDataFile(t,e,r,i,n,u),s&&s(),rt()}Browser.handledByPreloadPlugin(r,l,h,(()=>{o&&o(),rt()}))||h(r)}et(),"string"==typeof r?function(t,e,r,i){var n="al "+t;h(t,(e=>{P(e,'Loading data file "'+t+'" failed (no arrayBuffer).'),d(new Uint8Array(e)),n&&rt()}),(e=>{if(!r)throw'Loading data file "'+t+'" failed.';r()})),n&&et()}(r,0,o):d(r)},indexedDB:()=>window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB,DB_NAME:()=>"EM_FS_"+window.location.pathname,DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:(t,e,r)=>{e=e||(()=>{}),r=r||(()=>{});var i=At.indexedDB();try{var n=i.open(At.DB_NAME(),At.DB_VERSION)}catch(t){return r(t)}n.onupgradeneeded=()=>{E("creating db"),n.result.createObjectStore(At.DB_STORE_NAME)},n.onsuccess=()=>{var i=n.result.transaction([At.DB_STORE_NAME],"readwrite"),s=i.objectStore(At.DB_STORE_NAME),o=0,a=0,u=t.length;function h(){0==a?e():r()}t.forEach((t=>{var e=s.put(At.analyzePath(t).object.contents,t);e.onsuccess=()=>{++o+a==u&&h()},e.onerror=()=>{a++,o+a==u&&h()}})),i.onerror=r},n.onerror=r},loadFilesFromDB:(t,e,r)=>{e=e||(()=>{}),r=r||(()=>{});var i=At.indexedDB();try{var n=i.open(At.DB_NAME(),At.DB_VERSION)}catch(t){return r(t)}n.onupgradeneeded=r,n.onsuccess=()=>{var i=n.result;try{var s=i.transaction([At.DB_STORE_NAME],"readonly")}catch(t){return void r(t)}var o=s.objectStore(At.DB_STORE_NAME),a=0,u=0,h=t.length;function c(){0==u?e():r()}t.forEach((t=>{var e=o.get(t);e.onsuccess=()=>{At.analyzePath(t).exists&&At.unlink(t),At.createDataFile(Et.dirname(t),Et.basename(t),e.result,!0,!0,!0),++a+u==h&&c()},e.onerror=()=>{u++,a+u==h&&c()}})),s.onerror=r},n.onerror=r}},Pt={DEFAULT_POLLMASK:5,calculateAt:function(t,e,r){if(Et.isAbs(e))return e;var i;if(i=-100===t?At.cwd():Pt.getStreamFromFD(t).path,0==e.length){if(!r)throw new At.ErrnoError(44);return i}return Et.join2(i,e)},doStat:function(t,e,r){try{var i=t(e)}catch(t){if(t&&t.node&&Et.normalize(e)!==Et.normalize(At.getPath(t.node)))return-54;throw t}return C[r>>2]=i.dev,C[r+8>>2]=i.ino,C[r+12>>2]=i.mode,L[r+16>>2]=i.nlink,C[r+20>>2]=i.uid,C[r+24>>2]=i.gid,C[r+28>>2]=i.rdev,at=[i.size>>>0,(ot=i.size,+Math.abs(ot)>=1?ot>0?(0|Math.min(+Math.floor(ot/4294967296),4294967295))>>>0:~~+Math.ceil((ot-+(~~ot>>>0))/4294967296)>>>0:0)],C[r+40>>2]=at[0],C[r+44>>2]=at[1],C[r+48>>2]=4096,C[r+52>>2]=i.blocks,at=[Math.floor(i.atime.getTime()/1e3)>>>0,(ot=Math.floor(i.atime.getTime()/1e3),+Math.abs(ot)>=1?ot>0?(0|Math.min(+Math.floor(ot/4294967296),4294967295))>>>0:~~+Math.ceil((ot-+(~~ot>>>0))/4294967296)>>>0:0)],C[r+56>>2]=at[0],C[r+60>>2]=at[1],L[r+64>>2]=0,at=[Math.floor(i.mtime.getTime()/1e3)>>>0,(ot=Math.floor(i.mtime.getTime()/1e3),+Math.abs(ot)>=1?ot>0?(0|Math.min(+Math.floor(ot/4294967296),4294967295))>>>0:~~+Math.ceil((ot-+(~~ot>>>0))/4294967296)>>>0:0)],C[r+72>>2]=at[0],C[r+76>>2]=at[1],L[r+80>>2]=0,at=[Math.floor(i.ctime.getTime()/1e3)>>>0,(ot=Math.floor(i.ctime.getTime()/1e3),+Math.abs(ot)>=1?ot>0?(0|Math.min(+Math.floor(ot/4294967296),4294967295))>>>0:~~+Math.ceil((ot-+(~~ot>>>0))/4294967296)>>>0:0)],C[r+88>>2]=at[0],C[r+92>>2]=at[1],L[r+96>>2]=0,at=[i.ino>>>0,(ot=i.ino,+Math.abs(ot)>=1?ot>0?(0|Math.min(+Math.floor(ot/4294967296),4294967295))>>>0:~~+Math.ceil((ot-+(~~ot>>>0))/4294967296)>>>0:0)],C[r+104>>2]=at[0],C[r+108>>2]=at[1],0},doMsync:function(t,e,r,i,n){if(!At.isFile(e.node.mode))throw new At.ErrnoError(43);if(2&i)return 0;var s=k.slice(t,t+r);At.msync(e,s,n,r,i)},varargs:void 0,get:function(){return Pt.varargs+=4,C[Pt.varargs-4>>2]},getStr:function(t){return W(t)},getStreamFromFD:function(t){var e=At.getStream(t);if(!e)throw new At.ErrnoError(8);return e}};function Tt(t){return t<-9007199254740992||t>9007199254740992?NaN:Number(t)}function Rt(t){if(null===t)return"null";var e=typeof t;return"object"===e||"array"===e||"function"===e?t.toString():""+t}var kt=void 0;function Bt(t){for(var e="",r=t;k[r];)e+=kt[k[r++]];return e}var Ot={},Ct={},Lt={},jt=48,Zt=57;function Dt(t,e){var r,i=(r=function(t){this.name=e,this.message=t;var r=new Error(t).stack;void 0!==r&&(this.stack=this.toString()+"\n"+r.replace(/^Error(:[^\n]*)?\n/,""))},function(t){if(void 0===t)return"_unknown";var e=(t=t.replace(/[^a-zA-Z0-9_]/g,"$")).charCodeAt(0);return e>=jt&&e<=Zt?"_"+t:t}(e),function(){"use strict";return r.apply(this,arguments)});return i.prototype=Object.create(t.prototype),i.prototype.constructor=i,i.prototype.toString=function(){return void 0===this.message?this.name:this.name+": "+this.message},i}var Ft=void 0;function zt(t){throw new Ft(t)}var Ht=void 0;function Wt(t){throw new Ht(t)}function Kt(t,e,r={}){if(!("argPackAdvance"in e))throw new TypeError("registerType registeredInstance requires argPackAdvance");var i=e.name;if(t||zt('type "'+i+'" must have a positive integer typeid pointer'),Ct.hasOwnProperty(t)){if(r.ignoreDuplicateRegistrations)return;zt("Cannot register type '"+i+"' twice")}if(Ct[t]=e,delete Lt[t],Ot.hasOwnProperty(t)){var n=Ot[t];delete Ot[t],n.forEach((t=>t()))}}function qt(t,e,r){switch(e){case 0:return r?function(t){return R[t]}:function(t){return k[t]};case 1:return r?function(t){return B[t>>1]}:function(t){return O[t>>1]};case 2:return r?function(t){return C[t>>2]}:function(t){return L[t>>2]};case 3:return r?function(t){return Z[t>>3]}:function(t){return D[t>>3]};default:throw new TypeError("Unknown integer type: "+t)}}function Ut(t){switch(t){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError("Unknown type size: "+t)}}var Vt=[],Xt=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function Gt(t){t>4&&0==--Xt[t].refcount&&(Xt[t]=void 0,Vt.push(t))}var Yt=t=>(t||zt("Cannot use deleted val. handle = "+t),Xt[t].value),Qt=t=>{switch(t){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var e=Vt.length?Vt.pop():Xt.length;return Xt[e]={refcount:1,value:t},e}};function Jt(t){return this.fromWireType(C[t>>2])}function _t(t,e){switch(e){case 2:return function(t){return this.fromWireType(j[t>>2])};case 3:return function(t){return this.fromWireType(F[t>>3])};default:throw new TypeError("Unknown float type: "+t)}}function $t(t){try{return t()}catch(t){it(t)}}var te={instrumentWasmImports:function(t){var e=["env.js_send_json_request","env.js_send_binary_request","env.emscripten_sleep","env.invoke_*","env.emscripten_sleep","env.emscripten_wget","env.emscripten_wget_data","env.emscripten_idb_load","env.emscripten_idb_store","env.emscripten_idb_delete","env.emscripten_idb_exists","env.emscripten_idb_load_blob","env.emscripten_idb_store_blob","env.SDL_Delay","env.emscripten_scan_registers","env.emscripten_lazy_load_code","env.emscripten_fiber_swap","wasi_snapshot_preview1.fd_sync","env.__wasi_fd_sync","env._emval_await","env._dlopen_js","env.__asyncjs__*"].map((t=>t.split(".")[1]));for(var r in t)!function(r){var i=t[r];i.sig,"function"==typeof i&&(e.indexOf(r)>=0||r.startsWith("__asyncjs__"))}(r)},instrumentWasmExports:function(t){var e={};for(var r in t)!function(r){var i=t[r];e[r]="function"==typeof i?function(){te.exportCallStack.push(r);try{return i.apply(null,arguments)}finally{A||(P(te.exportCallStack.pop()===r),te.maybeStopUnwind())}}:i}(r);return e},State:{Normal:0,Unwinding:1,Rewinding:2,Disabled:3},state:0,StackSize:4096,currData:null,handleSleepReturnValue:0,exportCallStack:[],callStackNameToId:{},callStackIdToName:{},callStackId:0,asyncPromiseHandlers:null,sleepCallbacks:[],getCallStackId:function(t){var e=te.callStackNameToId[t];return void 0===e&&(e=te.callStackId++,te.callStackNameToId[t]=e,te.callStackIdToName[e]=t),e},maybeStopUnwind:function(){te.currData&&te.state===te.State.Unwinding&&0===te.exportCallStack.length&&(te.state=te.State.Normal,$t(Zr),"undefined"!=typeof Fibers&&Fibers.trampoline())},whenDone:function(){return new Promise(((t,e)=>{te.asyncPromiseHandlers={resolve:t,reject:e}}))},allocateData:function(){var t=De(12+te.StackSize);return te.setDataHeader(t,t+12,te.StackSize),te.setDataRewindFunc(t),t},setDataHeader:function(t,e,r){C[t>>2]=e,C[t+4>>2]=e+r},setDataRewindFunc:function(t){var e=te.exportCallStack[0],r=te.getCallStackId(e);C[t+8>>2]=r},getDataRewindFunc:function(t){var e=C[t+8>>2],r=te.callStackIdToName[e];return a.asm[r]},doRewind:function(t){return te.getDataRewindFunc(t)()},handleSleep:function(t){if(!A){if(te.state===te.State.Normal){var e=!1,r=!1;t((t=>{if(!A&&(te.handleSleepReturnValue=t||0,e=!0,r)){te.state=te.State.Rewinding,$t((()=>Dr(te.currData))),"undefined"!=typeof Browser&&Browser.mainLoop.func&&Browser.mainLoop.resume();var i,n=!1;try{i=te.doRewind(te.currData)}catch(t){i=t,n=!0}var s=!1;if(!te.currData){var o=te.asyncPromiseHandlers;o&&(te.asyncPromiseHandlers=null,(n?o.reject:o.resolve)(i),s=!0)}if(n&&!s)throw i}})),r=!0,e||(te.state=te.State.Unwinding,te.currData=te.allocateData(),"undefined"!=typeof Browser&&Browser.mainLoop.func&&Browser.mainLoop.pause(),$t((()=>jr(te.currData))))}else te.state===te.State.Rewinding?(te.state=te.State.Normal,$t(Fr),Le(te.currData),te.currData=null,te.sleepCallbacks.forEach((t=>function(t){if(!A)try{t()}catch(t){!function(t){if(t instanceof ct||"unwind"==t)return I;m(1,t)}(t)}}(t)))):it("invalid state: "+te.state);return te.handleSleepReturnValue}},handleAsync:function(t){return te.handleSleep((e=>{t().then(e)}))}};function ee(t,e){t=Bt(t);var r,i,n,s=(r=t,i=e,n=[],function(){return n.length=0,Object.assign(n,arguments),function(t,e,r){return function(t,e,r){var i=a["dynCall_"+t];return r&&r.length?i.apply(null,[e].concat(r)):i.call(null,e)}(t,e,r)}(r,i,n)});return"function"!=typeof s&&zt("unknown function pointer with signature "+t+": "+e),s}var re=void 0;function ie(t){var e=Fe(t),r=Bt(e);return Le(e),r}var ne="undefined"!=typeof TextDecoder?new TextDecoder("utf-16le"):void 0;function se(t,e){for(var r=t,i=r>>1,n=i+e/2;!(i>=n)&&O[i];)++i;if((r=i<<1)-t>32&&ne)return ne.decode(k.subarray(t,r));for(var s="",o=0;!(o>=e/2);++o){var a=B[t+2*o>>1];if(0==a)break;s+=String.fromCharCode(a)}return s}function oe(t,e,r){if(void 0===r&&(r=2147483647),r<2)return 0;for(var i=e,n=(r-=2)<2*t.length?r/2:t.length,s=0;s<n;++s){var o=t.charCodeAt(s);B[e>>1]=o,e+=2}return B[e>>1]=0,e-i}function ae(t){return 2*t.length}function ue(t,e){for(var r=0,i="";!(r>=e/4);){var n=C[t+4*r>>2];if(0==n)break;if(++r,n>=65536){var s=n-65536;i+=String.fromCharCode(55296|s>>10,56320|1023&s)}else i+=String.fromCharCode(n)}return i}function he(t,e,r){if(void 0===r&&(r=2147483647),r<4)return 0;for(var i=e,n=i+r-4,s=0;s<t.length;++s){var o=t.charCodeAt(s);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&t.charCodeAt(++s)),C[e>>2]=o,(e+=4)+4>n)break}return C[e>>2]=0,e-i}function ce(t){for(var e=0,r=0;r<t.length;++r){var i=t.charCodeAt(r);i>=55296&&i<=57343&&++r,e+=4}return e}function le(t,e){var r=Ct[t];return void 0===r&&zt(e+" has unknown type "+ie(t)),r}function de(t){return t%4==0&&(t%100!=0||t%400==0)}var fe,pe=[0,31,60,91,121,152,182,213,244,274,305,335],ge=[0,31,59,90,120,151,181,212,243,273,304,334];function me(t){var e=U(t)+1,r=De(e);return r&&K(t,R,r,e),r}function ye(t){try{return M.grow(t-T.byteLength+65535>>>16),V(M.buffer),1}catch(t){}}fe=b?()=>{var t=n.hrtime();return 1e3*t[0]+t[1]/1e6}:()=>performance.now();var ve={};function be(){if(!be.strings){var t={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:g||"./this.program"};for(var e in ve)void 0===ve[e]?delete t[e]:t[e]=ve[e];var r=[];for(var e in t)r.push(e+"="+t[e]);be.strings=r}return be.strings}function we(t){I=t,J()||(a.onExit&&a.onExit(t),A=!0),m(t,new ct(t))}function Ee(t,e,r,i){for(var n=0,s=0;s<r;s++){var o=L[e>>2],a=L[e+4>>2];e+=8;var u=At.write(t,R,o,a,i);if(u<0)return-1;n+=u}return n}var Se=[31,29,31,30,31,30,31,31,30,31,30,31],Ne=[31,28,31,30,31,30,31,31,30,31,30,31];function Me(t,e){t<128?e.push(t):e.push(t%128|128,t>>7)}var xe=void 0,Ie=[];function Ae(t,e){X.set(t,e)}var Pe=function(t,e,r,i){t||(t=this),this.parent=t,this.mount=t.mount,this.mounted=null,this.id=At.nextInode++,this.name=e,this.mode=r,this.node_ops={},this.stream_ops={},this.rdev=i};Object.defineProperties(Pe.prototype,{read:{get:function(){return 365==(365&this.mode)},set:function(t){t?this.mode|=365:this.mode&=-366}},write:{get:function(){return 146==(146&this.mode)},set:function(t){t?this.mode|=146:this.mode&=-147}},isFolder:{get:function(){return At.isDir(this.mode)}},isDevice:{get:function(){return At.isChrdev(this.mode)}}}),At.FSNode=Pe,At.staticInit(),function(){for(var t=new Array(256),e=0;e<256;++e)t[e]=String.fromCharCode(e);kt=t}(),Ft=a.BindingError=Dt(Error,"BindingError"),Ht=a.InternalError=Dt(Error,"InternalError"),a.count_emval_handles=function(){for(var t=0,e=5;e<Xt.length;++e)void 0!==Xt[e]&&++t;return t},a.get_first_emval=function(){for(var t=5;t<Xt.length;++t)if(void 0!==Xt[t])return Xt[t];return null},re=a.UnboundTypeError=Dt(Error,"UnboundTypeError");var Te=!1,Re="function"==typeof atob?atob:function(t){var e,r,i,n,s,o,a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",u="",h=0;t=t.replace(/[^A-Za-z0-9\+\/\=]/g,"");do{e=a.indexOf(t.charAt(h++))<<2|(n=a.indexOf(t.charAt(h++)))>>4,r=(15&n)<<4|(s=a.indexOf(t.charAt(h++)))>>2,i=(3&s)<<6|(o=a.indexOf(t.charAt(h++))),u+=String.fromCharCode(e),64!==s&&(u+=String.fromCharCode(r)),64!==o&&(u+=String.fromCharCode(i))}while(h<t.length);return u};function ke(t){if("boolean"==typeof b&&b){var e=s.from(t,"base64");return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}try{for(var r=Re(t),i=new Uint8Array(r.length),n=0;n<r.length;++n)i[n]=r.charCodeAt(n);return i}catch(t){throw new Error("Converting base64 string to bytes failed.")}}function Be(t){if(!ht(t))return;const e=t.slice(ut.length);if(e.startsWith("AGFzbQ"))return ke(e);{const t=ke(e),r=new DecompressionStream("deflate"),i=new ReadableStream({start(e){e.enqueue(t),e.close()}}).pipeThrough(r);return new Response(i).arrayBuffer()}}var Oe,Ce={Wa:function(){S("missing function: BIO_free"),it(-1)},Ya:function(){S("missing function: BIO_new_mem_buf"),it(-1)},Qa:function(){S("missing function: CONF_modules_unload"),it(-1)},S:function(){S("missing function: CRYPTO_free"),it(-1)},Xa:function(){S("missing function: PEM_read_bio"),it(-1)},Za:function(){S("missing function: PEM_write"),it(-1)},$a:function(){S("missing function: _ZN2hw6trezor12register_allEv"),it(-1)},fa:function(){S("missing function: _ZN4epee13file_io_utils19load_file_to_stringERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERS7_m"),it(-1)},ea:function(){S("missing function: _ZN4epee13file_io_utils19save_string_to_fileERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_"),it(-1)},_a:function(){S("missing function: _ZNK5tools6Notify6notifyEPKcS2_z"),it(-1)},e:function(t,e,r,i){it("Assertion failed: "+W(t)+", at: "+[e?W(e):"unknown filename",r,i?W(i):"unknown function"])},b:function(t){return De(t+24)+24},l:function(t){var e=new mt(t);return e.get_caught()||(e.set_caught(!0),gt--),e.set_rethrown(!1),ft.push(e),pt(e),e.get_exception_ptr()},ka:function(t){t&&vt(new mt(t))},n:function(){He(0),vt(ft.pop()),bt=0},a:function(){var t=bt;if(!t)return We(0),0;var e=new mt(t);e.set_adjusted_ptr(t);var r=e.get_type();if(!r)return We(0),t;for(var i=0;i<arguments.length;i++){var n=arguments[i];if(0===n||n===r)break;var s=e.ptr+16;if(Ue(n,r,s))return We(n),t}return We(r),t},f:function(){var t=bt;if(!t)return We(0),0;var e=new mt(t);e.set_adjusted_ptr(t);var r=e.get_type();if(!r)return We(0),t;for(var i=0;i<arguments.length;i++){var n=arguments[i];if(0===n||n===r)break;var s=e.ptr+16;if(Ue(n,r,s))return We(n),t}return We(r),t},q:yt,ja:function(t){t&&pt(new mt(t))},la:wt,gb:function(t){if(t){var e=new mt(t);ft.push(e),e.set_rethrown(!0),wt()}},d:function(t,e,r){throw new mt(t).init(e,r),bt=t,gt++,t},hb:function(){return gt},j:function(t){throw bt||(bt=t),t},za:function(t,e){try{return t=Pt.getStr(t),At.chmod(t,e),0}catch(t){if(void 0===At||!(t instanceof At.ErrnoError))throw t;return-t.errno}},rb:function(t,e,r,i){return 0},Aa:function(t,e){try{return At.fchmod(t,e),0}catch(t){if(void 0===At||!(t instanceof At.ErrnoError))throw t;return-t.errno}},x:function(t,e,r){Pt.varargs=r;try{var i=Pt.getStreamFromFD(t);switch(e){case 0:return(n=Pt.get())<0?-28:At.createStream(i,n).fd;case 1:case 2:case 6:case 7:return 0;case 3:return i.flags;case 4:var n=Pt.get();return i.flags|=n,0;case 5:return n=Pt.get(),B[n+0>>1]=2,0;case 16:case 8:default:return-28;case 9:return 28,C[Ze()>>2]=28,-1}}catch(t){if(void 0===At||!(t instanceof At.ErrnoError))throw t;return-t.errno}},xa:function(t){try{return Pt.getStreamFromFD(t),0}catch(t){if(void 0===At||!(t instanceof At.ErrnoError))throw t;return-t.errno}},wa:function(t,e){try{var r=Pt.getStreamFromFD(t);return Pt.doStat(At.stat,r.path,e)}catch(t){if(void 0===At||!(t instanceof At.ErrnoError))throw t;return-t.errno}},ta:function(t,e){try{return e=Tt(e),isNaN(e)?-61:(At.ftruncate(t,e),0)}catch(t){if(void 0===At||!(t instanceof At.ErrnoError))throw t;return-t.errno}},sa:function(t,e){try{if(0===e)return-28;var r=At.cwd(),i=U(r)+1;return e<i?-68:(q(r,t,e),i)}catch(t){if(void 0===At||!(t instanceof At.ErrnoError))throw t;return-t.errno}},Ga:function(t,e,r){Pt.varargs=r;try{var i=Pt.getStreamFromFD(t);switch(e){case 21509:case 21505:case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:case 21523:case 21524:return i.tty?0:-59;case 21519:if(!i.tty)return-59;var n=Pt.get();return C[n>>2]=0,0;case 21520:return i.tty?-28:-59;case 21531:return n=Pt.get(),At.ioctl(i,e,n);default:return-28}}catch(t){if(void 0===At||!(t instanceof At.ErrnoError))throw t;return-t.errno}},ua:function(t,e){try{return t=Pt.getStr(t),Pt.doStat(At.lstat,t,e)}catch(t){if(void 0===At||!(t instanceof At.ErrnoError))throw t;return-t.errno}},na:function(t,e,r){try{return e=Pt.getStr(e),e=Pt.calculateAt(t,e),"/"===(e=Et.normalize(e))[e.length-1]&&(e=e.substr(0,e.length-1)),At.mkdir(e,r,0),0}catch(t){if(void 0===At||!(t instanceof At.ErrnoError))throw t;return-t.errno}},ya:function(t,e,r,i){try{e=Pt.getStr(e);var n=256&i,s=4096&i;return i&=-4353,e=Pt.calculateAt(t,e,s),Pt.doStat(n?At.lstat:At.stat,e,r)}catch(t){if(void 0===At||!(t instanceof At.ErrnoError))throw t;return-t.errno}},L:function(t,e,r,i){Pt.varargs=i;try{e=Pt.getStr(e),e=Pt.calculateAt(t,e);var n=i?Pt.get():0;return At.open(e,r,n).fd}catch(t){if(void 0===At||!(t instanceof At.ErrnoError))throw t;return-t.errno}},ob:function(t,e,r,i){try{if(e=Pt.getStr(e),e=Pt.calculateAt(t,e),i<=0)return-28;var n=At.readlink(e),s=Math.min(i,U(n)),o=R[r+s];return q(n,r,i+1),R[r+s]=o,s}catch(t){if(void 0===At||!(t instanceof At.ErrnoError))throw t;return-t.errno}},nb:function(t,e,r,i){try{return e=Pt.getStr(e),i=Pt.getStr(i),e=Pt.calculateAt(t,e),i=Pt.calculateAt(r,i),At.rename(e,i),0}catch(t){if(void 0===At||!(t instanceof At.ErrnoError))throw t;return-t.errno}},va:function(t,e){try{return t=Pt.getStr(t),Pt.doStat(At.stat,t,e)}catch(t){if(void 0===At||!(t instanceof At.ErrnoError))throw t;return-t.errno}},mb:function(t,e,r){try{return t=Pt.getStr(t),C[r+4>>2]=4096,C[r+40>>2]=4096,C[r+8>>2]=1e6,C[r+12>>2]=5e5,C[r+16>>2]=5e5,C[r+20>>2]=At.nextInode,C[r+24>>2]=1e6,C[r+28>>2]=42,C[r+44>>2]=2,C[r+36>>2]=255,0}catch(t){if(void 0===At||!(t instanceof At.ErrnoError))throw t;return-t.errno}},kb:function(t,e,r){try{return e=Pt.getStr(e),e=Pt.calculateAt(t,e),0===r?At.unlink(e):512===r?At.rmdir(e):it("Invalid flags passed to unlinkat"),0}catch(t){if(void 0===At||!(t instanceof At.ErrnoError))throw t;return-t.errno}},Y:function(t,e,r,i,n){e=Bt(e);var s=Ut(r),o=-1!=e.indexOf("u");o&&(n=(1n<<64n)-1n),Kt(t,{name:e,fromWireType:function(t){return t},toWireType:function(t,r){if("bigint"!=typeof r&&"number"!=typeof r)throw new TypeError('Cannot convert "'+Rt(r)+'" to '+this.name);if(r<i||r>n)throw new TypeError('Passing a number "'+Rt(r)+'" from JS side to C/C++ side to an argument of type "'+e+'", which is outside the valid range ['+i+", "+n+"]!");return r},argPackAdvance:8,readValueFromPointer:qt(e,s,!o),destructorFunction:null})},Ia:function(t,e,r,i,n){var s=Ut(r);Kt(t,{name:e=Bt(e),fromWireType:function(t){return!!t},toWireType:function(t,e){return e?i:n},argPackAdvance:8,readValueFromPointer:function(t){var i;if(1===r)i=R;else if(2===r)i=B;else{if(4!==r)throw new TypeError("Unknown boolean type size: "+e);i=C}return this.fromWireType(i[t>>s])},destructorFunction:null})},Ha:function(t,e){Kt(t,{name:e=Bt(e),fromWireType:function(t){var e=Yt(t);return Gt(t),e},toWireType:function(t,e){return Qt(e)},argPackAdvance:8,readValueFromPointer:Jt,destructorFunction:null})},X:function(t,e,r){var i=Ut(r);Kt(t,{name:e=Bt(e),fromWireType:function(t){return t},toWireType:function(t,e){return e},argPackAdvance:8,readValueFromPointer:_t(e,i),destructorFunction:null})},s:function(t,e,r,i,n,s){var o=function(t,e){for(var r=[],i=0;i<t;i++)r.push(L[e+4*i>>2]);return r}(e,r);t=Bt(t),n=ee(i,n),function(t,e,r){a.hasOwnProperty(t)?((void 0===r||void 0!==a[t].overloadTable&&void 0!==a[t].overloadTable[r])&&zt("Cannot register public name '"+t+"' twice"),function(t,e,r){if(void 0===t[e].overloadTable){var i=t[e];t[e]=function(){return t[e].overloadTable.hasOwnProperty(arguments.length)||zt("Function '"+r+"' called with an invalid number of arguments ("+arguments.length+") - expects one of ("+t[e].overloadTable+")!"),t[e].overloadTable[arguments.length].apply(this,arguments)},t[e].overloadTable=[],t[e].overloadTable[i.argCount]=i}}(a,t,t),a.hasOwnProperty(r)&&zt("Cannot register multiple overloads of a function with the same number of arguments ("+r+")!"),a[t].overloadTable[r]=e):(a[t]=e,void 0!==r&&(a[t].numArguments=r))}(t,(function(){!function(t,e){var r=[],i={};throw e.forEach((function t(e){i[e]||Ct[e]||(Lt[e]?Lt[e].forEach(t):(r.push(e),i[e]=!0))})),new re(t+": "+r.map(ie).join([", "]))}("Cannot call "+t+" due to unbound types",o)}),e-1),function(r,i,o){function u(i){var o=function(r){var i=[r[0],null].concat(r.slice(1));return function(t,e,r){a.hasOwnProperty(t)||Wt("Replacing nonexistant public symbol"),void 0!==a[t].overloadTable&&void 0!==r?a[t].overloadTable[r]=e:(a[t]=e,a[t].argCount=r)}(t,function(t,e,r,i,n){var s=e.length;s<2&&zt("argTypes array size mismatch! Must at least get return value and 'this' types!");for(var o=null!==e[1]&&null!==r,a=!1,u=1;u<e.length;++u)if(null!==e[u]&&void 0===e[u].destructorFunction){a=!0;break}var h="void"!==e[0].name,c=s-2,l=new Array(c),d=[],f=[];return function(){var r;arguments.length!==c&&zt("function "+t+" called with "+arguments.length+" arguments, expected "+c+" args!"),f.length=0,d.length=o?2:1,d[0]=n,o&&(r=e[1].toWireType(f,this),d[1]=r);for(var s=0;s<c;++s)l[s]=e[s+2].toWireType(f,arguments[s]),d.push(l[s]);var u=i.apply(null,d);function p(t){if(a)!function(t){for(;t.length;){var e=t.pop();t.pop()(e)}}(f);else for(var i=o?1:2;i<e.length;i++){var n=1===i?r:l[i-2];null!==e[i].destructorFunction&&e[i].destructorFunction(n)}if(h)return e[0].fromWireType(t)}return te.currData?te.whenDone().then(p):p(u)}}(t,i,null,n,s),e-1),[]}(i);o.length!==r.length&&Wt("Mismatched type converter count");for(var u=0;u<r.length;++u)Kt(r[u],o[u])}r.forEach((function(t){Lt[t]=i}));var h=new Array(i.length),c=[],l=0;i.forEach(((t,e)=>{Ct.hasOwnProperty(t)?h[e]=Ct[t]:(c.push(t),Ot.hasOwnProperty(t)||(Ot[t]=[]),Ot[t].push((()=>{h[e]=Ct[t],++l===c.length&&u(h)})))})),0===c.length&&u(h)}([],o)},A:function(t,e,r,i,n){e=Bt(e),-1===n&&(n=4294967295);var s=Ut(r),o=t=>t;if(0===i){var a=32-8*r;o=t=>t<<a>>>a}var u=e.includes("unsigned");Kt(t,{name:e,fromWireType:o,toWireType:u?function(t,e){return this.name,e>>>0}:function(t,e){return this.name,e},argPackAdvance:8,readValueFromPointer:qt(e,s,0!==i),destructorFunction:null})},u:function(t,e,r){var i=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][e];function n(t){var e=L,r=e[t>>=2],n=e[t+1];return new i(T,n,r)}Kt(t,{name:r=Bt(r),fromWireType:n,argPackAdvance:8,readValueFromPointer:n},{ignoreDuplicateRegistrations:!0})},W:function(t,e){var r="std::string"===(e=Bt(e));Kt(t,{name:e,fromWireType:function(t){var e,i=L[t>>2],n=t+4;if(r)for(var s=n,o=0;o<=i;++o){var a=n+o;if(o==i||0==k[a]){var u=W(s,a-s);void 0===e?e=u:(e+=String.fromCharCode(0),e+=u),s=a+1}}else{var h=new Array(i);for(o=0;o<i;++o)h[o]=String.fromCharCode(k[n+o]);e=h.join("")}return Le(t),e},toWireType:function(t,e){var i;e instanceof ArrayBuffer&&(e=new Uint8Array(e));var n="string"==typeof e;n||e instanceof Uint8Array||e instanceof Uint8ClampedArray||e instanceof Int8Array||zt("Cannot pass non-string to std::string"),i=r&&n?U(e):e.length;var s=De(4+i+1),o=s+4;if(L[s>>2]=i,r&&n)q(e,o,i+1);else if(n)for(var a=0;a<i;++a){var u=e.charCodeAt(a);u>255&&(Le(o),zt("String has UTF-16 code units that do not fit in 8 bits")),k[o+a]=u}else for(a=0;a<i;++a)k[o+a]=e[a];return null!==t&&t.push(Le,s),s},argPackAdvance:8,readValueFromPointer:Jt,destructorFunction:function(t){Le(t)}})},O:function(t,e,r){var i,n,s,o,a;r=Bt(r),2===e?(i=se,n=oe,o=ae,s=()=>O,a=1):4===e&&(i=ue,n=he,o=ce,s=()=>L,a=2),Kt(t,{name:r,fromWireType:function(t){for(var r,n=L[t>>2],o=s(),u=t+4,h=0;h<=n;++h){var c=t+4+h*e;if(h==n||0==o[c>>a]){var l=i(u,c-u);void 0===r?r=l:(r+=String.fromCharCode(0),r+=l),u=c+e}}return Le(t),r},toWireType:function(t,i){"string"!=typeof i&&zt("Cannot pass non-string to C++ string type "+r);var s=o(i),u=De(4+s+e);return L[u>>2]=s>>a,n(i,u+4,s+e),null!==t&&t.push(Le,u),u},argPackAdvance:8,readValueFromPointer:Jt,destructorFunction:function(t){Le(t)}})},Ja:function(t,e){Kt(t,{isVoid:!0,name:e=Bt(e),argPackAdvance:0,fromWireType:function(){},toWireType:function(t,e){}})},Ba:function(){return!0},qb:function(t,e){q(g,t,e)},B:function(t,e,r,i){t=Yt(t);for(var n=function(t,e){for(var r=new Array(t),i=0;i<t;++i)r[i]=le(L[e+4*i>>2],"parameter "+i);return r}(e,r),s=new Array(e),o=0;o<e;++o){var a=n[o];s[o]=a.readValueFromPointer(i),i+=a.argPackAdvance}var u=t.apply(void 0,s);return Qt(u)},Oa:Gt,Na:function(t,e){return(t=Yt(t))==Yt(e)},$:function(t){t>4&&(Xt[t].refcount+=1)},La:function(t,e){var r=(t=le(t,"_emval_take_value")).readValueFromPointer(e);return Qt(r)},Ca:function(t,e){var r,i=new Date(1e3*(L[(r=t)>>2]+4294967296*C[r+4>>2]));C[e>>2]=i.getUTCSeconds(),C[e+4>>2]=i.getUTCMinutes(),C[e+8>>2]=i.getUTCHours(),C[e+12>>2]=i.getUTCDate(),C[e+16>>2]=i.getUTCMonth(),C[e+20>>2]=i.getUTCFullYear()-1900,C[e+24>>2]=i.getUTCDay();var n=Date.UTC(i.getUTCFullYear(),0,1,0,0,0,0),s=(i.getTime()-n)/864e5|0;C[e+28>>2]=s},Da:function(t){var e=new Date(C[t+20>>2]+1900,C[t+16>>2],C[t+12>>2],C[t+8>>2],C[t+4>>2],C[t>>2],0),r=C[t+32>>2],i=e.getTimezoneOffset(),n=new Date(e.getFullYear(),0,1),s=new Date(e.getFullYear(),6,1).getTimezoneOffset(),o=n.getTimezoneOffset(),a=Math.min(o,s);if(r<0)C[t+32>>2]=Number(s!=o&&a==i);else if(r>0!=(a==i)){var u=Math.max(o,s),h=r>0?a:u;e.setTime(e.getTime()+6e4*(h-i))}C[t+24>>2]=e.getDay();var c=0|function(t){return(de(t.getFullYear())?pe:ge)[t.getMonth()]+t.getDate()-1}(e);return C[t+28>>2]=c,C[t>>2]=e.getSeconds(),C[t+4>>2]=e.getMinutes(),C[t+8>>2]=e.getHours(),C[t+12>>2]=e.getDate(),C[t+16>>2]=e.getMonth(),C[t+20>>2]=e.getYear(),e.getTime()/1e3|0},sb:function(t,e,r,i,n,s,o){try{var a=Pt.getStreamFromFD(i),u=At.mmap(a,t,n,e,r),h=u.ptr;return C[s>>2]=u.allocated,L[o>>2]=h,0}catch(t){if(void 0===At||!(t instanceof At.ErrnoError))throw t;return-t.errno}},tb:function(t,e,r,i,n,s){try{return Pt.doMsync(t,Pt.getStreamFromFD(n),e,i,0),0}catch(t){if(void 0===At||!(t instanceof At.ErrnoError))throw t;return-t.errno}},ma:function(t,e,r,i,n,s){try{var o=Pt.getStreamFromFD(n);2&r&&Pt.doMsync(t,o,e,i,s),At.munmap(o)}catch(t){if(void 0===At||!(t instanceof At.ErrnoError))throw t;return-t.errno}},Ea:function(t,e,r){var i=(new Date).getFullYear(),n=new Date(i,0,1),s=new Date(i,6,1),o=n.getTimezoneOffset(),a=s.getTimezoneOffset(),u=Math.max(o,a);function h(t){var e=t.toTimeString().match(/\(([A-Za-z ]+)\)$/);return e?e[1]:"GMT"}L[t>>2]=60*u,C[e>>2]=Number(o!=a);var c=h(n),l=h(s),d=me(c),f=me(l);a<o?(L[r>>2]=d,L[r+4>>2]=f):(L[r>>2]=f,L[r+4>>2]=d)},D:function(){it("")},N:function(){return Date.now()},lb:function(){return 2147483648},M:fe,jb:function(t){var e,r=k.length,i=2147483648;if((t>>>=0)>i)return!1;for(var n=1;n<=4;n*=2){var s=r*(1+.2/n);if(s=Math.min(s,t+100663296),ye(Math.min(i,(e=Math.max(t,s))+(65536-e%65536)%65536)))return!0}return!1},qa:function(t,e){var r=0;return be().forEach((function(i,n){var s=e+r;L[t+4*n>>2]=s,function(t,e,r){for(var i=0;i<t.length;++i)R[e++>>0]=t.charCodeAt(i);R[e>>0]=0}(i,s),r+=i.length+1})),0},ra:function(t,e){var r=be();L[t>>2]=r.length;var i=0;return r.forEach((function(t){i+=t.length+1})),L[e>>2]=i,0},T:function(t,e){I=t,we(t)},I:function(t){try{var e=Pt.getStreamFromFD(t);return At.close(e),0}catch(t){if(void 0===At||!(t instanceof At.ErrnoError))throw t;return t.errno}},pa:function(t,e){try{var r=Pt.getStreamFromFD(t),i=r.tty?2:At.isDir(r.mode)?3:At.isLink(r.mode)?7:4;return R[e>>0]=i,0}catch(t){if(void 0===At||!(t instanceof At.ErrnoError))throw t;return t.errno}},pb:function(t,e,r,i,n){try{if(i=Tt(i),isNaN(i))return 61;var s=Ee(Pt.getStreamFromFD(t),e,r,i);return L[n>>2]=s,0}catch(t){if(void 0===At||!(t instanceof At.ErrnoError))throw t;return t.errno}},V:function(t,e,r,i){try{var n=function(t,e,r,i){for(var n=0,s=0;s<r;s++){var o=L[e>>2],a=L[e+4>>2];e+=8;var u=At.read(t,R,o,a,undefined);if(u<0)return-1;if(n+=u,u<a)break}return n}(Pt.getStreamFromFD(t),e,r);return L[i>>2]=n,0}catch(t){if(void 0===At||!(t instanceof At.ErrnoError))throw t;return t.errno}},oa:function(t,e,r,i){try{if(e=Tt(e),isNaN(e))return 61;var n=Pt.getStreamFromFD(t);return At.llseek(n,e,r),at=[n.position>>>0,(ot=n.position,+Math.abs(ot)>=1?ot>0?(0|Math.min(+Math.floor(ot/4294967296),4294967295))>>>0:~~+Math.ceil((ot-+(~~ot>>>0))/4294967296)>>>0:0)],C[i>>2]=at[0],C[i+4>>2]=at[1],n.getdents&&0===e&&0===r&&(n.getdents=null),0}catch(t){if(void 0===At||!(t instanceof At.ErrnoError))throw t;return t.errno}},H:function(t,e,r,i){try{var n=Ee(Pt.getStreamFromFD(t),e,r);return L[i>>2]=n,0}catch(t){if(void 0===At||!(t instanceof At.ErrnoError))throw t;return t.errno}},ga:function(t,e,r,i){var n=Ke();try{return Br(t,e,r,i)}catch(t){if(qe(n),t!==t+0)throw t;He(1,0)}},ha:function(t,e,r,i){var n=Ke();try{return kr(t,e,r,i)}catch(t){if(qe(n),t!==t+0)throw t;He(1,0)}},t:function(t){var e=Ke();try{return Or(t)}catch(t){if(qe(e),t!==t+0)throw t;He(1,0)}},h:function(t,e){var r=Ke();try{return Xe(t,e)}catch(t){if(qe(r),t!==t+0)throw t;He(1,0)}},c:function(t,e,r){var i=Ke();try{return Ye(t,e,r)}catch(t){if(qe(i),t!==t+0)throw t;He(1,0)}},o:function(t,e,r,i){var n=Ke();try{return ir(t,e,r,i)}catch(t){if(qe(n),t!==t+0)throw t;He(1,0)}},m:function(t,e,r,i,n){var s=Ke();try{return sr(t,e,r,i,n)}catch(t){if(qe(s),t!==t+0)throw t;He(1,0)}},ia:function(t,e,r,i,n,s){var o=Ke();try{return Tr(t,e,r,i,n,s)}catch(t){if(qe(o),t!==t+0)throw t;He(1,0)}},G:function(t,e,r,i,n,s){var o=Ke();try{return dr(t,e,r,i,n,s)}catch(t){if(qe(o),t!==t+0)throw t;He(1,0)}},v:function(t,e,r,i,n,s,o){var a=Ke();try{return Mr(t,e,r,i,n,s,o)}catch(t){if(qe(a),t!==t+0)throw t;He(1,0)}},R:function(t,e,r,i,n,s,o,a){var u=Ke();try{return yr(t,e,r,i,n,s,o,a)}catch(t){if(qe(u),t!==t+0)throw t;He(1,0)}},Ra:function(t,e,r,i,n,s,o,a,u,h){var c=Ke();try{return Nr(t,e,r,i,n,s,o,a,u,h)}catch(t){if(qe(c),t!==t+0)throw t;He(1,0)}},K:function(t,e,r,i,n,s,o,a,u,h,c,l){var d=Ke();try{return Cr(t,e,r,i,n,s,o,a,u,h,c,l)}catch(t){if(qe(d),t!==t+0)throw t;He(1,0)}},eb:function(t,e,r,i,n,s){var o=Ke();try{return Pr(t,e,r,i,n,s)}catch(t){if(qe(o),t!==t+0)throw t;He(1,0)}},da:function(t,e,r,i,n,s,o){var a=Ke();try{return br(t,e,r,i,n,s,o)}catch(t){if(qe(a),t!==t+0)throw t;He(1,0)}},db:function(t,e,r,i,n,s,o){var a=Ke();try{return Rr(t,e,r,i,n,s,o)}catch(t){if(qe(a),t!==t+0)throw t;He(1,0)}},y:function(t,e,r,i,n,s){var o=Ke();try{return vr(t,e,r,i,n,s)}catch(t){if(qe(o),t!==t+0)throw t;He(1,0)}},ba:function(t,e,r){var i=Ke();try{return _e(t,e,r)}catch(t){if(qe(i),t!==t+0)throw t;He(1,0)}},ib:function(t){var e=Ke();try{return Ar(t)}catch(t){if(qe(e),t!==t+0)throw t;return He(1,0),0n}},U:function(t,e){var r=Ke();try{return $e(t,e)}catch(t){if(qe(r),t!==t+0)throw t;return He(1,0),0n}},_:function(t,e,r){var i=Ke();try{return ur(t,e,r)}catch(t){if(qe(i),t!==t+0)throw t;return He(1,0),0n}},Z:function(t,e,r,i){var n=Ke();try{return hr(t,e,r,i)}catch(t){if(qe(n),t!==t+0)throw t;return He(1,0),0n}},P:function(t,e,r,i,n){var s=Ke();try{return or(t,e,r,i,n)}catch(t){if(qe(s),t!==t+0)throw t;return He(1,0),0n}},Sa:function(t,e,r,i,n,s){var o=Ke();try{return Sr(t,e,r,i,n,s)}catch(t){if(qe(o),t!==t+0)throw t;return He(1,0),0n}},k:function(t){var e=Ke();try{tr(t)}catch(t){if(qe(e),t!==t+0)throw t;He(1,0)}},r:function(t,e){var r=Ke();try{Ge(t,e)}catch(t){if(qe(r),t!==t+0)throw t;He(1,0)}},g:function(t,e,r){var i=Ke();try{Qe(t,e,r)}catch(t){if(qe(i),t!==t+0)throw t;He(1,0)}},i:function(t,e,r,i){var n=Ke();try{rr(t,e,r,i)}catch(t){if(qe(n),t!==t+0)throw t;He(1,0)}},w:function(t,e,r,i,n){var s=Ke();try{nr(t,e,r,i,n)}catch(t){if(qe(s),t!==t+0)throw t;He(1,0)}},E:function(t,e,r,i,n,s){var o=Ke();try{Je(t,e,r,i,n,s)}catch(t){if(qe(o),t!==t+0)throw t;He(1,0)}},Q:function(t,e,r,i,n,s,o){var a=Ke();try{cr(t,e,r,i,n,s,o)}catch(t){if(qe(a),t!==t+0)throw t;He(1,0)}},C:function(t,e,r,i,n,s,o,a){var u=Ke();try{Ir(t,e,r,i,n,s,o,a)}catch(t){if(qe(u),t!==t+0)throw t;He(1,0)}},Va:function(t,e,r,i,n,s,o,a,u){var h=Ke();try{mr(t,e,r,i,n,s,o,a,u)}catch(t){if(qe(h),t!==t+0)throw t;He(1,0)}},F:function(t,e,r,i,n,s,o,a,u,h,c){var l=Ke();try{xr(t,e,r,i,n,s,o,a,u,h,c)}catch(t){if(qe(l),t!==t+0)throw t;He(1,0)}},J:function(t,e,r,i,n,s,o,a,u,h,c,l,d,f,p,g){var m=Ke();try{Lr(t,e,r,i,n,s,o,a,u,h,c,l,d,f,p,g)}catch(t){if(qe(m),t!==t+0)throw t;He(1,0)}},Ma:function(t,e,r,i,n,s){var o=Ke();try{lr(t,e,r,i,n,s)}catch(t){if(qe(o),t!==t+0)throw t;He(1,0)}},Ua:function(t,e,r,i,n,s,o,a,u,h){var c=Ke();try{Er(t,e,r,i,n,s,o,a,u,h)}catch(t){if(qe(c),t!==t+0)throw t;He(1,0)}},aa:function(t,e,r,i){var n=Ke();try{ar(t,e,r,i)}catch(t){if(qe(n),t!==t+0)throw t;He(1,0)}},fb:function(t,e,r,i,n,s){var o=Ke();try{gr(t,e,r,i,n,s)}catch(t){if(qe(o),t!==t+0)throw t;He(1,0)}},ab:function(t,e,r,i,n,s,o,a,u){var h=Ke();try{er(t,e,r,i,n,s,o,a,u)}catch(t){if(qe(h),t!==t+0)throw t;He(1,0)}},ca:function(t,e,r,i,n,s){var o=Ke();try{wr(t,e,r,i,n,s)}catch(t){if(qe(o),t!==t+0)throw t;He(1,0)}},z:function(t,e,r,i){var n=Ke();try{fr(t,e,r,i)}catch(t){if(qe(n),t!==t+0)throw t;He(1,0)}},Ta:function(t,e,r,i,n,s,o,a){var u=Ke();try{pr(t,e,r,i,n,s,o,a)}catch(t){if(qe(u),t!==t+0)throw t;He(1,0)}},bb:function(t,e,i,n,s,o,u,h){const c=r(2973),l=c.HttpClient,d=c.LibraryUtils;return c.GenUtils,te.handleSleep((function(r){d.loadWasmModule().then((h=>{let c=o,f=u,p=new Uint8Array(f);for(let t=0;t<f;t++)p[t]=a.HEAPU8[c/Uint8Array.BYTES_PER_ELEMENT+t];let g=!1;l.request({method:W(s),uri:W(t),username:W(e),password:W(i),body:p,resolveWithFullResponse:!0,rejectUnauthorized:d.isRejectUnauthorized(W(n))}).then((t=>{let e=t.body;e instanceof Uint8Array||(console.error("resp is not uint8array"),console.error(e));let i=e.length*e.BYTES_PER_ELEMENT,n=a._malloc(i);new Uint8Array(a.HEAPU8.buffer,n,i).set(new Uint8Array(e.buffer,e.byteOffset,i));let s={code:t.statusCode,message:t.statusText,headers:t.headers,bodyPtr:n,bodyLength:e.length},o=JSON.stringify(s),u=a.lengthBytesUTF8(o)+1,h=a._malloc(u);a.stringToUTF8(o,h,u),g=!0,r(h)})).catch((t=>{if(g)throw console.error("Error caught in JS after previously calling wakeUp(): "+t),new Error("Error caught in JS after previously calling wakeUp(): "+t);let e=t.message?t.message:""+t;e=JSON.stringify({error:e});let i=a.lengthBytesUTF8(e)+1,n=a._malloc(i);a.stringToUTF8(e,n,i),g=!0,r(n)}))})).catch((t=>{throw new Error("Could not load full wasm module")}))}))},ub:function(t,e,i,n,s,o,u){const h=r(2973),c=h.HttpClient,l=h.LibraryUtils;return h.GenUtils,te.handleSleep((function(r){let u=!1;c.request({method:W(s),uri:W(t),username:W(e),password:W(i),body:W(o),resolveWithFullResponse:!0,rejectUnauthorized:l.isRejectUnauthorized(W(n))}).then((t=>{let e={code:t.statusCode,message:t.statusText,body:t.body,headers:t.headers},i=JSON.stringify(e),n=a.lengthBytesUTF8(i)+1,s=a._malloc(n);a.stringToUTF8(i,s,n),u=!0,r(s)})).catch((t=>{if(u)throw console.error("Error caught in JS after previously calling wakeUp(): "+t),new Error("Error caught in JS after previously calling wakeUp(): "+t);let e=t.message?t.message:""+t;e=JSON.stringify({error:e});let i=a.lengthBytesUTF8(e)+1,n=a._malloc(i);a.stringToUTF8(e,n,i),u=!0,r(n)}))}))},p:function(t){return t},Fa:we,Pa:function(){S("missing function: rx_slow_hash"),it(-1)},cb:function(t,e,r,i,n){return function(t,e,r,i){var n=C[i+40>>2],s={tm_sec:C[i>>2],tm_min:C[i+4>>2],tm_hour:C[i+8>>2],tm_mday:C[i+12>>2],tm_mon:C[i+16>>2],tm_year:C[i+20>>2],tm_wday:C[i+24>>2],tm_yday:C[i+28>>2],tm_isdst:C[i+32>>2],tm_gmtoff:C[i+36>>2],tm_zone:n?W(n):""},o=W(r),a={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var u in a)o=o.replace(new RegExp(u,"g"),a[u]);var h=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],c=["January","February","March","April","May","June","July","August","September","October","November","December"];function l(t,e,r){for(var i="number"==typeof t?t.toString():t||"";i.length<e;)i=r[0]+i;return i}function d(t,e){return l(t,e,"0")}function f(t,e){function r(t){return t<0?-1:t>0?1:0}var i;return 0===(i=r(t.getFullYear()-e.getFullYear()))&&0===(i=r(t.getMonth()-e.getMonth()))&&(i=r(t.getDate()-e.getDate())),i}function p(t){switch(t.getDay()){case 0:return new Date(t.getFullYear()-1,11,29);case 1:return t;case 2:return new Date(t.getFullYear(),0,3);case 3:return new Date(t.getFullYear(),0,2);case 4:return new Date(t.getFullYear(),0,1);case 5:return new Date(t.getFullYear()-1,11,31);case 6:return new Date(t.getFullYear()-1,11,30)}}function g(t){var e=function(t,e){for(var r=new Date(t.getTime());e>0;){var i=de(r.getFullYear()),n=r.getMonth(),s=(i?Se:Ne)[n];if(!(e>s-r.getDate()))return r.setDate(r.getDate()+e),r;e-=s-r.getDate()+1,r.setDate(1),n<11?r.setMonth(n+1):(r.setMonth(0),r.setFullYear(r.getFullYear()+1))}return r}(new Date(t.tm_year+1900,0,1),t.tm_yday),r=new Date(e.getFullYear(),0,4),i=new Date(e.getFullYear()+1,0,4),n=p(r),s=p(i);return f(n,e)<=0?f(s,e)<=0?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var m={"%a":function(t){return h[t.tm_wday].substring(0,3)},"%A":function(t){return h[t.tm_wday]},"%b":function(t){return c[t.tm_mon].substring(0,3)},"%B":function(t){return c[t.tm_mon]},"%C":function(t){return d((t.tm_year+1900)/100|0,2)},"%d":function(t){return d(t.tm_mday,2)},"%e":function(t){return l(t.tm_mday,2," ")},"%g":function(t){return g(t).toString().substring(2)},"%G":function(t){return g(t)},"%H":function(t){return d(t.tm_hour,2)},"%I":function(t){var e=t.tm_hour;return 0==e?e=12:e>12&&(e-=12),d(e,2)},"%j":function(t){return d(t.tm_mday+function(t,e){for(var r=0,i=0;i<=e;r+=t[i++]);return r}(de(t.tm_year+1900)?Se:Ne,t.tm_mon-1),3)},"%m":function(t){return d(t.tm_mon+1,2)},"%M":function(t){return d(t.tm_min,2)},"%n":function(){return"\n"},"%p":function(t){return t.tm_hour>=0&&t.tm_hour<12?"AM":"PM"},"%S":function(t){return d(t.tm_sec,2)},"%t":function(){return"\t"},"%u":function(t){return t.tm_wday||7},"%U":function(t){var e=t.tm_yday+7-t.tm_wday;return d(Math.floor(e/7),2)},"%V":function(t){var e=Math.floor((t.tm_yday+7-(t.tm_wday+6)%7)/7);if((t.tm_wday+371-t.tm_yday-2)%7<=2&&e++,e){if(53==e){var r=(t.tm_wday+371-t.tm_yday)%7;4==r||3==r&&de(t.tm_year)||(e=1)}}else{e=52;var i=(t.tm_wday+7-t.tm_yday-1)%7;(4==i||5==i&&de(t.tm_year%400-1))&&e++}return d(e,2)},"%w":function(t){return t.tm_wday},"%W":function(t){var e=t.tm_yday+7-(t.tm_wday+6)%7;return d(Math.floor(e/7),2)},"%y":function(t){return(t.tm_year+1900).toString().substring(2)},"%Y":function(t){return t.tm_year+1900},"%z":function(t){var e=t.tm_gmtoff,r=e>=0;return e=(e=Math.abs(e)/60)/60*100+e%60,(r?"+":"-")+String("0000"+e).slice(-4)},"%Z":function(t){return t.tm_zone},"%%":function(){return"%"}};for(var u in o=o.replace(/%%/g,"\0\0"),m)o.includes(u)&&(o=o.replace(new RegExp(u,"g"),m[u](s)));var y=Nt(o=o.replace(/\0\0/g,"%"),!1);return y.length>e?0:(function(t,e){R.set(t,e)}(y,t),y.length-1)}(t,e,r,i)},Ka:function(){S("missing function: v4_generate_JIT_code"),it(-1)}},Le=(function(){var t={a:Ce};function e(t,e){var r,i=t.exports;i=te.instrumentWasmExports(i),a.asm=i,V((M=a.asm.vb).buffer),X=a.asm.yb,r=a.asm.wb,Y.unshift(r),rt()}function r(t){e(t.instance)}function i(e){return Promise.resolve().then((function(){return function(t){try{if(t==nt&&N)return new Uint8Array(N);var e=Be(t);if(e)return e;if(c)return c(t);throw"both async and sync fetching of the wasm failed"}catch(t){it(t)}}(nt)})).then((function(e){return WebAssembly.instantiate(e,t)})).then((function(t){return t})).then(e,(function(t){S("failed to asynchronously prepare wasm: "+t),it(t)}))}if(et(),a.instantiateWasm)try{var n=a.instantiateWasm(t,e);return te.instrumentWasmExports(n)}catch(t){S("Module.instantiateWasm callback failed with error: "+t),o(t)}(N||"function"!=typeof WebAssembly.instantiateStreaming||ht(nt)||nt.startsWith("file://")||b||"function"!=typeof fetch?i(r):fetch(nt,{credentials:"same-origin"}).then((function(e){return WebAssembly.instantiateStreaming(e,t).then(r,(function(t){return S("wasm streaming compile failed: "+t),S("falling back to ArrayBuffer instantiation"),i(r)}))}))).catch(o)}(),a.___wasm_call_ctors=function(){return(a.___wasm_call_ctors=a.asm.wb).apply(null,arguments)},a._free=function(){return(Le=a._free=a.asm.xb).apply(null,arguments)}),je=(a.__ZN5boost13serialization16singleton_module8get_lockEv=function(){return(a.__ZN5boost13serialization16singleton_module8get_lockEv=a.asm.zb).apply(null,arguments)},a.getTempRet0=function(){return(je=a.getTempRet0=a.asm.Ab).apply(null,arguments)}),Ze=(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN5tools7wallet210pending_txEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN5tools7wallet210pending_txEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Bb).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN10cryptonote11transactionEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN10cryptonote11transactionEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Cb).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorINS_7variantIN10cryptonote8txin_genEJNS7_14txin_to_scriptENS7_18txin_to_scripthashENS7_11txin_to_keyEEEENS4_9allocatorISC_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorINS_7variantIN10cryptonote8txin_genEJNS7_14txin_to_scriptENS7_18txin_to_scripthashENS7_11txin_to_keyEEEENS4_9allocatorISC_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Db).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENS_7variantIN10cryptonote8txin_genEJNS5_14txin_to_scriptENS5_18txin_to_scripthashENS5_11txin_to_keyEEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENS_7variantIN10cryptonote8txin_genEJNS5_14txin_to_scriptENS5_18txin_to_scripthashENS5_11txin_to_keyEEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Eb).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN10cryptonote8txin_genEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN10cryptonote8txin_genEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Fb).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN10cryptonote14txin_to_scriptEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN10cryptonote14txin_to_scriptEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Gb).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN6crypto4hashEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN6crypto4hashEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Hb).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN10cryptonote18txin_to_scripthashEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN10cryptonote18txin_to_scripthashEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Ib).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN10cryptonote15txout_to_scriptEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN10cryptonote15txout_to_scriptEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Jb).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIN6crypto10public_keyENS4_9allocatorIS7_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIN6crypto10public_keyENS4_9allocatorIS7_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Kb).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN6crypto10public_keyEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN6crypto10public_keyEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Lb).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN10cryptonote11txin_to_keyEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN10cryptonote11txin_to_keyEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Mb).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIyNS4_9allocatorIyEEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIyNS4_9allocatorIyEEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Nb).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN6crypto9key_imageEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN6crypto9key_imageEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Ob).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIN10cryptonote6tx_outENS4_9allocatorIS7_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIN10cryptonote6tx_outENS4_9allocatorIS7_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Pb).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN10cryptonote6tx_outEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN10cryptonote6tx_outEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Qb).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENS_7variantIN10cryptonote15txout_to_scriptEJNS5_19txout_to_scripthashENS5_12txout_to_keyENS5_19txout_to_tagged_keyEEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENS_7variantIN10cryptonote15txout_to_scriptEJNS5_19txout_to_scripthashENS5_12txout_to_keyENS5_19txout_to_tagged_keyEEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Rb).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN10cryptonote19txout_to_scripthashEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN10cryptonote19txout_to_scripthashEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Sb).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN10cryptonote12txout_to_keyEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN10cryptonote12txout_to_keyEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Tb).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN10cryptonote19txout_to_tagged_keyEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN10cryptonote19txout_to_tagged_keyEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Ub).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN6crypto8view_tagEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN6crypto8view_tagEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Vb).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIhNS4_9allocatorIhEEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIhNS4_9allocatorIhEEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Wb).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorINS5_IN6crypto9signatureENS4_9allocatorIS7_EEEENS8_ISA_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorINS5_IN6crypto9signatureENS4_9allocatorIS7_EEEENS8_ISA_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Xb).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIN6crypto9signatureENS4_9allocatorIS7_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIN6crypto9signatureENS4_9allocatorIS7_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Yb).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN6crypto9signatureEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN6crypto9signatureEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Zb).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN3rct10rctSigBaseEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN3rct10rctSigBaseEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm._b).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIN3rct3keyENS4_9allocatorIS7_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIN3rct3keyENS4_9allocatorIS7_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.$b).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN3rct3keyEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN3rct3keyEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.ac).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIN3rct9ecdhTupleENS4_9allocatorIS7_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIN3rct9ecdhTupleENS4_9allocatorIS7_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.bc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN3rct9ecdhTupleEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN3rct9ecdhTupleEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.cc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN3rct14rctSigPrunableEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN3rct14rctSigPrunableEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.dc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIN3rct8rangeSigENS4_9allocatorIS7_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIN3rct8rangeSigENS4_9allocatorIS7_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.ec).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN3rct8rangeSigEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN3rct8rangeSigEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.fc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN3rct7boroSigEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN3rct7boroSigEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.gc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIN3rct11BulletproofENS4_9allocatorIS7_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIN3rct11BulletproofENS4_9allocatorIS7_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.hc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN3rct11BulletproofEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN3rct11BulletproofEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.ic).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIN3rct15BulletproofPlusENS4_9allocatorIS7_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIN3rct15BulletproofPlusENS4_9allocatorIS7_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.jc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN3rct15BulletproofPlusEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN3rct15BulletproofPlusEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.kc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIN3rct5mgSigENS4_9allocatorIS7_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIN3rct5mgSigENS4_9allocatorIS7_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.lc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN3rct5mgSigEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN3rct5mgSigEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.mc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorINS5_IN3rct3keyENS4_9allocatorIS7_EEEENS8_ISA_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorINS5_IN3rct3keyENS4_9allocatorIS7_EEEENS8_ISA_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.nc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIN3rct5clsagENS4_9allocatorIS7_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIN3rct5clsagENS4_9allocatorIS7_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.oc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN3rct5clsagEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN3rct5clsagEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.pc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN10cryptonote20tx_destination_entryEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN10cryptonote20tx_destination_entryEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.qc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN10cryptonote22account_public_addressEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN10cryptonote22account_public_addressEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.rc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__24listImNS4_9allocatorImEEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__24listImNS4_9allocatorImEEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.sc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN4epee7mlockedIN5tools8scrubbedIN6crypto9ec_scalarEEEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN4epee7mlockedIN5tools8scrubbedIN6crypto9ec_scalarEEEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.tc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIN10cryptonote20tx_destination_entryENS4_9allocatorIS7_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIN10cryptonote20tx_destination_entryENS4_9allocatorIS7_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.uc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN5tools7wallet220tx_construction_dataEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN5tools7wallet220tx_construction_dataEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.vc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIN10cryptonote15tx_source_entryENS4_9allocatorIS7_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIN10cryptonote15tx_source_entryENS4_9allocatorIS7_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.wc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN10cryptonote15tx_source_entryEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN10cryptonote15tx_source_entryEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.xc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorINS4_4pairIyN3rct5ctkeyEEENS4_9allocatorIS9_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorINS4_4pairIyN3rct5ctkeyEEENS4_9allocatorIS9_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.yc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__24pairIyN3rct5ctkeyEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__24pairIyN3rct5ctkeyEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.zc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN3rct5ctkeyEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN3rct5ctkeyEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Ac).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN3rct14multisig_kLRkiEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN3rct14multisig_kLRkiEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Bc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__23setIjNS4_4lessIjEENS4_9allocatorIjEEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__23setIjNS4_4lessIjEENS4_9allocatorIjEEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Cc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN3rct9RCTConfigEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN3rct9RCTConfigEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Dc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIN4epee7mlockedIN5tools8scrubbedIN6crypto9ec_scalarEEEEENS4_9allocatorISD_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIN4epee7mlockedIN5tools8scrubbedIN6crypto9ec_scalarEEEEENS4_9allocatorISD_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Ec).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorImNS4_9allocatorImEEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorImNS4_9allocatorImEEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Fc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIN5tools7wallet212multisig_sigENS4_9allocatorIS8_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__26vectorIN5tools7wallet212multisig_sigENS4_9allocatorIS8_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Gc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN5tools7wallet212multisig_sigEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN5tools7wallet212multisig_sigEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Hc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN3rct6rctSigEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN3rct6rctSigEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Ic).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__213unordered_setIN6crypto10public_keyENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorIS7_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__213unordered_setIN6crypto10public_keyENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorIS7_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Jc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__213unordered_setIN3rct3keyENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorIS7_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveENSt3__213unordered_setIN3rct3keyENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorIS7_EEEEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Kc).apply(null,arguments)},a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN3rct12multisig_outEE16save_object_dataERNS1_14basic_oarchiveEPKv=function(){return(a.__ZNK5boost7archive6detail11oserializerINS0_24portable_binary_oarchiveEN3rct12multisig_outEE16save_object_dataERNS1_14basic_oarchiveEPKv=a.asm.Lc).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet210pending_txEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet210pending_txEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Mc).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN10cryptonote11transactionEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN10cryptonote11transactionEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Nc).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorINS_7variantIN10cryptonote8txin_genEJNS7_14txin_to_scriptENS7_18txin_to_scripthashENS7_11txin_to_keyEEEENS4_9allocatorISC_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorINS_7variantIN10cryptonote8txin_genEJNS7_14txin_to_scriptENS7_18txin_to_scripthashENS7_11txin_to_keyEEEENS4_9allocatorISC_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Oc).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENS_7variantIN10cryptonote8txin_genEJNS5_14txin_to_scriptENS5_18txin_to_scripthashENS5_11txin_to_keyEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENS_7variantIN10cryptonote8txin_genEJNS5_14txin_to_scriptENS5_18txin_to_scripthashENS5_11txin_to_keyEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Pc).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN10cryptonote8txin_genEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN10cryptonote8txin_genEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Qc).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN10cryptonote14txin_to_scriptEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN10cryptonote14txin_to_scriptEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Rc).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN6crypto4hashEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN6crypto4hashEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Sc).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN10cryptonote18txin_to_scripthashEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN10cryptonote18txin_to_scripthashEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Tc).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN10cryptonote15txout_to_scriptEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN10cryptonote15txout_to_scriptEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Uc).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN6crypto10public_keyENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN6crypto10public_keyENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Vc).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN6crypto10public_keyEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN6crypto10public_keyEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Wc).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN10cryptonote11txin_to_keyEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN10cryptonote11txin_to_keyEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Xc).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIyNS4_9allocatorIyEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIyNS4_9allocatorIyEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Yc).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN6crypto9key_imageEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN6crypto9key_imageEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Zc).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN10cryptonote6tx_outENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN10cryptonote6tx_outENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm._c).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN10cryptonote6tx_outEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN10cryptonote6tx_outEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.$c).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENS_7variantIN10cryptonote15txout_to_scriptEJNS5_19txout_to_scripthashENS5_12txout_to_keyENS5_19txout_to_tagged_keyEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENS_7variantIN10cryptonote15txout_to_scriptEJNS5_19txout_to_scripthashENS5_12txout_to_keyENS5_19txout_to_tagged_keyEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.ad).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN10cryptonote19txout_to_scripthashEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN10cryptonote19txout_to_scripthashEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.bd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN10cryptonote12txout_to_keyEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN10cryptonote12txout_to_keyEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.cd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN10cryptonote19txout_to_tagged_keyEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN10cryptonote19txout_to_tagged_keyEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.dd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN6crypto8view_tagEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN6crypto8view_tagEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.ed).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIhNS4_9allocatorIhEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIhNS4_9allocatorIhEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.fd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorINS5_IN6crypto9signatureENS4_9allocatorIS7_EEEENS8_ISA_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorINS5_IN6crypto9signatureENS4_9allocatorIS7_EEEENS8_ISA_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.gd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN6crypto9signatureENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN6crypto9signatureENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.hd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN6crypto9signatureEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN6crypto9signatureEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.id).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3rct10rctSigBaseEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3rct10rctSigBaseEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.jd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN3rct3keyENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN3rct3keyENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.kd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3rct3keyEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3rct3keyEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.ld).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN3rct9ecdhTupleENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN3rct9ecdhTupleENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.md).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3rct9ecdhTupleEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3rct9ecdhTupleEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.nd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3rct14rctSigPrunableEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3rct14rctSigPrunableEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.od).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN3rct8rangeSigENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN3rct8rangeSigENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.pd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3rct8rangeSigEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3rct8rangeSigEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.qd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3rct7boroSigEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3rct7boroSigEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.rd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN3rct11BulletproofENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN3rct11BulletproofENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.sd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3rct11BulletproofEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3rct11BulletproofEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.td).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN3rct15BulletproofPlusENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN3rct15BulletproofPlusENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.ud).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3rct15BulletproofPlusEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3rct15BulletproofPlusEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.vd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN3rct5mgSigENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN3rct5mgSigENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.wd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3rct5mgSigEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3rct5mgSigEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.xd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorINS5_IN3rct3keyENS4_9allocatorIS7_EEEENS8_ISA_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorINS5_IN3rct3keyENS4_9allocatorIS7_EEEENS8_ISA_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.yd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN3rct5clsagENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN3rct5clsagENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.zd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3rct5clsagEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3rct5clsagEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Ad).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN10cryptonote20tx_destination_entryEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN10cryptonote20tx_destination_entryEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Bd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN10cryptonote22account_public_addressEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN10cryptonote22account_public_addressEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Cd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__24listImNS4_9allocatorImEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__24listImNS4_9allocatorImEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Dd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN4epee7mlockedIN5tools8scrubbedIN6crypto9ec_scalarEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN4epee7mlockedIN5tools8scrubbedIN6crypto9ec_scalarEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Ed).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN10cryptonote20tx_destination_entryENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN10cryptonote20tx_destination_entryENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Fd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet220tx_construction_dataEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet220tx_construction_dataEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Gd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN10cryptonote15tx_source_entryENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN10cryptonote15tx_source_entryENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Hd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN10cryptonote15tx_source_entryEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN10cryptonote15tx_source_entryEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Id).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorINS4_4pairIyN3rct5ctkeyEEENS4_9allocatorIS9_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorINS4_4pairIyN3rct5ctkeyEEENS4_9allocatorIS9_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Jd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__24pairIyN3rct5ctkeyEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__24pairIyN3rct5ctkeyEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Kd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3rct5ctkeyEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3rct5ctkeyEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Ld).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3rct14multisig_kLRkiEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3rct14multisig_kLRkiEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Md).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__23setIjNS4_4lessIjEENS4_9allocatorIjEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__23setIjNS4_4lessIjEENS4_9allocatorIjEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Nd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3rct9RCTConfigEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3rct9RCTConfigEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Od).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN4epee7mlockedIN5tools8scrubbedIN6crypto9ec_scalarEEEEENS4_9allocatorISD_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN4epee7mlockedIN5tools8scrubbedIN6crypto9ec_scalarEEEEENS4_9allocatorISD_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Pd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorImNS4_9allocatorImEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorImNS4_9allocatorImEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Qd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN5tools7wallet212multisig_sigENS4_9allocatorIS8_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN5tools7wallet212multisig_sigENS4_9allocatorIS8_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Rd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet212multisig_sigEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet212multisig_sigEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Sd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3rct6rctSigEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3rct6rctSigEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Td).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_setIN6crypto10public_keyENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_setIN6crypto10public_keyENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Ud).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_setIN3rct3keyENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_setIN3rct3keyENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Vd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3rct12multisig_outEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3rct12multisig_outEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Wd).apply(null,arguments)},a.___errno_location=function(){return(Ze=a.___errno_location=a.asm.Xd).apply(null,arguments)}),De=a._malloc=function(){return(De=a._malloc=a.asm.Yd).apply(null,arguments)},Fe=(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet2EE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet2EE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Zd).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN6crypto4hashENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN6crypto4hashENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm._d).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools9hashchainEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools9hashchainEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.$d).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__25dequeIN6crypto4hashENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__25dequeIN6crypto4hashENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.ae).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN5tools7wallet216transfer_detailsENS4_9allocatorIS8_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN5tools7wallet216transfer_detailsENS4_9allocatorIS8_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.be).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet216transfer_detailsEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet216transfer_detailsEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.ce).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN10cryptonote18transaction_prefixEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN10cryptonote18transaction_prefixEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.de).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN10cryptonote16subaddress_indexEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN10cryptonote16subaddress_indexEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.ee).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorINS4_4pairIyN6crypto4hashEEENS4_9allocatorIS9_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorINS4_4pairIyN6crypto4hashEEENS4_9allocatorIS9_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.fe).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__24pairIyN6crypto4hashEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__24pairIyN6crypto4hashEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.ge).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_mapIN6crypto9key_imageEmNS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_mEEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_mapIN6crypto9key_imageEmNS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_mEEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.he).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_mapIN6crypto4hashEN5tools7wallet228unconfirmed_transfer_detailsENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_SA_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_mapIN6crypto4hashEN5tools7wallet228unconfirmed_transfer_detailsENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_SA_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.ie).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet228unconfirmed_transfer_detailsEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet228unconfirmed_transfer_detailsEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.je).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorINS4_4pairIN6crypto9key_imageENS5_IyNS4_9allocatorIyEEEEEENS9_ISC_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorINS4_4pairIN6crypto9key_imageENS5_IyNS4_9allocatorIyEEEEEENS9_ISC_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.ke).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__24pairIN6crypto9key_imageENS4_6vectorIyNS4_9allocatorIyEEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__24pairIN6crypto9key_imageENS4_6vectorIyNS4_9allocatorIyEEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.le).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__218unordered_multimapIN6crypto4hashEN5tools7wallet215payment_detailsENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_SA_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__218unordered_multimapIN6crypto4hashEN5tools7wallet215payment_detailsENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_SA_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.me).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet215payment_detailsEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet215payment_detailsEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.ne).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_mapIN6crypto4hashEN4epee7mlockedIN5tools8scrubbedINS6_9ec_scalarEEEEENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_SE_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_mapIN6crypto4hashEN4epee7mlockedIN5tools8scrubbedINS6_9ec_scalarEEEEENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_SE_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.oe).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_mapIN6crypto4hashEN5tools7wallet226confirmed_transfer_detailsENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_SA_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_mapIN6crypto4hashEN5tools7wallet226confirmed_transfer_detailsENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_SA_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.pe).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet226confirmed_transfer_detailsEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet226confirmed_transfer_detailsEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.qe).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_mapIN6crypto4hashENS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS4_4hashIS7_EENS4_8equal_toIS7_EENSB_INS4_4pairIKS7_SD_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_mapIN6crypto4hashENS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS4_4hashIS7_EENS4_8equal_toIS7_EENSB_INS4_4pairIKS7_SD_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.re).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_mapIN6crypto4hashEN5tools7wallet215payment_detailsENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_SA_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_mapIN6crypto4hashEN5tools7wallet215payment_detailsENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_SA_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.se).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_mapIN6crypto10public_keyEmNS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_mEEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_mapIN6crypto10public_keyEmNS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_mEEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.te).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN5tools7wallet216address_book_rowENS4_9allocatorIS8_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN5tools7wallet216address_book_rowENS4_9allocatorIS8_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.ue).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet216address_book_rowEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet216address_book_rowEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.ve).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN6crypto5hash8EE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN6crypto5hash8EE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.we).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_setIN6crypto4hashENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_setIN6crypto4hashENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.xe).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_mapIN6crypto10public_keyEN10cryptonote16subaddress_indexENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_S9_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_mapIN6crypto10public_keyEN10cryptonote16subaddress_indexENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_S9_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.ye).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_mapIN10cryptonote16subaddress_indexEN6crypto10public_keyENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_S9_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_mapIN10cryptonote16subaddress_indexEN6crypto10public_keyENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_S9_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.ze).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorINS5_INS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEENS9_ISD_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorINS5_INS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEENS9_ISD_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Ae).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Be).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_mapIN6crypto4hashENS4_6vectorIN4epee7mlockedIN5tools8scrubbedINS6_9ec_scalarEEEEENS4_9allocatorISF_EEEENS4_4hashIS7_EENS4_8equal_toIS7_EENSG_INS4_4pairIKS7_SI_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_mapIN6crypto4hashENS4_6vectorIN4epee7mlockedIN5tools8scrubbedINS6_9ec_scalarEEEEENS4_9allocatorISF_EEEENS4_4hashIS7_EENS4_8equal_toIS7_EENSG_INS4_4pairIKS7_SI_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Ce).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESB_NS4_4hashISB_EENS4_8equal_toISB_EENS9_INS4_4pairIKSB_SB_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESB_NS4_4hashISB_EENS4_8equal_toISB_EENS9_INS4_4pairIKSB_SB_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.De).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__218unordered_multimapIN6crypto4hashEN5tools7wallet220pool_payment_detailsENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_SA_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__218unordered_multimapIN6crypto4hashEN5tools7wallet220pool_payment_detailsENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_SA_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Ee).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet220pool_payment_detailsEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet220pool_payment_detailsEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Fe).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__24pairINS4_3mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_NS4_4lessISC_EENSA_INS5_IKSC_SC_EEEEEENS4_6vectorISC_NSA_ISC_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__24pairINS4_3mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_NS4_4lessISC_EENSA_INS5_IKSC_SC_EEEEEENS4_6vectorISC_NSA_ISC_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Ge).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__23mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESB_NS4_4lessISB_EENS9_INS4_4pairIKSB_SB_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__23mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESB_NS4_4lessISB_EENS9_INS4_4pairIKSB_SB_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.He).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__24pairIKNS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESB_EEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__24pairIKNS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESB_EEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Ie).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_mapIN6crypto10public_keyENS6_9key_imageENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_S8_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_mapIN6crypto10public_keyENS6_9key_imageENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_S8_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Je).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN5tools7wallet2EE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN5tools7wallet2EE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Ke).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN6crypto4hashENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN6crypto4hashENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Le).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN6crypto4hashEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN6crypto4hashEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Me).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN5tools9hashchainEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN5tools9hashchainEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Ne).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__25dequeIN6crypto4hashENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__25dequeIN6crypto4hashENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Oe).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN5tools7wallet216transfer_detailsENS4_9allocatorIS8_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN5tools7wallet216transfer_detailsENS4_9allocatorIS8_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Pe).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN5tools7wallet216transfer_detailsEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN5tools7wallet216transfer_detailsEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Qe).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN10cryptonote11transactionEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN10cryptonote11transactionEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Re).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorINS_7variantIN10cryptonote8txin_genEJNS7_14txin_to_scriptENS7_18txin_to_scripthashENS7_11txin_to_keyEEEENS4_9allocatorISC_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorINS_7variantIN10cryptonote8txin_genEJNS7_14txin_to_scriptENS7_18txin_to_scripthashENS7_11txin_to_keyEEEENS4_9allocatorISC_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Se).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENS_7variantIN10cryptonote8txin_genEJNS5_14txin_to_scriptENS5_18txin_to_scripthashENS5_11txin_to_keyEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENS_7variantIN10cryptonote8txin_genEJNS5_14txin_to_scriptENS5_18txin_to_scripthashENS5_11txin_to_keyEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Te).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN10cryptonote8txin_genEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN10cryptonote8txin_genEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Ue).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN10cryptonote14txin_to_scriptEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN10cryptonote14txin_to_scriptEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Ve).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN10cryptonote18txin_to_scripthashEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN10cryptonote18txin_to_scripthashEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.We).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN10cryptonote15txout_to_scriptEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN10cryptonote15txout_to_scriptEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Xe).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN6crypto10public_keyENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN6crypto10public_keyENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Ye).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN6crypto10public_keyEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN6crypto10public_keyEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Ze).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN10cryptonote11txin_to_keyEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN10cryptonote11txin_to_keyEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm._e).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIyNS4_9allocatorIyEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIyNS4_9allocatorIyEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.$e).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN10cryptonote6tx_outENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN10cryptonote6tx_outENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.af).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN10cryptonote6tx_outEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN10cryptonote6tx_outEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.bf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENS_7variantIN10cryptonote15txout_to_scriptEJNS5_19txout_to_scripthashENS5_12txout_to_keyENS5_19txout_to_tagged_keyEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENS_7variantIN10cryptonote15txout_to_scriptEJNS5_19txout_to_scripthashENS5_12txout_to_keyENS5_19txout_to_tagged_keyEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.cf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN10cryptonote19txout_to_scripthashEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN10cryptonote19txout_to_scripthashEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.df).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN10cryptonote12txout_to_keyEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN10cryptonote12txout_to_keyEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.ef).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN10cryptonote19txout_to_tagged_keyEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN10cryptonote19txout_to_tagged_keyEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.ff).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN6crypto8view_tagEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN6crypto8view_tagEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.gf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIhNS4_9allocatorIhEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIhNS4_9allocatorIhEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.hf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorINS5_IN6crypto9signatureENS4_9allocatorIS7_EEEENS8_ISA_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorINS5_IN6crypto9signatureENS4_9allocatorIS7_EEEENS8_ISA_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.jf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN6crypto9signatureENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN6crypto9signatureENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.kf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN6crypto9signatureEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN6crypto9signatureEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.lf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN3rct10rctSigBaseEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN3rct10rctSigBaseEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.mf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN3rct9ecdhTupleENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN3rct9ecdhTupleENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.nf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN3rct9ecdhTupleEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN3rct9ecdhTupleEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.of).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN3rct14rctSigPrunableEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN3rct14rctSigPrunableEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.pf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN3rct8rangeSigENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN3rct8rangeSigENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.qf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN3rct8rangeSigEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN3rct8rangeSigEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.rf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN3rct7boroSigEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN3rct7boroSigEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.sf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN3rct3keyEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN3rct3keyEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.tf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN3rct11BulletproofENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN3rct11BulletproofENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.uf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN3rct11BulletproofEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN3rct11BulletproofEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.vf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN3rct15BulletproofPlusENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN3rct15BulletproofPlusENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.wf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN3rct15BulletproofPlusEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN3rct15BulletproofPlusEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.xf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN3rct5mgSigENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN3rct5mgSigENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.yf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN3rct5mgSigEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN3rct5mgSigEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.zf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorINS5_IN3rct3keyENS4_9allocatorIS7_EEEENS8_ISA_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorINS5_IN3rct3keyENS4_9allocatorIS7_EEEENS8_ISA_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Af).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN3rct3keyENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN3rct3keyENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Bf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN3rct5clsagENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN3rct5clsagENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Cf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN3rct5clsagEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN3rct5clsagEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Df).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN10cryptonote18transaction_prefixEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN10cryptonote18transaction_prefixEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Ef).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN6crypto9key_imageEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN6crypto9key_imageEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Ff).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN10cryptonote16subaddress_indexEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN10cryptonote16subaddress_indexEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Gf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN5tools7wallet213multisig_infoENS4_9allocatorIS8_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN5tools7wallet213multisig_infoENS4_9allocatorIS8_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Hf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN5tools7wallet213multisig_infoEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN5tools7wallet213multisig_infoEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.If).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN5tools7wallet213multisig_info2LRENS4_9allocatorIS9_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN5tools7wallet213multisig_info2LRENS4_9allocatorIS9_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Jf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN5tools7wallet213multisig_info2LREE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN5tools7wallet213multisig_info2LREE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Kf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN6crypto9key_imageENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN6crypto9key_imageENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Lf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorINS4_4pairIyN6crypto4hashEEENS4_9allocatorIS9_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorINS4_4pairIyN6crypto4hashEEENS4_9allocatorIS9_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Mf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__24pairIyN6crypto4hashEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__24pairIyN6crypto4hashEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Nf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN10cryptonote22account_public_addressEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN10cryptonote22account_public_addressEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Of).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__213unordered_mapIN6crypto9key_imageEmNS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_mEEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__213unordered_mapIN6crypto9key_imageEmNS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_mEEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Pf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__213unordered_mapIN6crypto4hashEN5tools7wallet228unconfirmed_transfer_detailsENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_SA_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__213unordered_mapIN6crypto4hashEN5tools7wallet228unconfirmed_transfer_detailsENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_SA_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Qf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN5tools7wallet228unconfirmed_transfer_detailsEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN5tools7wallet228unconfirmed_transfer_detailsEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Rf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN10cryptonote20tx_destination_entryENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN10cryptonote20tx_destination_entryENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Sf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN10cryptonote20tx_destination_entryEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN10cryptonote20tx_destination_entryEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Tf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__23setIjNS4_4lessIjEENS4_9allocatorIjEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__23setIjNS4_4lessIjEENS4_9allocatorIjEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Uf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorINS4_4pairIN6crypto9key_imageENS5_IyNS4_9allocatorIyEEEEEENS9_ISC_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorINS4_4pairIN6crypto9key_imageENS5_IyNS4_9allocatorIyEEEEEENS9_ISC_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Vf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__24pairIN6crypto9key_imageENS4_6vectorIyNS4_9allocatorIyEEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__24pairIN6crypto9key_imageENS4_6vectorIyNS4_9allocatorIyEEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Wf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__218unordered_multimapIN6crypto4hashEN5tools7wallet215payment_detailsENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_SA_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__218unordered_multimapIN6crypto4hashEN5tools7wallet215payment_detailsENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_SA_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Xf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN5tools7wallet215payment_detailsEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN5tools7wallet215payment_detailsEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Yf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__213unordered_mapIN6crypto4hashEN4epee7mlockedIN5tools8scrubbedINS6_9ec_scalarEEEEENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_SE_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__213unordered_mapIN6crypto4hashEN4epee7mlockedIN5tools8scrubbedINS6_9ec_scalarEEEEENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_SE_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Zf).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN4epee7mlockedIN5tools8scrubbedIN6crypto9ec_scalarEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN4epee7mlockedIN5tools8scrubbedIN6crypto9ec_scalarEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm._f).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__213unordered_mapIN6crypto4hashEN5tools7wallet226confirmed_transfer_detailsENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_SA_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__213unordered_mapIN6crypto4hashEN5tools7wallet226confirmed_transfer_detailsENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_SA_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.$f).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN5tools7wallet226confirmed_transfer_detailsEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN5tools7wallet226confirmed_transfer_detailsEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.ag).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__213unordered_mapIN6crypto4hashENS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS4_4hashIS7_EENS4_8equal_toIS7_EENSB_INS4_4pairIKS7_SD_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__213unordered_mapIN6crypto4hashENS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS4_4hashIS7_EENS4_8equal_toIS7_EENSB_INS4_4pairIKS7_SD_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.bg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__213unordered_mapIN6crypto4hashEN5tools7wallet215payment_detailsENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_SA_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__213unordered_mapIN6crypto4hashEN5tools7wallet215payment_detailsENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_SA_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.cg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__213unordered_mapIN6crypto10public_keyEmNS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_mEEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__213unordered_mapIN6crypto10public_keyEmNS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_mEEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.dg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN5tools7wallet216address_book_rowENS4_9allocatorIS8_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN5tools7wallet216address_book_rowENS4_9allocatorIS8_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.eg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN5tools7wallet216address_book_rowEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN5tools7wallet216address_book_rowEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.fg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN6crypto5hash8EE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN6crypto5hash8EE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.gg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__213unordered_setIN6crypto4hashENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__213unordered_setIN6crypto4hashENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.hg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__213unordered_mapIN6crypto10public_keyEN10cryptonote16subaddress_indexENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_S9_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__213unordered_mapIN6crypto10public_keyEN10cryptonote16subaddress_indexENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_S9_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.ig).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__213unordered_mapIN10cryptonote16subaddress_indexEN6crypto10public_keyENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_S9_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__213unordered_mapIN10cryptonote16subaddress_indexEN6crypto10public_keyENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_S9_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.jg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorINS5_INS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEENS9_ISD_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorINS5_INS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEENS9_ISD_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.kg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.lg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__213unordered_mapIN6crypto4hashENS4_6vectorIN4epee7mlockedIN5tools8scrubbedINS6_9ec_scalarEEEEENS4_9allocatorISF_EEEENS4_4hashIS7_EENS4_8equal_toIS7_EENSG_INS4_4pairIKS7_SI_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__213unordered_mapIN6crypto4hashENS4_6vectorIN4epee7mlockedIN5tools8scrubbedINS6_9ec_scalarEEEEENS4_9allocatorISF_EEEENS4_4hashIS7_EENS4_8equal_toIS7_EENSG_INS4_4pairIKS7_SI_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.mg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN4epee7mlockedIN5tools8scrubbedIN6crypto9ec_scalarEEEEENS4_9allocatorISD_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__26vectorIN4epee7mlockedIN5tools8scrubbedIN6crypto9ec_scalarEEEEENS4_9allocatorISD_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.ng).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__213unordered_mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESB_NS4_4hashISB_EENS4_8equal_toISB_EENS9_INS4_4pairIKSB_SB_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__213unordered_mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESB_NS4_4hashISB_EENS4_8equal_toISB_EENS9_INS4_4pairIKSB_SB_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.og).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__218unordered_multimapIN6crypto4hashEN5tools7wallet220pool_payment_detailsENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_SA_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__218unordered_multimapIN6crypto4hashEN5tools7wallet220pool_payment_detailsENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_SA_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.pg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN5tools7wallet220pool_payment_detailsEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveEN5tools7wallet220pool_payment_detailsEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.qg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__24pairINS4_3mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_NS4_4lessISC_EENSA_INS5_IKSC_SC_EEEEEENS4_6vectorISC_NSA_ISC_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__24pairINS4_3mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_NS4_4lessISC_EENSA_INS5_IKSC_SC_EEEEEENS4_6vectorISC_NSA_ISC_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.rg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__23mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESB_NS4_4lessISB_EENS9_INS4_4pairIKSB_SB_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__23mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESB_NS4_4lessISB_EENS9_INS4_4pairIKSB_SB_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.sg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__24pairIKNS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESB_EEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__24pairIKNS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESB_EEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.tg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__213unordered_mapIN6crypto10public_keyENS6_9key_imageENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_S8_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_15binary_iarchiveENSt3__213unordered_mapIN6crypto10public_keyENS6_9key_imageENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_S8_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.ug).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet215unsigned_tx_setEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet215unsigned_tx_setEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.vg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN5tools7wallet220tx_construction_dataENS4_9allocatorIS8_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN5tools7wallet220tx_construction_dataENS4_9allocatorIS8_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.wg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__24pairImNS4_6vectorIN5tools7wallet216transfer_detailsENS4_9allocatorIS9_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__24pairImNS4_6vectorIN5tools7wallet216transfer_detailsENS4_9allocatorIS9_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.xg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet213signed_tx_setEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet213signed_tx_setEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.yg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN5tools7wallet210pending_txENS4_9allocatorIS8_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN5tools7wallet210pending_txENS4_9allocatorIS8_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.zg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN6crypto9key_imageENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN6crypto9key_imageENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Ag).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet215multisig_tx_setEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet215multisig_tx_setEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Bg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN5tools7wallet219reserve_proof_entryENS4_9allocatorIS8_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN5tools7wallet219reserve_proof_entryENS4_9allocatorIS8_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Cg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet219reserve_proof_entryEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet219reserve_proof_entryEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Dg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_mapIN6crypto10public_keyENS6_9signatureENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_S8_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__213unordered_mapIN6crypto10public_keyENS6_9signatureENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorINS4_4pairIKS7_S8_EEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Eg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__25tupleIJyyNS4_6vectorIN5tools7wallet216transfer_detailsENS4_9allocatorIS9_EEEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__25tupleIJyyNS4_6vectorIN5tools7wallet216transfer_detailsENS4_9allocatorIS9_EEEEEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Fg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN5tools7wallet213multisig_infoENS4_9allocatorIS8_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN5tools7wallet213multisig_infoENS4_9allocatorIS8_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Gg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet213multisig_infoEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet213multisig_infoEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Hg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN5tools7wallet213multisig_info2LRENS4_9allocatorIS9_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN5tools7wallet213multisig_info2LRENS4_9allocatorIS9_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Ig).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet213multisig_info2LREE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN5tools7wallet213multisig_info2LREE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Jg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3mms9file_dataEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3mms9file_dataEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Kg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN6crypto9chacha_ivEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN6crypto9chacha_ivEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Lg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3mms13message_storeEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3mms13message_storeEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Mg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN3mms17authorized_signerENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN3mms17authorized_signerENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Ng).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3mms17authorized_signerEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3mms17authorized_signerEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Og).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN3mms7messageENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveENSt3__26vectorIN3mms7messageENS4_9allocatorIS7_EEEEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Pg).apply(null,arguments)},a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3mms7messageEE16load_object_dataERNS1_14basic_iarchiveEPvj=function(){return(a.__ZNK5boost7archive6detail11iserializerINS0_24portable_binary_iarchiveEN3mms7messageEE16load_object_dataERNS1_14basic_iarchiveEPvj=a.asm.Qg).apply(null,arguments)},a.___getTypeName=function(){return(Fe=a.___getTypeName=a.asm.Rg).apply(null,arguments)}),ze=(a.__embind_initialize_bindings=function(){return(a.__embind_initialize_bindings=a.asm.Sg).apply(null,arguments)},a._emscripten_builtin_memalign=function(){return(ze=a._emscripten_builtin_memalign=a.asm.Tg).apply(null,arguments)}),He=a._setThrew=function(){return(He=a._setThrew=a.asm.Ug).apply(null,arguments)},We=a.setTempRet0=function(){return(We=a.setTempRet0=a.asm.Vg).apply(null,arguments)},Ke=a.stackSave=function(){return(Ke=a.stackSave=a.asm.Wg).apply(null,arguments)},qe=a.stackRestore=function(){return(qe=a.stackRestore=a.asm.Xg).apply(null,arguments)},Ue=a.___cxa_can_catch=function(){return(Ue=a.___cxa_can_catch=a.asm.Yg).apply(null,arguments)},Ve=a.___cxa_is_pointer_type=function(){return(Ve=a.___cxa_is_pointer_type=a.asm.Zg).apply(null,arguments)},Xe=a.dynCall_ii=function(){return(Xe=a.dynCall_ii=a.asm._g).apply(null,arguments)},Ge=a.dynCall_vi=function(){return(Ge=a.dynCall_vi=a.asm.$g).apply(null,arguments)},Ye=a.dynCall_iii=function(){return(Ye=a.dynCall_iii=a.asm.ah).apply(null,arguments)},Qe=a.dynCall_vii=function(){return(Qe=a.dynCall_vii=a.asm.bh).apply(null,arguments)},Je=a.dynCall_viiiii=function(){return(Je=a.dynCall_viiiii=a.asm.ch).apply(null,arguments)},_e=a.dynCall_iij=function(){return(_e=a.dynCall_iij=a.asm.dh).apply(null,arguments)},$e=(a.dynCall_iiiiijii=function(){return(a.dynCall_iiiiijii=a.asm.eh).apply(null,arguments)},a.dynCall_iiijiii=function(){return(a.dynCall_iiijiii=a.asm.fh).apply(null,arguments)},a.dynCall_iiiijii=function(){return(a.dynCall_iiiijii=a.asm.gh).apply(null,arguments)},a.dynCall_ji=function(){return($e=a.dynCall_ji=a.asm.hh).apply(null,arguments)}),tr=a.dynCall_v=function(){return(tr=a.dynCall_v=a.asm.ih).apply(null,arguments)},er=a.dynCall_viijiiiij=function(){return(er=a.dynCall_viijiiiij=a.asm.jh).apply(null,arguments)},rr=a.dynCall_viii=function(){return(rr=a.dynCall_viii=a.asm.kh).apply(null,arguments)},ir=a.dynCall_iiii=function(){return(ir=a.dynCall_iiii=a.asm.lh).apply(null,arguments)},nr=a.dynCall_viiii=function(){return(nr=a.dynCall_viiii=a.asm.mh).apply(null,arguments)},sr=a.dynCall_iiiii=function(){return(sr=a.dynCall_iiiii=a.asm.nh).apply(null,arguments)},or=(a.dynCall_vij=function(){return(a.dynCall_vij=a.asm.oh).apply(null,arguments)},a.dynCall_jiiii=function(){return(or=a.dynCall_jiiii=a.asm.ph).apply(null,arguments)}),ar=a.dynCall_viij=function(){return(ar=a.dynCall_viij=a.asm.qh).apply(null,arguments)},ur=(a.dynCall_viiji=function(){return(a.dynCall_viiji=a.asm.rh).apply(null,arguments)},a.dynCall_jii=function(){return(ur=a.dynCall_jii=a.asm.sh).apply(null,arguments)}),hr=a.dynCall_jiii=function(){return(hr=a.dynCall_jiii=a.asm.th).apply(null,arguments)},cr=a.dynCall_viiiiii=function(){return(cr=a.dynCall_viiiiii=a.asm.uh).apply(null,arguments)},lr=a.dynCall_viiiji=function(){return(lr=a.dynCall_viiiji=a.asm.vh).apply(null,arguments)},dr=(a.dynCall_vijiiii=function(){return(a.dynCall_vijiiii=a.asm.wh).apply(null,arguments)},a.dynCall_iiiiiiiii=function(){return(a.dynCall_iiiiiiiii=a.asm.xh).apply(null,arguments)},a.dynCall_iiiiii=function(){return(dr=a.dynCall_iiiiii=a.asm.yh).apply(null,arguments)}),fr=(a.dynCall_vijjjdi=function(){return(a.dynCall_vijjjdi=a.asm.zh).apply(null,arguments)},a.dynCall_vijj=function(){return(a.dynCall_vijj=a.asm.Ah).apply(null,arguments)},a.dynCall_viji=function(){return(fr=a.dynCall_viji=a.asm.Bh).apply(null,arguments)}),pr=(a.dynCall_vijji=function(){return(a.dynCall_vijji=a.asm.Ch).apply(null,arguments)},a.dynCall_vijiijjiij=function(){return(a.dynCall_vijiijjiij=a.asm.Dh).apply(null,arguments)},a.dynCall_vijiiji=function(){return(a.dynCall_vijiiji=a.asm.Eh).apply(null,arguments)},a.dynCall_vijiijii=function(){return(pr=a.dynCall_vijiijii=a.asm.Fh).apply(null,arguments)}),gr=(a.dynCall_vijii=function(){return(a.dynCall_vijii=a.asm.Gh).apply(null,arguments)},a.dynCall_vijij=function(){return(a.dynCall_vijij=a.asm.Hh).apply(null,arguments)},a.dynCall_viijii=function(){return(gr=a.dynCall_viijii=a.asm.Ih).apply(null,arguments)}),mr=a.dynCall_viiiiiiii=function(){return(mr=a.dynCall_viiiiiiii=a.asm.Jh).apply(null,arguments)},yr=a.dynCall_iiiiiiii=function(){return(yr=a.dynCall_iiiiiiii=a.asm.Kh).apply(null,arguments)},vr=a.dynCall_iiiiji=function(){return(vr=a.dynCall_iiiiji=a.asm.Lh).apply(null,arguments)},br=a.dynCall_iiiiiji=function(){return(br=a.dynCall_iiiiiji=a.asm.Mh).apply(null,arguments)},wr=a.dynCall_viijjd=function(){return(wr=a.dynCall_viijjd=a.asm.Nh).apply(null,arguments)},Er=a.dynCall_viiijjjjii=function(){return(Er=a.dynCall_viiijjjjii=a.asm.Oh).apply(null,arguments)},Sr=a.dynCall_jiiiii=function(){return(Sr=a.dynCall_jiiiii=a.asm.Ph).apply(null,arguments)},Nr=a.dynCall_iiiiiiiiii=function(){return(Nr=a.dynCall_iiiiiiiiii=a.asm.Qh).apply(null,arguments)},Mr=a.dynCall_iiiiiii=function(){return(Mr=a.dynCall_iiiiiii=a.asm.Rh).apply(null,arguments)},xr=(a.dynCall_viiiiiiiii=function(){return(a.dynCall_viiiiiiiii=a.asm.Sh).apply(null,arguments)},a.dynCall_viiiiiiiiii=function(){return(xr=a.dynCall_viiiiiiiiii=a.asm.Th).apply(null,arguments)}),Ir=a.dynCall_viiiiiii=function(){return(Ir=a.dynCall_viiiiiii=a.asm.Uh).apply(null,arguments)},Ar=(a.dynCall_iiiij=function(){return(a.dynCall_iiiij=a.asm.Vh).apply(null,arguments)},a.dynCall_iiiiiiiiiiiiiiii=function(){return(a.dynCall_iiiiiiiiiiiiiiii=a.asm.Wh).apply(null,arguments)},a.dynCall_jiji=function(){return(a.dynCall_jiji=a.asm.Xh).apply(null,arguments)},a.dynCall_iidiiii=function(){return(a.dynCall_iidiiii=a.asm.Yh).apply(null,arguments)},a.dynCall_j=function(){return(Ar=a.dynCall_j=a.asm.Zh).apply(null,arguments)}),Pr=a.dynCall_iiiiij=function(){return(Pr=a.dynCall_iiiiij=a.asm._h).apply(null,arguments)},Tr=a.dynCall_iiiiid=function(){return(Tr=a.dynCall_iiiiid=a.asm.$h).apply(null,arguments)},Rr=a.dynCall_iiiiijj=function(){return(Rr=a.dynCall_iiiiijj=a.asm.ai).apply(null,arguments)},kr=(a.dynCall_iiiiiiiiiii=function(){return(a.dynCall_iiiiiiiiiii=a.asm.bi).apply(null,arguments)},a.dynCall_iiiiiiiiiiiii=function(){return(a.dynCall_iiiiiiiiiiiii=a.asm.ci).apply(null,arguments)},a.dynCall_fiii=function(){return(kr=a.dynCall_fiii=a.asm.di).apply(null,arguments)}),Br=a.dynCall_diii=function(){return(Br=a.dynCall_diii=a.asm.ei).apply(null,arguments)},Or=a.dynCall_i=function(){return(Or=a.dynCall_i=a.asm.fi).apply(null,arguments)},Cr=a.dynCall_iiiiiiiiiiii=function(){return(Cr=a.dynCall_iiiiiiiiiiii=a.asm.gi).apply(null,arguments)},Lr=a.dynCall_viiiiiiiiiiiiiii=function(){return(Lr=a.dynCall_viiiiiiiiiiiiiii=a.asm.hi).apply(null,arguments)},jr=(a.dynCall_iiiiiijj=function(){return(a.dynCall_iiiiiijj=a.asm.ii).apply(null,arguments)},a._asyncify_start_unwind=function(){return(jr=a._asyncify_start_unwind=a.asm.ji).apply(null,arguments)}),Zr=a._asyncify_stop_unwind=function(){return(Zr=a._asyncify_stop_unwind=a.asm.ki).apply(null,arguments)},Dr=a._asyncify_start_rewind=function(){return(Dr=a._asyncify_start_rewind=a.asm.li).apply(null,arguments)},Fr=a._asyncify_stop_rewind=function(){return(Fr=a._asyncify_stop_rewind=a.asm.mi).apply(null,arguments)};function zr(t){function r(){Oe||(Oe=!0,a.calledRun=!0,A||(a.noFSInit||At.init.initialized||At.init(),At.ignorePermissions=!1,Mt.init(),lt(Y),e(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),function(){if(a.postRun)for("function"==typeof a.postRun&&(a.postRun=[a.postRun]);a.postRun.length;)t=a.postRun.shift(),Q.unshift(t);var t;lt(Q)}()))}t=t||p,_>0||(function(){if(a.preRun)for("function"==typeof a.preRun&&(a.preRun=[a.preRun]);a.preRun.length;)t=a.preRun.shift(),G.unshift(t);var t;lt(G)}(),_>0||(a.setStatus?(a.setStatus("Running..."),setTimeout((function(){setTimeout((function(){a.setStatus("")}),1),r()}),1)):r()))}if(a.___start_em_js=861404,a.___stop_em_js=865159,a.UTF8ToString=W,a.stringToUTF8=q,a.lengthBytesUTF8=U,a.getTempRet0=je,a.addFunction=function(t,e){if(xe||(xe=new WeakMap,function(t,e){if(xe)for(var r=0;r<0+e;r++){var i=(n=r,X.get(n));i&&xe.set(i,r)}var n}(0,X.length)),xe.has(t))return xe.get(t);var r=function(){if(Ie.length)return Ie.pop();try{X.grow(1)}catch(t){if(!(t instanceof RangeError))throw t;throw"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH."}return X.length-1}();try{Ae(r,t)}catch(i){if(!(i instanceof TypeError))throw i;Ae(r,function(t,e){if("function"==typeof WebAssembly.Function)return new WebAssembly.Function(function(t){for(var e={i:"i32",j:"i32",f:"f32",d:"f64",p:"i32"},r={parameters:[],results:"v"==t[0]?[]:[e[t[0]]]},i=1;i<t.length;++i)r.parameters.push(e[t[i]]),"j"===t[i]&&r.parameters.push("i32");return r}(e),t);var r=[1];!function(t,e){var r=t.slice(0,1),i=t.slice(1),n={i:127,p:127,j:126,f:125,d:124};e.push(96),Me(i.length,e);for(var s=0;s<i.length;++s)e.push(n[i[s]]);"v"==r?e.push(0):e.push(1,n[r])}(e,r);var i=[0,97,115,109,1,0,0,0,1];Me(r.length,i),i.push.apply(i,r),i.push(2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0);var n=new WebAssembly.Module(new Uint8Array(i));return new WebAssembly.Instance(n,{e:{f:t}}).exports.f}(t,e))}return xe.set(t,r),r},a.intArrayToString=dt,tt=function t(){Oe||zr(),Oe||(tt=t)},a.preInit)for("function"==typeof a.preInit&&(a.preInit=[a.preInit]);a.preInit.length>0;)a.preInit.pop()();return zr(),t.ready});t.exports=o},9742:(t,e)=>{"use strict";e.byteLength=function(t){var e=a(t),r=e[0],i=e[1];return 3*(r+i)/4-i},e.toByteArray=function(t){var e,r,s=a(t),o=s[0],u=s[1],h=new n(function(t,e,r){return 3*(e+r)/4-r}(0,o,u)),c=0,l=u>0?o-4:o;for(r=0;r<l;r+=4)e=i[t.charCodeAt(r)]<<18|i[t.charCodeAt(r+1)]<<12|i[t.charCodeAt(r+2)]<<6|i[t.charCodeAt(r+3)],h[c++]=e>>16&255,h[c++]=e>>8&255,h[c++]=255&e;return 2===u&&(e=i[t.charCodeAt(r)]<<2|i[t.charCodeAt(r+1)]>>4,h[c++]=255&e),1===u&&(e=i[t.charCodeAt(r)]<<10|i[t.charCodeAt(r+1)]<<4|i[t.charCodeAt(r+2)]>>2,h[c++]=e>>8&255,h[c++]=255&e),h},e.fromByteArray=function(t){for(var e,i=t.length,n=i%3,s=[],o=16383,a=0,h=i-n;a<h;a+=o)s.push(u(t,a,a+o>h?h:a+o));return 1===n?(e=t[i-1],s.push(r[e>>2]+r[e<<4&63]+"==")):2===n&&(e=(t[i-2]<<8)+t[i-1],s.push(r[e>>10]+r[e>>4&63]+r[e<<2&63]+"=")),s.join("")};for(var r=[],i=[],n="undefined"!=typeof Uint8Array?Uint8Array:Array,s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",o=0;o<64;++o)r[o]=s[o],i[s.charCodeAt(o)]=o;function a(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=t.indexOf("=");return-1===r&&(r=e),[r,r===e?0:4-r%4]}function u(t,e,i){for(var n,s,o=[],a=e;a<i;a+=3)n=(t[a]<<16&16711680)+(t[a+1]<<8&65280)+(255&t[a+2]),o.push(r[(s=n)>>18&63]+r[s>>12&63]+r[s>>6&63]+r[63&s]);return o.join("")}i["-".charCodeAt(0)]=62,i["_".charCodeAt(0)]=63},3550:function(t,e,r){!function(t,e){"use strict";function i(t,e){if(!t)throw new Error(e||"Assertion failed")}function n(t,e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}function s(t,e,r){if(s.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==e&&"be"!==e||(r=e,e=10),this._init(t||0,e||10,r||"be"))}var o;"object"==typeof t?t.exports=s:e.BN=s,s.BN=s,s.wordSize=26;try{o="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:r(6601).Buffer}catch(t){}function a(t,e){var r=t.charCodeAt(e);return r>=48&&r<=57?r-48:r>=65&&r<=70?r-55:r>=97&&r<=102?r-87:void i(!1,"Invalid character in "+t)}function u(t,e,r){var i=a(t,r);return r-1>=e&&(i|=a(t,r-1)<<4),i}function h(t,e,r,n){for(var s=0,o=0,a=Math.min(t.length,r),u=e;u<a;u++){var h=t.charCodeAt(u)-48;s*=n,o=h>=49?h-49+10:h>=17?h-17+10:h,i(h>=0&&o<n,"Invalid character"),s+=o}return s}function c(t,e){t.words=e.words,t.length=e.length,t.negative=e.negative,t.red=e.red}if(s.isBN=function(t){return t instanceof s||null!==t&&"object"==typeof t&&t.constructor.wordSize===s.wordSize&&Array.isArray(t.words)},s.max=function(t,e){return t.cmp(e)>0?t:e},s.min=function(t,e){return t.cmp(e)<0?t:e},s.prototype._init=function(t,e,r){if("number"==typeof t)return this._initNumber(t,e,r);if("object"==typeof t)return this._initArray(t,e,r);"hex"===e&&(e=16),i(e===(0|e)&&e>=2&&e<=36);var n=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&(n++,this.negative=1),n<t.length&&(16===e?this._parseHex(t,n,r):(this._parseBase(t,e,n),"le"===r&&this._initArray(this.toArray(),e,r)))},s.prototype._initNumber=function(t,e,r){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(i(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===r&&this._initArray(this.toArray(),e,r)},s.prototype._initArray=function(t,e,r){if(i("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var s,o,a=0;if("be"===r)for(n=t.length-1,s=0;n>=0;n-=3)o=t[n]|t[n-1]<<8|t[n-2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);else if("le"===r)for(n=0,s=0;n<t.length;n+=3)o=t[n]|t[n+1]<<8|t[n+2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);return this._strip()},s.prototype._parseHex=function(t,e,r){this.length=Math.ceil((t.length-e)/6),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var n,s=0,o=0;if("be"===r)for(i=t.length-1;i>=e;i-=2)n=u(t,e,i)<<s,this.words[o]|=67108863&n,s>=18?(s-=18,o+=1,this.words[o]|=n>>>26):s+=8;else for(i=(t.length-e)%2==0?e+1:e;i<t.length;i+=2)n=u(t,e,i)<<s,this.words[o]|=67108863&n,s>=18?(s-=18,o+=1,this.words[o]|=n>>>26):s+=8;this._strip()},s.prototype._parseBase=function(t,e,r){this.words=[0],this.length=1;for(var i=0,n=1;n<=67108863;n*=e)i++;i--,n=n/e|0;for(var s=t.length-r,o=s%i,a=Math.min(s,s-o)+r,u=0,c=r;c<a;c+=i)u=h(t,c,c+i,e),this.imuln(n),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u);if(0!==o){var l=1;for(u=h(t,c,t.length,e),c=0;c<o;c++)l*=e;this.imuln(l),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u)}this._strip()},s.prototype.copy=function(t){t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];t.length=this.length,t.negative=this.negative,t.red=this.red},s.prototype._move=function(t){c(t,this)},s.prototype.clone=function(){var t=new s(null);return this.copy(t),t},s.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},s.prototype._strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},s.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},"undefined"!=typeof Symbol&&"function"==typeof Symbol.for)try{s.prototype[Symbol.for("nodejs.util.inspect.custom")]=l}catch(t){s.prototype.inspect=l}else s.prototype.inspect=l;function l(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"}var d=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],f=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],p=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function g(t,e,r){r.negative=e.negative^t.negative;var i=t.length+e.length|0;r.length=i,i=i-1|0;var n=0|t.words[0],s=0|e.words[0],o=n*s,a=67108863&o,u=o/67108864|0;r.words[0]=a;for(var h=1;h<i;h++){for(var c=u>>>26,l=67108863&u,d=Math.min(h,e.length-1),f=Math.max(0,h-t.length+1);f<=d;f++){var p=h-f|0;c+=(o=(n=0|t.words[p])*(s=0|e.words[f])+l)/67108864|0,l=67108863&o}r.words[h]=0|l,u=0|c}return 0!==u?r.words[h]=0|u:r.length--,r._strip()}s.prototype.toString=function(t,e){var r;if(e=0|e||1,16===(t=t||10)||"hex"===t){r="";for(var n=0,s=0,o=0;o<this.length;o++){var a=this.words[o],u=(16777215&(a<<n|s)).toString(16);s=a>>>24-n&16777215,(n+=2)>=26&&(n-=26,o--),r=0!==s||o!==this.length-1?d[6-u.length]+u+r:u+r}for(0!==s&&(r=s.toString(16)+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}if(t===(0|t)&&t>=2&&t<=36){var h=f[t],c=p[t];r="";var l=this.clone();for(l.negative=0;!l.isZero();){var g=l.modrn(c).toString(t);r=(l=l.idivn(c)).isZero()?g+r:d[h-g.length]+g+r}for(this.isZero()&&(r="0"+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}i(!1,"Base should be between 2 and 36")},s.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&i(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},s.prototype.toJSON=function(){return this.toString(16,2)},o&&(s.prototype.toBuffer=function(t,e){return this.toArrayLike(o,t,e)}),s.prototype.toArray=function(t,e){return this.toArrayLike(Array,t,e)},s.prototype.toArrayLike=function(t,e,r){this._strip();var n=this.byteLength(),s=r||Math.max(1,n);i(n<=s,"byte array longer than desired length"),i(s>0,"Requested array length <= 0");var o=function(t,e){return t.allocUnsafe?t.allocUnsafe(e):new t(e)}(t,s);return this["_toArrayLike"+("le"===e?"LE":"BE")](o,n),o},s.prototype._toArrayLikeLE=function(t,e){for(var r=0,i=0,n=0,s=0;n<this.length;n++){var o=this.words[n]<<s|i;t[r++]=255&o,r<t.length&&(t[r++]=o>>8&255),r<t.length&&(t[r++]=o>>16&255),6===s?(r<t.length&&(t[r++]=o>>24&255),i=0,s=0):(i=o>>>24,s+=2)}if(r<t.length)for(t[r++]=i;r<t.length;)t[r++]=0},s.prototype._toArrayLikeBE=function(t,e){for(var r=t.length-1,i=0,n=0,s=0;n<this.length;n++){var o=this.words[n]<<s|i;t[r--]=255&o,r>=0&&(t[r--]=o>>8&255),r>=0&&(t[r--]=o>>16&255),6===s?(r>=0&&(t[r--]=o>>24&255),i=0,s=0):(i=o>>>24,s+=2)}if(r>=0)for(t[r--]=i;r>=0;)t[r--]=0},Math.clz32?s.prototype._countBits=function(t){return 32-Math.clz32(t)}:s.prototype._countBits=function(t){var e=t,r=0;return e>=4096&&(r+=13,e>>>=13),e>=64&&(r+=7,e>>>=7),e>=8&&(r+=4,e>>>=4),e>=2&&(r+=2,e>>>=2),r+e},s.prototype._zeroBits=function(t){if(0===t)return 26;var e=t,r=0;return 0==(8191&e)&&(r+=13,e>>>=13),0==(127&e)&&(r+=7,e>>>=7),0==(15&e)&&(r+=4,e>>>=4),0==(3&e)&&(r+=2,e>>>=2),0==(1&e)&&r++,r},s.prototype.bitLength=function(){var t=this.words[this.length-1],e=this._countBits(t);return 26*(this.length-1)+e},s.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,e=0;e<this.length;e++){var r=this._zeroBits(this.words[e]);if(t+=r,26!==r)break}return t},s.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},s.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},s.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},s.prototype.isNeg=function(){return 0!==this.negative},s.prototype.neg=function(){return this.clone().ineg()},s.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},s.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]|t.words[e];return this._strip()},s.prototype.ior=function(t){return i(0==(this.negative|t.negative)),this.iuor(t)},s.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},s.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},s.prototype.iuand=function(t){var e;e=this.length>t.length?t:this;for(var r=0;r<e.length;r++)this.words[r]=this.words[r]&t.words[r];return this.length=e.length,this._strip()},s.prototype.iand=function(t){return i(0==(this.negative|t.negative)),this.iuand(t)},s.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},s.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},s.prototype.iuxor=function(t){var e,r;this.length>t.length?(e=this,r=t):(e=t,r=this);for(var i=0;i<r.length;i++)this.words[i]=e.words[i]^r.words[i];if(this!==e)for(;i<e.length;i++)this.words[i]=e.words[i];return this.length=e.length,this._strip()},s.prototype.ixor=function(t){return i(0==(this.negative|t.negative)),this.iuxor(t)},s.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},s.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},s.prototype.inotn=function(t){i("number"==typeof t&&t>=0);var e=0|Math.ceil(t/26),r=t%26;this._expand(e),r>0&&e--;for(var n=0;n<e;n++)this.words[n]=67108863&~this.words[n];return r>0&&(this.words[n]=~this.words[n]&67108863>>26-r),this._strip()},s.prototype.notn=function(t){return this.clone().inotn(t)},s.prototype.setn=function(t,e){i("number"==typeof t&&t>=0);var r=t/26|0,n=t%26;return this._expand(r+1),this.words[r]=e?this.words[r]|1<<n:this.words[r]&~(1<<n),this._strip()},s.prototype.iadd=function(t){var e,r,i;if(0!==this.negative&&0===t.negative)return this.negative=0,e=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,e=this.isub(t),t.negative=1,e._normSign();this.length>t.length?(r=this,i=t):(r=t,i=this);for(var n=0,s=0;s<i.length;s++)e=(0|r.words[s])+(0|i.words[s])+n,this.words[s]=67108863&e,n=e>>>26;for(;0!==n&&s<r.length;s++)e=(0|r.words[s])+n,this.words[s]=67108863&e,n=e>>>26;if(this.length=r.length,0!==n)this.words[this.length]=n,this.length++;else if(r!==this)for(;s<r.length;s++)this.words[s]=r.words[s];return this},s.prototype.add=function(t){var e;return 0!==t.negative&&0===this.negative?(t.negative=0,e=this.sub(t),t.negative^=1,e):0===t.negative&&0!==this.negative?(this.negative=0,e=t.sub(this),this.negative=1,e):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},s.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var e=this.iadd(t);return t.negative=1,e._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var r,i,n=this.cmp(t);if(0===n)return this.negative=0,this.length=1,this.words[0]=0,this;n>0?(r=this,i=t):(r=t,i=this);for(var s=0,o=0;o<i.length;o++)s=(e=(0|r.words[o])-(0|i.words[o])+s)>>26,this.words[o]=67108863&e;for(;0!==s&&o<r.length;o++)s=(e=(0|r.words[o])+s)>>26,this.words[o]=67108863&e;if(0===s&&o<r.length&&r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this.length=Math.max(this.length,o),r!==this&&(this.negative=1),this._strip()},s.prototype.sub=function(t){return this.clone().isub(t)};var m=function(t,e,r){var i,n,s,o=t.words,a=e.words,u=r.words,h=0,c=0|o[0],l=8191&c,d=c>>>13,f=0|o[1],p=8191&f,g=f>>>13,m=0|o[2],y=8191&m,v=m>>>13,b=0|o[3],w=8191&b,E=b>>>13,S=0|o[4],N=8191&S,M=S>>>13,x=0|o[5],I=8191&x,A=x>>>13,P=0|o[6],T=8191&P,R=P>>>13,k=0|o[7],B=8191&k,O=k>>>13,C=0|o[8],L=8191&C,j=C>>>13,Z=0|o[9],D=8191&Z,F=Z>>>13,z=0|a[0],H=8191&z,W=z>>>13,K=0|a[1],q=8191&K,U=K>>>13,V=0|a[2],X=8191&V,G=V>>>13,Y=0|a[3],Q=8191&Y,J=Y>>>13,_=0|a[4],$=8191&_,tt=_>>>13,et=0|a[5],rt=8191&et,it=et>>>13,nt=0|a[6],st=8191&nt,ot=nt>>>13,at=0|a[7],ut=8191&at,ht=at>>>13,ct=0|a[8],lt=8191&ct,dt=ct>>>13,ft=0|a[9],pt=8191&ft,gt=ft>>>13;r.negative=t.negative^e.negative,r.length=19;var mt=(h+(i=Math.imul(l,H))|0)+((8191&(n=(n=Math.imul(l,W))+Math.imul(d,H)|0))<<13)|0;h=((s=Math.imul(d,W))+(n>>>13)|0)+(mt>>>26)|0,mt&=67108863,i=Math.imul(p,H),n=(n=Math.imul(p,W))+Math.imul(g,H)|0,s=Math.imul(g,W);var yt=(h+(i=i+Math.imul(l,q)|0)|0)+((8191&(n=(n=n+Math.imul(l,U)|0)+Math.imul(d,q)|0))<<13)|0;h=((s=s+Math.imul(d,U)|0)+(n>>>13)|0)+(yt>>>26)|0,yt&=67108863,i=Math.imul(y,H),n=(n=Math.imul(y,W))+Math.imul(v,H)|0,s=Math.imul(v,W),i=i+Math.imul(p,q)|0,n=(n=n+Math.imul(p,U)|0)+Math.imul(g,q)|0,s=s+Math.imul(g,U)|0;var vt=(h+(i=i+Math.imul(l,X)|0)|0)+((8191&(n=(n=n+Math.imul(l,G)|0)+Math.imul(d,X)|0))<<13)|0;h=((s=s+Math.imul(d,G)|0)+(n>>>13)|0)+(vt>>>26)|0,vt&=67108863,i=Math.imul(w,H),n=(n=Math.imul(w,W))+Math.imul(E,H)|0,s=Math.imul(E,W),i=i+Math.imul(y,q)|0,n=(n=n+Math.imul(y,U)|0)+Math.imul(v,q)|0,s=s+Math.imul(v,U)|0,i=i+Math.imul(p,X)|0,n=(n=n+Math.imul(p,G)|0)+Math.imul(g,X)|0,s=s+Math.imul(g,G)|0;var bt=(h+(i=i+Math.imul(l,Q)|0)|0)+((8191&(n=(n=n+Math.imul(l,J)|0)+Math.imul(d,Q)|0))<<13)|0;h=((s=s+Math.imul(d,J)|0)+(n>>>13)|0)+(bt>>>26)|0,bt&=67108863,i=Math.imul(N,H),n=(n=Math.imul(N,W))+Math.imul(M,H)|0,s=Math.imul(M,W),i=i+Math.imul(w,q)|0,n=(n=n+Math.imul(w,U)|0)+Math.imul(E,q)|0,s=s+Math.imul(E,U)|0,i=i+Math.imul(y,X)|0,n=(n=n+Math.imul(y,G)|0)+Math.imul(v,X)|0,s=s+Math.imul(v,G)|0,i=i+Math.imul(p,Q)|0,n=(n=n+Math.imul(p,J)|0)+Math.imul(g,Q)|0,s=s+Math.imul(g,J)|0;var wt=(h+(i=i+Math.imul(l,$)|0)|0)+((8191&(n=(n=n+Math.imul(l,tt)|0)+Math.imul(d,$)|0))<<13)|0;h=((s=s+Math.imul(d,tt)|0)+(n>>>13)|0)+(wt>>>26)|0,wt&=67108863,i=Math.imul(I,H),n=(n=Math.imul(I,W))+Math.imul(A,H)|0,s=Math.imul(A,W),i=i+Math.imul(N,q)|0,n=(n=n+Math.imul(N,U)|0)+Math.imul(M,q)|0,s=s+Math.imul(M,U)|0,i=i+Math.imul(w,X)|0,n=(n=n+Math.imul(w,G)|0)+Math.imul(E,X)|0,s=s+Math.imul(E,G)|0,i=i+Math.imul(y,Q)|0,n=(n=n+Math.imul(y,J)|0)+Math.imul(v,Q)|0,s=s+Math.imul(v,J)|0,i=i+Math.imul(p,$)|0,n=(n=n+Math.imul(p,tt)|0)+Math.imul(g,$)|0,s=s+Math.imul(g,tt)|0;var Et=(h+(i=i+Math.imul(l,rt)|0)|0)+((8191&(n=(n=n+Math.imul(l,it)|0)+Math.imul(d,rt)|0))<<13)|0;h=((s=s+Math.imul(d,it)|0)+(n>>>13)|0)+(Et>>>26)|0,Et&=67108863,i=Math.imul(T,H),n=(n=Math.imul(T,W))+Math.imul(R,H)|0,s=Math.imul(R,W),i=i+Math.imul(I,q)|0,n=(n=n+Math.imul(I,U)|0)+Math.imul(A,q)|0,s=s+Math.imul(A,U)|0,i=i+Math.imul(N,X)|0,n=(n=n+Math.imul(N,G)|0)+Math.imul(M,X)|0,s=s+Math.imul(M,G)|0,i=i+Math.imul(w,Q)|0,n=(n=n+Math.imul(w,J)|0)+Math.imul(E,Q)|0,s=s+Math.imul(E,J)|0,i=i+Math.imul(y,$)|0,n=(n=n+Math.imul(y,tt)|0)+Math.imul(v,$)|0,s=s+Math.imul(v,tt)|0,i=i+Math.imul(p,rt)|0,n=(n=n+Math.imul(p,it)|0)+Math.imul(g,rt)|0,s=s+Math.imul(g,it)|0;var St=(h+(i=i+Math.imul(l,st)|0)|0)+((8191&(n=(n=n+Math.imul(l,ot)|0)+Math.imul(d,st)|0))<<13)|0;h=((s=s+Math.imul(d,ot)|0)+(n>>>13)|0)+(St>>>26)|0,St&=67108863,i=Math.imul(B,H),n=(n=Math.imul(B,W))+Math.imul(O,H)|0,s=Math.imul(O,W),i=i+Math.imul(T,q)|0,n=(n=n+Math.imul(T,U)|0)+Math.imul(R,q)|0,s=s+Math.imul(R,U)|0,i=i+Math.imul(I,X)|0,n=(n=n+Math.imul(I,G)|0)+Math.imul(A,X)|0,s=s+Math.imul(A,G)|0,i=i+Math.imul(N,Q)|0,n=(n=n+Math.imul(N,J)|0)+Math.imul(M,Q)|0,s=s+Math.imul(M,J)|0,i=i+Math.imul(w,$)|0,n=(n=n+Math.imul(w,tt)|0)+Math.imul(E,$)|0,s=s+Math.imul(E,tt)|0,i=i+Math.imul(y,rt)|0,n=(n=n+Math.imul(y,it)|0)+Math.imul(v,rt)|0,s=s+Math.imul(v,it)|0,i=i+Math.imul(p,st)|0,n=(n=n+Math.imul(p,ot)|0)+Math.imul(g,st)|0,s=s+Math.imul(g,ot)|0;var Nt=(h+(i=i+Math.imul(l,ut)|0)|0)+((8191&(n=(n=n+Math.imul(l,ht)|0)+Math.imul(d,ut)|0))<<13)|0;h=((s=s+Math.imul(d,ht)|0)+(n>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,i=Math.imul(L,H),n=(n=Math.imul(L,W))+Math.imul(j,H)|0,s=Math.imul(j,W),i=i+Math.imul(B,q)|0,n=(n=n+Math.imul(B,U)|0)+Math.imul(O,q)|0,s=s+Math.imul(O,U)|0,i=i+Math.imul(T,X)|0,n=(n=n+Math.imul(T,G)|0)+Math.imul(R,X)|0,s=s+Math.imul(R,G)|0,i=i+Math.imul(I,Q)|0,n=(n=n+Math.imul(I,J)|0)+Math.imul(A,Q)|0,s=s+Math.imul(A,J)|0,i=i+Math.imul(N,$)|0,n=(n=n+Math.imul(N,tt)|0)+Math.imul(M,$)|0,s=s+Math.imul(M,tt)|0,i=i+Math.imul(w,rt)|0,n=(n=n+Math.imul(w,it)|0)+Math.imul(E,rt)|0,s=s+Math.imul(E,it)|0,i=i+Math.imul(y,st)|0,n=(n=n+Math.imul(y,ot)|0)+Math.imul(v,st)|0,s=s+Math.imul(v,ot)|0,i=i+Math.imul(p,ut)|0,n=(n=n+Math.imul(p,ht)|0)+Math.imul(g,ut)|0,s=s+Math.imul(g,ht)|0;var Mt=(h+(i=i+Math.imul(l,lt)|0)|0)+((8191&(n=(n=n+Math.imul(l,dt)|0)+Math.imul(d,lt)|0))<<13)|0;h=((s=s+Math.imul(d,dt)|0)+(n>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,i=Math.imul(D,H),n=(n=Math.imul(D,W))+Math.imul(F,H)|0,s=Math.imul(F,W),i=i+Math.imul(L,q)|0,n=(n=n+Math.imul(L,U)|0)+Math.imul(j,q)|0,s=s+Math.imul(j,U)|0,i=i+Math.imul(B,X)|0,n=(n=n+Math.imul(B,G)|0)+Math.imul(O,X)|0,s=s+Math.imul(O,G)|0,i=i+Math.imul(T,Q)|0,n=(n=n+Math.imul(T,J)|0)+Math.imul(R,Q)|0,s=s+Math.imul(R,J)|0,i=i+Math.imul(I,$)|0,n=(n=n+Math.imul(I,tt)|0)+Math.imul(A,$)|0,s=s+Math.imul(A,tt)|0,i=i+Math.imul(N,rt)|0,n=(n=n+Math.imul(N,it)|0)+Math.imul(M,rt)|0,s=s+Math.imul(M,it)|0,i=i+Math.imul(w,st)|0,n=(n=n+Math.imul(w,ot)|0)+Math.imul(E,st)|0,s=s+Math.imul(E,ot)|0,i=i+Math.imul(y,ut)|0,n=(n=n+Math.imul(y,ht)|0)+Math.imul(v,ut)|0,s=s+Math.imul(v,ht)|0,i=i+Math.imul(p,lt)|0,n=(n=n+Math.imul(p,dt)|0)+Math.imul(g,lt)|0,s=s+Math.imul(g,dt)|0;var xt=(h+(i=i+Math.imul(l,pt)|0)|0)+((8191&(n=(n=n+Math.imul(l,gt)|0)+Math.imul(d,pt)|0))<<13)|0;h=((s=s+Math.imul(d,gt)|0)+(n>>>13)|0)+(xt>>>26)|0,xt&=67108863,i=Math.imul(D,q),n=(n=Math.imul(D,U))+Math.imul(F,q)|0,s=Math.imul(F,U),i=i+Math.imul(L,X)|0,n=(n=n+Math.imul(L,G)|0)+Math.imul(j,X)|0,s=s+Math.imul(j,G)|0,i=i+Math.imul(B,Q)|0,n=(n=n+Math.imul(B,J)|0)+Math.imul(O,Q)|0,s=s+Math.imul(O,J)|0,i=i+Math.imul(T,$)|0,n=(n=n+Math.imul(T,tt)|0)+Math.imul(R,$)|0,s=s+Math.imul(R,tt)|0,i=i+Math.imul(I,rt)|0,n=(n=n+Math.imul(I,it)|0)+Math.imul(A,rt)|0,s=s+Math.imul(A,it)|0,i=i+Math.imul(N,st)|0,n=(n=n+Math.imul(N,ot)|0)+Math.imul(M,st)|0,s=s+Math.imul(M,ot)|0,i=i+Math.imul(w,ut)|0,n=(n=n+Math.imul(w,ht)|0)+Math.imul(E,ut)|0,s=s+Math.imul(E,ht)|0,i=i+Math.imul(y,lt)|0,n=(n=n+Math.imul(y,dt)|0)+Math.imul(v,lt)|0,s=s+Math.imul(v,dt)|0;var It=(h+(i=i+Math.imul(p,pt)|0)|0)+((8191&(n=(n=n+Math.imul(p,gt)|0)+Math.imul(g,pt)|0))<<13)|0;h=((s=s+Math.imul(g,gt)|0)+(n>>>13)|0)+(It>>>26)|0,It&=67108863,i=Math.imul(D,X),n=(n=Math.imul(D,G))+Math.imul(F,X)|0,s=Math.imul(F,G),i=i+Math.imul(L,Q)|0,n=(n=n+Math.imul(L,J)|0)+Math.imul(j,Q)|0,s=s+Math.imul(j,J)|0,i=i+Math.imul(B,$)|0,n=(n=n+Math.imul(B,tt)|0)+Math.imul(O,$)|0,s=s+Math.imul(O,tt)|0,i=i+Math.imul(T,rt)|0,n=(n=n+Math.imul(T,it)|0)+Math.imul(R,rt)|0,s=s+Math.imul(R,it)|0,i=i+Math.imul(I,st)|0,n=(n=n+Math.imul(I,ot)|0)+Math.imul(A,st)|0,s=s+Math.imul(A,ot)|0,i=i+Math.imul(N,ut)|0,n=(n=n+Math.imul(N,ht)|0)+Math.imul(M,ut)|0,s=s+Math.imul(M,ht)|0,i=i+Math.imul(w,lt)|0,n=(n=n+Math.imul(w,dt)|0)+Math.imul(E,lt)|0,s=s+Math.imul(E,dt)|0;var At=(h+(i=i+Math.imul(y,pt)|0)|0)+((8191&(n=(n=n+Math.imul(y,gt)|0)+Math.imul(v,pt)|0))<<13)|0;h=((s=s+Math.imul(v,gt)|0)+(n>>>13)|0)+(At>>>26)|0,At&=67108863,i=Math.imul(D,Q),n=(n=Math.imul(D,J))+Math.imul(F,Q)|0,s=Math.imul(F,J),i=i+Math.imul(L,$)|0,n=(n=n+Math.imul(L,tt)|0)+Math.imul(j,$)|0,s=s+Math.imul(j,tt)|0,i=i+Math.imul(B,rt)|0,n=(n=n+Math.imul(B,it)|0)+Math.imul(O,rt)|0,s=s+Math.imul(O,it)|0,i=i+Math.imul(T,st)|0,n=(n=n+Math.imul(T,ot)|0)+Math.imul(R,st)|0,s=s+Math.imul(R,ot)|0,i=i+Math.imul(I,ut)|0,n=(n=n+Math.imul(I,ht)|0)+Math.imul(A,ut)|0,s=s+Math.imul(A,ht)|0,i=i+Math.imul(N,lt)|0,n=(n=n+Math.imul(N,dt)|0)+Math.imul(M,lt)|0,s=s+Math.imul(M,dt)|0;var Pt=(h+(i=i+Math.imul(w,pt)|0)|0)+((8191&(n=(n=n+Math.imul(w,gt)|0)+Math.imul(E,pt)|0))<<13)|0;h=((s=s+Math.imul(E,gt)|0)+(n>>>13)|0)+(Pt>>>26)|0,Pt&=67108863,i=Math.imul(D,$),n=(n=Math.imul(D,tt))+Math.imul(F,$)|0,s=Math.imul(F,tt),i=i+Math.imul(L,rt)|0,n=(n=n+Math.imul(L,it)|0)+Math.imul(j,rt)|0,s=s+Math.imul(j,it)|0,i=i+Math.imul(B,st)|0,n=(n=n+Math.imul(B,ot)|0)+Math.imul(O,st)|0,s=s+Math.imul(O,ot)|0,i=i+Math.imul(T,ut)|0,n=(n=n+Math.imul(T,ht)|0)+Math.imul(R,ut)|0,s=s+Math.imul(R,ht)|0,i=i+Math.imul(I,lt)|0,n=(n=n+Math.imul(I,dt)|0)+Math.imul(A,lt)|0,s=s+Math.imul(A,dt)|0;var Tt=(h+(i=i+Math.imul(N,pt)|0)|0)+((8191&(n=(n=n+Math.imul(N,gt)|0)+Math.imul(M,pt)|0))<<13)|0;h=((s=s+Math.imul(M,gt)|0)+(n>>>13)|0)+(Tt>>>26)|0,Tt&=67108863,i=Math.imul(D,rt),n=(n=Math.imul(D,it))+Math.imul(F,rt)|0,s=Math.imul(F,it),i=i+Math.imul(L,st)|0,n=(n=n+Math.imul(L,ot)|0)+Math.imul(j,st)|0,s=s+Math.imul(j,ot)|0,i=i+Math.imul(B,ut)|0,n=(n=n+Math.imul(B,ht)|0)+Math.imul(O,ut)|0,s=s+Math.imul(O,ht)|0,i=i+Math.imul(T,lt)|0,n=(n=n+Math.imul(T,dt)|0)+Math.imul(R,lt)|0,s=s+Math.imul(R,dt)|0;var Rt=(h+(i=i+Math.imul(I,pt)|0)|0)+((8191&(n=(n=n+Math.imul(I,gt)|0)+Math.imul(A,pt)|0))<<13)|0;h=((s=s+Math.imul(A,gt)|0)+(n>>>13)|0)+(Rt>>>26)|0,Rt&=67108863,i=Math.imul(D,st),n=(n=Math.imul(D,ot))+Math.imul(F,st)|0,s=Math.imul(F,ot),i=i+Math.imul(L,ut)|0,n=(n=n+Math.imul(L,ht)|0)+Math.imul(j,ut)|0,s=s+Math.imul(j,ht)|0,i=i+Math.imul(B,lt)|0,n=(n=n+Math.imul(B,dt)|0)+Math.imul(O,lt)|0,s=s+Math.imul(O,dt)|0;var kt=(h+(i=i+Math.imul(T,pt)|0)|0)+((8191&(n=(n=n+Math.imul(T,gt)|0)+Math.imul(R,pt)|0))<<13)|0;h=((s=s+Math.imul(R,gt)|0)+(n>>>13)|0)+(kt>>>26)|0,kt&=67108863,i=Math.imul(D,ut),n=(n=Math.imul(D,ht))+Math.imul(F,ut)|0,s=Math.imul(F,ht),i=i+Math.imul(L,lt)|0,n=(n=n+Math.imul(L,dt)|0)+Math.imul(j,lt)|0,s=s+Math.imul(j,dt)|0;var Bt=(h+(i=i+Math.imul(B,pt)|0)|0)+((8191&(n=(n=n+Math.imul(B,gt)|0)+Math.imul(O,pt)|0))<<13)|0;h=((s=s+Math.imul(O,gt)|0)+(n>>>13)|0)+(Bt>>>26)|0,Bt&=67108863,i=Math.imul(D,lt),n=(n=Math.imul(D,dt))+Math.imul(F,lt)|0,s=Math.imul(F,dt);var Ot=(h+(i=i+Math.imul(L,pt)|0)|0)+((8191&(n=(n=n+Math.imul(L,gt)|0)+Math.imul(j,pt)|0))<<13)|0;h=((s=s+Math.imul(j,gt)|0)+(n>>>13)|0)+(Ot>>>26)|0,Ot&=67108863;var Ct=(h+(i=Math.imul(D,pt))|0)+((8191&(n=(n=Math.imul(D,gt))+Math.imul(F,pt)|0))<<13)|0;return h=((s=Math.imul(F,gt))+(n>>>13)|0)+(Ct>>>26)|0,Ct&=67108863,u[0]=mt,u[1]=yt,u[2]=vt,u[3]=bt,u[4]=wt,u[5]=Et,u[6]=St,u[7]=Nt,u[8]=Mt,u[9]=xt,u[10]=It,u[11]=At,u[12]=Pt,u[13]=Tt,u[14]=Rt,u[15]=kt,u[16]=Bt,u[17]=Ot,u[18]=Ct,0!==h&&(u[19]=h,r.length++),r};function y(t,e,r){r.negative=e.negative^t.negative,r.length=t.length+e.length;for(var i=0,n=0,s=0;s<r.length-1;s++){var o=n;n=0;for(var a=67108863&i,u=Math.min(s,e.length-1),h=Math.max(0,s-t.length+1);h<=u;h++){var c=s-h,l=(0|t.words[c])*(0|e.words[h]),d=67108863&l;a=67108863&(d=d+a|0),n+=(o=(o=o+(l/67108864|0)|0)+(d>>>26)|0)>>>26,o&=67108863}r.words[s]=a,i=o,o=n}return 0!==i?r.words[s]=i:r.length--,r._strip()}function v(t,e,r){return y(t,e,r)}function b(t,e){this.x=t,this.y=e}Math.imul||(m=g),s.prototype.mulTo=function(t,e){var r=this.length+t.length;return 10===this.length&&10===t.length?m(this,t,e):r<63?g(this,t,e):r<1024?y(this,t,e):v(this,t,e)},b.prototype.makeRBT=function(t){for(var e=new Array(t),r=s.prototype._countBits(t)-1,i=0;i<t;i++)e[i]=this.revBin(i,r,t);return e},b.prototype.revBin=function(t,e,r){if(0===t||t===r-1)return t;for(var i=0,n=0;n<e;n++)i|=(1&t)<<e-n-1,t>>=1;return i},b.prototype.permute=function(t,e,r,i,n,s){for(var o=0;o<s;o++)i[o]=e[t[o]],n[o]=r[t[o]]},b.prototype.transform=function(t,e,r,i,n,s){this.permute(s,t,e,r,i,n);for(var o=1;o<n;o<<=1)for(var a=o<<1,u=Math.cos(2*Math.PI/a),h=Math.sin(2*Math.PI/a),c=0;c<n;c+=a)for(var l=u,d=h,f=0;f<o;f++){var p=r[c+f],g=i[c+f],m=r[c+f+o],y=i[c+f+o],v=l*m-d*y;y=l*y+d*m,m=v,r[c+f]=p+m,i[c+f]=g+y,r[c+f+o]=p-m,i[c+f+o]=g-y,f!==a&&(v=u*l-h*d,d=u*d+h*l,l=v)}},b.prototype.guessLen13b=function(t,e){var r=1|Math.max(e,t),i=1&r,n=0;for(r=r/2|0;r;r>>>=1)n++;return 1<<n+1+i},b.prototype.conjugate=function(t,e,r){if(!(r<=1))for(var i=0;i<r/2;i++){var n=t[i];t[i]=t[r-i-1],t[r-i-1]=n,n=e[i],e[i]=-e[r-i-1],e[r-i-1]=-n}},b.prototype.normalize13b=function(t,e){for(var r=0,i=0;i<e/2;i++){var n=8192*Math.round(t[2*i+1]/e)+Math.round(t[2*i]/e)+r;t[i]=67108863&n,r=n<67108864?0:n/67108864|0}return t},b.prototype.convert13b=function(t,e,r,n){for(var s=0,o=0;o<e;o++)s+=0|t[o],r[2*o]=8191&s,s>>>=13,r[2*o+1]=8191&s,s>>>=13;for(o=2*e;o<n;++o)r[o]=0;i(0===s),i(0==(-8192&s))},b.prototype.stub=function(t){for(var e=new Array(t),r=0;r<t;r++)e[r]=0;return e},b.prototype.mulp=function(t,e,r){var i=2*this.guessLen13b(t.length,e.length),n=this.makeRBT(i),s=this.stub(i),o=new Array(i),a=new Array(i),u=new Array(i),h=new Array(i),c=new Array(i),l=new Array(i),d=r.words;d.length=i,this.convert13b(t.words,t.length,o,i),this.convert13b(e.words,e.length,h,i),this.transform(o,s,a,u,i,n),this.transform(h,s,c,l,i,n);for(var f=0;f<i;f++){var p=a[f]*c[f]-u[f]*l[f];u[f]=a[f]*l[f]+u[f]*c[f],a[f]=p}return this.conjugate(a,u,i),this.transform(a,u,d,s,i,n),this.conjugate(d,s,i),this.normalize13b(d,i),r.negative=t.negative^e.negative,r.length=t.length+e.length,r._strip()},s.prototype.mul=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),this.mulTo(t,e)},s.prototype.mulf=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),v(this,t,e)},s.prototype.imul=function(t){return this.clone().mulTo(t,this)},s.prototype.imuln=function(t){var e=t<0;e&&(t=-t),i("number"==typeof t),i(t<67108864);for(var r=0,n=0;n<this.length;n++){var s=(0|this.words[n])*t,o=(67108863&s)+(67108863&r);r>>=26,r+=s/67108864|0,r+=o>>>26,this.words[n]=67108863&o}return 0!==r&&(this.words[n]=r,this.length++),e?this.ineg():this},s.prototype.muln=function(t){return this.clone().imuln(t)},s.prototype.sqr=function(){return this.mul(this)},s.prototype.isqr=function(){return this.imul(this.clone())},s.prototype.pow=function(t){var e=function(t){for(var e=new Array(t.bitLength()),r=0;r<e.length;r++){var i=r/26|0,n=r%26;e[r]=t.words[i]>>>n&1}return e}(t);if(0===e.length)return new s(1);for(var r=this,i=0;i<e.length&&0===e[i];i++,r=r.sqr());if(++i<e.length)for(var n=r.sqr();i<e.length;i++,n=n.sqr())0!==e[i]&&(r=r.mul(n));return r},s.prototype.iushln=function(t){i("number"==typeof t&&t>=0);var e,r=t%26,n=(t-r)/26,s=67108863>>>26-r<<26-r;if(0!==r){var o=0;for(e=0;e<this.length;e++){var a=this.words[e]&s,u=(0|this.words[e])-a<<r;this.words[e]=u|o,o=a>>>26-r}o&&(this.words[e]=o,this.length++)}if(0!==n){for(e=this.length-1;e>=0;e--)this.words[e+n]=this.words[e];for(e=0;e<n;e++)this.words[e]=0;this.length+=n}return this._strip()},s.prototype.ishln=function(t){return i(0===this.negative),this.iushln(t)},s.prototype.iushrn=function(t,e,r){var n;i("number"==typeof t&&t>=0),n=e?(e-e%26)/26:0;var s=t%26,o=Math.min((t-s)/26,this.length),a=67108863^67108863>>>s<<s,u=r;if(n-=o,n=Math.max(0,n),u){for(var h=0;h<o;h++)u.words[h]=this.words[h];u.length=o}if(0===o);else if(this.length>o)for(this.length-=o,h=0;h<this.length;h++)this.words[h]=this.words[h+o];else this.words[0]=0,this.length=1;var c=0;for(h=this.length-1;h>=0&&(0!==c||h>=n);h--){var l=0|this.words[h];this.words[h]=c<<26-s|l>>>s,c=l&a}return u&&0!==c&&(u.words[u.length++]=c),0===this.length&&(this.words[0]=0,this.length=1),this._strip()},s.prototype.ishrn=function(t,e,r){return i(0===this.negative),this.iushrn(t,e,r)},s.prototype.shln=function(t){return this.clone().ishln(t)},s.prototype.ushln=function(t){return this.clone().iushln(t)},s.prototype.shrn=function(t){return this.clone().ishrn(t)},s.prototype.ushrn=function(t){return this.clone().iushrn(t)},s.prototype.testn=function(t){i("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26,n=1<<e;return!(this.length<=r||!(this.words[r]&n))},s.prototype.imaskn=function(t){i("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26;if(i(0===this.negative,"imaskn works only with positive numbers"),this.length<=r)return this;if(0!==e&&r++,this.length=Math.min(r,this.length),0!==e){var n=67108863^67108863>>>e<<e;this.words[this.length-1]&=n}return this._strip()},s.prototype.maskn=function(t){return this.clone().imaskn(t)},s.prototype.iaddn=function(t){return i("number"==typeof t),i(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<=t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},s.prototype._iaddn=function(t){this.words[0]+=t;for(var e=0;e<this.length&&this.words[e]>=67108864;e++)this.words[e]-=67108864,e===this.length-1?this.words[e+1]=1:this.words[e+1]++;return this.length=Math.max(this.length,e+1),this},s.prototype.isubn=function(t){if(i("number"==typeof t),i(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var e=0;e<this.length&&this.words[e]<0;e++)this.words[e]+=67108864,this.words[e+1]-=1;return this._strip()},s.prototype.addn=function(t){return this.clone().iaddn(t)},s.prototype.subn=function(t){return this.clone().isubn(t)},s.prototype.iabs=function(){return this.negative=0,this},s.prototype.abs=function(){return this.clone().iabs()},s.prototype._ishlnsubmul=function(t,e,r){var n,s,o=t.length+r;this._expand(o);var a=0;for(n=0;n<t.length;n++){s=(0|this.words[n+r])+a;var u=(0|t.words[n])*e;a=((s-=67108863&u)>>26)-(u/67108864|0),this.words[n+r]=67108863&s}for(;n<this.length-r;n++)a=(s=(0|this.words[n+r])+a)>>26,this.words[n+r]=67108863&s;if(0===a)return this._strip();for(i(-1===a),a=0,n=0;n<this.length;n++)a=(s=-(0|this.words[n])+a)>>26,this.words[n]=67108863&s;return this.negative=1,this._strip()},s.prototype._wordDiv=function(t,e){var r=(this.length,t.length),i=this.clone(),n=t,o=0|n.words[n.length-1];0!=(r=26-this._countBits(o))&&(n=n.ushln(r),i.iushln(r),o=0|n.words[n.length-1]);var a,u=i.length-n.length;if("mod"!==e){(a=new s(null)).length=u+1,a.words=new Array(a.length);for(var h=0;h<a.length;h++)a.words[h]=0}var c=i.clone()._ishlnsubmul(n,1,u);0===c.negative&&(i=c,a&&(a.words[u]=1));for(var l=u-1;l>=0;l--){var d=67108864*(0|i.words[n.length+l])+(0|i.words[n.length+l-1]);for(d=Math.min(d/o|0,67108863),i._ishlnsubmul(n,d,l);0!==i.negative;)d--,i.negative=0,i._ishlnsubmul(n,1,l),i.isZero()||(i.negative^=1);a&&(a.words[l]=d)}return a&&a._strip(),i._strip(),"div"!==e&&0!==r&&i.iushrn(r),{div:a||null,mod:i}},s.prototype.divmod=function(t,e,r){return i(!t.isZero()),this.isZero()?{div:new s(0),mod:new s(0)}:0!==this.negative&&0===t.negative?(a=this.neg().divmod(t,e),"mod"!==e&&(n=a.div.neg()),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.iadd(t)),{div:n,mod:o}):0===this.negative&&0!==t.negative?(a=this.divmod(t.neg(),e),"mod"!==e&&(n=a.div.neg()),{div:n,mod:a.mod}):0!=(this.negative&t.negative)?(a=this.neg().divmod(t.neg(),e),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.isub(t)),{div:a.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new s(0),mod:this}:1===t.length?"div"===e?{div:this.divn(t.words[0]),mod:null}:"mod"===e?{div:null,mod:new s(this.modrn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new s(this.modrn(t.words[0]))}:this._wordDiv(t,e);var n,o,a},s.prototype.div=function(t){return this.divmod(t,"div",!1).div},s.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},s.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},s.prototype.divRound=function(t){var e=this.divmod(t);if(e.mod.isZero())return e.div;var r=0!==e.div.negative?e.mod.isub(t):e.mod,i=t.ushrn(1),n=t.andln(1),s=r.cmp(i);return s<0||1===n&&0===s?e.div:0!==e.div.negative?e.div.isubn(1):e.div.iaddn(1)},s.prototype.modrn=function(t){var e=t<0;e&&(t=-t),i(t<=67108863);for(var r=(1<<26)%t,n=0,s=this.length-1;s>=0;s--)n=(r*n+(0|this.words[s]))%t;return e?-n:n},s.prototype.modn=function(t){return this.modrn(t)},s.prototype.idivn=function(t){var e=t<0;e&&(t=-t),i(t<=67108863);for(var r=0,n=this.length-1;n>=0;n--){var s=(0|this.words[n])+67108864*r;this.words[n]=s/t|0,r=s%t}return this._strip(),e?this.ineg():this},s.prototype.divn=function(t){return this.clone().idivn(t)},s.prototype.egcd=function(t){i(0===t.negative),i(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var n=new s(1),o=new s(0),a=new s(0),u=new s(1),h=0;e.isEven()&&r.isEven();)e.iushrn(1),r.iushrn(1),++h;for(var c=r.clone(),l=e.clone();!e.isZero();){for(var d=0,f=1;0==(e.words[0]&f)&&d<26;++d,f<<=1);if(d>0)for(e.iushrn(d);d-- >0;)(n.isOdd()||o.isOdd())&&(n.iadd(c),o.isub(l)),n.iushrn(1),o.iushrn(1);for(var p=0,g=1;0==(r.words[0]&g)&&p<26;++p,g<<=1);if(p>0)for(r.iushrn(p);p-- >0;)(a.isOdd()||u.isOdd())&&(a.iadd(c),u.isub(l)),a.iushrn(1),u.iushrn(1);e.cmp(r)>=0?(e.isub(r),n.isub(a),o.isub(u)):(r.isub(e),a.isub(n),u.isub(o))}return{a,b:u,gcd:r.iushln(h)}},s.prototype._invmp=function(t){i(0===t.negative),i(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var n,o=new s(1),a=new s(0),u=r.clone();e.cmpn(1)>0&&r.cmpn(1)>0;){for(var h=0,c=1;0==(e.words[0]&c)&&h<26;++h,c<<=1);if(h>0)for(e.iushrn(h);h-- >0;)o.isOdd()&&o.iadd(u),o.iushrn(1);for(var l=0,d=1;0==(r.words[0]&d)&&l<26;++l,d<<=1);if(l>0)for(r.iushrn(l);l-- >0;)a.isOdd()&&a.iadd(u),a.iushrn(1);e.cmp(r)>=0?(e.isub(r),o.isub(a)):(r.isub(e),a.isub(o))}return(n=0===e.cmpn(1)?o:a).cmpn(0)<0&&n.iadd(t),n},s.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var e=this.clone(),r=t.clone();e.negative=0,r.negative=0;for(var i=0;e.isEven()&&r.isEven();i++)e.iushrn(1),r.iushrn(1);for(;;){for(;e.isEven();)e.iushrn(1);for(;r.isEven();)r.iushrn(1);var n=e.cmp(r);if(n<0){var s=e;e=r,r=s}else if(0===n||0===r.cmpn(1))break;e.isub(r)}return r.iushln(i)},s.prototype.invm=function(t){return this.egcd(t).a.umod(t)},s.prototype.isEven=function(){return 0==(1&this.words[0])},s.prototype.isOdd=function(){return 1==(1&this.words[0])},s.prototype.andln=function(t){return this.words[0]&t},s.prototype.bincn=function(t){i("number"==typeof t);var e=t%26,r=(t-e)/26,n=1<<e;if(this.length<=r)return this._expand(r+1),this.words[r]|=n,this;for(var s=n,o=r;0!==s&&o<this.length;o++){var a=0|this.words[o];s=(a+=s)>>>26,a&=67108863,this.words[o]=a}return 0!==s&&(this.words[o]=s,this.length++),this},s.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},s.prototype.cmpn=function(t){var e,r=t<0;if(0!==this.negative&&!r)return-1;if(0===this.negative&&r)return 1;if(this._strip(),this.length>1)e=1;else{r&&(t=-t),i(t<=67108863,"Number is too big");var n=0|this.words[0];e=n===t?0:n<t?-1:1}return 0!==this.negative?0|-e:e},s.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var e=this.ucmp(t);return 0!==this.negative?0|-e:e},s.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var e=0,r=this.length-1;r>=0;r--){var i=0|this.words[r],n=0|t.words[r];if(i!==n){i<n?e=-1:i>n&&(e=1);break}}return e},s.prototype.gtn=function(t){return 1===this.cmpn(t)},s.prototype.gt=function(t){return 1===this.cmp(t)},s.prototype.gten=function(t){return this.cmpn(t)>=0},s.prototype.gte=function(t){return this.cmp(t)>=0},s.prototype.ltn=function(t){return-1===this.cmpn(t)},s.prototype.lt=function(t){return-1===this.cmp(t)},s.prototype.lten=function(t){return this.cmpn(t)<=0},s.prototype.lte=function(t){return this.cmp(t)<=0},s.prototype.eqn=function(t){return 0===this.cmpn(t)},s.prototype.eq=function(t){return 0===this.cmp(t)},s.red=function(t){return new I(t)},s.prototype.toRed=function(t){return i(!this.red,"Already a number in reduction context"),i(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},s.prototype.fromRed=function(){return i(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},s.prototype._forceRed=function(t){return this.red=t,this},s.prototype.forceRed=function(t){return i(!this.red,"Already a number in reduction context"),this._forceRed(t)},s.prototype.redAdd=function(t){return i(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},s.prototype.redIAdd=function(t){return i(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},s.prototype.redSub=function(t){return i(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},s.prototype.redISub=function(t){return i(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},s.prototype.redShl=function(t){return i(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},s.prototype.redMul=function(t){return i(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},s.prototype.redIMul=function(t){return i(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},s.prototype.redSqr=function(){return i(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},s.prototype.redISqr=function(){return i(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},s.prototype.redSqrt=function(){return i(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},s.prototype.redInvm=function(){return i(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},s.prototype.redNeg=function(){return i(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},s.prototype.redPow=function(t){return i(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var w={k256:null,p224:null,p192:null,p25519:null};function E(t,e){this.name=t,this.p=new s(e,16),this.n=this.p.bitLength(),this.k=new s(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function S(){E.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function N(){E.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function M(){E.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function x(){E.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function I(t){if("string"==typeof t){var e=s._prime(t);this.m=e.p,this.prime=e}else i(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function A(t){I.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new s(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}E.prototype._tmp=function(){var t=new s(null);return t.words=new Array(Math.ceil(this.n/13)),t},E.prototype.ireduce=function(t){var e,r=t;do{this.split(r,this.tmp),e=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(e>this.n);var i=e<this.n?-1:r.ucmp(this.p);return 0===i?(r.words[0]=0,r.length=1):i>0?r.isub(this.p):void 0!==r.strip?r.strip():r._strip(),r},E.prototype.split=function(t,e){t.iushrn(this.n,0,e)},E.prototype.imulK=function(t){return t.imul(this.k)},n(S,E),S.prototype.split=function(t,e){for(var r=4194303,i=Math.min(t.length,9),n=0;n<i;n++)e.words[n]=t.words[n];if(e.length=i,t.length<=9)return t.words[0]=0,void(t.length=1);var s=t.words[9];for(e.words[e.length++]=s&r,n=10;n<t.length;n++){var o=0|t.words[n];t.words[n-10]=(o&r)<<4|s>>>22,s=o}s>>>=22,t.words[n-10]=s,0===s&&t.length>10?t.length-=10:t.length-=9},S.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var e=0,r=0;r<t.length;r++){var i=0|t.words[r];e+=977*i,t.words[r]=67108863&e,e=64*i+(e/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},n(N,E),n(M,E),n(x,E),x.prototype.imulK=function(t){for(var e=0,r=0;r<t.length;r++){var i=19*(0|t.words[r])+e,n=67108863&i;i>>>=26,t.words[r]=n,e=i}return 0!==e&&(t.words[t.length++]=e),t},s._prime=function(t){if(w[t])return w[t];var e;if("k256"===t)e=new S;else if("p224"===t)e=new N;else if("p192"===t)e=new M;else{if("p25519"!==t)throw new Error("Unknown prime "+t);e=new x}return w[t]=e,e},I.prototype._verify1=function(t){i(0===t.negative,"red works only with positives"),i(t.red,"red works only with red numbers")},I.prototype._verify2=function(t,e){i(0==(t.negative|e.negative),"red works only with positives"),i(t.red&&t.red===e.red,"red works only with red numbers")},I.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):(c(t,t.umod(this.m)._forceRed(this)),t)},I.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},I.prototype.add=function(t,e){this._verify2(t,e);var r=t.add(e);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},I.prototype.iadd=function(t,e){this._verify2(t,e);var r=t.iadd(e);return r.cmp(this.m)>=0&&r.isub(this.m),r},I.prototype.sub=function(t,e){this._verify2(t,e);var r=t.sub(e);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},I.prototype.isub=function(t,e){this._verify2(t,e);var r=t.isub(e);return r.cmpn(0)<0&&r.iadd(this.m),r},I.prototype.shl=function(t,e){return this._verify1(t),this.imod(t.ushln(e))},I.prototype.imul=function(t,e){return this._verify2(t,e),this.imod(t.imul(e))},I.prototype.mul=function(t,e){return this._verify2(t,e),this.imod(t.mul(e))},I.prototype.isqr=function(t){return this.imul(t,t.clone())},I.prototype.sqr=function(t){return this.mul(t,t)},I.prototype.sqrt=function(t){if(t.isZero())return t.clone();var e=this.m.andln(3);if(i(e%2==1),3===e){var r=this.m.add(new s(1)).iushrn(2);return this.pow(t,r)}for(var n=this.m.subn(1),o=0;!n.isZero()&&0===n.andln(1);)o++,n.iushrn(1);i(!n.isZero());var a=new s(1).toRed(this),u=a.redNeg(),h=this.m.subn(1).iushrn(1),c=this.m.bitLength();for(c=new s(2*c*c).toRed(this);0!==this.pow(c,h).cmp(u);)c.redIAdd(u);for(var l=this.pow(c,n),d=this.pow(t,n.addn(1).iushrn(1)),f=this.pow(t,n),p=o;0!==f.cmp(a);){for(var g=f,m=0;0!==g.cmp(a);m++)g=g.redSqr();i(m<p);var y=this.pow(l,new s(1).iushln(p-m-1));d=d.redMul(y),l=y.redSqr(),f=f.redMul(l),p=m}return d},I.prototype.invm=function(t){var e=t._invmp(this.m);return 0!==e.negative?(e.negative=0,this.imod(e).redNeg()):this.imod(e)},I.prototype.pow=function(t,e){if(e.isZero())return new s(1).toRed(this);if(0===e.cmpn(1))return t.clone();var r=new Array(16);r[0]=new s(1).toRed(this),r[1]=t;for(var i=2;i<r.length;i++)r[i]=this.mul(r[i-1],t);var n=r[0],o=0,a=0,u=e.bitLength()%26;for(0===u&&(u=26),i=e.length-1;i>=0;i--){for(var h=e.words[i],c=u-1;c>=0;c--){var l=h>>c&1;n!==r[0]&&(n=this.sqr(n)),0!==l||0!==o?(o<<=1,o|=l,(4==++a||0===i&&0===c)&&(n=this.mul(n,r[o]),a=0,o=0)):a=0}u=26}return n},I.prototype.convertTo=function(t){var e=t.umod(this.m);return e===t?e.clone():e},I.prototype.convertFrom=function(t){var e=t.clone();return e.red=null,e},s.mont=function(t){return new A(t)},n(A,I),A.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},A.prototype.convertFrom=function(t){var e=this.imod(t.mul(this.rinv));return e.red=null,e},A.prototype.imul=function(t,e){if(t.isZero()||e.isZero())return t.words[0]=0,t.length=1,t;var r=t.imul(e),i=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=r.isub(i).iushrn(this.shift),s=n;return n.cmp(this.m)>=0?s=n.isub(this.m):n.cmpn(0)<0&&(s=n.iadd(this.m)),s._forceRed(this)},A.prototype.mul=function(t,e){if(t.isZero()||e.isZero())return new s(0)._forceRed(this);var r=t.mul(e),i=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=r.isub(i).iushrn(this.shift),o=n;return n.cmp(this.m)>=0?o=n.isub(this.m):n.cmpn(0)<0&&(o=n.iadd(this.m)),o._forceRed(this)},A.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=r.nmd(t),this)},9931:(t,e,r)=>{var i;function n(t){this.rand=t}if(t.exports=function(t){return i||(i=new n(null)),i.generate(t)},t.exports.Rand=n,n.prototype.generate=function(t){return this._rand(t)},n.prototype._rand=function(t){if(this.rand.getBytes)return this.rand.getBytes(t);for(var e=new Uint8Array(t),r=0;r<e.length;r++)e[r]=this.rand.getByte();return e},"object"==typeof self)self.crypto&&self.crypto.getRandomValues?n.prototype._rand=function(t){var e=new Uint8Array(t);return self.crypto.getRandomValues(e),e}:self.msCrypto&&self.msCrypto.getRandomValues?n.prototype._rand=function(t){var e=new Uint8Array(t);return self.msCrypto.getRandomValues(e),e}:"object"==typeof window&&(n.prototype._rand=function(){throw new Error("Not implemented yet")});else try{var s=r(9214);if("function"!=typeof s.randomBytes)throw new Error("Not supported");n.prototype._rand=function(t){return s.randomBytes(t)}}catch(t){}},4497:(t,e,r)=>{var i=r(9509).Buffer;function n(t){i.isBuffer(t)||(t=i.from(t));for(var e=t.length/4|0,r=new Array(e),n=0;n<e;n++)r[n]=t.readUInt32BE(4*n);return r}function s(t){for(;0<t.length;t++)t[0]=0}function o(t,e,r,i,n){for(var s,o,a,u,h=r[0],c=r[1],l=r[2],d=r[3],f=t[0]^e[0],p=t[1]^e[1],g=t[2]^e[2],m=t[3]^e[3],y=4,v=1;v<n;v++)s=h[f>>>24]^c[p>>>16&255]^l[g>>>8&255]^d[255&m]^e[y++],o=h[p>>>24]^c[g>>>16&255]^l[m>>>8&255]^d[255&f]^e[y++],a=h[g>>>24]^c[m>>>16&255]^l[f>>>8&255]^d[255&p]^e[y++],u=h[m>>>24]^c[f>>>16&255]^l[p>>>8&255]^d[255&g]^e[y++],f=s,p=o,g=a,m=u;return s=(i[f>>>24]<<24|i[p>>>16&255]<<16|i[g>>>8&255]<<8|i[255&m])^e[y++],o=(i[p>>>24]<<24|i[g>>>16&255]<<16|i[m>>>8&255]<<8|i[255&f])^e[y++],a=(i[g>>>24]<<24|i[m>>>16&255]<<16|i[f>>>8&255]<<8|i[255&p])^e[y++],u=(i[m>>>24]<<24|i[f>>>16&255]<<16|i[p>>>8&255]<<8|i[255&g])^e[y++],[s>>>=0,o>>>=0,a>>>=0,u>>>=0]}var a=[0,1,2,4,8,16,32,64,128,27,54],u=function(){for(var t=new Array(256),e=0;e<256;e++)t[e]=e<128?e<<1:e<<1^283;for(var r=[],i=[],n=[[],[],[],[]],s=[[],[],[],[]],o=0,a=0,u=0;u<256;++u){var h=a^a<<1^a<<2^a<<3^a<<4;h=h>>>8^255&h^99,r[o]=h,i[h]=o;var c=t[o],l=t[c],d=t[l],f=257*t[h]^16843008*h;n[0][o]=f<<24|f>>>8,n[1][o]=f<<16|f>>>16,n[2][o]=f<<8|f>>>24,n[3][o]=f,f=16843009*d^65537*l^257*c^16843008*o,s[0][h]=f<<24|f>>>8,s[1][h]=f<<16|f>>>16,s[2][h]=f<<8|f>>>24,s[3][h]=f,0===o?o=a=1:(o=c^t[t[t[d^c]]],a^=t[t[a]])}return{SBOX:r,INV_SBOX:i,SUB_MIX:n,INV_SUB_MIX:s}}();function h(t){this._key=n(t),this._reset()}h.blockSize=16,h.keySize=32,h.prototype.blockSize=h.blockSize,h.prototype.keySize=h.keySize,h.prototype._reset=function(){for(var t=this._key,e=t.length,r=e+6,i=4*(r+1),n=[],s=0;s<e;s++)n[s]=t[s];for(s=e;s<i;s++){var o=n[s-1];s%e==0?(o=o<<8|o>>>24,o=u.SBOX[o>>>24]<<24|u.SBOX[o>>>16&255]<<16|u.SBOX[o>>>8&255]<<8|u.SBOX[255&o],o^=a[s/e|0]<<24):e>6&&s%e==4&&(o=u.SBOX[o>>>24]<<24|u.SBOX[o>>>16&255]<<16|u.SBOX[o>>>8&255]<<8|u.SBOX[255&o]),n[s]=n[s-e]^o}for(var h=[],c=0;c<i;c++){var l=i-c,d=n[l-(c%4?0:4)];h[c]=c<4||l<=4?d:u.INV_SUB_MIX[0][u.SBOX[d>>>24]]^u.INV_SUB_MIX[1][u.SBOX[d>>>16&255]]^u.INV_SUB_MIX[2][u.SBOX[d>>>8&255]]^u.INV_SUB_MIX[3][u.SBOX[255&d]]}this._nRounds=r,this._keySchedule=n,this._invKeySchedule=h},h.prototype.encryptBlockRaw=function(t){return o(t=n(t),this._keySchedule,u.SUB_MIX,u.SBOX,this._nRounds)},h.prototype.encryptBlock=function(t){var e=this.encryptBlockRaw(t),r=i.allocUnsafe(16);return r.writeUInt32BE(e[0],0),r.writeUInt32BE(e[1],4),r.writeUInt32BE(e[2],8),r.writeUInt32BE(e[3],12),r},h.prototype.decryptBlock=function(t){var e=(t=n(t))[1];t[1]=t[3],t[3]=e;var r=o(t,this._invKeySchedule,u.INV_SUB_MIX,u.INV_SBOX,this._nRounds),s=i.allocUnsafe(16);return s.writeUInt32BE(r[0],0),s.writeUInt32BE(r[3],4),s.writeUInt32BE(r[2],8),s.writeUInt32BE(r[1],12),s},h.prototype.scrub=function(){s(this._keySchedule),s(this._invKeySchedule),s(this._key)},t.exports.AES=h},2422:(t,e,r)=>{var i=r(4497),n=r(9509).Buffer,s=r(1027),o=r(5717),a=r(3288),u=r(7295),h=r(685);function c(t,e,r,o){s.call(this);var u=n.alloc(4,0);this._cipher=new i.AES(e);var c=this._cipher.encryptBlock(u);this._ghash=new a(c),r=function(t,e,r){if(12===e.length)return t._finID=n.concat([e,n.from([0,0,0,1])]),n.concat([e,n.from([0,0,0,2])]);var i=new a(r),s=e.length,o=s%16;i.update(e),o&&(o=16-o,i.update(n.alloc(o,0))),i.update(n.alloc(8,0));var u=8*s,c=n.alloc(8);c.writeUIntBE(u,0,8),i.update(c),t._finID=i.state;var l=n.from(t._finID);return h(l),l}(this,r,c),this._prev=n.from(r),this._cache=n.allocUnsafe(0),this._secCache=n.allocUnsafe(0),this._decrypt=o,this._alen=0,this._len=0,this._mode=t,this._authTag=null,this._called=!1}o(c,s),c.prototype._update=function(t){if(!this._called&&this._alen){var e=16-this._alen%16;e<16&&(e=n.alloc(e,0),this._ghash.update(e))}this._called=!0;var r=this._mode.encrypt(this,t);return this._decrypt?this._ghash.update(t):this._ghash.update(r),this._len+=t.length,r},c.prototype._final=function(){if(this._decrypt&&!this._authTag)throw new Error("Unsupported state or unable to authenticate data");var t=u(this._ghash.final(8*this._alen,8*this._len),this._cipher.encryptBlock(this._finID));if(this._decrypt&&function(t,e){var r=0;t.length!==e.length&&r++;for(var i=Math.min(t.length,e.length),n=0;n<i;++n)r+=t[n]^e[n];return r}(t,this._authTag))throw new Error("Unsupported state or unable to authenticate data");this._authTag=t,this._cipher.scrub()},c.prototype.getAuthTag=function(){if(this._decrypt||!n.isBuffer(this._authTag))throw new Error("Attempting to get auth tag in unsupported state");return this._authTag},c.prototype.setAuthTag=function(t){if(!this._decrypt)throw new Error("Attempting to set auth tag in unsupported state");this._authTag=t},c.prototype.setAAD=function(t){if(this._called)throw new Error("Attempting to set AAD in unsupported state");this._ghash.update(t),this._alen+=t.length},t.exports=c},4696:(t,e,r)=>{var i=r(1494),n=r(6193),s=r(4946);e.createCipher=e.Cipher=i.createCipher,e.createCipheriv=e.Cipheriv=i.createCipheriv,e.createDecipher=e.Decipher=n.createDecipher,e.createDecipheriv=e.Decipheriv=n.createDecipheriv,e.listCiphers=e.getCiphers=function(){return Object.keys(s)}},6193:(t,e,r)=>{var i=r(2422),n=r(9509).Buffer,s=r(45),o=r(5969),a=r(1027),u=r(4497),h=r(3048);function c(t,e,r){a.call(this),this._cache=new l,this._last=void 0,this._cipher=new u.AES(e),this._prev=n.from(r),this._mode=t,this._autopadding=!0}function l(){this.cache=n.allocUnsafe(0)}function d(t,e,r){var a=s[t.toLowerCase()];if(!a)throw new TypeError("invalid suite type");if("string"==typeof r&&(r=n.from(r)),"GCM"!==a.mode&&r.length!==a.iv)throw new TypeError("invalid iv length "+r.length);if("string"==typeof e&&(e=n.from(e)),e.length!==a.key/8)throw new TypeError("invalid key length "+e.length);return"stream"===a.type?new o(a.module,e,r,!0):"auth"===a.type?new i(a.module,e,r,!0):new c(a.module,e,r)}r(5717)(c,a),c.prototype._update=function(t){var e,r;this._cache.add(t);for(var i=[];e=this._cache.get(this._autopadding);)r=this._mode.decrypt(this,e),i.push(r);return n.concat(i)},c.prototype._final=function(){var t=this._cache.flush();if(this._autopadding)return function(t){var e=t[15];if(e<1||e>16)throw new Error("unable to decrypt data");for(var r=-1;++r<e;)if(t[r+(16-e)]!==e)throw new Error("unable to decrypt data");if(16!==e)return t.slice(0,16-e)}(this._mode.decrypt(this,t));if(t)throw new Error("data not multiple of block length")},c.prototype.setAutoPadding=function(t){return this._autopadding=!!t,this},l.prototype.add=function(t){this.cache=n.concat([this.cache,t])},l.prototype.get=function(t){var e;if(t){if(this.cache.length>16)return e=this.cache.slice(0,16),this.cache=this.cache.slice(16),e}else if(this.cache.length>=16)return e=this.cache.slice(0,16),this.cache=this.cache.slice(16),e;return null},l.prototype.flush=function(){if(this.cache.length)return this.cache},e.createDecipher=function(t,e){var r=s[t.toLowerCase()];if(!r)throw new TypeError("invalid suite type");var i=h(e,!1,r.key,r.iv);return d(t,i.key,i.iv)},e.createDecipheriv=d},1494:(t,e,r)=>{var i=r(45),n=r(2422),s=r(9509).Buffer,o=r(5969),a=r(1027),u=r(4497),h=r(3048);function c(t,e,r){a.call(this),this._cache=new d,this._cipher=new u.AES(e),this._prev=s.from(r),this._mode=t,this._autopadding=!0}r(5717)(c,a),c.prototype._update=function(t){var e,r;this._cache.add(t);for(var i=[];e=this._cache.get();)r=this._mode.encrypt(this,e),i.push(r);return s.concat(i)};var l=s.alloc(16,16);function d(){this.cache=s.allocUnsafe(0)}function f(t,e,r){var a=i[t.toLowerCase()];if(!a)throw new TypeError("invalid suite type");if("string"==typeof e&&(e=s.from(e)),e.length!==a.key/8)throw new TypeError("invalid key length "+e.length);if("string"==typeof r&&(r=s.from(r)),"GCM"!==a.mode&&r.length!==a.iv)throw new TypeError("invalid iv length "+r.length);return"stream"===a.type?new o(a.module,e,r):"auth"===a.type?new n(a.module,e,r):new c(a.module,e,r)}c.prototype._final=function(){var t=this._cache.flush();if(this._autopadding)return t=this._mode.encrypt(this,t),this._cipher.scrub(),t;if(!t.equals(l))throw this._cipher.scrub(),new Error("data not multiple of block length")},c.prototype.setAutoPadding=function(t){return this._autopadding=!!t,this},d.prototype.add=function(t){this.cache=s.concat([this.cache,t])},d.prototype.get=function(){if(this.cache.length>15){var t=this.cache.slice(0,16);return this.cache=this.cache.slice(16),t}return null},d.prototype.flush=function(){for(var t=16-this.cache.length,e=s.allocUnsafe(t),r=-1;++r<t;)e.writeUInt8(t,r);return s.concat([this.cache,e])},e.createCipheriv=f,e.createCipher=function(t,e){var r=i[t.toLowerCase()];if(!r)throw new TypeError("invalid suite type");var n=h(e,!1,r.key,r.iv);return f(t,n.key,n.iv)}},3288:(t,e,r)=>{var i=r(9509).Buffer,n=i.alloc(16,0);function s(t){var e=i.allocUnsafe(16);return e.writeUInt32BE(t[0]>>>0,0),e.writeUInt32BE(t[1]>>>0,4),e.writeUInt32BE(t[2]>>>0,8),e.writeUInt32BE(t[3]>>>0,12),e}function o(t){this.h=t,this.state=i.alloc(16,0),this.cache=i.allocUnsafe(0)}o.prototype.ghash=function(t){for(var e=-1;++e<t.length;)this.state[e]^=t[e];this._multiply()},o.prototype._multiply=function(){for(var t,e,r,i=[(t=this.h).readUInt32BE(0),t.readUInt32BE(4),t.readUInt32BE(8),t.readUInt32BE(12)],n=[0,0,0,0],o=-1;++o<128;){for(0!=(this.state[~~(o/8)]&1<<7-o%8)&&(n[0]^=i[0],n[1]^=i[1],n[2]^=i[2],n[3]^=i[3]),r=0!=(1&i[3]),e=3;e>0;e--)i[e]=i[e]>>>1|(1&i[e-1])<<31;i[0]=i[0]>>>1,r&&(i[0]=i[0]^225<<24)}this.state=s(n)},o.prototype.update=function(t){var e;for(this.cache=i.concat([this.cache,t]);this.cache.length>=16;)e=this.cache.slice(0,16),this.cache=this.cache.slice(16),this.ghash(e)},o.prototype.final=function(t,e){return this.cache.length&&this.ghash(i.concat([this.cache,n],16)),this.ghash(s([0,t,0,e])),this.state},t.exports=o},685:t=>{t.exports=function(t){for(var e,r=t.length;r--;){if(255!==(e=t.readUInt8(r))){e++,t.writeUInt8(e,r);break}t.writeUInt8(0,r)}}},5292:(t,e,r)=>{var i=r(7295);e.encrypt=function(t,e){var r=i(e,t._prev);return t._prev=t._cipher.encryptBlock(r),t._prev},e.decrypt=function(t,e){var r=t._prev;t._prev=e;var n=t._cipher.decryptBlock(e);return i(n,r)}},4958:(t,e,r)=>{var i=r(9509).Buffer,n=r(7295);function s(t,e,r){var s=e.length,o=n(e,t._cache);return t._cache=t._cache.slice(s),t._prev=i.concat([t._prev,r?e:o]),o}e.encrypt=function(t,e,r){for(var n,o=i.allocUnsafe(0);e.length;){if(0===t._cache.length&&(t._cache=t._cipher.encryptBlock(t._prev),t._prev=i.allocUnsafe(0)),!(t._cache.length<=e.length)){o=i.concat([o,s(t,e,r)]);break}n=t._cache.length,o=i.concat([o,s(t,e.slice(0,n),r)]),e=e.slice(n)}return o}},1510:(t,e,r)=>{var i=r(9509).Buffer;function n(t,e,r){for(var i,n,o=-1,a=0;++o<8;)i=e&1<<7-o?128:0,a+=(128&(n=t._cipher.encryptBlock(t._prev)[0]^i))>>o%8,t._prev=s(t._prev,r?i:n);return a}function s(t,e){var r=t.length,n=-1,s=i.allocUnsafe(t.length);for(t=i.concat([t,i.from([e])]);++n<r;)s[n]=t[n]<<1|t[n+1]>>7;return s}e.encrypt=function(t,e,r){for(var s=e.length,o=i.allocUnsafe(s),a=-1;++a<s;)o[a]=n(t,e[a],r);return o}},1964:(t,e,r)=>{var i=r(9509).Buffer;function n(t,e,r){var n=t._cipher.encryptBlock(t._prev)[0]^e;return t._prev=i.concat([t._prev.slice(1),i.from([r?e:n])]),n}e.encrypt=function(t,e,r){for(var s=e.length,o=i.allocUnsafe(s),a=-1;++a<s;)o[a]=n(t,e[a],r);return o}},6009:(t,e,r)=>{var i=r(7295),n=r(9509).Buffer,s=r(685);function o(t){var e=t._cipher.encryptBlockRaw(t._prev);return s(t._prev),e}e.encrypt=function(t,e){var r=Math.ceil(e.length/16),s=t._cache.length;t._cache=n.concat([t._cache,n.allocUnsafe(16*r)]);for(var a=0;a<r;a++){var u=o(t),h=s+16*a;t._cache.writeUInt32BE(u[0],h+0),t._cache.writeUInt32BE(u[1],h+4),t._cache.writeUInt32BE(u[2],h+8),t._cache.writeUInt32BE(u[3],h+12)}var c=t._cache.slice(0,e.length);return t._cache=t._cache.slice(e.length),i(e,c)}},8267:(t,e)=>{e.encrypt=function(t,e){return t._cipher.encryptBlock(e)},e.decrypt=function(t,e){return t._cipher.decryptBlock(e)}},45:(t,e,r)=>{var i={ECB:r(8267),CBC:r(5292),CFB:r(4958),CFB8:r(1964),CFB1:r(1510),OFB:r(8861),CTR:r(6009),GCM:r(6009)},n=r(4946);for(var s in n)n[s].module=i[n[s].mode];t.exports=n},8861:(t,e,r)=>{var i=r(8764).Buffer,n=r(7295);function s(t){return t._prev=t._cipher.encryptBlock(t._prev),t._prev}e.encrypt=function(t,e){for(;t._cache.length<e.length;)t._cache=i.concat([t._cache,s(t)]);var r=t._cache.slice(0,e.length);return t._cache=t._cache.slice(e.length),n(e,r)}},5969:(t,e,r)=>{var i=r(4497),n=r(9509).Buffer,s=r(1027);function o(t,e,r,o){s.call(this),this._cipher=new i.AES(e),this._prev=n.from(r),this._cache=n.allocUnsafe(0),this._secCache=n.allocUnsafe(0),this._decrypt=o,this._mode=t}r(5717)(o,s),o.prototype._update=function(t){return this._mode.encrypt(this,t,this._decrypt)},o.prototype._final=function(){this._cipher.scrub()},t.exports=o},3614:(t,e,r)=>{var i=r(7667),n=r(4696),s=r(45),o=r(9715),a=r(3048);function u(t,e,r){if(t=t.toLowerCase(),s[t])return n.createCipheriv(t,e,r);if(o[t])return new i({key:e,iv:r,mode:t});throw new TypeError("invalid suite type")}function h(t,e,r){if(t=t.toLowerCase(),s[t])return n.createDecipheriv(t,e,r);if(o[t])return new i({key:e,iv:r,mode:t,decrypt:!0});throw new TypeError("invalid suite type")}e.createCipher=e.Cipher=function(t,e){var r,i;if(t=t.toLowerCase(),s[t])r=s[t].key,i=s[t].iv;else{if(!o[t])throw new TypeError("invalid suite type");r=8*o[t].key,i=o[t].iv}var n=a(e,!1,r,i);return u(t,n.key,n.iv)},e.createCipheriv=e.Cipheriv=u,e.createDecipher=e.Decipher=function(t,e){var r,i;if(t=t.toLowerCase(),s[t])r=s[t].key,i=s[t].iv;else{if(!o[t])throw new TypeError("invalid suite type");r=8*o[t].key,i=o[t].iv}var n=a(e,!1,r,i);return h(t,n.key,n.iv)},e.createDecipheriv=e.Decipheriv=h,e.listCiphers=e.getCiphers=function(){return Object.keys(o).concat(n.getCiphers())}},7667:(t,e,r)=>{var i=r(1027),n=r(5251),s=r(5717),o=r(9509).Buffer,a={"des-ede3-cbc":n.CBC.instantiate(n.EDE),"des-ede3":n.EDE,"des-ede-cbc":n.CBC.instantiate(n.EDE),"des-ede":n.EDE,"des-cbc":n.CBC.instantiate(n.DES),"des-ecb":n.DES};function u(t){i.call(this);var e,r=t.mode.toLowerCase(),n=a[r];e=t.decrypt?"decrypt":"encrypt";var s=t.key;o.isBuffer(s)||(s=o.from(s)),"des-ede"!==r&&"des-ede-cbc"!==r||(s=o.concat([s,s.slice(0,8)]));var u=t.iv;o.isBuffer(u)||(u=o.from(u)),this._des=n.create({key:s,iv:u,type:e})}a.des=a["des-cbc"],a.des3=a["des-ede3-cbc"],t.exports=u,s(u,i),u.prototype._update=function(t){return o.from(this._des.update(t))},u.prototype._final=function(){return o.from(this._des.final())}},9715:(t,e)=>{e["des-ecb"]={key:8,iv:0},e["des-cbc"]=e.des={key:8,iv:8},e["des-ede3-cbc"]=e.des3={key:24,iv:8},e["des-ede3"]={key:24,iv:0},e["des-ede-cbc"]={key:16,iv:8},e["des-ede"]={key:16,iv:0}},3663:(t,e,r)=>{var i=r(8764).Buffer,n=r(3550),s=r(1798);function o(t){var e,r=t.modulus.byteLength();do{e=new n(s(r))}while(e.cmp(t.modulus)>=0||!e.umod(t.prime1)||!e.umod(t.prime2));return e}function a(t,e){var r=function(t){var e=o(t);return{blinder:e.toRed(n.mont(t.modulus)).redPow(new n(t.publicExponent)).fromRed(),unblinder:e.invm(t.modulus)}}(e),s=e.modulus.byteLength(),a=new n(t).mul(r.blinder).umod(e.modulus),u=a.toRed(n.mont(e.prime1)),h=a.toRed(n.mont(e.prime2)),c=e.coefficient,l=e.prime1,d=e.prime2,f=u.redPow(e.exponent1).fromRed(),p=h.redPow(e.exponent2).fromRed(),g=f.isub(p).imul(c).umod(l).imul(d);return p.iadd(g).imul(r.unblinder).umod(e.modulus).toArrayLike(i,"be",s)}a.getr=o,t.exports=a},6042:(t,e,r)=>{"use strict";t.exports=r(5207)},4743:(t,e,r)=>{"use strict";var i=r(9509).Buffer,n=r(3482),s=r(8473),o=r(5717),a=r(2957),u=r(7753),h=r(5207);function c(t){s.Writable.call(this);var e=h[t];if(!e)throw new Error("Unknown message digest");this._hashType=e.hash,this._hash=n(e.hash),this._tag=e.id,this._signType=e.sign}function l(t){s.Writable.call(this);var e=h[t];if(!e)throw new Error("Unknown message digest");this._hash=n(e.hash),this._tag=e.id,this._signType=e.sign}function d(t){return new c(t)}function f(t){return new l(t)}Object.keys(h).forEach((function(t){h[t].id=i.from(h[t].id,"hex"),h[t.toLowerCase()]=h[t]})),o(c,s.Writable),c.prototype._write=function(t,e,r){this._hash.update(t),r()},c.prototype.update=function(t,e){return this._hash.update("string"==typeof t?i.from(t,e):t),this},c.prototype.sign=function(t,e){this.end();var r=this._hash.digest(),i=a(r,t,this._hashType,this._signType,this._tag);return e?i.toString(e):i},o(l,s.Writable),l.prototype._write=function(t,e,r){this._hash.update(t),r()},l.prototype.update=function(t,e){return this._hash.update("string"==typeof t?i.from(t,e):t),this},l.prototype.verify=function(t,e,r){var n="string"==typeof e?i.from(e,r):e;this.end();var s=this._hash.digest();return u(n,s,t,this._signType,this._tag)},t.exports={Sign:d,Verify:f,createSign:d,createVerify:f}},2957:(t,e,r)=>{"use strict";var i=r(9509).Buffer,n=r(8355),s=r(3663),o=r(6266).ec,a=r(3550),u=r(980),h=r(1308);function c(t,e,r,s){if((t=i.from(t.toArray())).length<e.byteLength()){var o=i.alloc(e.byteLength()-t.length);t=i.concat([o,t])}var a=r.length,u=function(t,e){t=(t=l(t,e)).mod(e);var r=i.from(t.toArray());if(r.length<e.byteLength()){var n=i.alloc(e.byteLength()-r.length);r=i.concat([n,r])}return r}(r,e),h=i.alloc(a);h.fill(1);var c=i.alloc(a);return c=n(s,c).update(h).update(i.from([0])).update(t).update(u).digest(),h=n(s,c).update(h).digest(),{k:c=n(s,c).update(h).update(i.from([1])).update(t).update(u).digest(),v:h=n(s,c).update(h).digest()}}function l(t,e){var r=new a(t),i=(t.length<<3)-e.bitLength();return i>0&&r.ishrn(i),r}function d(t,e,r){var s,o;do{for(s=i.alloc(0);8*s.length<t.bitLength();)e.v=n(r,e.k).update(e.v).digest(),s=i.concat([s,e.v]);o=l(s,t),e.k=n(r,e.k).update(e.v).update(i.from([0])).digest(),e.v=n(r,e.k).update(e.v).digest()}while(-1!==o.cmp(t));return o}function f(t,e,r,i){return t.toRed(a.mont(r)).redPow(e).fromRed().mod(i)}t.exports=function(t,e,r,n,p){var g=u(e);if(g.curve){if("ecdsa"!==n&&"ecdsa/rsa"!==n)throw new Error("wrong private key type");return function(t,e){var r=h[e.curve.join(".")];if(!r)throw new Error("unknown curve "+e.curve.join("."));var n=new o(r).keyFromPrivate(e.privateKey).sign(t);return i.from(n.toDER())}(t,g)}if("dsa"===g.type){if("dsa"!==n)throw new Error("wrong private key type");return function(t,e,r){for(var n,s=e.params.priv_key,o=e.params.p,u=e.params.q,h=e.params.g,p=new a(0),g=l(t,u).mod(u),m=!1,y=c(s,u,t,r);!1===m;)p=f(h,n=d(u,y,r),o,u),0===(m=n.invm(u).imul(g.add(s.mul(p))).mod(u)).cmpn(0)&&(m=!1,p=new a(0));return function(t,e){t=t.toArray(),e=e.toArray(),128&t[0]&&(t=[0].concat(t)),128&e[0]&&(e=[0].concat(e));var r=[48,t.length+e.length+4,2,t.length];return r=r.concat(t,[2,e.length],e),i.from(r)}(p,m)}(t,g,r)}if("rsa"!==n&&"ecdsa/rsa"!==n)throw new Error("wrong private key type");if(void 0!==e.padding&&1!==e.padding)throw new Error("illegal or unsupported padding mode");t=i.concat([p,t]);for(var m=g.modulus.byteLength(),y=[0,1];t.length+y.length+1<m;)y.push(255);y.push(0);for(var v=-1;++v<t.length;)y.push(t[v]);return s(y,g)},t.exports.getKey=c,t.exports.makeKey=d},7753:(t,e,r)=>{"use strict";var i=r(9509).Buffer,n=r(3550),s=r(6266).ec,o=r(980),a=r(1308);function u(t,e){if(t.cmpn(0)<=0)throw new Error("invalid sig");if(t.cmp(e)>=0)throw new Error("invalid sig")}t.exports=function(t,e,r,h,c){var l=o(r);if("ec"===l.type){if("ecdsa"!==h&&"ecdsa/rsa"!==h)throw new Error("wrong public key type");return function(t,e,r){var i=a[r.data.algorithm.curve.join(".")];if(!i)throw new Error("unknown curve "+r.data.algorithm.curve.join("."));var n=new s(i),o=r.data.subjectPrivateKey.data;return n.verify(e,t,o)}(t,e,l)}if("dsa"===l.type){if("dsa"!==h)throw new Error("wrong public key type");return function(t,e,r){var i=r.data.p,s=r.data.q,a=r.data.g,h=r.data.pub_key,c=o.signature.decode(t,"der"),l=c.s,d=c.r;u(l,s),u(d,s);var f=n.mont(i),p=l.invm(s);return 0===a.toRed(f).redPow(new n(e).mul(p).mod(s)).fromRed().mul(h.toRed(f).redPow(d.mul(p).mod(s)).fromRed()).mod(i).mod(s).cmp(d)}(t,e,l)}if("rsa"!==h&&"ecdsa/rsa"!==h)throw new Error("wrong public key type");e=i.concat([c,e]);for(var d=l.modulus.byteLength(),f=[1],p=0;e.length+f.length+2<d;)f.push(255),p+=1;f.push(0);for(var g=-1;++g<e.length;)f.push(e[g]);f=i.from(f);var m=n.mont(l.modulus);t=(t=new n(t).toRed(m)).redPow(new n(l.publicExponent)),t=i.from(t.fromRed().toArray());var y=p<8?1:0;for(d=Math.min(t.length,f.length),t.length!==f.length&&(y=1),g=-1;++g<d;)y|=t[g]^f[g];return 0===y}},7295:(t,e,r)=>{var i=r(8764).Buffer;t.exports=function(t,e){for(var r=Math.min(t.length,e.length),n=new i(r),s=0;s<r;++s)n[s]=t[s]^e[s];return n}},8764:(t,e,r)=>{"use strict";const i=r(9742),n=r(645),s="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;e.Buffer=u,e.SlowBuffer=function(t){return+t!=t&&(t=0),u.alloc(+t)},e.INSPECT_MAX_BYTES=50;const o=2147483647;function a(t){if(t>o)throw new RangeError('The value "'+t+'" is invalid for option "size"');const e=new Uint8Array(t);return Object.setPrototypeOf(e,u.prototype),e}function u(t,e,r){if("number"==typeof t){if("string"==typeof e)throw new TypeError('The "string" argument must be of type string. Received type number');return l(t)}return h(t,e,r)}function h(t,e,r){if("string"==typeof t)return function(t,e){if("string"==typeof e&&""!==e||(e="utf8"),!u.isEncoding(e))throw new TypeError("Unknown encoding: "+e);const r=0|g(t,e);let i=a(r);const n=i.write(t,e);return n!==r&&(i=i.slice(0,n)),i}(t,e);if(ArrayBuffer.isView(t))return function(t){if(Y(t,Uint8Array)){const e=new Uint8Array(t);return f(e.buffer,e.byteOffset,e.byteLength)}return d(t)}(t);if(null==t)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t);if(Y(t,ArrayBuffer)||t&&Y(t.buffer,ArrayBuffer))return f(t,e,r);if("undefined"!=typeof SharedArrayBuffer&&(Y(t,SharedArrayBuffer)||t&&Y(t.buffer,SharedArrayBuffer)))return f(t,e,r);if("number"==typeof t)throw new TypeError('The "value" argument must not be of type number. Received type number');const i=t.valueOf&&t.valueOf();if(null!=i&&i!==t)return u.from(i,e,r);const n=function(t){if(u.isBuffer(t)){const e=0|p(t.length),r=a(e);return 0===r.length||t.copy(r,0,0,e),r}return void 0!==t.length?"number"!=typeof t.length||Q(t.length)?a(0):d(t):"Buffer"===t.type&&Array.isArray(t.data)?d(t.data):void 0}(t);if(n)return n;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof t[Symbol.toPrimitive])return u.from(t[Symbol.toPrimitive]("string"),e,r);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t)}function c(t){if("number"!=typeof t)throw new TypeError('"size" argument must be of type number');if(t<0)throw new RangeError('The value "'+t+'" is invalid for option "size"')}function l(t){return c(t),a(t<0?0:0|p(t))}function d(t){const e=t.length<0?0:0|p(t.length),r=a(e);for(let i=0;i<e;i+=1)r[i]=255&t[i];return r}function f(t,e,r){if(e<0||t.byteLength<e)throw new RangeError('"offset" is outside of buffer bounds');if(t.byteLength<e+(r||0))throw new RangeError('"length" is outside of buffer bounds');let i;return i=void 0===e&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,e):new Uint8Array(t,e,r),Object.setPrototypeOf(i,u.prototype),i}function p(t){if(t>=o)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+o.toString(16)+" bytes");return 0|t}function g(t,e){if(u.isBuffer(t))return t.length;if(ArrayBuffer.isView(t)||Y(t,ArrayBuffer))return t.byteLength;if("string"!=typeof t)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof t);const r=t.length,i=arguments.length>2&&!0===arguments[2];if(!i&&0===r)return 0;let n=!1;for(;;)switch(e){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return V(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return X(t).length;default:if(n)return i?-1:V(t).length;e=(""+e).toLowerCase(),n=!0}}function m(t,e,r){let i=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return R(this,e,r);case"utf8":case"utf-8":return I(this,e,r);case"ascii":return P(this,e,r);case"latin1":case"binary":return T(this,e,r);case"base64":return x(this,e,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return k(this,e,r);default:if(i)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),i=!0}}function y(t,e,r){const i=t[e];t[e]=t[r],t[r]=i}function v(t,e,r,i,n){if(0===t.length)return-1;if("string"==typeof r?(i=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),Q(r=+r)&&(r=n?0:t.length-1),r<0&&(r=t.length+r),r>=t.length){if(n)return-1;r=t.length-1}else if(r<0){if(!n)return-1;r=0}if("string"==typeof e&&(e=u.from(e,i)),u.isBuffer(e))return 0===e.length?-1:b(t,e,r,i,n);if("number"==typeof e)return e&=255,"function"==typeof Uint8Array.prototype.indexOf?n?Uint8Array.prototype.indexOf.call(t,e,r):Uint8Array.prototype.lastIndexOf.call(t,e,r):b(t,[e],r,i,n);throw new TypeError("val must be string, number or Buffer")}function b(t,e,r,i,n){let s,o=1,a=t.length,u=e.length;if(void 0!==i&&("ucs2"===(i=String(i).toLowerCase())||"ucs-2"===i||"utf16le"===i||"utf-16le"===i)){if(t.length<2||e.length<2)return-1;o=2,a/=2,u/=2,r/=2}function h(t,e){return 1===o?t[e]:t.readUInt16BE(e*o)}if(n){let i=-1;for(s=r;s<a;s++)if(h(t,s)===h(e,-1===i?0:s-i)){if(-1===i&&(i=s),s-i+1===u)return i*o}else-1!==i&&(s-=s-i),i=-1}else for(r+u>a&&(r=a-u),s=r;s>=0;s--){let r=!0;for(let i=0;i<u;i++)if(h(t,s+i)!==h(e,i)){r=!1;break}if(r)return s}return-1}function w(t,e,r,i){r=Number(r)||0;const n=t.length-r;i?(i=Number(i))>n&&(i=n):i=n;const s=e.length;let o;for(i>s/2&&(i=s/2),o=0;o<i;++o){const i=parseInt(e.substr(2*o,2),16);if(Q(i))return o;t[r+o]=i}return o}function E(t,e,r,i){return G(V(e,t.length-r),t,r,i)}function S(t,e,r,i){return G(function(t){const e=[];for(let r=0;r<t.length;++r)e.push(255&t.charCodeAt(r));return e}(e),t,r,i)}function N(t,e,r,i){return G(X(e),t,r,i)}function M(t,e,r,i){return G(function(t,e){let r,i,n;const s=[];for(let o=0;o<t.length&&!((e-=2)<0);++o)r=t.charCodeAt(o),i=r>>8,n=r%256,s.push(n),s.push(i);return s}(e,t.length-r),t,r,i)}function x(t,e,r){return 0===e&&r===t.length?i.fromByteArray(t):i.fromByteArray(t.slice(e,r))}function I(t,e,r){r=Math.min(t.length,r);const i=[];let n=e;for(;n<r;){const e=t[n];let s=null,o=e>239?4:e>223?3:e>191?2:1;if(n+o<=r){let r,i,a,u;switch(o){case 1:e<128&&(s=e);break;case 2:r=t[n+1],128==(192&r)&&(u=(31&e)<<6|63&r,u>127&&(s=u));break;case 3:r=t[n+1],i=t[n+2],128==(192&r)&&128==(192&i)&&(u=(15&e)<<12|(63&r)<<6|63&i,u>2047&&(u<55296||u>57343)&&(s=u));break;case 4:r=t[n+1],i=t[n+2],a=t[n+3],128==(192&r)&&128==(192&i)&&128==(192&a)&&(u=(15&e)<<18|(63&r)<<12|(63&i)<<6|63&a,u>65535&&u<1114112&&(s=u))}}null===s?(s=65533,o=1):s>65535&&(s-=65536,i.push(s>>>10&1023|55296),s=56320|1023&s),i.push(s),n+=o}return function(t){const e=t.length;if(e<=A)return String.fromCharCode.apply(String,t);let r="",i=0;for(;i<e;)r+=String.fromCharCode.apply(String,t.slice(i,i+=A));return r}(i)}e.kMaxLength=o,u.TYPED_ARRAY_SUPPORT=function(){try{const t=new Uint8Array(1),e={foo:function(){return 42}};return Object.setPrototypeOf(e,Uint8Array.prototype),Object.setPrototypeOf(t,e),42===t.foo()}catch(t){return!1}}(),u.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(u.prototype,"parent",{enumerable:!0,get:function(){if(u.isBuffer(this))return this.buffer}}),Object.defineProperty(u.prototype,"offset",{enumerable:!0,get:function(){if(u.isBuffer(this))return this.byteOffset}}),u.poolSize=8192,u.from=function(t,e,r){return h(t,e,r)},Object.setPrototypeOf(u.prototype,Uint8Array.prototype),Object.setPrototypeOf(u,Uint8Array),u.alloc=function(t,e,r){return function(t,e,r){return c(t),t<=0?a(t):void 0!==e?"string"==typeof r?a(t).fill(e,r):a(t).fill(e):a(t)}(t,e,r)},u.allocUnsafe=function(t){return l(t)},u.allocUnsafeSlow=function(t){return l(t)},u.isBuffer=function(t){return null!=t&&!0===t._isBuffer&&t!==u.prototype},u.compare=function(t,e){if(Y(t,Uint8Array)&&(t=u.from(t,t.offset,t.byteLength)),Y(e,Uint8Array)&&(e=u.from(e,e.offset,e.byteLength)),!u.isBuffer(t)||!u.isBuffer(e))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(t===e)return 0;let r=t.length,i=e.length;for(let n=0,s=Math.min(r,i);n<s;++n)if(t[n]!==e[n]){r=t[n],i=e[n];break}return r<i?-1:i<r?1:0},u.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},u.concat=function(t,e){if(!Array.isArray(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return u.alloc(0);let r;if(void 0===e)for(e=0,r=0;r<t.length;++r)e+=t[r].length;const i=u.allocUnsafe(e);let n=0;for(r=0;r<t.length;++r){let e=t[r];if(Y(e,Uint8Array))n+e.length>i.length?(u.isBuffer(e)||(e=u.from(e)),e.copy(i,n)):Uint8Array.prototype.set.call(i,e,n);else{if(!u.isBuffer(e))throw new TypeError('"list" argument must be an Array of Buffers');e.copy(i,n)}n+=e.length}return i},u.byteLength=g,u.prototype._isBuffer=!0,u.prototype.swap16=function(){const t=this.length;if(t%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let e=0;e<t;e+=2)y(this,e,e+1);return this},u.prototype.swap32=function(){const t=this.length;if(t%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let e=0;e<t;e+=4)y(this,e,e+3),y(this,e+1,e+2);return this},u.prototype.swap64=function(){const t=this.length;if(t%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let e=0;e<t;e+=8)y(this,e,e+7),y(this,e+1,e+6),y(this,e+2,e+5),y(this,e+3,e+4);return this},u.prototype.toString=function(){const t=this.length;return 0===t?"":0===arguments.length?I(this,0,t):m.apply(this,arguments)},u.prototype.toLocaleString=u.prototype.toString,u.prototype.equals=function(t){if(!u.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===u.compare(this,t)},u.prototype.inspect=function(){let t="";const r=e.INSPECT_MAX_BYTES;return t=this.toString("hex",0,r).replace(/(.{2})/g,"$1 ").trim(),this.length>r&&(t+=" ... "),"<Buffer "+t+">"},s&&(u.prototype[s]=u.prototype.inspect),u.prototype.compare=function(t,e,r,i,n){if(Y(t,Uint8Array)&&(t=u.from(t,t.offset,t.byteLength)),!u.isBuffer(t))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof t);if(void 0===e&&(e=0),void 0===r&&(r=t?t.length:0),void 0===i&&(i=0),void 0===n&&(n=this.length),e<0||r>t.length||i<0||n>this.length)throw new RangeError("out of range index");if(i>=n&&e>=r)return 0;if(i>=n)return-1;if(e>=r)return 1;if(this===t)return 0;let s=(n>>>=0)-(i>>>=0),o=(r>>>=0)-(e>>>=0);const a=Math.min(s,o),h=this.slice(i,n),c=t.slice(e,r);for(let t=0;t<a;++t)if(h[t]!==c[t]){s=h[t],o=c[t];break}return s<o?-1:o<s?1:0},u.prototype.includes=function(t,e,r){return-1!==this.indexOf(t,e,r)},u.prototype.indexOf=function(t,e,r){return v(this,t,e,r,!0)},u.prototype.lastIndexOf=function(t,e,r){return v(this,t,e,r,!1)},u.prototype.write=function(t,e,r,i){if(void 0===e)i="utf8",r=this.length,e=0;else if(void 0===r&&"string"==typeof e)i=e,r=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e>>>=0,isFinite(r)?(r>>>=0,void 0===i&&(i="utf8")):(i=r,r=void 0)}const n=this.length-e;if((void 0===r||r>n)&&(r=n),t.length>0&&(r<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");i||(i="utf8");let s=!1;for(;;)switch(i){case"hex":return w(this,t,e,r);case"utf8":case"utf-8":return E(this,t,e,r);case"ascii":case"latin1":case"binary":return S(this,t,e,r);case"base64":return N(this,t,e,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return M(this,t,e,r);default:if(s)throw new TypeError("Unknown encoding: "+i);i=(""+i).toLowerCase(),s=!0}},u.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const A=4096;function P(t,e,r){let i="";r=Math.min(t.length,r);for(let n=e;n<r;++n)i+=String.fromCharCode(127&t[n]);return i}function T(t,e,r){let i="";r=Math.min(t.length,r);for(let n=e;n<r;++n)i+=String.fromCharCode(t[n]);return i}function R(t,e,r){const i=t.length;(!e||e<0)&&(e=0),(!r||r<0||r>i)&&(r=i);let n="";for(let i=e;i<r;++i)n+=J[t[i]];return n}function k(t,e,r){const i=t.slice(e,r);let n="";for(let t=0;t<i.length-1;t+=2)n+=String.fromCharCode(i[t]+256*i[t+1]);return n}function B(t,e,r){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(t+e>r)throw new RangeError("Trying to access beyond buffer length")}function O(t,e,r,i,n,s){if(!u.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>n||e<s)throw new RangeError('"value" argument is out of bounds');if(r+i>t.length)throw new RangeError("Index out of range")}function C(t,e,r,i,n){W(e,i,n,t,r,7);let s=Number(e&BigInt(4294967295));t[r++]=s,s>>=8,t[r++]=s,s>>=8,t[r++]=s,s>>=8,t[r++]=s;let o=Number(e>>BigInt(32)&BigInt(4294967295));return t[r++]=o,o>>=8,t[r++]=o,o>>=8,t[r++]=o,o>>=8,t[r++]=o,r}function L(t,e,r,i,n){W(e,i,n,t,r,7);let s=Number(e&BigInt(4294967295));t[r+7]=s,s>>=8,t[r+6]=s,s>>=8,t[r+5]=s,s>>=8,t[r+4]=s;let o=Number(e>>BigInt(32)&BigInt(4294967295));return t[r+3]=o,o>>=8,t[r+2]=o,o>>=8,t[r+1]=o,o>>=8,t[r]=o,r+8}function j(t,e,r,i,n,s){if(r+i>t.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function Z(t,e,r,i,s){return e=+e,r>>>=0,s||j(t,0,r,4),n.write(t,e,r,i,23,4),r+4}function D(t,e,r,i,s){return e=+e,r>>>=0,s||j(t,0,r,8),n.write(t,e,r,i,52,8),r+8}u.prototype.slice=function(t,e){const r=this.length;(t=~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),(e=void 0===e?r:~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),e<t&&(e=t);const i=this.subarray(t,e);return Object.setPrototypeOf(i,u.prototype),i},u.prototype.readUintLE=u.prototype.readUIntLE=function(t,e,r){t>>>=0,e>>>=0,r||B(t,e,this.length);let i=this[t],n=1,s=0;for(;++s<e&&(n*=256);)i+=this[t+s]*n;return i},u.prototype.readUintBE=u.prototype.readUIntBE=function(t,e,r){t>>>=0,e>>>=0,r||B(t,e,this.length);let i=this[t+--e],n=1;for(;e>0&&(n*=256);)i+=this[t+--e]*n;return i},u.prototype.readUint8=u.prototype.readUInt8=function(t,e){return t>>>=0,e||B(t,1,this.length),this[t]},u.prototype.readUint16LE=u.prototype.readUInt16LE=function(t,e){return t>>>=0,e||B(t,2,this.length),this[t]|this[t+1]<<8},u.prototype.readUint16BE=u.prototype.readUInt16BE=function(t,e){return t>>>=0,e||B(t,2,this.length),this[t]<<8|this[t+1]},u.prototype.readUint32LE=u.prototype.readUInt32LE=function(t,e){return t>>>=0,e||B(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},u.prototype.readUint32BE=u.prototype.readUInt32BE=function(t,e){return t>>>=0,e||B(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},u.prototype.readBigUInt64LE=_((function(t){K(t>>>=0,"offset");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||q(t,this.length-8);const i=e+256*this[++t]+65536*this[++t]+this[++t]*2**24,n=this[++t]+256*this[++t]+65536*this[++t]+r*2**24;return BigInt(i)+(BigInt(n)<<BigInt(32))})),u.prototype.readBigUInt64BE=_((function(t){K(t>>>=0,"offset");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||q(t,this.length-8);const i=e*2**24+65536*this[++t]+256*this[++t]+this[++t],n=this[++t]*2**24+65536*this[++t]+256*this[++t]+r;return(BigInt(i)<<BigInt(32))+BigInt(n)})),u.prototype.readIntLE=function(t,e,r){t>>>=0,e>>>=0,r||B(t,e,this.length);let i=this[t],n=1,s=0;for(;++s<e&&(n*=256);)i+=this[t+s]*n;return n*=128,i>=n&&(i-=Math.pow(2,8*e)),i},u.prototype.readIntBE=function(t,e,r){t>>>=0,e>>>=0,r||B(t,e,this.length);let i=e,n=1,s=this[t+--i];for(;i>0&&(n*=256);)s+=this[t+--i]*n;return n*=128,s>=n&&(s-=Math.pow(2,8*e)),s},u.prototype.readInt8=function(t,e){return t>>>=0,e||B(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},u.prototype.readInt16LE=function(t,e){t>>>=0,e||B(t,2,this.length);const r=this[t]|this[t+1]<<8;return 32768&r?4294901760|r:r},u.prototype.readInt16BE=function(t,e){t>>>=0,e||B(t,2,this.length);const r=this[t+1]|this[t]<<8;return 32768&r?4294901760|r:r},u.prototype.readInt32LE=function(t,e){return t>>>=0,e||B(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},u.prototype.readInt32BE=function(t,e){return t>>>=0,e||B(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},u.prototype.readBigInt64LE=_((function(t){K(t>>>=0,"offset");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||q(t,this.length-8);const i=this[t+4]+256*this[t+5]+65536*this[t+6]+(r<<24);return(BigInt(i)<<BigInt(32))+BigInt(e+256*this[++t]+65536*this[++t]+this[++t]*2**24)})),u.prototype.readBigInt64BE=_((function(t){K(t>>>=0,"offset");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||q(t,this.length-8);const i=(e<<24)+65536*this[++t]+256*this[++t]+this[++t];return(BigInt(i)<<BigInt(32))+BigInt(this[++t]*2**24+65536*this[++t]+256*this[++t]+r)})),u.prototype.readFloatLE=function(t,e){return t>>>=0,e||B(t,4,this.length),n.read(this,t,!0,23,4)},u.prototype.readFloatBE=function(t,e){return t>>>=0,e||B(t,4,this.length),n.read(this,t,!1,23,4)},u.prototype.readDoubleLE=function(t,e){return t>>>=0,e||B(t,8,this.length),n.read(this,t,!0,52,8)},u.prototype.readDoubleBE=function(t,e){return t>>>=0,e||B(t,8,this.length),n.read(this,t,!1,52,8)},u.prototype.writeUintLE=u.prototype.writeUIntLE=function(t,e,r,i){t=+t,e>>>=0,r>>>=0,i||O(this,t,e,r,Math.pow(2,8*r)-1,0);let n=1,s=0;for(this[e]=255&t;++s<r&&(n*=256);)this[e+s]=t/n&255;return e+r},u.prototype.writeUintBE=u.prototype.writeUIntBE=function(t,e,r,i){t=+t,e>>>=0,r>>>=0,i||O(this,t,e,r,Math.pow(2,8*r)-1,0);let n=r-1,s=1;for(this[e+n]=255&t;--n>=0&&(s*=256);)this[e+n]=t/s&255;return e+r},u.prototype.writeUint8=u.prototype.writeUInt8=function(t,e,r){return t=+t,e>>>=0,r||O(this,t,e,1,255,0),this[e]=255&t,e+1},u.prototype.writeUint16LE=u.prototype.writeUInt16LE=function(t,e,r){return t=+t,e>>>=0,r||O(this,t,e,2,65535,0),this[e]=255&t,this[e+1]=t>>>8,e+2},u.prototype.writeUint16BE=u.prototype.writeUInt16BE=function(t,e,r){return t=+t,e>>>=0,r||O(this,t,e,2,65535,0),this[e]=t>>>8,this[e+1]=255&t,e+2},u.prototype.writeUint32LE=u.prototype.writeUInt32LE=function(t,e,r){return t=+t,e>>>=0,r||O(this,t,e,4,4294967295,0),this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t,e+4},u.prototype.writeUint32BE=u.prototype.writeUInt32BE=function(t,e,r){return t=+t,e>>>=0,r||O(this,t,e,4,4294967295,0),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},u.prototype.writeBigUInt64LE=_((function(t,e=0){return C(this,t,e,BigInt(0),BigInt("0xffffffffffffffff"))})),u.prototype.writeBigUInt64BE=_((function(t,e=0){return L(this,t,e,BigInt(0),BigInt("0xffffffffffffffff"))})),u.prototype.writeIntLE=function(t,e,r,i){if(t=+t,e>>>=0,!i){const i=Math.pow(2,8*r-1);O(this,t,e,r,i-1,-i)}let n=0,s=1,o=0;for(this[e]=255&t;++n<r&&(s*=256);)t<0&&0===o&&0!==this[e+n-1]&&(o=1),this[e+n]=(t/s>>0)-o&255;return e+r},u.prototype.writeIntBE=function(t,e,r,i){if(t=+t,e>>>=0,!i){const i=Math.pow(2,8*r-1);O(this,t,e,r,i-1,-i)}let n=r-1,s=1,o=0;for(this[e+n]=255&t;--n>=0&&(s*=256);)t<0&&0===o&&0!==this[e+n+1]&&(o=1),this[e+n]=(t/s>>0)-o&255;return e+r},u.prototype.writeInt8=function(t,e,r){return t=+t,e>>>=0,r||O(this,t,e,1,127,-128),t<0&&(t=255+t+1),this[e]=255&t,e+1},u.prototype.writeInt16LE=function(t,e,r){return t=+t,e>>>=0,r||O(this,t,e,2,32767,-32768),this[e]=255&t,this[e+1]=t>>>8,e+2},u.prototype.writeInt16BE=function(t,e,r){return t=+t,e>>>=0,r||O(this,t,e,2,32767,-32768),this[e]=t>>>8,this[e+1]=255&t,e+2},u.prototype.writeInt32LE=function(t,e,r){return t=+t,e>>>=0,r||O(this,t,e,4,2147483647,-2147483648),this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24,e+4},u.prototype.writeInt32BE=function(t,e,r){return t=+t,e>>>=0,r||O(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},u.prototype.writeBigInt64LE=_((function(t,e=0){return C(this,t,e,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),u.prototype.writeBigInt64BE=_((function(t,e=0){return L(this,t,e,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),u.prototype.writeFloatLE=function(t,e,r){return Z(this,t,e,!0,r)},u.prototype.writeFloatBE=function(t,e,r){return Z(this,t,e,!1,r)},u.prototype.writeDoubleLE=function(t,e,r){return D(this,t,e,!0,r)},u.prototype.writeDoubleBE=function(t,e,r){return D(this,t,e,!1,r)},u.prototype.copy=function(t,e,r,i){if(!u.isBuffer(t))throw new TypeError("argument should be a Buffer");if(r||(r=0),i||0===i||(i=this.length),e>=t.length&&(e=t.length),e||(e=0),i>0&&i<r&&(i=r),i===r)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("Index out of range");if(i<0)throw new RangeError("sourceEnd out of bounds");i>this.length&&(i=this.length),t.length-e<i-r&&(i=t.length-e+r);const n=i-r;return this===t&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(e,r,i):Uint8Array.prototype.set.call(t,this.subarray(r,i),e),n},u.prototype.fill=function(t,e,r,i){if("string"==typeof t){if("string"==typeof e?(i=e,e=0,r=this.length):"string"==typeof r&&(i=r,r=this.length),void 0!==i&&"string"!=typeof i)throw new TypeError("encoding must be a string");if("string"==typeof i&&!u.isEncoding(i))throw new TypeError("Unknown encoding: "+i);if(1===t.length){const e=t.charCodeAt(0);("utf8"===i&&e<128||"latin1"===i)&&(t=e)}}else"number"==typeof t?t&=255:"boolean"==typeof t&&(t=Number(t));if(e<0||this.length<e||this.length<r)throw new RangeError("Out of range index");if(r<=e)return this;let n;if(e>>>=0,r=void 0===r?this.length:r>>>0,t||(t=0),"number"==typeof t)for(n=e;n<r;++n)this[n]=t;else{const s=u.isBuffer(t)?t:u.from(t,i),o=s.length;if(0===o)throw new TypeError('The value "'+t+'" is invalid for argument "value"');for(n=0;n<r-e;++n)this[n+e]=s[n%o]}return this};const F={};function z(t,e,r){F[t]=class extends r{constructor(){super(),Object.defineProperty(this,"message",{value:e.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${t}]`,this.stack,delete this.name}get code(){return t}set code(t){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:t,writable:!0})}toString(){return`${this.name} [${t}]: ${this.message}`}}}function H(t){let e="",r=t.length;const i="-"===t[0]?1:0;for(;r>=i+4;r-=3)e=`_${t.slice(r-3,r)}${e}`;return`${t.slice(0,r)}${e}`}function W(t,e,r,i,n,s){if(t>r||t<e){const i="bigint"==typeof e?"n":"";let n;throw n=s>3?0===e||e===BigInt(0)?`>= 0${i} and < 2${i} ** ${8*(s+1)}${i}`:`>= -(2${i} ** ${8*(s+1)-1}${i}) and < 2 ** ${8*(s+1)-1}${i}`:`>= ${e}${i} and <= ${r}${i}`,new F.ERR_OUT_OF_RANGE("value",n,t)}!function(t,e,r){K(e,"offset"),void 0!==t[e]&&void 0!==t[e+r]||q(e,t.length-(r+1))}(i,n,s)}function K(t,e){if("number"!=typeof t)throw new F.ERR_INVALID_ARG_TYPE(e,"number",t)}function q(t,e,r){if(Math.floor(t)!==t)throw K(t,r),new F.ERR_OUT_OF_RANGE(r||"offset","an integer",t);if(e<0)throw new F.ERR_BUFFER_OUT_OF_BOUNDS;throw new F.ERR_OUT_OF_RANGE(r||"offset",`>= ${r?1:0} and <= ${e}`,t)}z("ERR_BUFFER_OUT_OF_BOUNDS",(function(t){return t?`${t} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),z("ERR_INVALID_ARG_TYPE",(function(t,e){return`The "${t}" argument must be of type number. Received type ${typeof e}`}),TypeError),z("ERR_OUT_OF_RANGE",(function(t,e,r){let i=`The value of "${t}" is out of range.`,n=r;return Number.isInteger(r)&&Math.abs(r)>2**32?n=H(String(r)):"bigint"==typeof r&&(n=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(n=H(n)),n+="n"),i+=` It must be ${e}. Received ${n}`,i}),RangeError);const U=/[^+/0-9A-Za-z-_]/g;function V(t,e){let r;e=e||1/0;const i=t.length;let n=null;const s=[];for(let o=0;o<i;++o){if(r=t.charCodeAt(o),r>55295&&r<57344){if(!n){if(r>56319){(e-=3)>-1&&s.push(239,191,189);continue}if(o+1===i){(e-=3)>-1&&s.push(239,191,189);continue}n=r;continue}if(r<56320){(e-=3)>-1&&s.push(239,191,189),n=r;continue}r=65536+(n-55296<<10|r-56320)}else n&&(e-=3)>-1&&s.push(239,191,189);if(n=null,r<128){if((e-=1)<0)break;s.push(r)}else if(r<2048){if((e-=2)<0)break;s.push(r>>6|192,63&r|128)}else if(r<65536){if((e-=3)<0)break;s.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;s.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return s}function X(t){return i.toByteArray(function(t){if((t=(t=t.split("=")[0]).trim().replace(U,"")).length<2)return"";for(;t.length%4!=0;)t+="=";return t}(t))}function G(t,e,r,i){let n;for(n=0;n<i&&!(n+r>=e.length||n>=t.length);++n)e[n+r]=t[n];return n}function Y(t,e){return t instanceof e||null!=t&&null!=t.constructor&&null!=t.constructor.name&&t.constructor.name===e.name}function Q(t){return t!=t}const J=function(){const t="0123456789abcdef",e=new Array(256);for(let r=0;r<16;++r){const i=16*r;for(let n=0;n<16;++n)e[i+n]=t[r]+t[n]}return e}();function _(t){return"undefined"==typeof BigInt?$:t}function $(){throw new Error("BigInt not supported")}},584:t=>{t.exports={100:"Continue",101:"Switching Protocols",102:"Processing",200:"OK",201:"Created",202:"Accepted",203:"Non-Authoritative Information",204:"No Content",205:"Reset Content",206:"Partial Content",207:"Multi-Status",208:"Already Reported",226:"IM Used",300:"Multiple Choices",301:"Moved Permanently",302:"Found",303:"See Other",304:"Not Modified",305:"Use Proxy",307:"Temporary Redirect",308:"Permanent Redirect",400:"Bad Request",401:"Unauthorized",402:"Payment Required",403:"Forbidden",404:"Not Found",405:"Method Not Allowed",406:"Not Acceptable",407:"Proxy Authentication Required",408:"Request Timeout",409:"Conflict",410:"Gone",411:"Length Required",412:"Precondition Failed",413:"Payload Too Large",414:"URI Too Long",415:"Unsupported Media Type",416:"Range Not Satisfiable",417:"Expectation Failed",418:"I'm a teapot",421:"Misdirected Request",422:"Unprocessable Entity",423:"Locked",424:"Failed Dependency",425:"Unordered Collection",426:"Upgrade Required",428:"Precondition Required",429:"Too Many Requests",431:"Request Header Fields Too Large",451:"Unavailable For Legal Reasons",500:"Internal Server Error",501:"Not Implemented",502:"Bad Gateway",503:"Service Unavailable",504:"Gateway Timeout",505:"HTTP Version Not Supported",506:"Variant Also Negotiates",507:"Insufficient Storage",508:"Loop Detected",509:"Bandwidth Limit Exceeded",510:"Not Extended",511:"Network Authentication Required"}},1924:(t,e,r)=>{"use strict";var i=r(210),n=r(5559),s=n(i("String.prototype.indexOf"));t.exports=function(t,e){var r=i(t,!!e);return"function"==typeof r&&s(t,".prototype.")>-1?n(r):r}},5559:(t,e,r)=>{"use strict";var i=r(8612),n=r(210),s=n("%Function.prototype.apply%"),o=n("%Function.prototype.call%"),a=n("%Reflect.apply%",!0)||i.call(o,s),u=n("%Object.getOwnPropertyDescriptor%",!0),h=n("%Object.defineProperty%",!0),c=n("%Math.max%");if(h)try{h({},"a",{value:1})}catch(t){h=null}t.exports=function(t){var e=a(i,o,arguments);return u&&h&&u(e,"length").configurable&&h(e,"length",{value:1+c(0,t.length-(arguments.length-1))}),e};var l=function(){return a(i,s,arguments)};h?h(t.exports,"apply",{value:l}):t.exports.apply=l},1027:(t,e,r)=>{var i=r(9509).Buffer,n=r(2830).Transform,s=r(2553).s;function o(t){n.call(this),this.hashMode="string"==typeof t,this.hashMode?this[t]=this._finalOrDigest:this.final=this._finalOrDigest,this._final&&(this.__final=this._final,this._final=null),this._decoder=null,this._encoding=null}r(5717)(o,n),o.prototype.update=function(t,e,r){"string"==typeof t&&(t=i.from(t,e));var n=this._update(t);return this.hashMode?this:(r&&(n=this._toString(n,r)),n)},o.prototype.setAutoPadding=function(){},o.prototype.getAuthTag=function(){throw new Error("trying to get auth tag in unsupported state")},o.prototype.setAuthTag=function(){throw new Error("trying to set auth tag in unsupported state")},o.prototype.setAAD=function(){throw new Error("trying to set aad in unsupported state")},o.prototype._transform=function(t,e,r){var i;try{this.hashMode?this._update(t):this.push(this._update(t))}catch(t){i=t}finally{r(i)}},o.prototype._flush=function(t){var e;try{this.push(this.__final())}catch(t){e=t}t(e)},o.prototype._finalOrDigest=function(t){var e=this.__final()||i.alloc(0);return t&&(e=this._toString(e,t,!0)),e},o.prototype._toString=function(t,e,r){if(this._decoder||(this._decoder=new s(e),this._encoding=e),this._encoding!==e)throw new Error("can't switch encodings");var i=this._decoder.write(t);return r&&(i+=this._decoder.end()),i},t.exports=o},6393:(t,e,r)=>{var i=r(8764).Buffer,n=r(6266),s=r(586);t.exports=function(t){return new a(t)};var o={secp256k1:{name:"secp256k1",byteLength:32},secp224r1:{name:"p224",byteLength:28},prime256v1:{name:"p256",byteLength:32},prime192v1:{name:"p192",byteLength:24},ed25519:{name:"ed25519",byteLength:32},secp384r1:{name:"p384",byteLength:48},secp521r1:{name:"p521",byteLength:66}};function a(t){this.curveType=o[t],this.curveType||(this.curveType={name:t}),this.curve=new n.ec(this.curveType.name),this.keys=void 0}function u(t,e,r){Array.isArray(t)||(t=t.toArray());var n=new i(t);if(r&&n.length<r){var s=new i(r-n.length);s.fill(0),n=i.concat([s,n])}return e?n.toString(e):n}o.p224=o.secp224r1,o.p256=o.secp256r1=o.prime256v1,o.p192=o.secp192r1=o.prime192v1,o.p384=o.secp384r1,o.p521=o.secp521r1,a.prototype.generateKeys=function(t,e){return this.keys=this.curve.genKeyPair(),this.getPublicKey(t,e)},a.prototype.computeSecret=function(t,e,r){return e=e||"utf8",i.isBuffer(t)||(t=new i(t,e)),u(this.curve.keyFromPublic(t).getPublic().mul(this.keys.getPrivate()).getX(),r,this.curveType.byteLength)},a.prototype.getPublicKey=function(t,e){var r=this.keys.getPublic("compressed"===e,!0);return"hybrid"===e&&(r[r.length-1]%2?r[0]=7:r[0]=6),u(r,t)},a.prototype.getPrivateKey=function(t){return u(this.keys.getPrivate(),t)},a.prototype.setPublicKey=function(t,e){return e=e||"utf8",i.isBuffer(t)||(t=new i(t,e)),this.keys._importPublic(t),this},a.prototype.setPrivateKey=function(t,e){e=e||"utf8",i.isBuffer(t)||(t=new i(t,e));var r=new s(t);return r=r.toString(16),this.keys=this.curve.genKeyPair(),this.keys._importPrivate(r),this}},586:function(t,e,r){!function(t,e){"use strict";function i(t,e){if(!t)throw new Error(e||"Assertion failed")}function n(t,e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}function s(t,e,r){if(s.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==e&&"be"!==e||(r=e,e=10),this._init(t||0,e||10,r||"be"))}var o;"object"==typeof t?t.exports=s:e.BN=s,s.BN=s,s.wordSize=26;try{o="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:r(8623).Buffer}catch(t){}function a(t,e){var r=t.charCodeAt(e);return r>=65&&r<=70?r-55:r>=97&&r<=102?r-87:r-48&15}function u(t,e,r){var i=a(t,r);return r-1>=e&&(i|=a(t,r-1)<<4),i}function h(t,e,r,i){for(var n=0,s=Math.min(t.length,r),o=e;o<s;o++){var a=t.charCodeAt(o)-48;n*=i,n+=a>=49?a-49+10:a>=17?a-17+10:a}return n}s.isBN=function(t){return t instanceof s||null!==t&&"object"==typeof t&&t.constructor.wordSize===s.wordSize&&Array.isArray(t.words)},s.max=function(t,e){return t.cmp(e)>0?t:e},s.min=function(t,e){return t.cmp(e)<0?t:e},s.prototype._init=function(t,e,r){if("number"==typeof t)return this._initNumber(t,e,r);if("object"==typeof t)return this._initArray(t,e,r);"hex"===e&&(e=16),i(e===(0|e)&&e>=2&&e<=36);var n=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&(n++,this.negative=1),n<t.length&&(16===e?this._parseHex(t,n,r):(this._parseBase(t,e,n),"le"===r&&this._initArray(this.toArray(),e,r)))},s.prototype._initNumber=function(t,e,r){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(i(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===r&&this._initArray(this.toArray(),e,r)},s.prototype._initArray=function(t,e,r){if(i("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var s,o,a=0;if("be"===r)for(n=t.length-1,s=0;n>=0;n-=3)o=t[n]|t[n-1]<<8|t[n-2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);else if("le"===r)for(n=0,s=0;n<t.length;n+=3)o=t[n]|t[n+1]<<8|t[n+2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);return this.strip()},s.prototype._parseHex=function(t,e,r){this.length=Math.ceil((t.length-e)/6),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var n,s=0,o=0;if("be"===r)for(i=t.length-1;i>=e;i-=2)n=u(t,e,i)<<s,this.words[o]|=67108863&n,s>=18?(s-=18,o+=1,this.words[o]|=n>>>26):s+=8;else for(i=(t.length-e)%2==0?e+1:e;i<t.length;i+=2)n=u(t,e,i)<<s,this.words[o]|=67108863&n,s>=18?(s-=18,o+=1,this.words[o]|=n>>>26):s+=8;this.strip()},s.prototype._parseBase=function(t,e,r){this.words=[0],this.length=1;for(var i=0,n=1;n<=67108863;n*=e)i++;i--,n=n/e|0;for(var s=t.length-r,o=s%i,a=Math.min(s,s-o)+r,u=0,c=r;c<a;c+=i)u=h(t,c,c+i,e),this.imuln(n),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u);if(0!==o){var l=1;for(u=h(t,c,t.length,e),c=0;c<o;c++)l*=e;this.imuln(l),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u)}this.strip()},s.prototype.copy=function(t){t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];t.length=this.length,t.negative=this.negative,t.red=this.red},s.prototype.clone=function(){var t=new s(null);return this.copy(t),t},s.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},s.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},s.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},s.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var c=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],l=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],d=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function f(t,e,r){r.negative=e.negative^t.negative;var i=t.length+e.length|0;r.length=i,i=i-1|0;var n=0|t.words[0],s=0|e.words[0],o=n*s,a=67108863&o,u=o/67108864|0;r.words[0]=a;for(var h=1;h<i;h++){for(var c=u>>>26,l=67108863&u,d=Math.min(h,e.length-1),f=Math.max(0,h-t.length+1);f<=d;f++){var p=h-f|0;c+=(o=(n=0|t.words[p])*(s=0|e.words[f])+l)/67108864|0,l=67108863&o}r.words[h]=0|l,u=0|c}return 0!==u?r.words[h]=0|u:r.length--,r.strip()}s.prototype.toString=function(t,e){var r;if(e=0|e||1,16===(t=t||10)||"hex"===t){r="";for(var n=0,s=0,o=0;o<this.length;o++){var a=this.words[o],u=(16777215&(a<<n|s)).toString(16);r=0!=(s=a>>>24-n&16777215)||o!==this.length-1?c[6-u.length]+u+r:u+r,(n+=2)>=26&&(n-=26,o--)}for(0!==s&&(r=s.toString(16)+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}if(t===(0|t)&&t>=2&&t<=36){var h=l[t],f=d[t];r="";var p=this.clone();for(p.negative=0;!p.isZero();){var g=p.modn(f).toString(t);r=(p=p.idivn(f)).isZero()?g+r:c[h-g.length]+g+r}for(this.isZero()&&(r="0"+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}i(!1,"Base should be between 2 and 36")},s.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&i(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},s.prototype.toJSON=function(){return this.toString(16)},s.prototype.toBuffer=function(t,e){return i(void 0!==o),this.toArrayLike(o,t,e)},s.prototype.toArray=function(t,e){return this.toArrayLike(Array,t,e)},s.prototype.toArrayLike=function(t,e,r){var n=this.byteLength(),s=r||Math.max(1,n);i(n<=s,"byte array longer than desired length"),i(s>0,"Requested array length <= 0"),this.strip();var o,a,u="le"===e,h=new t(s),c=this.clone();if(u){for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[a]=o;for(;a<s;a++)h[a]=0}else{for(a=0;a<s-n;a++)h[a]=0;for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[s-a-1]=o}return h},Math.clz32?s.prototype._countBits=function(t){return 32-Math.clz32(t)}:s.prototype._countBits=function(t){var e=t,r=0;return e>=4096&&(r+=13,e>>>=13),e>=64&&(r+=7,e>>>=7),e>=8&&(r+=4,e>>>=4),e>=2&&(r+=2,e>>>=2),r+e},s.prototype._zeroBits=function(t){if(0===t)return 26;var e=t,r=0;return 0==(8191&e)&&(r+=13,e>>>=13),0==(127&e)&&(r+=7,e>>>=7),0==(15&e)&&(r+=4,e>>>=4),0==(3&e)&&(r+=2,e>>>=2),0==(1&e)&&r++,r},s.prototype.bitLength=function(){var t=this.words[this.length-1],e=this._countBits(t);return 26*(this.length-1)+e},s.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,e=0;e<this.length;e++){var r=this._zeroBits(this.words[e]);if(t+=r,26!==r)break}return t},s.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},s.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},s.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},s.prototype.isNeg=function(){return 0!==this.negative},s.prototype.neg=function(){return this.clone().ineg()},s.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},s.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]|t.words[e];return this.strip()},s.prototype.ior=function(t){return i(0==(this.negative|t.negative)),this.iuor(t)},s.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},s.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},s.prototype.iuand=function(t){var e;e=this.length>t.length?t:this;for(var r=0;r<e.length;r++)this.words[r]=this.words[r]&t.words[r];return this.length=e.length,this.strip()},s.prototype.iand=function(t){return i(0==(this.negative|t.negative)),this.iuand(t)},s.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},s.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},s.prototype.iuxor=function(t){var e,r;this.length>t.length?(e=this,r=t):(e=t,r=this);for(var i=0;i<r.length;i++)this.words[i]=e.words[i]^r.words[i];if(this!==e)for(;i<e.length;i++)this.words[i]=e.words[i];return this.length=e.length,this.strip()},s.prototype.ixor=function(t){return i(0==(this.negative|t.negative)),this.iuxor(t)},s.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},s.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},s.prototype.inotn=function(t){i("number"==typeof t&&t>=0);var e=0|Math.ceil(t/26),r=t%26;this._expand(e),r>0&&e--;for(var n=0;n<e;n++)this.words[n]=67108863&~this.words[n];return r>0&&(this.words[n]=~this.words[n]&67108863>>26-r),this.strip()},s.prototype.notn=function(t){return this.clone().inotn(t)},s.prototype.setn=function(t,e){i("number"==typeof t&&t>=0);var r=t/26|0,n=t%26;return this._expand(r+1),this.words[r]=e?this.words[r]|1<<n:this.words[r]&~(1<<n),this.strip()},s.prototype.iadd=function(t){var e,r,i;if(0!==this.negative&&0===t.negative)return this.negative=0,e=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,e=this.isub(t),t.negative=1,e._normSign();this.length>t.length?(r=this,i=t):(r=t,i=this);for(var n=0,s=0;s<i.length;s++)e=(0|r.words[s])+(0|i.words[s])+n,this.words[s]=67108863&e,n=e>>>26;for(;0!==n&&s<r.length;s++)e=(0|r.words[s])+n,this.words[s]=67108863&e,n=e>>>26;if(this.length=r.length,0!==n)this.words[this.length]=n,this.length++;else if(r!==this)for(;s<r.length;s++)this.words[s]=r.words[s];return this},s.prototype.add=function(t){var e;return 0!==t.negative&&0===this.negative?(t.negative=0,e=this.sub(t),t.negative^=1,e):0===t.negative&&0!==this.negative?(this.negative=0,e=t.sub(this),this.negative=1,e):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},s.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var e=this.iadd(t);return t.negative=1,e._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var r,i,n=this.cmp(t);if(0===n)return this.negative=0,this.length=1,this.words[0]=0,this;n>0?(r=this,i=t):(r=t,i=this);for(var s=0,o=0;o<i.length;o++)s=(e=(0|r.words[o])-(0|i.words[o])+s)>>26,this.words[o]=67108863&e;for(;0!==s&&o<r.length;o++)s=(e=(0|r.words[o])+s)>>26,this.words[o]=67108863&e;if(0===s&&o<r.length&&r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this.length=Math.max(this.length,o),r!==this&&(this.negative=1),this.strip()},s.prototype.sub=function(t){return this.clone().isub(t)};var p=function(t,e,r){var i,n,s,o=t.words,a=e.words,u=r.words,h=0,c=0|o[0],l=8191&c,d=c>>>13,f=0|o[1],p=8191&f,g=f>>>13,m=0|o[2],y=8191&m,v=m>>>13,b=0|o[3],w=8191&b,E=b>>>13,S=0|o[4],N=8191&S,M=S>>>13,x=0|o[5],I=8191&x,A=x>>>13,P=0|o[6],T=8191&P,R=P>>>13,k=0|o[7],B=8191&k,O=k>>>13,C=0|o[8],L=8191&C,j=C>>>13,Z=0|o[9],D=8191&Z,F=Z>>>13,z=0|a[0],H=8191&z,W=z>>>13,K=0|a[1],q=8191&K,U=K>>>13,V=0|a[2],X=8191&V,G=V>>>13,Y=0|a[3],Q=8191&Y,J=Y>>>13,_=0|a[4],$=8191&_,tt=_>>>13,et=0|a[5],rt=8191&et,it=et>>>13,nt=0|a[6],st=8191&nt,ot=nt>>>13,at=0|a[7],ut=8191&at,ht=at>>>13,ct=0|a[8],lt=8191&ct,dt=ct>>>13,ft=0|a[9],pt=8191&ft,gt=ft>>>13;r.negative=t.negative^e.negative,r.length=19;var mt=(h+(i=Math.imul(l,H))|0)+((8191&(n=(n=Math.imul(l,W))+Math.imul(d,H)|0))<<13)|0;h=((s=Math.imul(d,W))+(n>>>13)|0)+(mt>>>26)|0,mt&=67108863,i=Math.imul(p,H),n=(n=Math.imul(p,W))+Math.imul(g,H)|0,s=Math.imul(g,W);var yt=(h+(i=i+Math.imul(l,q)|0)|0)+((8191&(n=(n=n+Math.imul(l,U)|0)+Math.imul(d,q)|0))<<13)|0;h=((s=s+Math.imul(d,U)|0)+(n>>>13)|0)+(yt>>>26)|0,yt&=67108863,i=Math.imul(y,H),n=(n=Math.imul(y,W))+Math.imul(v,H)|0,s=Math.imul(v,W),i=i+Math.imul(p,q)|0,n=(n=n+Math.imul(p,U)|0)+Math.imul(g,q)|0,s=s+Math.imul(g,U)|0;var vt=(h+(i=i+Math.imul(l,X)|0)|0)+((8191&(n=(n=n+Math.imul(l,G)|0)+Math.imul(d,X)|0))<<13)|0;h=((s=s+Math.imul(d,G)|0)+(n>>>13)|0)+(vt>>>26)|0,vt&=67108863,i=Math.imul(w,H),n=(n=Math.imul(w,W))+Math.imul(E,H)|0,s=Math.imul(E,W),i=i+Math.imul(y,q)|0,n=(n=n+Math.imul(y,U)|0)+Math.imul(v,q)|0,s=s+Math.imul(v,U)|0,i=i+Math.imul(p,X)|0,n=(n=n+Math.imul(p,G)|0)+Math.imul(g,X)|0,s=s+Math.imul(g,G)|0;var bt=(h+(i=i+Math.imul(l,Q)|0)|0)+((8191&(n=(n=n+Math.imul(l,J)|0)+Math.imul(d,Q)|0))<<13)|0;h=((s=s+Math.imul(d,J)|0)+(n>>>13)|0)+(bt>>>26)|0,bt&=67108863,i=Math.imul(N,H),n=(n=Math.imul(N,W))+Math.imul(M,H)|0,s=Math.imul(M,W),i=i+Math.imul(w,q)|0,n=(n=n+Math.imul(w,U)|0)+Math.imul(E,q)|0,s=s+Math.imul(E,U)|0,i=i+Math.imul(y,X)|0,n=(n=n+Math.imul(y,G)|0)+Math.imul(v,X)|0,s=s+Math.imul(v,G)|0,i=i+Math.imul(p,Q)|0,n=(n=n+Math.imul(p,J)|0)+Math.imul(g,Q)|0,s=s+Math.imul(g,J)|0;var wt=(h+(i=i+Math.imul(l,$)|0)|0)+((8191&(n=(n=n+Math.imul(l,tt)|0)+Math.imul(d,$)|0))<<13)|0;h=((s=s+Math.imul(d,tt)|0)+(n>>>13)|0)+(wt>>>26)|0,wt&=67108863,i=Math.imul(I,H),n=(n=Math.imul(I,W))+Math.imul(A,H)|0,s=Math.imul(A,W),i=i+Math.imul(N,q)|0,n=(n=n+Math.imul(N,U)|0)+Math.imul(M,q)|0,s=s+Math.imul(M,U)|0,i=i+Math.imul(w,X)|0,n=(n=n+Math.imul(w,G)|0)+Math.imul(E,X)|0,s=s+Math.imul(E,G)|0,i=i+Math.imul(y,Q)|0,n=(n=n+Math.imul(y,J)|0)+Math.imul(v,Q)|0,s=s+Math.imul(v,J)|0,i=i+Math.imul(p,$)|0,n=(n=n+Math.imul(p,tt)|0)+Math.imul(g,$)|0,s=s+Math.imul(g,tt)|0;var Et=(h+(i=i+Math.imul(l,rt)|0)|0)+((8191&(n=(n=n+Math.imul(l,it)|0)+Math.imul(d,rt)|0))<<13)|0;h=((s=s+Math.imul(d,it)|0)+(n>>>13)|0)+(Et>>>26)|0,Et&=67108863,i=Math.imul(T,H),n=(n=Math.imul(T,W))+Math.imul(R,H)|0,s=Math.imul(R,W),i=i+Math.imul(I,q)|0,n=(n=n+Math.imul(I,U)|0)+Math.imul(A,q)|0,s=s+Math.imul(A,U)|0,i=i+Math.imul(N,X)|0,n=(n=n+Math.imul(N,G)|0)+Math.imul(M,X)|0,s=s+Math.imul(M,G)|0,i=i+Math.imul(w,Q)|0,n=(n=n+Math.imul(w,J)|0)+Math.imul(E,Q)|0,s=s+Math.imul(E,J)|0,i=i+Math.imul(y,$)|0,n=(n=n+Math.imul(y,tt)|0)+Math.imul(v,$)|0,s=s+Math.imul(v,tt)|0,i=i+Math.imul(p,rt)|0,n=(n=n+Math.imul(p,it)|0)+Math.imul(g,rt)|0,s=s+Math.imul(g,it)|0;var St=(h+(i=i+Math.imul(l,st)|0)|0)+((8191&(n=(n=n+Math.imul(l,ot)|0)+Math.imul(d,st)|0))<<13)|0;h=((s=s+Math.imul(d,ot)|0)+(n>>>13)|0)+(St>>>26)|0,St&=67108863,i=Math.imul(B,H),n=(n=Math.imul(B,W))+Math.imul(O,H)|0,s=Math.imul(O,W),i=i+Math.imul(T,q)|0,n=(n=n+Math.imul(T,U)|0)+Math.imul(R,q)|0,s=s+Math.imul(R,U)|0,i=i+Math.imul(I,X)|0,n=(n=n+Math.imul(I,G)|0)+Math.imul(A,X)|0,s=s+Math.imul(A,G)|0,i=i+Math.imul(N,Q)|0,n=(n=n+Math.imul(N,J)|0)+Math.imul(M,Q)|0,s=s+Math.imul(M,J)|0,i=i+Math.imul(w,$)|0,n=(n=n+Math.imul(w,tt)|0)+Math.imul(E,$)|0,s=s+Math.imul(E,tt)|0,i=i+Math.imul(y,rt)|0,n=(n=n+Math.imul(y,it)|0)+Math.imul(v,rt)|0,s=s+Math.imul(v,it)|0,i=i+Math.imul(p,st)|0,n=(n=n+Math.imul(p,ot)|0)+Math.imul(g,st)|0,s=s+Math.imul(g,ot)|0;var Nt=(h+(i=i+Math.imul(l,ut)|0)|0)+((8191&(n=(n=n+Math.imul(l,ht)|0)+Math.imul(d,ut)|0))<<13)|0;h=((s=s+Math.imul(d,ht)|0)+(n>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,i=Math.imul(L,H),n=(n=Math.imul(L,W))+Math.imul(j,H)|0,s=Math.imul(j,W),i=i+Math.imul(B,q)|0,n=(n=n+Math.imul(B,U)|0)+Math.imul(O,q)|0,s=s+Math.imul(O,U)|0,i=i+Math.imul(T,X)|0,n=(n=n+Math.imul(T,G)|0)+Math.imul(R,X)|0,s=s+Math.imul(R,G)|0,i=i+Math.imul(I,Q)|0,n=(n=n+Math.imul(I,J)|0)+Math.imul(A,Q)|0,s=s+Math.imul(A,J)|0,i=i+Math.imul(N,$)|0,n=(n=n+Math.imul(N,tt)|0)+Math.imul(M,$)|0,s=s+Math.imul(M,tt)|0,i=i+Math.imul(w,rt)|0,n=(n=n+Math.imul(w,it)|0)+Math.imul(E,rt)|0,s=s+Math.imul(E,it)|0,i=i+Math.imul(y,st)|0,n=(n=n+Math.imul(y,ot)|0)+Math.imul(v,st)|0,s=s+Math.imul(v,ot)|0,i=i+Math.imul(p,ut)|0,n=(n=n+Math.imul(p,ht)|0)+Math.imul(g,ut)|0,s=s+Math.imul(g,ht)|0;var Mt=(h+(i=i+Math.imul(l,lt)|0)|0)+((8191&(n=(n=n+Math.imul(l,dt)|0)+Math.imul(d,lt)|0))<<13)|0;h=((s=s+Math.imul(d,dt)|0)+(n>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,i=Math.imul(D,H),n=(n=Math.imul(D,W))+Math.imul(F,H)|0,s=Math.imul(F,W),i=i+Math.imul(L,q)|0,n=(n=n+Math.imul(L,U)|0)+Math.imul(j,q)|0,s=s+Math.imul(j,U)|0,i=i+Math.imul(B,X)|0,n=(n=n+Math.imul(B,G)|0)+Math.imul(O,X)|0,s=s+Math.imul(O,G)|0,i=i+Math.imul(T,Q)|0,n=(n=n+Math.imul(T,J)|0)+Math.imul(R,Q)|0,s=s+Math.imul(R,J)|0,i=i+Math.imul(I,$)|0,n=(n=n+Math.imul(I,tt)|0)+Math.imul(A,$)|0,s=s+Math.imul(A,tt)|0,i=i+Math.imul(N,rt)|0,n=(n=n+Math.imul(N,it)|0)+Math.imul(M,rt)|0,s=s+Math.imul(M,it)|0,i=i+Math.imul(w,st)|0,n=(n=n+Math.imul(w,ot)|0)+Math.imul(E,st)|0,s=s+Math.imul(E,ot)|0,i=i+Math.imul(y,ut)|0,n=(n=n+Math.imul(y,ht)|0)+Math.imul(v,ut)|0,s=s+Math.imul(v,ht)|0,i=i+Math.imul(p,lt)|0,n=(n=n+Math.imul(p,dt)|0)+Math.imul(g,lt)|0,s=s+Math.imul(g,dt)|0;var xt=(h+(i=i+Math.imul(l,pt)|0)|0)+((8191&(n=(n=n+Math.imul(l,gt)|0)+Math.imul(d,pt)|0))<<13)|0;h=((s=s+Math.imul(d,gt)|0)+(n>>>13)|0)+(xt>>>26)|0,xt&=67108863,i=Math.imul(D,q),n=(n=Math.imul(D,U))+Math.imul(F,q)|0,s=Math.imul(F,U),i=i+Math.imul(L,X)|0,n=(n=n+Math.imul(L,G)|0)+Math.imul(j,X)|0,s=s+Math.imul(j,G)|0,i=i+Math.imul(B,Q)|0,n=(n=n+Math.imul(B,J)|0)+Math.imul(O,Q)|0,s=s+Math.imul(O,J)|0,i=i+Math.imul(T,$)|0,n=(n=n+Math.imul(T,tt)|0)+Math.imul(R,$)|0,s=s+Math.imul(R,tt)|0,i=i+Math.imul(I,rt)|0,n=(n=n+Math.imul(I,it)|0)+Math.imul(A,rt)|0,s=s+Math.imul(A,it)|0,i=i+Math.imul(N,st)|0,n=(n=n+Math.imul(N,ot)|0)+Math.imul(M,st)|0,s=s+Math.imul(M,ot)|0,i=i+Math.imul(w,ut)|0,n=(n=n+Math.imul(w,ht)|0)+Math.imul(E,ut)|0,s=s+Math.imul(E,ht)|0,i=i+Math.imul(y,lt)|0,n=(n=n+Math.imul(y,dt)|0)+Math.imul(v,lt)|0,s=s+Math.imul(v,dt)|0;var It=(h+(i=i+Math.imul(p,pt)|0)|0)+((8191&(n=(n=n+Math.imul(p,gt)|0)+Math.imul(g,pt)|0))<<13)|0;h=((s=s+Math.imul(g,gt)|0)+(n>>>13)|0)+(It>>>26)|0,It&=67108863,i=Math.imul(D,X),n=(n=Math.imul(D,G))+Math.imul(F,X)|0,s=Math.imul(F,G),i=i+Math.imul(L,Q)|0,n=(n=n+Math.imul(L,J)|0)+Math.imul(j,Q)|0,s=s+Math.imul(j,J)|0,i=i+Math.imul(B,$)|0,n=(n=n+Math.imul(B,tt)|0)+Math.imul(O,$)|0,s=s+Math.imul(O,tt)|0,i=i+Math.imul(T,rt)|0,n=(n=n+Math.imul(T,it)|0)+Math.imul(R,rt)|0,s=s+Math.imul(R,it)|0,i=i+Math.imul(I,st)|0,n=(n=n+Math.imul(I,ot)|0)+Math.imul(A,st)|0,s=s+Math.imul(A,ot)|0,i=i+Math.imul(N,ut)|0,n=(n=n+Math.imul(N,ht)|0)+Math.imul(M,ut)|0,s=s+Math.imul(M,ht)|0,i=i+Math.imul(w,lt)|0,n=(n=n+Math.imul(w,dt)|0)+Math.imul(E,lt)|0,s=s+Math.imul(E,dt)|0;var At=(h+(i=i+Math.imul(y,pt)|0)|0)+((8191&(n=(n=n+Math.imul(y,gt)|0)+Math.imul(v,pt)|0))<<13)|0;h=((s=s+Math.imul(v,gt)|0)+(n>>>13)|0)+(At>>>26)|0,At&=67108863,i=Math.imul(D,Q),n=(n=Math.imul(D,J))+Math.imul(F,Q)|0,s=Math.imul(F,J),i=i+Math.imul(L,$)|0,n=(n=n+Math.imul(L,tt)|0)+Math.imul(j,$)|0,s=s+Math.imul(j,tt)|0,i=i+Math.imul(B,rt)|0,n=(n=n+Math.imul(B,it)|0)+Math.imul(O,rt)|0,s=s+Math.imul(O,it)|0,i=i+Math.imul(T,st)|0,n=(n=n+Math.imul(T,ot)|0)+Math.imul(R,st)|0,s=s+Math.imul(R,ot)|0,i=i+Math.imul(I,ut)|0,n=(n=n+Math.imul(I,ht)|0)+Math.imul(A,ut)|0,s=s+Math.imul(A,ht)|0,i=i+Math.imul(N,lt)|0,n=(n=n+Math.imul(N,dt)|0)+Math.imul(M,lt)|0,s=s+Math.imul(M,dt)|0;var Pt=(h+(i=i+Math.imul(w,pt)|0)|0)+((8191&(n=(n=n+Math.imul(w,gt)|0)+Math.imul(E,pt)|0))<<13)|0;h=((s=s+Math.imul(E,gt)|0)+(n>>>13)|0)+(Pt>>>26)|0,Pt&=67108863,i=Math.imul(D,$),n=(n=Math.imul(D,tt))+Math.imul(F,$)|0,s=Math.imul(F,tt),i=i+Math.imul(L,rt)|0,n=(n=n+Math.imul(L,it)|0)+Math.imul(j,rt)|0,s=s+Math.imul(j,it)|0,i=i+Math.imul(B,st)|0,n=(n=n+Math.imul(B,ot)|0)+Math.imul(O,st)|0,s=s+Math.imul(O,ot)|0,i=i+Math.imul(T,ut)|0,n=(n=n+Math.imul(T,ht)|0)+Math.imul(R,ut)|0,s=s+Math.imul(R,ht)|0,i=i+Math.imul(I,lt)|0,n=(n=n+Math.imul(I,dt)|0)+Math.imul(A,lt)|0,s=s+Math.imul(A,dt)|0;var Tt=(h+(i=i+Math.imul(N,pt)|0)|0)+((8191&(n=(n=n+Math.imul(N,gt)|0)+Math.imul(M,pt)|0))<<13)|0;h=((s=s+Math.imul(M,gt)|0)+(n>>>13)|0)+(Tt>>>26)|0,Tt&=67108863,i=Math.imul(D,rt),n=(n=Math.imul(D,it))+Math.imul(F,rt)|0,s=Math.imul(F,it),i=i+Math.imul(L,st)|0,n=(n=n+Math.imul(L,ot)|0)+Math.imul(j,st)|0,s=s+Math.imul(j,ot)|0,i=i+Math.imul(B,ut)|0,n=(n=n+Math.imul(B,ht)|0)+Math.imul(O,ut)|0,s=s+Math.imul(O,ht)|0,i=i+Math.imul(T,lt)|0,n=(n=n+Math.imul(T,dt)|0)+Math.imul(R,lt)|0,s=s+Math.imul(R,dt)|0;var Rt=(h+(i=i+Math.imul(I,pt)|0)|0)+((8191&(n=(n=n+Math.imul(I,gt)|0)+Math.imul(A,pt)|0))<<13)|0;h=((s=s+Math.imul(A,gt)|0)+(n>>>13)|0)+(Rt>>>26)|0,Rt&=67108863,i=Math.imul(D,st),n=(n=Math.imul(D,ot))+Math.imul(F,st)|0,s=Math.imul(F,ot),i=i+Math.imul(L,ut)|0,n=(n=n+Math.imul(L,ht)|0)+Math.imul(j,ut)|0,s=s+Math.imul(j,ht)|0,i=i+Math.imul(B,lt)|0,n=(n=n+Math.imul(B,dt)|0)+Math.imul(O,lt)|0,s=s+Math.imul(O,dt)|0;var kt=(h+(i=i+Math.imul(T,pt)|0)|0)+((8191&(n=(n=n+Math.imul(T,gt)|0)+Math.imul(R,pt)|0))<<13)|0;h=((s=s+Math.imul(R,gt)|0)+(n>>>13)|0)+(kt>>>26)|0,kt&=67108863,i=Math.imul(D,ut),n=(n=Math.imul(D,ht))+Math.imul(F,ut)|0,s=Math.imul(F,ht),i=i+Math.imul(L,lt)|0,n=(n=n+Math.imul(L,dt)|0)+Math.imul(j,lt)|0,s=s+Math.imul(j,dt)|0;var Bt=(h+(i=i+Math.imul(B,pt)|0)|0)+((8191&(n=(n=n+Math.imul(B,gt)|0)+Math.imul(O,pt)|0))<<13)|0;h=((s=s+Math.imul(O,gt)|0)+(n>>>13)|0)+(Bt>>>26)|0,Bt&=67108863,i=Math.imul(D,lt),n=(n=Math.imul(D,dt))+Math.imul(F,lt)|0,s=Math.imul(F,dt);var Ot=(h+(i=i+Math.imul(L,pt)|0)|0)+((8191&(n=(n=n+Math.imul(L,gt)|0)+Math.imul(j,pt)|0))<<13)|0;h=((s=s+Math.imul(j,gt)|0)+(n>>>13)|0)+(Ot>>>26)|0,Ot&=67108863;var Ct=(h+(i=Math.imul(D,pt))|0)+((8191&(n=(n=Math.imul(D,gt))+Math.imul(F,pt)|0))<<13)|0;return h=((s=Math.imul(F,gt))+(n>>>13)|0)+(Ct>>>26)|0,Ct&=67108863,u[0]=mt,u[1]=yt,u[2]=vt,u[3]=bt,u[4]=wt,u[5]=Et,u[6]=St,u[7]=Nt,u[8]=Mt,u[9]=xt,u[10]=It,u[11]=At,u[12]=Pt,u[13]=Tt,u[14]=Rt,u[15]=kt,u[16]=Bt,u[17]=Ot,u[18]=Ct,0!==h&&(u[19]=h,r.length++),r};function g(t,e,r){return(new m).mulp(t,e,r)}function m(t,e){this.x=t,this.y=e}Math.imul||(p=f),s.prototype.mulTo=function(t,e){var r,i=this.length+t.length;return r=10===this.length&&10===t.length?p(this,t,e):i<63?f(this,t,e):i<1024?function(t,e,r){r.negative=e.negative^t.negative,r.length=t.length+e.length;for(var i=0,n=0,s=0;s<r.length-1;s++){var o=n;n=0;for(var a=67108863&i,u=Math.min(s,e.length-1),h=Math.max(0,s-t.length+1);h<=u;h++){var c=s-h,l=(0|t.words[c])*(0|e.words[h]),d=67108863&l;a=67108863&(d=d+a|0),n+=(o=(o=o+(l/67108864|0)|0)+(d>>>26)|0)>>>26,o&=67108863}r.words[s]=a,i=o,o=n}return 0!==i?r.words[s]=i:r.length--,r.strip()}(this,t,e):g(this,t,e),r},m.prototype.makeRBT=function(t){for(var e=new Array(t),r=s.prototype._countBits(t)-1,i=0;i<t;i++)e[i]=this.revBin(i,r,t);return e},m.prototype.revBin=function(t,e,r){if(0===t||t===r-1)return t;for(var i=0,n=0;n<e;n++)i|=(1&t)<<e-n-1,t>>=1;return i},m.prototype.permute=function(t,e,r,i,n,s){for(var o=0;o<s;o++)i[o]=e[t[o]],n[o]=r[t[o]]},m.prototype.transform=function(t,e,r,i,n,s){this.permute(s,t,e,r,i,n);for(var o=1;o<n;o<<=1)for(var a=o<<1,u=Math.cos(2*Math.PI/a),h=Math.sin(2*Math.PI/a),c=0;c<n;c+=a)for(var l=u,d=h,f=0;f<o;f++){var p=r[c+f],g=i[c+f],m=r[c+f+o],y=i[c+f+o],v=l*m-d*y;y=l*y+d*m,m=v,r[c+f]=p+m,i[c+f]=g+y,r[c+f+o]=p-m,i[c+f+o]=g-y,f!==a&&(v=u*l-h*d,d=u*d+h*l,l=v)}},m.prototype.guessLen13b=function(t,e){var r=1|Math.max(e,t),i=1&r,n=0;for(r=r/2|0;r;r>>>=1)n++;return 1<<n+1+i},m.prototype.conjugate=function(t,e,r){if(!(r<=1))for(var i=0;i<r/2;i++){var n=t[i];t[i]=t[r-i-1],t[r-i-1]=n,n=e[i],e[i]=-e[r-i-1],e[r-i-1]=-n}},m.prototype.normalize13b=function(t,e){for(var r=0,i=0;i<e/2;i++){var n=8192*Math.round(t[2*i+1]/e)+Math.round(t[2*i]/e)+r;t[i]=67108863&n,r=n<67108864?0:n/67108864|0}return t},m.prototype.convert13b=function(t,e,r,n){for(var s=0,o=0;o<e;o++)s+=0|t[o],r[2*o]=8191&s,s>>>=13,r[2*o+1]=8191&s,s>>>=13;for(o=2*e;o<n;++o)r[o]=0;i(0===s),i(0==(-8192&s))},m.prototype.stub=function(t){for(var e=new Array(t),r=0;r<t;r++)e[r]=0;return e},m.prototype.mulp=function(t,e,r){var i=2*this.guessLen13b(t.length,e.length),n=this.makeRBT(i),s=this.stub(i),o=new Array(i),a=new Array(i),u=new Array(i),h=new Array(i),c=new Array(i),l=new Array(i),d=r.words;d.length=i,this.convert13b(t.words,t.length,o,i),this.convert13b(e.words,e.length,h,i),this.transform(o,s,a,u,i,n),this.transform(h,s,c,l,i,n);for(var f=0;f<i;f++){var p=a[f]*c[f]-u[f]*l[f];u[f]=a[f]*l[f]+u[f]*c[f],a[f]=p}return this.conjugate(a,u,i),this.transform(a,u,d,s,i,n),this.conjugate(d,s,i),this.normalize13b(d,i),r.negative=t.negative^e.negative,r.length=t.length+e.length,r.strip()},s.prototype.mul=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),this.mulTo(t,e)},s.prototype.mulf=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),g(this,t,e)},s.prototype.imul=function(t){return this.clone().mulTo(t,this)},s.prototype.imuln=function(t){i("number"==typeof t),i(t<67108864);for(var e=0,r=0;r<this.length;r++){var n=(0|this.words[r])*t,s=(67108863&n)+(67108863&e);e>>=26,e+=n/67108864|0,e+=s>>>26,this.words[r]=67108863&s}return 0!==e&&(this.words[r]=e,this.length++),this},s.prototype.muln=function(t){return this.clone().imuln(t)},s.prototype.sqr=function(){return this.mul(this)},s.prototype.isqr=function(){return this.imul(this.clone())},s.prototype.pow=function(t){var e=function(t){for(var e=new Array(t.bitLength()),r=0;r<e.length;r++){var i=r/26|0,n=r%26;e[r]=(t.words[i]&1<<n)>>>n}return e}(t);if(0===e.length)return new s(1);for(var r=this,i=0;i<e.length&&0===e[i];i++,r=r.sqr());if(++i<e.length)for(var n=r.sqr();i<e.length;i++,n=n.sqr())0!==e[i]&&(r=r.mul(n));return r},s.prototype.iushln=function(t){i("number"==typeof t&&t>=0);var e,r=t%26,n=(t-r)/26,s=67108863>>>26-r<<26-r;if(0!==r){var o=0;for(e=0;e<this.length;e++){var a=this.words[e]&s,u=(0|this.words[e])-a<<r;this.words[e]=u|o,o=a>>>26-r}o&&(this.words[e]=o,this.length++)}if(0!==n){for(e=this.length-1;e>=0;e--)this.words[e+n]=this.words[e];for(e=0;e<n;e++)this.words[e]=0;this.length+=n}return this.strip()},s.prototype.ishln=function(t){return i(0===this.negative),this.iushln(t)},s.prototype.iushrn=function(t,e,r){var n;i("number"==typeof t&&t>=0),n=e?(e-e%26)/26:0;var s=t%26,o=Math.min((t-s)/26,this.length),a=67108863^67108863>>>s<<s,u=r;if(n-=o,n=Math.max(0,n),u){for(var h=0;h<o;h++)u.words[h]=this.words[h];u.length=o}if(0===o);else if(this.length>o)for(this.length-=o,h=0;h<this.length;h++)this.words[h]=this.words[h+o];else this.words[0]=0,this.length=1;var c=0;for(h=this.length-1;h>=0&&(0!==c||h>=n);h--){var l=0|this.words[h];this.words[h]=c<<26-s|l>>>s,c=l&a}return u&&0!==c&&(u.words[u.length++]=c),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},s.prototype.ishrn=function(t,e,r){return i(0===this.negative),this.iushrn(t,e,r)},s.prototype.shln=function(t){return this.clone().ishln(t)},s.prototype.ushln=function(t){return this.clone().iushln(t)},s.prototype.shrn=function(t){return this.clone().ishrn(t)},s.prototype.ushrn=function(t){return this.clone().iushrn(t)},s.prototype.testn=function(t){i("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26,n=1<<e;return!(this.length<=r||!(this.words[r]&n))},s.prototype.imaskn=function(t){i("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26;if(i(0===this.negative,"imaskn works only with positive numbers"),this.length<=r)return this;if(0!==e&&r++,this.length=Math.min(r,this.length),0!==e){var n=67108863^67108863>>>e<<e;this.words[this.length-1]&=n}return this.strip()},s.prototype.maskn=function(t){return this.clone().imaskn(t)},s.prototype.iaddn=function(t){return i("number"==typeof t),i(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},s.prototype._iaddn=function(t){this.words[0]+=t;for(var e=0;e<this.length&&this.words[e]>=67108864;e++)this.words[e]-=67108864,e===this.length-1?this.words[e+1]=1:this.words[e+1]++;return this.length=Math.max(this.length,e+1),this},s.prototype.isubn=function(t){if(i("number"==typeof t),i(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var e=0;e<this.length&&this.words[e]<0;e++)this.words[e]+=67108864,this.words[e+1]-=1;return this.strip()},s.prototype.addn=function(t){return this.clone().iaddn(t)},s.prototype.subn=function(t){return this.clone().isubn(t)},s.prototype.iabs=function(){return this.negative=0,this},s.prototype.abs=function(){return this.clone().iabs()},s.prototype._ishlnsubmul=function(t,e,r){var n,s,o=t.length+r;this._expand(o);var a=0;for(n=0;n<t.length;n++){s=(0|this.words[n+r])+a;var u=(0|t.words[n])*e;a=((s-=67108863&u)>>26)-(u/67108864|0),this.words[n+r]=67108863&s}for(;n<this.length-r;n++)a=(s=(0|this.words[n+r])+a)>>26,this.words[n+r]=67108863&s;if(0===a)return this.strip();for(i(-1===a),a=0,n=0;n<this.length;n++)a=(s=-(0|this.words[n])+a)>>26,this.words[n]=67108863&s;return this.negative=1,this.strip()},s.prototype._wordDiv=function(t,e){var r=(this.length,t.length),i=this.clone(),n=t,o=0|n.words[n.length-1];0!=(r=26-this._countBits(o))&&(n=n.ushln(r),i.iushln(r),o=0|n.words[n.length-1]);var a,u=i.length-n.length;if("mod"!==e){(a=new s(null)).length=u+1,a.words=new Array(a.length);for(var h=0;h<a.length;h++)a.words[h]=0}var c=i.clone()._ishlnsubmul(n,1,u);0===c.negative&&(i=c,a&&(a.words[u]=1));for(var l=u-1;l>=0;l--){var d=67108864*(0|i.words[n.length+l])+(0|i.words[n.length+l-1]);for(d=Math.min(d/o|0,67108863),i._ishlnsubmul(n,d,l);0!==i.negative;)d--,i.negative=0,i._ishlnsubmul(n,1,l),i.isZero()||(i.negative^=1);a&&(a.words[l]=d)}return a&&a.strip(),i.strip(),"div"!==e&&0!==r&&i.iushrn(r),{div:a||null,mod:i}},s.prototype.divmod=function(t,e,r){return i(!t.isZero()),this.isZero()?{div:new s(0),mod:new s(0)}:0!==this.negative&&0===t.negative?(a=this.neg().divmod(t,e),"mod"!==e&&(n=a.div.neg()),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.iadd(t)),{div:n,mod:o}):0===this.negative&&0!==t.negative?(a=this.divmod(t.neg(),e),"mod"!==e&&(n=a.div.neg()),{div:n,mod:a.mod}):0!=(this.negative&t.negative)?(a=this.neg().divmod(t.neg(),e),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.isub(t)),{div:a.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new s(0),mod:this}:1===t.length?"div"===e?{div:this.divn(t.words[0]),mod:null}:"mod"===e?{div:null,mod:new s(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new s(this.modn(t.words[0]))}:this._wordDiv(t,e);var n,o,a},s.prototype.div=function(t){return this.divmod(t,"div",!1).div},s.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},s.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},s.prototype.divRound=function(t){var e=this.divmod(t);if(e.mod.isZero())return e.div;var r=0!==e.div.negative?e.mod.isub(t):e.mod,i=t.ushrn(1),n=t.andln(1),s=r.cmp(i);return s<0||1===n&&0===s?e.div:0!==e.div.negative?e.div.isubn(1):e.div.iaddn(1)},s.prototype.modn=function(t){i(t<=67108863);for(var e=(1<<26)%t,r=0,n=this.length-1;n>=0;n--)r=(e*r+(0|this.words[n]))%t;return r},s.prototype.idivn=function(t){i(t<=67108863);for(var e=0,r=this.length-1;r>=0;r--){var n=(0|this.words[r])+67108864*e;this.words[r]=n/t|0,e=n%t}return this.strip()},s.prototype.divn=function(t){return this.clone().idivn(t)},s.prototype.egcd=function(t){i(0===t.negative),i(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var n=new s(1),o=new s(0),a=new s(0),u=new s(1),h=0;e.isEven()&&r.isEven();)e.iushrn(1),r.iushrn(1),++h;for(var c=r.clone(),l=e.clone();!e.isZero();){for(var d=0,f=1;0==(e.words[0]&f)&&d<26;++d,f<<=1);if(d>0)for(e.iushrn(d);d-- >0;)(n.isOdd()||o.isOdd())&&(n.iadd(c),o.isub(l)),n.iushrn(1),o.iushrn(1);for(var p=0,g=1;0==(r.words[0]&g)&&p<26;++p,g<<=1);if(p>0)for(r.iushrn(p);p-- >0;)(a.isOdd()||u.isOdd())&&(a.iadd(c),u.isub(l)),a.iushrn(1),u.iushrn(1);e.cmp(r)>=0?(e.isub(r),n.isub(a),o.isub(u)):(r.isub(e),a.isub(n),u.isub(o))}return{a,b:u,gcd:r.iushln(h)}},s.prototype._invmp=function(t){i(0===t.negative),i(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var n,o=new s(1),a=new s(0),u=r.clone();e.cmpn(1)>0&&r.cmpn(1)>0;){for(var h=0,c=1;0==(e.words[0]&c)&&h<26;++h,c<<=1);if(h>0)for(e.iushrn(h);h-- >0;)o.isOdd()&&o.iadd(u),o.iushrn(1);for(var l=0,d=1;0==(r.words[0]&d)&&l<26;++l,d<<=1);if(l>0)for(r.iushrn(l);l-- >0;)a.isOdd()&&a.iadd(u),a.iushrn(1);e.cmp(r)>=0?(e.isub(r),o.isub(a)):(r.isub(e),a.isub(o))}return(n=0===e.cmpn(1)?o:a).cmpn(0)<0&&n.iadd(t),n},s.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var e=this.clone(),r=t.clone();e.negative=0,r.negative=0;for(var i=0;e.isEven()&&r.isEven();i++)e.iushrn(1),r.iushrn(1);for(;;){for(;e.isEven();)e.iushrn(1);for(;r.isEven();)r.iushrn(1);var n=e.cmp(r);if(n<0){var s=e;e=r,r=s}else if(0===n||0===r.cmpn(1))break;e.isub(r)}return r.iushln(i)},s.prototype.invm=function(t){return this.egcd(t).a.umod(t)},s.prototype.isEven=function(){return 0==(1&this.words[0])},s.prototype.isOdd=function(){return 1==(1&this.words[0])},s.prototype.andln=function(t){return this.words[0]&t},s.prototype.bincn=function(t){i("number"==typeof t);var e=t%26,r=(t-e)/26,n=1<<e;if(this.length<=r)return this._expand(r+1),this.words[r]|=n,this;for(var s=n,o=r;0!==s&&o<this.length;o++){var a=0|this.words[o];s=(a+=s)>>>26,a&=67108863,this.words[o]=a}return 0!==s&&(this.words[o]=s,this.length++),this},s.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},s.prototype.cmpn=function(t){var e,r=t<0;if(0!==this.negative&&!r)return-1;if(0===this.negative&&r)return 1;if(this.strip(),this.length>1)e=1;else{r&&(t=-t),i(t<=67108863,"Number is too big");var n=0|this.words[0];e=n===t?0:n<t?-1:1}return 0!==this.negative?0|-e:e},s.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var e=this.ucmp(t);return 0!==this.negative?0|-e:e},s.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var e=0,r=this.length-1;r>=0;r--){var i=0|this.words[r],n=0|t.words[r];if(i!==n){i<n?e=-1:i>n&&(e=1);break}}return e},s.prototype.gtn=function(t){return 1===this.cmpn(t)},s.prototype.gt=function(t){return 1===this.cmp(t)},s.prototype.gten=function(t){return this.cmpn(t)>=0},s.prototype.gte=function(t){return this.cmp(t)>=0},s.prototype.ltn=function(t){return-1===this.cmpn(t)},s.prototype.lt=function(t){return-1===this.cmp(t)},s.prototype.lten=function(t){return this.cmpn(t)<=0},s.prototype.lte=function(t){return this.cmp(t)<=0},s.prototype.eqn=function(t){return 0===this.cmpn(t)},s.prototype.eq=function(t){return 0===this.cmp(t)},s.red=function(t){return new N(t)},s.prototype.toRed=function(t){return i(!this.red,"Already a number in reduction context"),i(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},s.prototype.fromRed=function(){return i(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},s.prototype._forceRed=function(t){return this.red=t,this},s.prototype.forceRed=function(t){return i(!this.red,"Already a number in reduction context"),this._forceRed(t)},s.prototype.redAdd=function(t){return i(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},s.prototype.redIAdd=function(t){return i(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},s.prototype.redSub=function(t){return i(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},s.prototype.redISub=function(t){return i(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},s.prototype.redShl=function(t){return i(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},s.prototype.redMul=function(t){return i(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},s.prototype.redIMul=function(t){return i(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},s.prototype.redSqr=function(){return i(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},s.prototype.redISqr=function(){return i(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},s.prototype.redSqrt=function(){return i(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},s.prototype.redInvm=function(){return i(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},s.prototype.redNeg=function(){return i(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},s.prototype.redPow=function(t){return i(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var y={k256:null,p224:null,p192:null,p25519:null};function v(t,e){this.name=t,this.p=new s(e,16),this.n=this.p.bitLength(),this.k=new s(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function b(){v.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function w(){v.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function E(){v.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function S(){v.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function N(t){if("string"==typeof t){var e=s._prime(t);this.m=e.p,this.prime=e}else i(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function M(t){N.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new s(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}v.prototype._tmp=function(){var t=new s(null);return t.words=new Array(Math.ceil(this.n/13)),t},v.prototype.ireduce=function(t){var e,r=t;do{this.split(r,this.tmp),e=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(e>this.n);var i=e<this.n?-1:r.ucmp(this.p);return 0===i?(r.words[0]=0,r.length=1):i>0?r.isub(this.p):void 0!==r.strip?r.strip():r._strip(),r},v.prototype.split=function(t,e){t.iushrn(this.n,0,e)},v.prototype.imulK=function(t){return t.imul(this.k)},n(b,v),b.prototype.split=function(t,e){for(var r=4194303,i=Math.min(t.length,9),n=0;n<i;n++)e.words[n]=t.words[n];if(e.length=i,t.length<=9)return t.words[0]=0,void(t.length=1);var s=t.words[9];for(e.words[e.length++]=s&r,n=10;n<t.length;n++){var o=0|t.words[n];t.words[n-10]=(o&r)<<4|s>>>22,s=o}s>>>=22,t.words[n-10]=s,0===s&&t.length>10?t.length-=10:t.length-=9},b.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var e=0,r=0;r<t.length;r++){var i=0|t.words[r];e+=977*i,t.words[r]=67108863&e,e=64*i+(e/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},n(w,v),n(E,v),n(S,v),S.prototype.imulK=function(t){for(var e=0,r=0;r<t.length;r++){var i=19*(0|t.words[r])+e,n=67108863&i;i>>>=26,t.words[r]=n,e=i}return 0!==e&&(t.words[t.length++]=e),t},s._prime=function(t){if(y[t])return y[t];var e;if("k256"===t)e=new b;else if("p224"===t)e=new w;else if("p192"===t)e=new E;else{if("p25519"!==t)throw new Error("Unknown prime "+t);e=new S}return y[t]=e,e},N.prototype._verify1=function(t){i(0===t.negative,"red works only with positives"),i(t.red,"red works only with red numbers")},N.prototype._verify2=function(t,e){i(0==(t.negative|e.negative),"red works only with positives"),i(t.red&&t.red===e.red,"red works only with red numbers")},N.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},N.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},N.prototype.add=function(t,e){this._verify2(t,e);var r=t.add(e);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},N.prototype.iadd=function(t,e){this._verify2(t,e);var r=t.iadd(e);return r.cmp(this.m)>=0&&r.isub(this.m),r},N.prototype.sub=function(t,e){this._verify2(t,e);var r=t.sub(e);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},N.prototype.isub=function(t,e){this._verify2(t,e);var r=t.isub(e);return r.cmpn(0)<0&&r.iadd(this.m),r},N.prototype.shl=function(t,e){return this._verify1(t),this.imod(t.ushln(e))},N.prototype.imul=function(t,e){return this._verify2(t,e),this.imod(t.imul(e))},N.prototype.mul=function(t,e){return this._verify2(t,e),this.imod(t.mul(e))},N.prototype.isqr=function(t){return this.imul(t,t.clone())},N.prototype.sqr=function(t){return this.mul(t,t)},N.prototype.sqrt=function(t){if(t.isZero())return t.clone();var e=this.m.andln(3);if(i(e%2==1),3===e){var r=this.m.add(new s(1)).iushrn(2);return this.pow(t,r)}for(var n=this.m.subn(1),o=0;!n.isZero()&&0===n.andln(1);)o++,n.iushrn(1);i(!n.isZero());var a=new s(1).toRed(this),u=a.redNeg(),h=this.m.subn(1).iushrn(1),c=this.m.bitLength();for(c=new s(2*c*c).toRed(this);0!==this.pow(c,h).cmp(u);)c.redIAdd(u);for(var l=this.pow(c,n),d=this.pow(t,n.addn(1).iushrn(1)),f=this.pow(t,n),p=o;0!==f.cmp(a);){for(var g=f,m=0;0!==g.cmp(a);m++)g=g.redSqr();i(m<p);var y=this.pow(l,new s(1).iushln(p-m-1));d=d.redMul(y),l=y.redSqr(),f=f.redMul(l),p=m}return d},N.prototype.invm=function(t){var e=t._invmp(this.m);return 0!==e.negative?(e.negative=0,this.imod(e).redNeg()):this.imod(e)},N.prototype.pow=function(t,e){if(e.isZero())return new s(1).toRed(this);if(0===e.cmpn(1))return t.clone();var r=new Array(16);r[0]=new s(1).toRed(this),r[1]=t;for(var i=2;i<r.length;i++)r[i]=this.mul(r[i-1],t);var n=r[0],o=0,a=0,u=e.bitLength()%26;for(0===u&&(u=26),i=e.length-1;i>=0;i--){for(var h=e.words[i],c=u-1;c>=0;c--){var l=h>>c&1;n!==r[0]&&(n=this.sqr(n)),0!==l||0!==o?(o<<=1,o|=l,(4==++a||0===i&&0===c)&&(n=this.mul(n,r[o]),a=0,o=0)):a=0}u=26}return n},N.prototype.convertTo=function(t){var e=t.umod(this.m);return e===t?e.clone():e},N.prototype.convertFrom=function(t){var e=t.clone();return e.red=null,e},s.mont=function(t){return new M(t)},n(M,N),M.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},M.prototype.convertFrom=function(t){var e=this.imod(t.mul(this.rinv));return e.red=null,e},M.prototype.imul=function(t,e){if(t.isZero()||e.isZero())return t.words[0]=0,t.length=1,t;var r=t.imul(e),i=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=r.isub(i).iushrn(this.shift),s=n;return n.cmp(this.m)>=0?s=n.isub(this.m):n.cmpn(0)<0&&(s=n.iadd(this.m)),s._forceRed(this)},M.prototype.mul=function(t,e){if(t.isZero()||e.isZero())return new s(0)._forceRed(this);var r=t.mul(e),i=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=r.isub(i).iushrn(this.shift),o=n;return n.cmp(this.m)>=0?o=n.isub(this.m):n.cmpn(0)<0&&(o=n.iadd(this.m)),o._forceRed(this)},M.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=r.nmd(t),this)},3482:(t,e,r)=>{"use strict";var i=r(5717),n=r(1167),s=r(9785),o=r(9072),a=r(1027);function u(t){a.call(this,"digest"),this._hash=t}i(u,a),u.prototype._update=function(t){this._hash.update(t)},u.prototype._final=function(){return this._hash.digest()},t.exports=function(t){return"md5"===(t=t.toLowerCase())?new n:"rmd160"===t||"ripemd160"===t?new s:new u(o(t))}},8028:(t,e,r)=>{var i=r(1167);t.exports=function(t){return(new i).update(t).digest()}},8355:(t,e,r)=>{"use strict";var i=r(5717),n=r(1031),s=r(1027),o=r(9509).Buffer,a=r(8028),u=r(9785),h=r(9072),c=o.alloc(128);function l(t,e){s.call(this,"digest"),"string"==typeof e&&(e=o.from(e));var r="sha512"===t||"sha384"===t?128:64;this._alg=t,this._key=e,e.length>r?e=("rmd160"===t?new u:h(t)).update(e).digest():e.length<r&&(e=o.concat([e,c],r));for(var i=this._ipad=o.allocUnsafe(r),n=this._opad=o.allocUnsafe(r),a=0;a<r;a++)i[a]=54^e[a],n[a]=92^e[a];this._hash="rmd160"===t?new u:h(t),this._hash.update(i)}i(l,s),l.prototype._update=function(t){this._hash.update(t)},l.prototype._final=function(){var t=this._hash.digest();return("rmd160"===this._alg?new u:h(this._alg)).update(this._opad).update(t).digest()},t.exports=function(t,e){return"rmd160"===(t=t.toLowerCase())||"ripemd160"===t?new l("rmd160",e):"md5"===t?new n(a,e):new l(t,e)}},1031:(t,e,r)=>{"use strict";var i=r(5717),n=r(9509).Buffer,s=r(1027),o=n.alloc(128),a=64;function u(t,e){s.call(this,"digest"),"string"==typeof e&&(e=n.from(e)),this._alg=t,this._key=e,e.length>a?e=t(e):e.length<a&&(e=n.concat([e,o],a));for(var r=this._ipad=n.allocUnsafe(a),i=this._opad=n.allocUnsafe(a),u=0;u<a;u++)r[u]=54^e[u],i[u]=92^e[u];this._hash=[r]}i(u,s),u.prototype._update=function(t){this._hash.push(t)},u.prototype._final=function(){var t=this._alg(n.concat(this._hash));return this._alg(n.concat([this._opad,t]))},t.exports=u},5835:(t,e,r)=>{"use strict";e.randomBytes=e.rng=e.pseudoRandomBytes=e.prng=r(1798),e.createHash=e.Hash=r(3482),e.createHmac=e.Hmac=r(8355);var i=r(6042),n=Object.keys(i),s=["sha1","sha224","sha256","sha384","sha512","md5","rmd160"].concat(n);e.getHashes=function(){return s};var o=r(5632);e.pbkdf2=o.pbkdf2,e.pbkdf2Sync=o.pbkdf2Sync;var a=r(3614);e.Cipher=a.Cipher,e.createCipher=a.createCipher,e.Cipheriv=a.Cipheriv,e.createCipheriv=a.createCipheriv,e.Decipher=a.Decipher,e.createDecipher=a.createDecipher,e.Decipheriv=a.Decipheriv,e.createDecipheriv=a.createDecipheriv,e.getCiphers=a.getCiphers,e.listCiphers=a.listCiphers;var u=r(2607);e.DiffieHellmanGroup=u.DiffieHellmanGroup,e.createDiffieHellmanGroup=u.createDiffieHellmanGroup,e.getDiffieHellman=u.getDiffieHellman,e.createDiffieHellman=u.createDiffieHellman,e.DiffieHellman=u.DiffieHellman;var h=r(4743);e.createSign=h.createSign,e.Sign=h.Sign,e.createVerify=h.createVerify,e.Verify=h.Verify,e.createECDH=r(6393);var c=r(7900);e.publicEncrypt=c.publicEncrypt,e.privateEncrypt=c.privateEncrypt,e.publicDecrypt=c.publicDecrypt,e.privateDecrypt=c.privateDecrypt;var l=r(7963);e.randomFill=l.randomFill,e.randomFillSync=l.randomFillSync,e.createCredentials=function(){throw new Error(["sorry, createCredentials is not implemented yet","we accept pull requests","https://github.com/crypto-browserify/crypto-browserify"].join("\n"))},e.constants={DH_CHECK_P_NOT_SAFE_PRIME:2,DH_CHECK_P_NOT_PRIME:1,DH_UNABLE_TO_CHECK_GENERATOR:4,DH_NOT_SUITABLE_GENERATOR:8,NPN_ENABLED:1,ALPN_ENABLED:1,RSA_PKCS1_PADDING:1,RSA_SSLV23_PADDING:2,RSA_NO_PADDING:3,RSA_PKCS1_OAEP_PADDING:4,RSA_X931_PADDING:5,RSA_PKCS1_PSS_PADDING:6,POINT_CONVERSION_COMPRESSED:2,POINT_CONVERSION_UNCOMPRESSED:4,POINT_CONVERSION_HYBRID:6}},452:function(t,e,r){var i;t.exports=(i=r(8249),r(8269),r(8214),r(888),r(5109),function(){var t=i,e=t.lib.BlockCipher,r=t.algo,n=[],s=[],o=[],a=[],u=[],h=[],c=[],l=[],d=[],f=[];!function(){for(var t=[],e=0;e<256;e++)t[e]=e<128?e<<1:e<<1^283;var r=0,i=0;for(e=0;e<256;e++){var p=i^i<<1^i<<2^i<<3^i<<4;p=p>>>8^255&p^99,n[r]=p,s[p]=r;var g=t[r],m=t[g],y=t[m],v=257*t[p]^16843008*p;o[r]=v<<24|v>>>8,a[r]=v<<16|v>>>16,u[r]=v<<8|v>>>24,h[r]=v,v=16843009*y^65537*m^257*g^16843008*r,c[p]=v<<24|v>>>8,l[p]=v<<16|v>>>16,d[p]=v<<8|v>>>24,f[p]=v,r?(r=g^t[t[t[y^g]]],i^=t[t[i]]):r=i=1}}();var p=[0,1,2,4,8,16,32,64,128,27,54],g=r.AES=e.extend({_doReset:function(){if(!this._nRounds||this._keyPriorReset!==this._key){for(var t=this._keyPriorReset=this._key,e=t.words,r=t.sigBytes/4,i=4*((this._nRounds=r+6)+1),s=this._keySchedule=[],o=0;o<i;o++)o<r?s[o]=e[o]:(h=s[o-1],o%r?r>6&&o%r==4&&(h=n[h>>>24]<<24|n[h>>>16&255]<<16|n[h>>>8&255]<<8|n[255&h]):(h=n[(h=h<<8|h>>>24)>>>24]<<24|n[h>>>16&255]<<16|n[h>>>8&255]<<8|n[255&h],h^=p[o/r|0]<<24),s[o]=s[o-r]^h);for(var a=this._invKeySchedule=[],u=0;u<i;u++){if(o=i-u,u%4)var h=s[o];else h=s[o-4];a[u]=u<4||o<=4?h:c[n[h>>>24]]^l[n[h>>>16&255]]^d[n[h>>>8&255]]^f[n[255&h]]}}},encryptBlock:function(t,e){this._doCryptBlock(t,e,this._keySchedule,o,a,u,h,n)},decryptBlock:function(t,e){var r=t[e+1];t[e+1]=t[e+3],t[e+3]=r,this._doCryptBlock(t,e,this._invKeySchedule,c,l,d,f,s),r=t[e+1],t[e+1]=t[e+3],t[e+3]=r},_doCryptBlock:function(t,e,r,i,n,s,o,a){for(var u=this._nRounds,h=t[e]^r[0],c=t[e+1]^r[1],l=t[e+2]^r[2],d=t[e+3]^r[3],f=4,p=1;p<u;p++){var g=i[h>>>24]^n[c>>>16&255]^s[l>>>8&255]^o[255&d]^r[f++],m=i[c>>>24]^n[l>>>16&255]^s[d>>>8&255]^o[255&h]^r[f++],y=i[l>>>24]^n[d>>>16&255]^s[h>>>8&255]^o[255&c]^r[f++],v=i[d>>>24]^n[h>>>16&255]^s[c>>>8&255]^o[255&l]^r[f++];h=g,c=m,l=y,d=v}g=(a[h>>>24]<<24|a[c>>>16&255]<<16|a[l>>>8&255]<<8|a[255&d])^r[f++],m=(a[c>>>24]<<24|a[l>>>16&255]<<16|a[d>>>8&255]<<8|a[255&h])^r[f++],y=(a[l>>>24]<<24|a[d>>>16&255]<<16|a[h>>>8&255]<<8|a[255&c])^r[f++],v=(a[d>>>24]<<24|a[h>>>16&255]<<16|a[c>>>8&255]<<8|a[255&l])^r[f++],t[e]=g,t[e+1]=m,t[e+2]=y,t[e+3]=v},keySize:8});t.AES=e._createHelper(g)}(),i.AES)},7407:function(t,e,r){var i;t.exports=(i=r(8249),r(8269),r(8214),r(888),r(5109),function(){var t=i,e=t.lib.BlockCipher,r=t.algo;const n=16,s=[608135816,2242054355,320440878,57701188,2752067618,698298832,137296536,3964562569,1160258022,953160567,3193202383,887688300,3232508343,3380367581,1065670069,3041331479,2450970073,2306472731],o=[[3509652390,2564797868,805139163,3491422135,3101798381,1780907670,3128725573,4046225305,614570311,3012652279,134345442,2240740374,1667834072,1901547113,2757295779,4103290238,227898511,1921955416,1904987480,2182433518,2069144605,3260701109,2620446009,720527379,3318853667,677414384,3393288472,3101374703,2390351024,1614419982,1822297739,2954791486,3608508353,3174124327,2024746970,1432378464,3864339955,2857741204,1464375394,1676153920,1439316330,715854006,3033291828,289532110,2706671279,2087905683,3018724369,1668267050,732546397,1947742710,3462151702,2609353502,2950085171,1814351708,2050118529,680887927,999245976,1800124847,3300911131,1713906067,1641548236,4213287313,1216130144,1575780402,4018429277,3917837745,3693486850,3949271944,596196993,3549867205,258830323,2213823033,772490370,2760122372,1774776394,2652871518,566650946,4142492826,1728879713,2882767088,1783734482,3629395816,2517608232,2874225571,1861159788,326777828,3124490320,2130389656,2716951837,967770486,1724537150,2185432712,2364442137,1164943284,2105845187,998989502,3765401048,2244026483,1075463327,1455516326,1322494562,910128902,469688178,1117454909,936433444,3490320968,3675253459,1240580251,122909385,2157517691,634681816,4142456567,3825094682,3061402683,2540495037,79693498,3249098678,1084186820,1583128258,426386531,1761308591,1047286709,322548459,995290223,1845252383,2603652396,3431023940,2942221577,3202600964,3727903485,1712269319,422464435,3234572375,1170764815,3523960633,3117677531,1434042557,442511882,3600875718,1076654713,1738483198,4213154764,2393238008,3677496056,1014306527,4251020053,793779912,2902807211,842905082,4246964064,1395751752,1040244610,2656851899,3396308128,445077038,3742853595,3577915638,679411651,2892444358,2354009459,1767581616,3150600392,3791627101,3102740896,284835224,4246832056,1258075500,768725851,2589189241,3069724005,3532540348,1274779536,3789419226,2764799539,1660621633,3471099624,4011903706,913787905,3497959166,737222580,2514213453,2928710040,3937242737,1804850592,3499020752,2949064160,2386320175,2390070455,2415321851,4061277028,2290661394,2416832540,1336762016,1754252060,3520065937,3014181293,791618072,3188594551,3933548030,2332172193,3852520463,3043980520,413987798,3465142937,3030929376,4245938359,2093235073,3534596313,375366246,2157278981,2479649556,555357303,3870105701,2008414854,3344188149,4221384143,3956125452,2067696032,3594591187,2921233993,2428461,544322398,577241275,1471733935,610547355,4027169054,1432588573,1507829418,2025931657,3646575487,545086370,48609733,2200306550,1653985193,298326376,1316178497,3007786442,2064951626,458293330,2589141269,3591329599,3164325604,727753846,2179363840,146436021,1461446943,4069977195,705550613,3059967265,3887724982,4281599278,3313849956,1404054877,2845806497,146425753,1854211946],[1266315497,3048417604,3681880366,3289982499,290971e4,1235738493,2632868024,2414719590,3970600049,1771706367,1449415276,3266420449,422970021,1963543593,2690192192,3826793022,1062508698,1531092325,1804592342,2583117782,2714934279,4024971509,1294809318,4028980673,1289560198,2221992742,1669523910,35572830,157838143,1052438473,1016535060,1802137761,1753167236,1386275462,3080475397,2857371447,1040679964,2145300060,2390574316,1461121720,2956646967,4031777805,4028374788,33600511,2920084762,1018524850,629373528,3691585981,3515945977,2091462646,2486323059,586499841,988145025,935516892,3367335476,2599673255,2839830854,265290510,3972581182,2759138881,3795373465,1005194799,847297441,406762289,1314163512,1332590856,1866599683,4127851711,750260880,613907577,1450815602,3165620655,3734664991,3650291728,3012275730,3704569646,1427272223,778793252,1343938022,2676280711,2052605720,1946737175,3164576444,3914038668,3967478842,3682934266,1661551462,3294938066,4011595847,840292616,3712170807,616741398,312560963,711312465,1351876610,322626781,1910503582,271666773,2175563734,1594956187,70604529,3617834859,1007753275,1495573769,4069517037,2549218298,2663038764,504708206,2263041392,3941167025,2249088522,1514023603,1998579484,1312622330,694541497,2582060303,2151582166,1382467621,776784248,2618340202,3323268794,2497899128,2784771155,503983604,4076293799,907881277,423175695,432175456,1378068232,4145222326,3954048622,3938656102,3820766613,2793130115,2977904593,26017576,3274890735,3194772133,1700274565,1756076034,4006520079,3677328699,720338349,1533947780,354530856,688349552,3973924725,1637815568,332179504,3949051286,53804574,2852348879,3044236432,1282449977,3583942155,3416972820,4006381244,1617046695,2628476075,3002303598,1686838959,431878346,2686675385,1700445008,1080580658,1009431731,832498133,3223435511,2605976345,2271191193,2516031870,1648197032,4164389018,2548247927,300782431,375919233,238389289,3353747414,2531188641,2019080857,1475708069,455242339,2609103871,448939670,3451063019,1395535956,2413381860,1841049896,1491858159,885456874,4264095073,4001119347,1565136089,3898914787,1108368660,540939232,1173283510,2745871338,3681308437,4207628240,3343053890,4016749493,1699691293,1103962373,3625875870,2256883143,3830138730,1031889488,3479347698,1535977030,4236805024,3251091107,2132092099,1774941330,1199868427,1452454533,157007616,2904115357,342012276,595725824,1480756522,206960106,497939518,591360097,863170706,2375253569,3596610801,1814182875,2094937945,3421402208,1082520231,3463918190,2785509508,435703966,3908032597,1641649973,2842273706,3305899714,1510255612,2148256476,2655287854,3276092548,4258621189,236887753,3681803219,274041037,1734335097,3815195456,3317970021,1899903192,1026095262,4050517792,356393447,2410691914,3873677099,3682840055],[3913112168,2491498743,4132185628,2489919796,1091903735,1979897079,3170134830,3567386728,3557303409,857797738,1136121015,1342202287,507115054,2535736646,337727348,3213592640,1301675037,2528481711,1895095763,1721773893,3216771564,62756741,2142006736,835421444,2531993523,1442658625,3659876326,2882144922,676362277,1392781812,170690266,3921047035,1759253602,3611846912,1745797284,664899054,1329594018,3901205900,3045908486,2062866102,2865634940,3543621612,3464012697,1080764994,553557557,3656615353,3996768171,991055499,499776247,1265440854,648242737,3940784050,980351604,3713745714,1749149687,3396870395,4211799374,3640570775,1161844396,3125318951,1431517754,545492359,4268468663,3499529547,1437099964,2702547544,3433638243,2581715763,2787789398,1060185593,1593081372,2418618748,4260947970,69676912,2159744348,86519011,2512459080,3838209314,1220612927,3339683548,133810670,1090789135,1078426020,1569222167,845107691,3583754449,4072456591,1091646820,628848692,1613405280,3757631651,526609435,236106946,48312990,2942717905,3402727701,1797494240,859738849,992217954,4005476642,2243076622,3870952857,3732016268,765654824,3490871365,2511836413,1685915746,3888969200,1414112111,2273134842,3281911079,4080962846,172450625,2569994100,980381355,4109958455,2819808352,2716589560,2568741196,3681446669,3329971472,1835478071,660984891,3704678404,4045999559,3422617507,3040415634,1762651403,1719377915,3470491036,2693910283,3642056355,3138596744,1364962596,2073328063,1983633131,926494387,3423689081,2150032023,4096667949,1749200295,3328846651,309677260,2016342300,1779581495,3079819751,111262694,1274766160,443224088,298511866,1025883608,3806446537,1145181785,168956806,3641502830,3584813610,1689216846,3666258015,3200248200,1692713982,2646376535,4042768518,1618508792,1610833997,3523052358,4130873264,2001055236,3610705100,2202168115,4028541809,2961195399,1006657119,2006996926,3186142756,1430667929,3210227297,1314452623,4074634658,4101304120,2273951170,1399257539,3367210612,3027628629,1190975929,2062231137,2333990788,2221543033,2438960610,1181637006,548689776,2362791313,3372408396,3104550113,3145860560,296247880,1970579870,3078560182,3769228297,1714227617,3291629107,3898220290,166772364,1251581989,493813264,448347421,195405023,2709975567,677966185,3703036547,1463355134,2715995803,1338867538,1343315457,2802222074,2684532164,233230375,2599980071,2000651841,3277868038,1638401717,4028070440,3237316320,6314154,819756386,300326615,590932579,1405279636,3267499572,3150704214,2428286686,3959192993,3461946742,1862657033,1266418056,963775037,2089974820,2263052895,1917689273,448879540,3550394620,3981727096,150775221,3627908307,1303187396,508620638,2975983352,2726630617,1817252668,1876281319,1457606340,908771278,3720792119,3617206836,2455994898,1729034894,1080033504],[976866871,3556439503,2881648439,1522871579,1555064734,1336096578,3548522304,2579274686,3574697629,3205460757,3593280638,3338716283,3079412587,564236357,2993598910,1781952180,1464380207,3163844217,3332601554,1699332808,1393555694,1183702653,3581086237,1288719814,691649499,2847557200,2895455976,3193889540,2717570544,1781354906,1676643554,2592534050,3230253752,1126444790,2770207658,2633158820,2210423226,2615765581,2414155088,3127139286,673620729,2805611233,1269405062,4015350505,3341807571,4149409754,1057255273,2012875353,2162469141,2276492801,2601117357,993977747,3918593370,2654263191,753973209,36408145,2530585658,25011837,3520020182,2088578344,530523599,2918365339,1524020338,1518925132,3760827505,3759777254,1202760957,3985898139,3906192525,674977740,4174734889,2031300136,2019492241,3983892565,4153806404,3822280332,352677332,2297720250,60907813,90501309,3286998549,1016092578,2535922412,2839152426,457141659,509813237,4120667899,652014361,1966332200,2975202805,55981186,2327461051,676427537,3255491064,2882294119,3433927263,1307055953,942726286,933058658,2468411793,3933900994,4215176142,1361170020,2001714738,2830558078,3274259782,1222529897,1679025792,2729314320,3714953764,1770335741,151462246,3013232138,1682292957,1483529935,471910574,1539241949,458788160,3436315007,1807016891,3718408830,978976581,1043663428,3165965781,1927990952,4200891579,2372276910,3208408903,3533431907,1412390302,2931980059,4132332400,1947078029,3881505623,4168226417,2941484381,1077988104,1320477388,886195818,18198404,3786409e3,2509781533,112762804,3463356488,1866414978,891333506,18488651,661792760,1628790961,3885187036,3141171499,876946877,2693282273,1372485963,791857591,2686433993,3759982718,3167212022,3472953795,2716379847,445679433,3561995674,3504004811,3574258232,54117162,3331405415,2381918588,3769707343,4154350007,1140177722,4074052095,668550556,3214352940,367459370,261225585,2610173221,4209349473,3468074219,3265815641,314222801,3066103646,3808782860,282218597,3406013506,3773591054,379116347,1285071038,846784868,2669647154,3771962079,3550491691,2305946142,453669953,1268987020,3317592352,3279303384,3744833421,2610507566,3859509063,266596637,3847019092,517658769,3462560207,3443424879,370717030,4247526661,2224018117,4143653529,4112773975,2788324899,2477274417,1456262402,2901442914,1517677493,1846949527,2295493580,3734397586,2176403920,1280348187,1908823572,3871786941,846861322,1172426758,3287448474,3383383037,1655181056,3139813346,901632758,1897031941,2986607138,3066810236,3447102507,1393639104,373351379,950779232,625454576,3124240540,4148612726,2007998917,544563296,2244738638,2330496472,2058025392,1291430526,424198748,50039436,29584100,3605783033,2429876329,2791104160,1057563949,3255363231,3075367218,3463963227,1469046755,985887462]];var a={pbox:[],sbox:[]};function u(t,e){let r=e>>24&255,i=e>>16&255,n=e>>8&255,s=255&e,o=t.sbox[0][r]+t.sbox[1][i];return o^=t.sbox[2][n],o+=t.sbox[3][s],o}function h(t,e,r){let i,s=e,o=r;for(let e=0;e<n;++e)s^=t.pbox[e],o=u(t,s)^o,i=s,s=o,o=i;return i=s,s=o,o=i,o^=t.pbox[n],s^=t.pbox[n+1],{left:s,right:o}}var c=r.Blowfish=e.extend({_doReset:function(){if(this._keyPriorReset!==this._key){var t=this._keyPriorReset=this._key,e=t.words,r=t.sigBytes/4;!function(t,e,r){for(let e=0;e<4;e++){t.sbox[e]=[];for(let r=0;r<256;r++)t.sbox[e][r]=o[e][r]}let i=0;for(let o=0;o<n+2;o++)t.pbox[o]=s[o]^e[i],i++,i>=r&&(i=0);let a=0,u=0,c=0;for(let e=0;e<n+2;e+=2)c=h(t,a,u),a=c.left,u=c.right,t.pbox[e]=a,t.pbox[e+1]=u;for(let e=0;e<4;e++)for(let r=0;r<256;r+=2)c=h(t,a,u),a=c.left,u=c.right,t.sbox[e][r]=a,t.sbox[e][r+1]=u}(a,e,r)}},encryptBlock:function(t,e){var r=h(a,t[e],t[e+1]);t[e]=r.left,t[e+1]=r.right},decryptBlock:function(t,e){var r=function(t,e,r){let i,s=e,o=r;for(let e=n+1;e>1;--e)s^=t.pbox[e],o=u(t,s)^o,i=s,s=o,o=i;return i=s,s=o,o=i,o^=t.pbox[1],s^=t.pbox[0],{left:s,right:o}}(a,t[e],t[e+1]);t[e]=r.left,t[e+1]=r.right},blockSize:2,keySize:4,ivSize:2});t.Blowfish=e._createHelper(c)}(),i.Blowfish)},5109:function(t,e,r){var i,n,s,o,a,u,h,c,l,d,f,p,g,m,y,v,b,w,E;t.exports=(i=r(8249),r(888),void(i.lib.Cipher||(n=i,s=n.lib,o=s.Base,a=s.WordArray,u=s.BufferedBlockAlgorithm,h=n.enc,h.Utf8,c=h.Base64,l=n.algo.EvpKDF,d=s.Cipher=u.extend({cfg:o.extend(),createEncryptor:function(t,e){return this.create(this._ENC_XFORM_MODE,t,e)},createDecryptor:function(t,e){return this.create(this._DEC_XFORM_MODE,t,e)},init:function(t,e,r){this.cfg=this.cfg.extend(r),this._xformMode=t,this._key=e,this.reset()},reset:function(){u.reset.call(this),this._doReset()},process:function(t){return this._append(t),this._process()},finalize:function(t){return t&&this._append(t),this._doFinalize()},keySize:4,ivSize:4,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,_createHelper:function(){function t(t){return"string"==typeof t?E:b}return function(e){return{encrypt:function(r,i,n){return t(i).encrypt(e,r,i,n)},decrypt:function(r,i,n){return t(i).decrypt(e,r,i,n)}}}}()}),s.StreamCipher=d.extend({_doFinalize:function(){return this._process(!0)},blockSize:1}),f=n.mode={},p=s.BlockCipherMode=o.extend({createEncryptor:function(t,e){return this.Encryptor.create(t,e)},createDecryptor:function(t,e){return this.Decryptor.create(t,e)},init:function(t,e){this._cipher=t,this._iv=e}}),g=f.CBC=function(){var t=p.extend();function e(t,e,r){var i,n=this._iv;n?(i=n,this._iv=void 0):i=this._prevBlock;for(var s=0;s<r;s++)t[e+s]^=i[s]}return t.Encryptor=t.extend({processBlock:function(t,r){var i=this._cipher,n=i.blockSize;e.call(this,t,r,n),i.encryptBlock(t,r),this._prevBlock=t.slice(r,r+n)}}),t.Decryptor=t.extend({processBlock:function(t,r){var i=this._cipher,n=i.blockSize,s=t.slice(r,r+n);i.decryptBlock(t,r),e.call(this,t,r,n),this._prevBlock=s}}),t}(),m=(n.pad={}).Pkcs7={pad:function(t,e){for(var r=4*e,i=r-t.sigBytes%r,n=i<<24|i<<16|i<<8|i,s=[],o=0;o<i;o+=4)s.push(n);var u=a.create(s,i);t.concat(u)},unpad:function(t){var e=255&t.words[t.sigBytes-1>>>2];t.sigBytes-=e}},s.BlockCipher=d.extend({cfg:d.cfg.extend({mode:g,padding:m}),reset:function(){var t;d.reset.call(this);var e=this.cfg,r=e.iv,i=e.mode;this._xformMode==this._ENC_XFORM_MODE?t=i.createEncryptor:(t=i.createDecryptor,this._minBufferSize=1),this._mode&&this._mode.__creator==t?this._mode.init(this,r&&r.words):(this._mode=t.call(i,this,r&&r.words),this._mode.__creator=t)},_doProcessBlock:function(t,e){this._mode.processBlock(t,e)},_doFinalize:function(){var t,e=this.cfg.padding;return this._xformMode==this._ENC_XFORM_MODE?(e.pad(this._data,this.blockSize),t=this._process(!0)):(t=this._process(!0),e.unpad(t)),t},blockSize:4}),y=s.CipherParams=o.extend({init:function(t){this.mixIn(t)},toString:function(t){return(t||this.formatter).stringify(this)}}),v=(n.format={}).OpenSSL={stringify:function(t){var e=t.ciphertext,r=t.salt;return(r?a.create([1398893684,1701076831]).concat(r).concat(e):e).toString(c)},parse:function(t){var e,r=c.parse(t),i=r.words;return 1398893684==i[0]&&1701076831==i[1]&&(e=a.create(i.slice(2,4)),i.splice(0,4),r.sigBytes-=16),y.create({ciphertext:r,salt:e})}},b=s.SerializableCipher=o.extend({cfg:o.extend({format:v}),encrypt:function(t,e,r,i){i=this.cfg.extend(i);var n=t.createEncryptor(r,i),s=n.finalize(e),o=n.cfg;return y.create({ciphertext:s,key:r,iv:o.iv,algorithm:t,mode:o.mode,padding:o.padding,blockSize:t.blockSize,formatter:i.format})},decrypt:function(t,e,r,i){return i=this.cfg.extend(i),e=this._parse(e,i.format),t.createDecryptor(r,i).finalize(e.ciphertext)},_parse:function(t,e){return"string"==typeof t?e.parse(t,this):t}}),w=(n.kdf={}).OpenSSL={execute:function(t,e,r,i,n){if(i||(i=a.random(8)),n)s=l.create({keySize:e+r,hasher:n}).compute(t,i);else var s=l.create({keySize:e+r}).compute(t,i);var o=a.create(s.words.slice(e),4*r);return s.sigBytes=4*e,y.create({key:s,iv:o,salt:i})}},E=s.PasswordBasedCipher=b.extend({cfg:b.cfg.extend({kdf:w}),encrypt:function(t,e,r,i){var n=(i=this.cfg.extend(i)).kdf.execute(r,t.keySize,t.ivSize,i.salt,i.hasher);i.iv=n.iv;var s=b.encrypt.call(this,t,e,n.key,i);return s.mixIn(n),s},decrypt:function(t,e,r,i){i=this.cfg.extend(i),e=this._parse(e,i.format);var n=i.kdf.execute(r,t.keySize,t.ivSize,e.salt,i.hasher);return i.iv=n.iv,b.decrypt.call(this,t,e,n.key,i)}}))))},8249:function(t,e,r){var i;t.exports=(i=i||function(t,e){var i;if("undefined"!=typeof window&&window.crypto&&(i=window.crypto),"undefined"!=typeof self&&self.crypto&&(i=self.crypto),"undefined"!=typeof globalThis&&globalThis.crypto&&(i=globalThis.crypto),!i&&"undefined"!=typeof window&&window.msCrypto&&(i=window.msCrypto),!i&&void 0!==r.g&&r.g.crypto&&(i=r.g.crypto),!i)try{i=r(2480)}catch(t){}var n=function(){if(i){if("function"==typeof i.getRandomValues)try{return i.getRandomValues(new Uint32Array(1))[0]}catch(t){}if("function"==typeof i.randomBytes)try{return i.randomBytes(4).readInt32LE()}catch(t){}}throw new Error("Native crypto module could not be used to get secure random number.")},s=Object.create||function(){function t(){}return function(e){var r;return t.prototype=e,r=new t,t.prototype=null,r}}(),o={},a=o.lib={},u=a.Base={extend:function(t){var e=s(this);return t&&e.mixIn(t),e.hasOwnProperty("init")&&this.init!==e.init||(e.init=function(){e.$super.init.apply(this,arguments)}),e.init.prototype=e,e.$super=this,e},create:function(){var t=this.extend();return t.init.apply(t,arguments),t},init:function(){},mixIn:function(t){for(var e in t)t.hasOwnProperty(e)&&(this[e]=t[e]);t.hasOwnProperty("toString")&&(this.toString=t.toString)},clone:function(){return this.init.prototype.extend(this)}},h=a.WordArray=u.extend({init:function(t,e){t=this.words=t||[],this.sigBytes=null!=e?e:4*t.length},toString:function(t){return(t||l).stringify(this)},concat:function(t){var e=this.words,r=t.words,i=this.sigBytes,n=t.sigBytes;if(this.clamp(),i%4)for(var s=0;s<n;s++){var o=r[s>>>2]>>>24-s%4*8&255;e[i+s>>>2]|=o<<24-(i+s)%4*8}else for(var a=0;a<n;a+=4)e[i+a>>>2]=r[a>>>2];return this.sigBytes+=n,this},clamp:function(){var e=this.words,r=this.sigBytes;e[r>>>2]&=4294967295<<32-r%4*8,e.length=t.ceil(r/4)},clone:function(){var t=u.clone.call(this);return t.words=this.words.slice(0),t},random:function(t){for(var e=[],r=0;r<t;r+=4)e.push(n());return new h.init(e,t)}}),c=o.enc={},l=c.Hex={stringify:function(t){for(var e=t.words,r=t.sigBytes,i=[],n=0;n<r;n++){var s=e[n>>>2]>>>24-n%4*8&255;i.push((s>>>4).toString(16)),i.push((15&s).toString(16))}return i.join("")},parse:function(t){for(var e=t.length,r=[],i=0;i<e;i+=2)r[i>>>3]|=parseInt(t.substr(i,2),16)<<24-i%8*4;return new h.init(r,e/2)}},d=c.Latin1={stringify:function(t){for(var e=t.words,r=t.sigBytes,i=[],n=0;n<r;n++){var s=e[n>>>2]>>>24-n%4*8&255;i.push(String.fromCharCode(s))}return i.join("")},parse:function(t){for(var e=t.length,r=[],i=0;i<e;i++)r[i>>>2]|=(255&t.charCodeAt(i))<<24-i%4*8;return new h.init(r,e)}},f=c.Utf8={stringify:function(t){try{return decodeURIComponent(escape(d.stringify(t)))}catch(t){throw new Error("Malformed UTF-8 data")}},parse:function(t){return d.parse(unescape(encodeURIComponent(t)))}},p=a.BufferedBlockAlgorithm=u.extend({reset:function(){this._data=new h.init,this._nDataBytes=0},_append:function(t){"string"==typeof t&&(t=f.parse(t)),this._data.concat(t),this._nDataBytes+=t.sigBytes},_process:function(e){var r,i=this._data,n=i.words,s=i.sigBytes,o=this.blockSize,a=s/(4*o),u=(a=e?t.ceil(a):t.max((0|a)-this._minBufferSize,0))*o,c=t.min(4*u,s);if(u){for(var l=0;l<u;l+=o)this._doProcessBlock(n,l);r=n.splice(0,u),i.sigBytes-=c}return new h.init(r,c)},clone:function(){var t=u.clone.call(this);return t._data=this._data.clone(),t},_minBufferSize:0}),g=(a.Hasher=p.extend({cfg:u.extend(),init:function(t){this.cfg=this.cfg.extend(t),this.reset()},reset:function(){p.reset.call(this),this._doReset()},update:function(t){return this._append(t),this._process(),this},finalize:function(t){return t&&this._append(t),this._doFinalize()},blockSize:16,_createHelper:function(t){return function(e,r){return new t.init(r).finalize(e)}},_createHmacHelper:function(t){return function(e,r){return new g.HMAC.init(t,r).finalize(e)}}}),o.algo={});return o}(Math),i)},8269:function(t,e,r){var i,n,s;t.exports=(i=r(8249),s=(n=i).lib.WordArray,n.enc.Base64={stringify:function(t){var e=t.words,r=t.sigBytes,i=this._map;t.clamp();for(var n=[],s=0;s<r;s+=3)for(var o=(e[s>>>2]>>>24-s%4*8&255)<<16|(e[s+1>>>2]>>>24-(s+1)%4*8&255)<<8|e[s+2>>>2]>>>24-(s+2)%4*8&255,a=0;a<4&&s+.75*a<r;a++)n.push(i.charAt(o>>>6*(3-a)&63));var u=i.charAt(64);if(u)for(;n.length%4;)n.push(u);return n.join("")},parse:function(t){var e=t.length,r=this._map,i=this._reverseMap;if(!i){i=this._reverseMap=[];for(var n=0;n<r.length;n++)i[r.charCodeAt(n)]=n}var o=r.charAt(64);if(o){var a=t.indexOf(o);-1!==a&&(e=a)}return function(t,e,r){for(var i=[],n=0,o=0;o<e;o++)if(o%4){var a=r[t.charCodeAt(o-1)]<<o%4*2|r[t.charCodeAt(o)]>>>6-o%4*2;i[n>>>2]|=a<<24-n%4*8,n++}return s.create(i,n)}(t,e,i)},_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="},i.enc.Base64)},3786:function(t,e,r){var i,n,s;t.exports=(i=r(8249),s=(n=i).lib.WordArray,n.enc.Base64url={stringify:function(t,e){void 0===e&&(e=!0);var r=t.words,i=t.sigBytes,n=e?this._safe_map:this._map;t.clamp();for(var s=[],o=0;o<i;o+=3)for(var a=(r[o>>>2]>>>24-o%4*8&255)<<16|(r[o+1>>>2]>>>24-(o+1)%4*8&255)<<8|r[o+2>>>2]>>>24-(o+2)%4*8&255,u=0;u<4&&o+.75*u<i;u++)s.push(n.charAt(a>>>6*(3-u)&63));var h=n.charAt(64);if(h)for(;s.length%4;)s.push(h);return s.join("")},parse:function(t,e){void 0===e&&(e=!0);var r=t.length,i=e?this._safe_map:this._map,n=this._reverseMap;if(!n){n=this._reverseMap=[];for(var o=0;o<i.length;o++)n[i.charCodeAt(o)]=o}var a=i.charAt(64);if(a){var u=t.indexOf(a);-1!==u&&(r=u)}return function(t,e,r){for(var i=[],n=0,o=0;o<e;o++)if(o%4){var a=r[t.charCodeAt(o-1)]<<o%4*2|r[t.charCodeAt(o)]>>>6-o%4*2;i[n>>>2]|=a<<24-n%4*8,n++}return s.create(i,n)}(t,r,n)},_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",_safe_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"},i.enc.Base64url)},298:function(t,e,r){var i;t.exports=(i=r(8249),function(){var t=i,e=t.lib.WordArray,r=t.enc;function n(t){return t<<8&4278255360|t>>>8&16711935}r.Utf16=r.Utf16BE={stringify:function(t){for(var e=t.words,r=t.sigBytes,i=[],n=0;n<r;n+=2){var s=e[n>>>2]>>>16-n%4*8&65535;i.push(String.fromCharCode(s))}return i.join("")},parse:function(t){for(var r=t.length,i=[],n=0;n<r;n++)i[n>>>1]|=t.charCodeAt(n)<<16-n%2*16;return e.create(i,2*r)}},r.Utf16LE={stringify:function(t){for(var e=t.words,r=t.sigBytes,i=[],s=0;s<r;s+=2){var o=n(e[s>>>2]>>>16-s%4*8&65535);i.push(String.fromCharCode(o))}return i.join("")},parse:function(t){for(var r=t.length,i=[],s=0;s<r;s++)i[s>>>1]|=n(t.charCodeAt(s)<<16-s%2*16);return e.create(i,2*r)}}}(),i.enc.Utf16)},888:function(t,e,r){var i,n,s,o,a,u,h,c;t.exports=(c=r(8249),r(2783),r(9824),s=(n=(i=c).lib).Base,o=n.WordArray,u=(a=i.algo).MD5,h=a.EvpKDF=s.extend({cfg:s.extend({keySize:4,hasher:u,iterations:1}),init:function(t){this.cfg=this.cfg.extend(t)},compute:function(t,e){for(var r,i=this.cfg,n=i.hasher.create(),s=o.create(),a=s.words,u=i.keySize,h=i.iterations;a.length<u;){r&&n.update(r),r=n.update(t).finalize(e),n.reset();for(var c=1;c<h;c++)r=n.finalize(r),n.reset();s.concat(r)}return s.sigBytes=4*u,s}}),i.EvpKDF=function(t,e,r){return h.create(r).compute(t,e)},c.EvpKDF)},2209:function(t,e,r){var i,n,s,o;t.exports=(o=r(8249),r(5109),n=(i=o).lib.CipherParams,s=i.enc.Hex,i.format.Hex={stringify:function(t){return t.ciphertext.toString(s)},parse:function(t){var e=s.parse(t);return n.create({ciphertext:e})}},o.format.Hex)},9824:function(t,e,r){var i,n,s;t.exports=(n=(i=r(8249)).lib.Base,s=i.enc.Utf8,void(i.algo.HMAC=n.extend({init:function(t,e){t=this._hasher=new t.init,"string"==typeof e&&(e=s.parse(e));var r=t.blockSize,i=4*r;e.sigBytes>i&&(e=t.finalize(e)),e.clamp();for(var n=this._oKey=e.clone(),o=this._iKey=e.clone(),a=n.words,u=o.words,h=0;h<r;h++)a[h]^=1549556828,u[h]^=909522486;n.sigBytes=o.sigBytes=i,this.reset()},reset:function(){var t=this._hasher;t.reset(),t.update(this._iKey)},update:function(t){return this._hasher.update(t),this},finalize:function(t){var e=this._hasher,r=e.finalize(t);return e.reset(),e.finalize(this._oKey.clone().concat(r))}})))},1354:function(t,e,r){var i;t.exports=(i=r(8249),r(4938),r(4433),r(298),r(8269),r(3786),r(8214),r(2783),r(2153),r(7792),r(34),r(7460),r(3327),r(706),r(9824),r(2112),r(888),r(5109),r(8568),r(4242),r(9968),r(7660),r(1148),r(3615),r(2807),r(1077),r(6475),r(6991),r(2209),r(452),r(4253),r(1857),r(4454),r(3974),r(7407),i)},4433:function(t,e,r){var i;t.exports=(i=r(8249),function(){if("function"==typeof ArrayBuffer){var t=i.lib.WordArray,e=t.init,r=t.init=function(t){if(t instanceof ArrayBuffer&&(t=new Uint8Array(t)),(t instanceof Int8Array||"undefined"!=typeof Uint8ClampedArray&&t instanceof Uint8ClampedArray||t instanceof Int16Array||t instanceof Uint16Array||t instanceof Int32Array||t instanceof Uint32Array||t instanceof Float32Array||t instanceof Float64Array)&&(t=new Uint8Array(t.buffer,t.byteOffset,t.byteLength)),t instanceof Uint8Array){for(var r=t.byteLength,i=[],n=0;n<r;n++)i[n>>>2]|=t[n]<<24-n%4*8;e.call(this,i,r)}else e.apply(this,arguments)};r.prototype=t}}(),i.lib.WordArray)},8214:function(t,e,r){var i;t.exports=(i=r(8249),function(t){var e=i,r=e.lib,n=r.WordArray,s=r.Hasher,o=e.algo,a=[];!function(){for(var e=0;e<64;e++)a[e]=4294967296*t.abs(t.sin(e+1))|0}();var u=o.MD5=s.extend({_doReset:function(){this._hash=new n.init([1732584193,4023233417,2562383102,271733878])},_doProcessBlock:function(t,e){for(var r=0;r<16;r++){var i=e+r,n=t[i];t[i]=16711935&(n<<8|n>>>24)|4278255360&(n<<24|n>>>8)}var s=this._hash.words,o=t[e+0],u=t[e+1],f=t[e+2],p=t[e+3],g=t[e+4],m=t[e+5],y=t[e+6],v=t[e+7],b=t[e+8],w=t[e+9],E=t[e+10],S=t[e+11],N=t[e+12],M=t[e+13],x=t[e+14],I=t[e+15],A=s[0],P=s[1],T=s[2],R=s[3];A=h(A,P,T,R,o,7,a[0]),R=h(R,A,P,T,u,12,a[1]),T=h(T,R,A,P,f,17,a[2]),P=h(P,T,R,A,p,22,a[3]),A=h(A,P,T,R,g,7,a[4]),R=h(R,A,P,T,m,12,a[5]),T=h(T,R,A,P,y,17,a[6]),P=h(P,T,R,A,v,22,a[7]),A=h(A,P,T,R,b,7,a[8]),R=h(R,A,P,T,w,12,a[9]),T=h(T,R,A,P,E,17,a[10]),P=h(P,T,R,A,S,22,a[11]),A=h(A,P,T,R,N,7,a[12]),R=h(R,A,P,T,M,12,a[13]),T=h(T,R,A,P,x,17,a[14]),A=c(A,P=h(P,T,R,A,I,22,a[15]),T,R,u,5,a[16]),R=c(R,A,P,T,y,9,a[17]),T=c(T,R,A,P,S,14,a[18]),P=c(P,T,R,A,o,20,a[19]),A=c(A,P,T,R,m,5,a[20]),R=c(R,A,P,T,E,9,a[21]),T=c(T,R,A,P,I,14,a[22]),P=c(P,T,R,A,g,20,a[23]),A=c(A,P,T,R,w,5,a[24]),R=c(R,A,P,T,x,9,a[25]),T=c(T,R,A,P,p,14,a[26]),P=c(P,T,R,A,b,20,a[27]),A=c(A,P,T,R,M,5,a[28]),R=c(R,A,P,T,f,9,a[29]),T=c(T,R,A,P,v,14,a[30]),A=l(A,P=c(P,T,R,A,N,20,a[31]),T,R,m,4,a[32]),R=l(R,A,P,T,b,11,a[33]),T=l(T,R,A,P,S,16,a[34]),P=l(P,T,R,A,x,23,a[35]),A=l(A,P,T,R,u,4,a[36]),R=l(R,A,P,T,g,11,a[37]),T=l(T,R,A,P,v,16,a[38]),P=l(P,T,R,A,E,23,a[39]),A=l(A,P,T,R,M,4,a[40]),R=l(R,A,P,T,o,11,a[41]),T=l(T,R,A,P,p,16,a[42]),P=l(P,T,R,A,y,23,a[43]),A=l(A,P,T,R,w,4,a[44]),R=l(R,A,P,T,N,11,a[45]),T=l(T,R,A,P,I,16,a[46]),A=d(A,P=l(P,T,R,A,f,23,a[47]),T,R,o,6,a[48]),R=d(R,A,P,T,v,10,a[49]),T=d(T,R,A,P,x,15,a[50]),P=d(P,T,R,A,m,21,a[51]),A=d(A,P,T,R,N,6,a[52]),R=d(R,A,P,T,p,10,a[53]),T=d(T,R,A,P,E,15,a[54]),P=d(P,T,R,A,u,21,a[55]),A=d(A,P,T,R,b,6,a[56]),R=d(R,A,P,T,I,10,a[57]),T=d(T,R,A,P,y,15,a[58]),P=d(P,T,R,A,M,21,a[59]),A=d(A,P,T,R,g,6,a[60]),R=d(R,A,P,T,S,10,a[61]),T=d(T,R,A,P,f,15,a[62]),P=d(P,T,R,A,w,21,a[63]),s[0]=s[0]+A|0,s[1]=s[1]+P|0,s[2]=s[2]+T|0,s[3]=s[3]+R|0},_doFinalize:function(){var e=this._data,r=e.words,i=8*this._nDataBytes,n=8*e.sigBytes;r[n>>>5]|=128<<24-n%32;var s=t.floor(i/4294967296),o=i;r[15+(n+64>>>9<<4)]=16711935&(s<<8|s>>>24)|4278255360&(s<<24|s>>>8),r[14+(n+64>>>9<<4)]=16711935&(o<<8|o>>>24)|4278255360&(o<<24|o>>>8),e.sigBytes=4*(r.length+1),this._process();for(var a=this._hash,u=a.words,h=0;h<4;h++){var c=u[h];u[h]=16711935&(c<<8|c>>>24)|4278255360&(c<<24|c>>>8)}return a},clone:function(){var t=s.clone.call(this);return t._hash=this._hash.clone(),t}});function h(t,e,r,i,n,s,o){var a=t+(e&r|~e&i)+n+o;return(a<<s|a>>>32-s)+e}function c(t,e,r,i,n,s,o){var a=t+(e&i|r&~i)+n+o;return(a<<s|a>>>32-s)+e}function l(t,e,r,i,n,s,o){var a=t+(e^r^i)+n+o;return(a<<s|a>>>32-s)+e}function d(t,e,r,i,n,s,o){var a=t+(r^(e|~i))+n+o;return(a<<s|a>>>32-s)+e}e.MD5=s._createHelper(u),e.HmacMD5=s._createHmacHelper(u)}(Math),i.MD5)},8568:function(t,e,r){var i;t.exports=(i=r(8249),r(5109),i.mode.CFB=function(){var t=i.lib.BlockCipherMode.extend();function e(t,e,r,i){var n,s=this._iv;s?(n=s.slice(0),this._iv=void 0):n=this._prevBlock,i.encryptBlock(n,0);for(var o=0;o<r;o++)t[e+o]^=n[o]}return t.Encryptor=t.extend({processBlock:function(t,r){var i=this._cipher,n=i.blockSize;e.call(this,t,r,n,i),this._prevBlock=t.slice(r,r+n)}}),t.Decryptor=t.extend({processBlock:function(t,r){var i=this._cipher,n=i.blockSize,s=t.slice(r,r+n);e.call(this,t,r,n,i),this._prevBlock=s}}),t}(),i.mode.CFB)},9968:function(t,e,r){var i;t.exports=(i=r(8249),r(5109),i.mode.CTRGladman=function(){var t=i.lib.BlockCipherMode.extend();function e(t){if(255==(t>>24&255)){var e=t>>16&255,r=t>>8&255,i=255&t;255===e?(e=0,255===r?(r=0,255===i?i=0:++i):++r):++e,t=0,t+=e<<16,t+=r<<8,t+=i}else t+=1<<24;return t}var r=t.Encryptor=t.extend({processBlock:function(t,r){var i=this._cipher,n=i.blockSize,s=this._iv,o=this._counter;s&&(o=this._counter=s.slice(0),this._iv=void 0),function(t){0===(t[0]=e(t[0]))&&(t[1]=e(t[1]))}(o);var a=o.slice(0);i.encryptBlock(a,0);for(var u=0;u<n;u++)t[r+u]^=a[u]}});return t.Decryptor=r,t}(),i.mode.CTRGladman)},4242:function(t,e,r){var i,n,s;t.exports=(s=r(8249),r(5109),s.mode.CTR=(n=(i=s.lib.BlockCipherMode.extend()).Encryptor=i.extend({processBlock:function(t,e){var r=this._cipher,i=r.blockSize,n=this._iv,s=this._counter;n&&(s=this._counter=n.slice(0),this._iv=void 0);var o=s.slice(0);r.encryptBlock(o,0),s[i-1]=s[i-1]+1|0;for(var a=0;a<i;a++)t[e+a]^=o[a]}}),i.Decryptor=n,i),s.mode.CTR)},1148:function(t,e,r){var i,n;t.exports=(n=r(8249),r(5109),n.mode.ECB=((i=n.lib.BlockCipherMode.extend()).Encryptor=i.extend({processBlock:function(t,e){this._cipher.encryptBlock(t,e)}}),i.Decryptor=i.extend({processBlock:function(t,e){this._cipher.decryptBlock(t,e)}}),i),n.mode.ECB)},7660:function(t,e,r){var i,n,s;t.exports=(s=r(8249),r(5109),s.mode.OFB=(n=(i=s.lib.BlockCipherMode.extend()).Encryptor=i.extend({processBlock:function(t,e){var r=this._cipher,i=r.blockSize,n=this._iv,s=this._keystream;n&&(s=this._keystream=n.slice(0),this._iv=void 0),r.encryptBlock(s,0);for(var o=0;o<i;o++)t[e+o]^=s[o]}}),i.Decryptor=n,i),s.mode.OFB)},3615:function(t,e,r){var i;t.exports=(i=r(8249),r(5109),i.pad.AnsiX923={pad:function(t,e){var r=t.sigBytes,i=4*e,n=i-r%i,s=r+n-1;t.clamp(),t.words[s>>>2]|=n<<24-s%4*8,t.sigBytes+=n},unpad:function(t){var e=255&t.words[t.sigBytes-1>>>2];t.sigBytes-=e}},i.pad.Ansix923)},2807:function(t,e,r){var i;t.exports=(i=r(8249),r(5109),i.pad.Iso10126={pad:function(t,e){var r=4*e,n=r-t.sigBytes%r;t.concat(i.lib.WordArray.random(n-1)).concat(i.lib.WordArray.create([n<<24],1))},unpad:function(t){var e=255&t.words[t.sigBytes-1>>>2];t.sigBytes-=e}},i.pad.Iso10126)},1077:function(t,e,r){var i;t.exports=(i=r(8249),r(5109),i.pad.Iso97971={pad:function(t,e){t.concat(i.lib.WordArray.create([2147483648],1)),i.pad.ZeroPadding.pad(t,e)},unpad:function(t){i.pad.ZeroPadding.unpad(t),t.sigBytes--}},i.pad.Iso97971)},6991:function(t,e,r){var i;t.exports=(i=r(8249),r(5109),i.pad.NoPadding={pad:function(){},unpad:function(){}},i.pad.NoPadding)},6475:function(t,e,r){var i;t.exports=(i=r(8249),r(5109),i.pad.ZeroPadding={pad:function(t,e){var r=4*e;t.clamp(),t.sigBytes+=r-(t.sigBytes%r||r)},unpad:function(t){var e=t.words,r=t.sigBytes-1;for(r=t.sigBytes-1;r>=0;r--)if(e[r>>>2]>>>24-r%4*8&255){t.sigBytes=r+1;break}}},i.pad.ZeroPadding)},2112:function(t,e,r){var i,n,s,o,a,u,h,c,l;t.exports=(l=r(8249),r(2153),r(9824),s=(n=(i=l).lib).Base,o=n.WordArray,u=(a=i.algo).SHA256,h=a.HMAC,c=a.PBKDF2=s.extend({cfg:s.extend({keySize:4,hasher:u,iterations:25e4}),init:function(t){this.cfg=this.cfg.extend(t)},compute:function(t,e){for(var r=this.cfg,i=h.create(r.hasher,t),n=o.create(),s=o.create([1]),a=n.words,u=s.words,c=r.keySize,l=r.iterations;a.length<c;){var d=i.update(e).finalize(s);i.reset();for(var f=d.words,p=f.length,g=d,m=1;m<l;m++){g=i.finalize(g),i.reset();for(var y=g.words,v=0;v<p;v++)f[v]^=y[v]}n.concat(d),u[0]++}return n.sigBytes=4*c,n}}),i.PBKDF2=function(t,e,r){return c.create(r).compute(t,e)},l.PBKDF2)},3974:function(t,e,r){var i;t.exports=(i=r(8249),r(8269),r(8214),r(888),r(5109),function(){var t=i,e=t.lib.StreamCipher,r=t.algo,n=[],s=[],o=[],a=r.RabbitLegacy=e.extend({_doReset:function(){var t=this._key.words,e=this.cfg.iv,r=this._X=[t[0],t[3]<<16|t[2]>>>16,t[1],t[0]<<16|t[3]>>>16,t[2],t[1]<<16|t[0]>>>16,t[3],t[2]<<16|t[1]>>>16],i=this._C=[t[2]<<16|t[2]>>>16,4294901760&t[0]|65535&t[1],t[3]<<16|t[3]>>>16,4294901760&t[1]|65535&t[2],t[0]<<16|t[0]>>>16,4294901760&t[2]|65535&t[3],t[1]<<16|t[1]>>>16,4294901760&t[3]|65535&t[0]];this._b=0;for(var n=0;n<4;n++)u.call(this);for(n=0;n<8;n++)i[n]^=r[n+4&7];if(e){var s=e.words,o=s[0],a=s[1],h=16711935&(o<<8|o>>>24)|4278255360&(o<<24|o>>>8),c=16711935&(a<<8|a>>>24)|4278255360&(a<<24|a>>>8),l=h>>>16|4294901760&c,d=c<<16|65535&h;for(i[0]^=h,i[1]^=l,i[2]^=c,i[3]^=d,i[4]^=h,i[5]^=l,i[6]^=c,i[7]^=d,n=0;n<4;n++)u.call(this)}},_doProcessBlock:function(t,e){var r=this._X;u.call(this),n[0]=r[0]^r[5]>>>16^r[3]<<16,n[1]=r[2]^r[7]>>>16^r[5]<<16,n[2]=r[4]^r[1]>>>16^r[7]<<16,n[3]=r[6]^r[3]>>>16^r[1]<<16;for(var i=0;i<4;i++)n[i]=16711935&(n[i]<<8|n[i]>>>24)|4278255360&(n[i]<<24|n[i]>>>8),t[e+i]^=n[i]},blockSize:4,ivSize:2});function u(){for(var t=this._X,e=this._C,r=0;r<8;r++)s[r]=e[r];for(e[0]=e[0]+1295307597+this._b|0,e[1]=e[1]+3545052371+(e[0]>>>0<s[0]>>>0?1:0)|0,e[2]=e[2]+886263092+(e[1]>>>0<s[1]>>>0?1:0)|0,e[3]=e[3]+1295307597+(e[2]>>>0<s[2]>>>0?1:0)|0,e[4]=e[4]+3545052371+(e[3]>>>0<s[3]>>>0?1:0)|0,e[5]=e[5]+886263092+(e[4]>>>0<s[4]>>>0?1:0)|0,e[6]=e[6]+1295307597+(e[5]>>>0<s[5]>>>0?1:0)|0,e[7]=e[7]+3545052371+(e[6]>>>0<s[6]>>>0?1:0)|0,this._b=e[7]>>>0<s[7]>>>0?1:0,r=0;r<8;r++){var i=t[r]+e[r],n=65535&i,a=i>>>16,u=((n*n>>>17)+n*a>>>15)+a*a,h=((4294901760&i)*i|0)+((65535&i)*i|0);o[r]=u^h}t[0]=o[0]+(o[7]<<16|o[7]>>>16)+(o[6]<<16|o[6]>>>16)|0,t[1]=o[1]+(o[0]<<8|o[0]>>>24)+o[7]|0,t[2]=o[2]+(o[1]<<16|o[1]>>>16)+(o[0]<<16|o[0]>>>16)|0,t[3]=o[3]+(o[2]<<8|o[2]>>>24)+o[1]|0,t[4]=o[4]+(o[3]<<16|o[3]>>>16)+(o[2]<<16|o[2]>>>16)|0,t[5]=o[5]+(o[4]<<8|o[4]>>>24)+o[3]|0,t[6]=o[6]+(o[5]<<16|o[5]>>>16)+(o[4]<<16|o[4]>>>16)|0,t[7]=o[7]+(o[6]<<8|o[6]>>>24)+o[5]|0}t.RabbitLegacy=e._createHelper(a)}(),i.RabbitLegacy)},4454:function(t,e,r){var i;t.exports=(i=r(8249),r(8269),r(8214),r(888),r(5109),function(){var t=i,e=t.lib.StreamCipher,r=t.algo,n=[],s=[],o=[],a=r.Rabbit=e.extend({_doReset:function(){for(var t=this._key.words,e=this.cfg.iv,r=0;r<4;r++)t[r]=16711935&(t[r]<<8|t[r]>>>24)|4278255360&(t[r]<<24|t[r]>>>8);var i=this._X=[t[0],t[3]<<16|t[2]>>>16,t[1],t[0]<<16|t[3]>>>16,t[2],t[1]<<16|t[0]>>>16,t[3],t[2]<<16|t[1]>>>16],n=this._C=[t[2]<<16|t[2]>>>16,4294901760&t[0]|65535&t[1],t[3]<<16|t[3]>>>16,4294901760&t[1]|65535&t[2],t[0]<<16|t[0]>>>16,4294901760&t[2]|65535&t[3],t[1]<<16|t[1]>>>16,4294901760&t[3]|65535&t[0]];for(this._b=0,r=0;r<4;r++)u.call(this);for(r=0;r<8;r++)n[r]^=i[r+4&7];if(e){var s=e.words,o=s[0],a=s[1],h=16711935&(o<<8|o>>>24)|4278255360&(o<<24|o>>>8),c=16711935&(a<<8|a>>>24)|4278255360&(a<<24|a>>>8),l=h>>>16|4294901760&c,d=c<<16|65535&h;for(n[0]^=h,n[1]^=l,n[2]^=c,n[3]^=d,n[4]^=h,n[5]^=l,n[6]^=c,n[7]^=d,r=0;r<4;r++)u.call(this)}},_doProcessBlock:function(t,e){var r=this._X;u.call(this),n[0]=r[0]^r[5]>>>16^r[3]<<16,n[1]=r[2]^r[7]>>>16^r[5]<<16,n[2]=r[4]^r[1]>>>16^r[7]<<16,n[3]=r[6]^r[3]>>>16^r[1]<<16;for(var i=0;i<4;i++)n[i]=16711935&(n[i]<<8|n[i]>>>24)|4278255360&(n[i]<<24|n[i]>>>8),t[e+i]^=n[i]},blockSize:4,ivSize:2});function u(){for(var t=this._X,e=this._C,r=0;r<8;r++)s[r]=e[r];for(e[0]=e[0]+1295307597+this._b|0,e[1]=e[1]+3545052371+(e[0]>>>0<s[0]>>>0?1:0)|0,e[2]=e[2]+886263092+(e[1]>>>0<s[1]>>>0?1:0)|0,e[3]=e[3]+1295307597+(e[2]>>>0<s[2]>>>0?1:0)|0,e[4]=e[4]+3545052371+(e[3]>>>0<s[3]>>>0?1:0)|0,e[5]=e[5]+886263092+(e[4]>>>0<s[4]>>>0?1:0)|0,e[6]=e[6]+1295307597+(e[5]>>>0<s[5]>>>0?1:0)|0,e[7]=e[7]+3545052371+(e[6]>>>0<s[6]>>>0?1:0)|0,this._b=e[7]>>>0<s[7]>>>0?1:0,r=0;r<8;r++){var i=t[r]+e[r],n=65535&i,a=i>>>16,u=((n*n>>>17)+n*a>>>15)+a*a,h=((4294901760&i)*i|0)+((65535&i)*i|0);o[r]=u^h}t[0]=o[0]+(o[7]<<16|o[7]>>>16)+(o[6]<<16|o[6]>>>16)|0,t[1]=o[1]+(o[0]<<8|o[0]>>>24)+o[7]|0,t[2]=o[2]+(o[1]<<16|o[1]>>>16)+(o[0]<<16|o[0]>>>16)|0,t[3]=o[3]+(o[2]<<8|o[2]>>>24)+o[1]|0,t[4]=o[4]+(o[3]<<16|o[3]>>>16)+(o[2]<<16|o[2]>>>16)|0,t[5]=o[5]+(o[4]<<8|o[4]>>>24)+o[3]|0,t[6]=o[6]+(o[5]<<16|o[5]>>>16)+(o[4]<<16|o[4]>>>16)|0,t[7]=o[7]+(o[6]<<8|o[6]>>>24)+o[5]|0}t.Rabbit=e._createHelper(a)}(),i.Rabbit)},1857:function(t,e,r){var i;t.exports=(i=r(8249),r(8269),r(8214),r(888),r(5109),function(){var t=i,e=t.lib.StreamCipher,r=t.algo,n=r.RC4=e.extend({_doReset:function(){for(var t=this._key,e=t.words,r=t.sigBytes,i=this._S=[],n=0;n<256;n++)i[n]=n;n=0;for(var s=0;n<256;n++){var o=n%r,a=e[o>>>2]>>>24-o%4*8&255;s=(s+i[n]+a)%256;var u=i[n];i[n]=i[s],i[s]=u}this._i=this._j=0},_doProcessBlock:function(t,e){t[e]^=s.call(this)},keySize:8,ivSize:0});function s(){for(var t=this._S,e=this._i,r=this._j,i=0,n=0;n<4;n++){r=(r+t[e=(e+1)%256])%256;var s=t[e];t[e]=t[r],t[r]=s,i|=t[(t[e]+t[r])%256]<<24-8*n}return this._i=e,this._j=r,i}t.RC4=e._createHelper(n);var o=r.RC4Drop=n.extend({cfg:n.cfg.extend({drop:192}),_doReset:function(){n._doReset.call(this);for(var t=this.cfg.drop;t>0;t--)s.call(this)}});t.RC4Drop=e._createHelper(o)}(),i.RC4)},706:function(t,e,r){var i;t.exports=(i=r(8249),function(t){var e=i,r=e.lib,n=r.WordArray,s=r.Hasher,o=e.algo,a=n.create([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13]),u=n.create([5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11]),h=n.create([11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6]),c=n.create([8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]),l=n.create([0,1518500249,1859775393,2400959708,2840853838]),d=n.create([1352829926,1548603684,1836072691,2053994217,0]),f=o.RIPEMD160=s.extend({_doReset:function(){this._hash=n.create([1732584193,4023233417,2562383102,271733878,3285377520])},_doProcessBlock:function(t,e){for(var r=0;r<16;r++){var i=e+r,n=t[i];t[i]=16711935&(n<<8|n>>>24)|4278255360&(n<<24|n>>>8)}var s,o,f,w,E,S,N,M,x,I,A,P=this._hash.words,T=l.words,R=d.words,k=a.words,B=u.words,O=h.words,C=c.words;for(S=s=P[0],N=o=P[1],M=f=P[2],x=w=P[3],I=E=P[4],r=0;r<80;r+=1)A=s+t[e+k[r]]|0,A+=r<16?p(o,f,w)+T[0]:r<32?g(o,f,w)+T[1]:r<48?m(o,f,w)+T[2]:r<64?y(o,f,w)+T[3]:v(o,f,w)+T[4],A=(A=b(A|=0,O[r]))+E|0,s=E,E=w,w=b(f,10),f=o,o=A,A=S+t[e+B[r]]|0,A+=r<16?v(N,M,x)+R[0]:r<32?y(N,M,x)+R[1]:r<48?m(N,M,x)+R[2]:r<64?g(N,M,x)+R[3]:p(N,M,x)+R[4],A=(A=b(A|=0,C[r]))+I|0,S=I,I=x,x=b(M,10),M=N,N=A;A=P[1]+f+x|0,P[1]=P[2]+w+I|0,P[2]=P[3]+E+S|0,P[3]=P[4]+s+N|0,P[4]=P[0]+o+M|0,P[0]=A},_doFinalize:function(){var t=this._data,e=t.words,r=8*this._nDataBytes,i=8*t.sigBytes;e[i>>>5]|=128<<24-i%32,e[14+(i+64>>>9<<4)]=16711935&(r<<8|r>>>24)|4278255360&(r<<24|r>>>8),t.sigBytes=4*(e.length+1),this._process();for(var n=this._hash,s=n.words,o=0;o<5;o++){var a=s[o];s[o]=16711935&(a<<8|a>>>24)|4278255360&(a<<24|a>>>8)}return n},clone:function(){var t=s.clone.call(this);return t._hash=this._hash.clone(),t}});function p(t,e,r){return t^e^r}function g(t,e,r){return t&e|~t&r}function m(t,e,r){return(t|~e)^r}function y(t,e,r){return t&r|e&~r}function v(t,e,r){return t^(e|~r)}function b(t,e){return t<<e|t>>>32-e}e.RIPEMD160=s._createHelper(f),e.HmacRIPEMD160=s._createHmacHelper(f)}(Math),i.RIPEMD160)},2783:function(t,e,r){var i,n,s,o,a,u,h,c;t.exports=(n=(i=c=r(8249)).lib,s=n.WordArray,o=n.Hasher,a=i.algo,u=[],h=a.SHA1=o.extend({_doReset:function(){this._hash=new s.init([1732584193,4023233417,2562383102,271733878,3285377520])},_doProcessBlock:function(t,e){for(var r=this._hash.words,i=r[0],n=r[1],s=r[2],o=r[3],a=r[4],h=0;h<80;h++){if(h<16)u[h]=0|t[e+h];else{var c=u[h-3]^u[h-8]^u[h-14]^u[h-16];u[h]=c<<1|c>>>31}var l=(i<<5|i>>>27)+a+u[h];l+=h<20?1518500249+(n&s|~n&o):h<40?1859775393+(n^s^o):h<60?(n&s|n&o|s&o)-1894007588:(n^s^o)-899497514,a=o,o=s,s=n<<30|n>>>2,n=i,i=l}r[0]=r[0]+i|0,r[1]=r[1]+n|0,r[2]=r[2]+s|0,r[3]=r[3]+o|0,r[4]=r[4]+a|0},_doFinalize:function(){var t=this._data,e=t.words,r=8*this._nDataBytes,i=8*t.sigBytes;return e[i>>>5]|=128<<24-i%32,e[14+(i+64>>>9<<4)]=Math.floor(r/4294967296),e[15+(i+64>>>9<<4)]=r,t.sigBytes=4*e.length,this._process(),this._hash},clone:function(){var t=o.clone.call(this);return t._hash=this._hash.clone(),t}}),i.SHA1=o._createHelper(h),i.HmacSHA1=o._createHmacHelper(h),c.SHA1)},7792:function(t,e,r){var i,n,s,o,a,u;t.exports=(u=r(8249),r(2153),n=(i=u).lib.WordArray,s=i.algo,o=s.SHA256,a=s.SHA224=o.extend({_doReset:function(){this._hash=new n.init([3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428])},_doFinalize:function(){var t=o._doFinalize.call(this);return t.sigBytes-=4,t}}),i.SHA224=o._createHelper(a),i.HmacSHA224=o._createHmacHelper(a),u.SHA224)},2153:function(t,e,r){var i;t.exports=(i=r(8249),function(t){var e=i,r=e.lib,n=r.WordArray,s=r.Hasher,o=e.algo,a=[],u=[];!function(){function e(e){for(var r=t.sqrt(e),i=2;i<=r;i++)if(!(e%i))return!1;return!0}function r(t){return 4294967296*(t-(0|t))|0}for(var i=2,n=0;n<64;)e(i)&&(n<8&&(a[n]=r(t.pow(i,.5))),u[n]=r(t.pow(i,1/3)),n++),i++}();var h=[],c=o.SHA256=s.extend({_doReset:function(){this._hash=new n.init(a.slice(0))},_doProcessBlock:function(t,e){for(var r=this._hash.words,i=r[0],n=r[1],s=r[2],o=r[3],a=r[4],c=r[5],l=r[6],d=r[7],f=0;f<64;f++){if(f<16)h[f]=0|t[e+f];else{var p=h[f-15],g=(p<<25|p>>>7)^(p<<14|p>>>18)^p>>>3,m=h[f-2],y=(m<<15|m>>>17)^(m<<13|m>>>19)^m>>>10;h[f]=g+h[f-7]+y+h[f-16]}var v=i&n^i&s^n&s,b=(i<<30|i>>>2)^(i<<19|i>>>13)^(i<<10|i>>>22),w=d+((a<<26|a>>>6)^(a<<21|a>>>11)^(a<<7|a>>>25))+(a&c^~a&l)+u[f]+h[f];d=l,l=c,c=a,a=o+w|0,o=s,s=n,n=i,i=w+(b+v)|0}r[0]=r[0]+i|0,r[1]=r[1]+n|0,r[2]=r[2]+s|0,r[3]=r[3]+o|0,r[4]=r[4]+a|0,r[5]=r[5]+c|0,r[6]=r[6]+l|0,r[7]=r[7]+d|0},_doFinalize:function(){var e=this._data,r=e.words,i=8*this._nDataBytes,n=8*e.sigBytes;return r[n>>>5]|=128<<24-n%32,r[14+(n+64>>>9<<4)]=t.floor(i/4294967296),r[15+(n+64>>>9<<4)]=i,e.sigBytes=4*r.length,this._process(),this._hash},clone:function(){var t=s.clone.call(this);return t._hash=this._hash.clone(),t}});e.SHA256=s._createHelper(c),e.HmacSHA256=s._createHmacHelper(c)}(Math),i.SHA256)},3327:function(t,e,r){var i;t.exports=(i=r(8249),r(4938),function(t){var e=i,r=e.lib,n=r.WordArray,s=r.Hasher,o=e.x64.Word,a=e.algo,u=[],h=[],c=[];!function(){for(var t=1,e=0,r=0;r<24;r++){u[t+5*e]=(r+1)*(r+2)/2%64;var i=(2*t+3*e)%5;t=e%5,e=i}for(t=0;t<5;t++)for(e=0;e<5;e++)h[t+5*e]=e+(2*t+3*e)%5*5;for(var n=1,s=0;s<24;s++){for(var a=0,l=0,d=0;d<7;d++){if(1&n){var f=(1<<d)-1;f<32?l^=1<<f:a^=1<<f-32}128&n?n=n<<1^113:n<<=1}c[s]=o.create(a,l)}}();var l=[];!function(){for(var t=0;t<25;t++)l[t]=o.create()}();var d=a.SHA3=s.extend({cfg:s.cfg.extend({outputLength:512}),_doReset:function(){for(var t=this._state=[],e=0;e<25;e++)t[e]=new o.init;this.blockSize=(1600-2*this.cfg.outputLength)/32},_doProcessBlock:function(t,e){for(var r=this._state,i=this.blockSize/2,n=0;n<i;n++){var s=t[e+2*n],o=t[e+2*n+1];s=16711935&(s<<8|s>>>24)|4278255360&(s<<24|s>>>8),o=16711935&(o<<8|o>>>24)|4278255360&(o<<24|o>>>8),(P=r[n]).high^=o,P.low^=s}for(var a=0;a<24;a++){for(var d=0;d<5;d++){for(var f=0,p=0,g=0;g<5;g++)f^=(P=r[d+5*g]).high,p^=P.low;var m=l[d];m.high=f,m.low=p}for(d=0;d<5;d++){var y=l[(d+4)%5],v=l[(d+1)%5],b=v.high,w=v.low;for(f=y.high^(b<<1|w>>>31),p=y.low^(w<<1|b>>>31),g=0;g<5;g++)(P=r[d+5*g]).high^=f,P.low^=p}for(var E=1;E<25;E++){var S=(P=r[E]).high,N=P.low,M=u[E];M<32?(f=S<<M|N>>>32-M,p=N<<M|S>>>32-M):(f=N<<M-32|S>>>64-M,p=S<<M-32|N>>>64-M);var x=l[h[E]];x.high=f,x.low=p}var I=l[0],A=r[0];for(I.high=A.high,I.low=A.low,d=0;d<5;d++)for(g=0;g<5;g++){var P=r[E=d+5*g],T=l[E],R=l[(d+1)%5+5*g],k=l[(d+2)%5+5*g];P.high=T.high^~R.high&k.high,P.low=T.low^~R.low&k.low}P=r[0];var B=c[a];P.high^=B.high,P.low^=B.low}},_doFinalize:function(){var e=this._data,r=e.words,i=(this._nDataBytes,8*e.sigBytes),s=32*this.blockSize;r[i>>>5]|=1<<24-i%32,r[(t.ceil((i+1)/s)*s>>>5)-1]|=128,e.sigBytes=4*r.length,this._process();for(var o=this._state,a=this.cfg.outputLength/8,u=a/8,h=[],c=0;c<u;c++){var l=o[c],d=l.high,f=l.low;d=16711935&(d<<8|d>>>24)|4278255360&(d<<24|d>>>8),f=16711935&(f<<8|f>>>24)|4278255360&(f<<24|f>>>8),h.push(f),h.push(d)}return new n.init(h,a)},clone:function(){for(var t=s.clone.call(this),e=t._state=this._state.slice(0),r=0;r<25;r++)e[r]=e[r].clone();return t}});e.SHA3=s._createHelper(d),e.HmacSHA3=s._createHmacHelper(d)}(Math),i.SHA3)},7460:function(t,e,r){var i,n,s,o,a,u,h,c;t.exports=(c=r(8249),r(4938),r(34),n=(i=c).x64,s=n.Word,o=n.WordArray,a=i.algo,u=a.SHA512,h=a.SHA384=u.extend({_doReset:function(){this._hash=new o.init([new s.init(3418070365,3238371032),new s.init(1654270250,914150663),new s.init(2438529370,812702999),new s.init(355462360,4144912697),new s.init(1731405415,4290775857),new s.init(2394180231,1750603025),new s.init(3675008525,1694076839),new s.init(1203062813,3204075428)])},_doFinalize:function(){var t=u._doFinalize.call(this);return t.sigBytes-=16,t}}),i.SHA384=u._createHelper(h),i.HmacSHA384=u._createHmacHelper(h),c.SHA384)},34:function(t,e,r){var i;t.exports=(i=r(8249),r(4938),function(){var t=i,e=t.lib.Hasher,r=t.x64,n=r.Word,s=r.WordArray,o=t.algo;function a(){return n.create.apply(n,arguments)}var u=[a(1116352408,3609767458),a(1899447441,602891725),a(3049323471,3964484399),a(3921009573,2173295548),a(961987163,4081628472),a(1508970993,3053834265),a(2453635748,2937671579),a(2870763221,3664609560),a(3624381080,2734883394),a(310598401,1164996542),a(607225278,1323610764),a(1426881987,3590304994),a(1925078388,4068182383),a(2162078206,991336113),a(2614888103,633803317),a(3248222580,3479774868),a(3835390401,2666613458),a(4022224774,944711139),a(264347078,2341262773),a(604807628,2007800933),a(770255983,1495990901),a(1249150122,1856431235),a(1555081692,3175218132),a(1996064986,2198950837),a(2554220882,3999719339),a(2821834349,766784016),a(2952996808,2566594879),a(3210313671,3203337956),a(3336571891,1034457026),a(3584528711,2466948901),a(113926993,3758326383),a(338241895,168717936),a(666307205,1188179964),a(773529912,1546045734),a(1294757372,1522805485),a(1396182291,2643833823),a(1695183700,2343527390),a(1986661051,1014477480),a(2177026350,1206759142),a(2456956037,344077627),a(2730485921,1290863460),a(2820302411,3158454273),a(3259730800,3505952657),a(3345764771,106217008),a(3516065817,3606008344),a(3600352804,1432725776),a(4094571909,1467031594),a(275423344,851169720),a(430227734,3100823752),a(506948616,1363258195),a(659060556,3750685593),a(883997877,3785050280),a(958139571,3318307427),a(1322822218,3812723403),a(1537002063,2003034995),a(1747873779,3602036899),a(1955562222,1575990012),a(2024104815,1125592928),a(2227730452,2716904306),a(2361852424,442776044),a(2428436474,593698344),a(2756734187,3733110249),a(3204031479,2999351573),a(3329325298,3815920427),a(3391569614,3928383900),a(3515267271,566280711),a(3940187606,3454069534),a(4118630271,4000239992),a(116418474,1914138554),a(174292421,2731055270),a(289380356,3203993006),a(460393269,320620315),a(685471733,587496836),a(852142971,1086792851),a(1017036298,365543100),a(1126000580,2618297676),a(1288033470,3409855158),a(1501505948,4234509866),a(1607167915,987167468),a(1816402316,1246189591)],h=[];!function(){for(var t=0;t<80;t++)h[t]=a()}();var c=o.SHA512=e.extend({_doReset:function(){this._hash=new s.init([new n.init(1779033703,4089235720),new n.init(3144134277,2227873595),new n.init(1013904242,4271175723),new n.init(2773480762,1595750129),new n.init(1359893119,2917565137),new n.init(2600822924,725511199),new n.init(528734635,4215389547),new n.init(1541459225,327033209)])},_doProcessBlock:function(t,e){for(var r=this._hash.words,i=r[0],n=r[1],s=r[2],o=r[3],a=r[4],c=r[5],l=r[6],d=r[7],f=i.high,p=i.low,g=n.high,m=n.low,y=s.high,v=s.low,b=o.high,w=o.low,E=a.high,S=a.low,N=c.high,M=c.low,x=l.high,I=l.low,A=d.high,P=d.low,T=f,R=p,k=g,B=m,O=y,C=v,L=b,j=w,Z=E,D=S,F=N,z=M,H=x,W=I,K=A,q=P,U=0;U<80;U++){var V,X,G=h[U];if(U<16)X=G.high=0|t[e+2*U],V=G.low=0|t[e+2*U+1];else{var Y=h[U-15],Q=Y.high,J=Y.low,_=(Q>>>1|J<<31)^(Q>>>8|J<<24)^Q>>>7,$=(J>>>1|Q<<31)^(J>>>8|Q<<24)^(J>>>7|Q<<25),tt=h[U-2],et=tt.high,rt=tt.low,it=(et>>>19|rt<<13)^(et<<3|rt>>>29)^et>>>6,nt=(rt>>>19|et<<13)^(rt<<3|et>>>29)^(rt>>>6|et<<26),st=h[U-7],ot=st.high,at=st.low,ut=h[U-16],ht=ut.high,ct=ut.low;X=(X=(X=_+ot+((V=$+at)>>>0<$>>>0?1:0))+it+((V+=nt)>>>0<nt>>>0?1:0))+ht+((V+=ct)>>>0<ct>>>0?1:0),G.high=X,G.low=V}var lt,dt=Z&F^~Z&H,ft=D&z^~D&W,pt=T&k^T&O^k&O,gt=R&B^R&C^B&C,mt=(T>>>28|R<<4)^(T<<30|R>>>2)^(T<<25|R>>>7),yt=(R>>>28|T<<4)^(R<<30|T>>>2)^(R<<25|T>>>7),vt=(Z>>>14|D<<18)^(Z>>>18|D<<14)^(Z<<23|D>>>9),bt=(D>>>14|Z<<18)^(D>>>18|Z<<14)^(D<<23|Z>>>9),wt=u[U],Et=wt.high,St=wt.low,Nt=K+vt+((lt=q+bt)>>>0<q>>>0?1:0),Mt=yt+gt;K=H,q=W,H=F,W=z,F=Z,z=D,Z=L+(Nt=(Nt=(Nt=Nt+dt+((lt+=ft)>>>0<ft>>>0?1:0))+Et+((lt+=St)>>>0<St>>>0?1:0))+X+((lt+=V)>>>0<V>>>0?1:0))+((D=j+lt|0)>>>0<j>>>0?1:0)|0,L=O,j=C,O=k,C=B,k=T,B=R,T=Nt+(mt+pt+(Mt>>>0<yt>>>0?1:0))+((R=lt+Mt|0)>>>0<lt>>>0?1:0)|0}p=i.low=p+R,i.high=f+T+(p>>>0<R>>>0?1:0),m=n.low=m+B,n.high=g+k+(m>>>0<B>>>0?1:0),v=s.low=v+C,s.high=y+O+(v>>>0<C>>>0?1:0),w=o.low=w+j,o.high=b+L+(w>>>0<j>>>0?1:0),S=a.low=S+D,a.high=E+Z+(S>>>0<D>>>0?1:0),M=c.low=M+z,c.high=N+F+(M>>>0<z>>>0?1:0),I=l.low=I+W,l.high=x+H+(I>>>0<W>>>0?1:0),P=d.low=P+q,d.high=A+K+(P>>>0<q>>>0?1:0)},_doFinalize:function(){var t=this._data,e=t.words,r=8*this._nDataBytes,i=8*t.sigBytes;return e[i>>>5]|=128<<24-i%32,e[30+(i+128>>>10<<5)]=Math.floor(r/4294967296),e[31+(i+128>>>10<<5)]=r,t.sigBytes=4*e.length,this._process(),this._hash.toX32()},clone:function(){var t=e.clone.call(this);return t._hash=this._hash.clone(),t},blockSize:32});t.SHA512=e._createHelper(c),t.HmacSHA512=e._createHmacHelper(c)}(),i.SHA512)},4253:function(t,e,r){var i;t.exports=(i=r(8249),r(8269),r(8214),r(888),r(5109),function(){var t=i,e=t.lib,r=e.WordArray,n=e.BlockCipher,s=t.algo,o=[57,49,41,33,25,17,9,1,58,50,42,34,26,18,10,2,59,51,43,35,27,19,11,3,60,52,44,36,63,55,47,39,31,23,15,7,62,54,46,38,30,22,14,6,61,53,45,37,29,21,13,5,28,20,12,4],a=[14,17,11,24,1,5,3,28,15,6,21,10,23,19,12,4,26,8,16,7,27,20,13,2,41,52,31,37,47,55,30,40,51,45,33,48,44,49,39,56,34,53,46,42,50,36,29,32],u=[1,2,4,6,8,10,12,14,15,17,19,21,23,25,27,28],h=[{0:8421888,268435456:32768,536870912:8421378,805306368:2,1073741824:512,1342177280:8421890,1610612736:8389122,1879048192:8388608,2147483648:514,2415919104:8389120,2684354560:33280,2952790016:8421376,3221225472:32770,3489660928:8388610,3758096384:0,4026531840:33282,134217728:0,402653184:8421890,671088640:33282,939524096:32768,1207959552:8421888,1476395008:512,1744830464:8421378,2013265920:2,2281701376:8389120,2550136832:33280,2818572288:8421376,3087007744:8389122,3355443200:8388610,3623878656:32770,3892314112:514,4160749568:8388608,1:32768,268435457:2,536870913:8421888,805306369:8388608,1073741825:8421378,1342177281:33280,1610612737:512,1879048193:8389122,2147483649:8421890,2415919105:8421376,2684354561:8388610,2952790017:33282,3221225473:514,3489660929:8389120,3758096385:32770,4026531841:0,134217729:8421890,402653185:8421376,671088641:8388608,939524097:512,1207959553:32768,1476395009:8388610,1744830465:2,2013265921:33282,2281701377:32770,2550136833:8389122,2818572289:514,3087007745:8421888,3355443201:8389120,3623878657:0,3892314113:33280,4160749569:8421378},{0:1074282512,16777216:16384,33554432:524288,50331648:1074266128,67108864:1073741840,83886080:1074282496,100663296:1073758208,117440512:16,134217728:540672,150994944:1073758224,167772160:1073741824,184549376:540688,201326592:524304,218103808:0,234881024:16400,251658240:1074266112,8388608:1073758208,25165824:540688,41943040:16,58720256:1073758224,75497472:1074282512,92274688:1073741824,109051904:524288,125829120:1074266128,142606336:524304,159383552:0,176160768:16384,192937984:1074266112,209715200:1073741840,226492416:540672,243269632:1074282496,260046848:16400,268435456:0,285212672:1074266128,301989888:1073758224,318767104:1074282496,335544320:1074266112,352321536:16,369098752:540688,385875968:16384,402653184:16400,419430400:524288,436207616:524304,452984832:1073741840,469762048:540672,486539264:1073758208,503316480:1073741824,520093696:1074282512,276824064:540688,293601280:524288,310378496:1074266112,327155712:16384,343932928:1073758208,360710144:1074282512,377487360:16,394264576:1073741824,411041792:1074282496,427819008:1073741840,444596224:1073758224,461373440:524304,478150656:0,494927872:16400,511705088:1074266128,528482304:540672},{0:260,1048576:0,2097152:67109120,3145728:65796,4194304:65540,5242880:67108868,6291456:67174660,7340032:67174400,8388608:67108864,9437184:67174656,10485760:65792,11534336:67174404,12582912:67109124,13631488:65536,14680064:4,15728640:256,524288:67174656,1572864:67174404,2621440:0,3670016:67109120,4718592:67108868,5767168:65536,6815744:65540,7864320:260,8912896:4,9961472:256,11010048:67174400,12058624:65796,13107200:65792,14155776:67109124,15204352:67174660,16252928:67108864,16777216:67174656,17825792:65540,18874368:65536,19922944:67109120,20971520:256,22020096:67174660,23068672:67108868,24117248:0,25165824:67109124,26214400:67108864,27262976:4,28311552:65792,29360128:67174400,30408704:260,31457280:65796,32505856:67174404,17301504:67108864,18350080:260,19398656:67174656,20447232:0,21495808:65540,22544384:67109120,23592960:256,24641536:67174404,25690112:65536,26738688:67174660,27787264:65796,28835840:67108868,29884416:67109124,30932992:67174400,31981568:4,33030144:65792},{0:2151682048,65536:2147487808,131072:4198464,196608:2151677952,262144:0,327680:4198400,393216:2147483712,458752:4194368,524288:2147483648,589824:4194304,655360:64,720896:2147487744,786432:2151678016,851968:4160,917504:4096,983040:2151682112,32768:2147487808,98304:64,163840:2151678016,229376:2147487744,294912:4198400,360448:2151682112,425984:0,491520:2151677952,557056:4096,622592:2151682048,688128:4194304,753664:4160,819200:2147483648,884736:4194368,950272:4198464,1015808:2147483712,1048576:4194368,1114112:4198400,1179648:2147483712,1245184:0,1310720:4160,1376256:2151678016,1441792:2151682048,1507328:2147487808,1572864:2151682112,1638400:2147483648,1703936:2151677952,1769472:4198464,1835008:2147487744,1900544:4194304,1966080:64,2031616:4096,1081344:2151677952,1146880:2151682112,1212416:0,1277952:4198400,1343488:4194368,1409024:2147483648,1474560:2147487808,1540096:64,1605632:2147483712,1671168:4096,1736704:2147487744,1802240:2151678016,1867776:4160,1933312:2151682048,1998848:4194304,2064384:4198464},{0:128,4096:17039360,8192:262144,12288:536870912,16384:537133184,20480:16777344,24576:553648256,28672:262272,32768:16777216,36864:537133056,40960:536871040,45056:553910400,49152:553910272,53248:0,57344:17039488,61440:553648128,2048:17039488,6144:553648256,10240:128,14336:17039360,18432:262144,22528:537133184,26624:553910272,30720:536870912,34816:537133056,38912:0,43008:553910400,47104:16777344,51200:536871040,55296:553648128,59392:16777216,63488:262272,65536:262144,69632:128,73728:536870912,77824:553648256,81920:16777344,86016:553910272,90112:537133184,94208:16777216,98304:553910400,102400:553648128,106496:17039360,110592:537133056,114688:262272,118784:536871040,122880:0,126976:17039488,67584:553648256,71680:16777216,75776:17039360,79872:537133184,83968:536870912,88064:17039488,92160:128,96256:553910272,100352:262272,104448:553910400,108544:0,112640:553648128,116736:16777344,120832:262144,124928:537133056,129024:536871040},{0:268435464,256:8192,512:270532608,768:270540808,1024:268443648,1280:2097152,1536:2097160,1792:268435456,2048:0,2304:268443656,2560:2105344,2816:8,3072:270532616,3328:2105352,3584:8200,3840:270540800,128:270532608,384:270540808,640:8,896:2097152,1152:2105352,1408:268435464,1664:268443648,1920:8200,2176:2097160,2432:8192,2688:268443656,2944:270532616,3200:0,3456:270540800,3712:2105344,3968:268435456,4096:268443648,4352:270532616,4608:270540808,4864:8200,5120:2097152,5376:268435456,5632:268435464,5888:2105344,6144:2105352,6400:0,6656:8,6912:270532608,7168:8192,7424:268443656,7680:270540800,7936:2097160,4224:8,4480:2105344,4736:2097152,4992:268435464,5248:268443648,5504:8200,5760:270540808,6016:270532608,6272:270540800,6528:270532616,6784:8192,7040:2105352,7296:2097160,7552:0,7808:268435456,8064:268443656},{0:1048576,16:33555457,32:1024,48:1049601,64:34604033,80:0,96:1,112:34603009,128:33555456,144:1048577,160:33554433,176:34604032,192:34603008,208:1025,224:1049600,240:33554432,8:34603009,24:0,40:33555457,56:34604032,72:1048576,88:33554433,104:33554432,120:1025,136:1049601,152:33555456,168:34603008,184:1048577,200:1024,216:34604033,232:1,248:1049600,256:33554432,272:1048576,288:33555457,304:34603009,320:1048577,336:33555456,352:34604032,368:1049601,384:1025,400:34604033,416:1049600,432:1,448:0,464:34603008,480:33554433,496:1024,264:1049600,280:33555457,296:34603009,312:1,328:33554432,344:1048576,360:1025,376:34604032,392:33554433,408:34603008,424:0,440:34604033,456:1049601,472:1024,488:33555456,504:1048577},{0:134219808,1:131072,2:134217728,3:32,4:131104,5:134350880,6:134350848,7:2048,8:134348800,9:134219776,10:133120,11:134348832,12:2080,13:0,14:134217760,15:133152,2147483648:2048,2147483649:134350880,2147483650:134219808,2147483651:134217728,2147483652:134348800,2147483653:133120,2147483654:133152,2147483655:32,2147483656:134217760,2147483657:2080,2147483658:131104,2147483659:134350848,2147483660:0,2147483661:134348832,2147483662:134219776,2147483663:131072,16:133152,17:134350848,18:32,19:2048,20:134219776,21:134217760,22:134348832,23:131072,24:0,25:131104,26:134348800,27:134219808,28:134350880,29:133120,30:2080,31:134217728,2147483664:131072,2147483665:2048,2147483666:134348832,2147483667:133152,2147483668:32,2147483669:134348800,2147483670:134217728,2147483671:134219808,2147483672:134350880,2147483673:134217760,2147483674:134219776,2147483675:0,2147483676:133120,2147483677:2080,2147483678:131104,2147483679:134350848}],c=[4160749569,528482304,33030144,2064384,129024,8064,504,2147483679],l=s.DES=n.extend({_doReset:function(){for(var t=this._key.words,e=[],r=0;r<56;r++){var i=o[r]-1;e[r]=t[i>>>5]>>>31-i%32&1}for(var n=this._subKeys=[],s=0;s<16;s++){var h=n[s]=[],c=u[s];for(r=0;r<24;r++)h[r/6|0]|=e[(a[r]-1+c)%28]<<31-r%6,h[4+(r/6|0)]|=e[28+(a[r+24]-1+c)%28]<<31-r%6;for(h[0]=h[0]<<1|h[0]>>>31,r=1;r<7;r++)h[r]=h[r]>>>4*(r-1)+3;h[7]=h[7]<<5|h[7]>>>27}var l=this._invSubKeys=[];for(r=0;r<16;r++)l[r]=n[15-r]},encryptBlock:function(t,e){this._doCryptBlock(t,e,this._subKeys)},decryptBlock:function(t,e){this._doCryptBlock(t,e,this._invSubKeys)},_doCryptBlock:function(t,e,r){this._lBlock=t[e],this._rBlock=t[e+1],d.call(this,4,252645135),d.call(this,16,65535),f.call(this,2,858993459),f.call(this,8,16711935),d.call(this,1,1431655765);for(var i=0;i<16;i++){for(var n=r[i],s=this._lBlock,o=this._rBlock,a=0,u=0;u<8;u++)a|=h[u][((o^n[u])&c[u])>>>0];this._lBlock=o,this._rBlock=s^a}var l=this._lBlock;this._lBlock=this._rBlock,this._rBlock=l,d.call(this,1,1431655765),f.call(this,8,16711935),f.call(this,2,858993459),d.call(this,16,65535),d.call(this,4,252645135),t[e]=this._lBlock,t[e+1]=this._rBlock},keySize:2,ivSize:2,blockSize:2});function d(t,e){var r=(this._lBlock>>>t^this._rBlock)&e;this._rBlock^=r,this._lBlock^=r<<t}function f(t,e){var r=(this._rBlock>>>t^this._lBlock)&e;this._lBlock^=r,this._rBlock^=r<<t}t.DES=n._createHelper(l);var p=s.TripleDES=n.extend({_doReset:function(){var t=this._key.words;if(2!==t.length&&4!==t.length&&t.length<6)throw new Error("Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.");var e=t.slice(0,2),i=t.length<4?t.slice(0,2):t.slice(2,4),n=t.length<6?t.slice(0,2):t.slice(4,6);this._des1=l.createEncryptor(r.create(e)),this._des2=l.createEncryptor(r.create(i)),this._des3=l.createEncryptor(r.create(n))},encryptBlock:function(t,e){this._des1.encryptBlock(t,e),this._des2.decryptBlock(t,e),this._des3.encryptBlock(t,e)},decryptBlock:function(t,e){this._des3.decryptBlock(t,e),this._des2.encryptBlock(t,e),this._des1.decryptBlock(t,e)},keySize:6,ivSize:2,blockSize:2});t.TripleDES=n._createHelper(p)}(),i.TripleDES)},4938:function(t,e,r){var i,n,s,o,a,u;t.exports=(i=r(8249),s=(n=i).lib,o=s.Base,a=s.WordArray,(u=n.x64={}).Word=o.extend({init:function(t,e){this.high=t,this.low=e}}),u.WordArray=o.extend({init:function(t,e){t=this.words=t||[],this.sigBytes=null!=e?e:8*t.length},toX32:function(){for(var t=this.words,e=t.length,r=[],i=0;i<e;i++){var n=t[i];r.push(n.high),r.push(n.low)}return a.create(r,this.sigBytes)},clone:function(){for(var t=o.clone.call(this),e=t.words=this.words.slice(0),r=e.length,i=0;i<r;i++)e[i]=e[i].clone();return t}}),i)},2296:(t,e,r)=>{"use strict";var i=r(1044)(),n=r(210),s=i&&n("%Object.defineProperty%",!0),o=n("%SyntaxError%"),a=n("%TypeError%"),u=r(7296);t.exports=function(t,e,r){if(!t||"object"!=typeof t&&"function"!=typeof t)throw new a("`obj` must be an object or a function`");if("string"!=typeof e&&"symbol"!=typeof e)throw new a("`property` must be a string or a symbol`");if(arguments.length>3&&"boolean"!=typeof arguments[3]&&null!==arguments[3])throw new a("`nonEnumerable`, if provided, must be a boolean or null");if(arguments.length>4&&"boolean"!=typeof arguments[4]&&null!==arguments[4])throw new a("`nonWritable`, if provided, must be a boolean or null");if(arguments.length>5&&"boolean"!=typeof arguments[5]&&null!==arguments[5])throw new a("`nonConfigurable`, if provided, must be a boolean or null");if(arguments.length>6&&"boolean"!=typeof arguments[6])throw new a("`loose`, if provided, must be a boolean");var i=arguments.length>3?arguments[3]:null,n=arguments.length>4?arguments[4]:null,h=arguments.length>5?arguments[5]:null,c=arguments.length>6&&arguments[6],l=!!u&&u(t,e);if(s)s(t,e,{configurable:null===h&&l?l.configurable:!h,enumerable:null===i&&l?l.enumerable:!i,value:r,writable:null===n&&l?l.writable:!n});else{if(!c&&(i||n||h))throw new o("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");t[e]=r}}},4289:(t,e,r)=>{"use strict";var i=r(2215),n="function"==typeof Symbol&&"symbol"==typeof Symbol("foo"),s=Object.prototype.toString,o=Array.prototype.concat,a=r(2296),u=r(1044)(),h=function(t,e,r,i){if(e in t)if(!0===i){if(t[e]===r)return}else if("function"!=typeof(n=i)||"[object Function]"!==s.call(n)||!i())return;var n;u?a(t,e,r,!0):a(t,e,r)},c=function(t,e){var r=arguments.length>2?arguments[2]:{},s=i(e);n&&(s=o.call(s,Object.getOwnPropertySymbols(e)));for(var a=0;a<s.length;a+=1)h(t,s[a],e[s[a]],r[s[a]])};c.supportsDescriptors=!!u,t.exports=c},5251:(t,e,r)=>{"use strict";e.utils=r(1278),e.Cipher=r(5756),e.DES=r(778),e.CBC=r(9051),e.EDE=r(651)},9051:(t,e,r)=>{"use strict";var i=r(9746),n=r(5717),s={};function o(t){i.equal(t.length,8,"Invalid IV length"),this.iv=new Array(8);for(var e=0;e<this.iv.length;e++)this.iv[e]=t[e]}e.instantiate=function(t){function e(e){t.call(this,e),this._cbcInit()}n(e,t);for(var r=Object.keys(s),i=0;i<r.length;i++){var o=r[i];e.prototype[o]=s[o]}return e.create=function(t){return new e(t)},e},s._cbcInit=function(){var t=new o(this.options.iv);this._cbcState=t},s._update=function(t,e,r,i){var n=this._cbcState,s=this.constructor.super_.prototype,o=n.iv;if("encrypt"===this.type){for(var a=0;a<this.blockSize;a++)o[a]^=t[e+a];for(s._update.call(this,o,0,r,i),a=0;a<this.blockSize;a++)o[a]=r[i+a]}else{for(s._update.call(this,t,e,r,i),a=0;a<this.blockSize;a++)r[i+a]^=o[a];for(a=0;a<this.blockSize;a++)o[a]=t[e+a]}}},5756:(t,e,r)=>{"use strict";var i=r(9746);function n(t){this.options=t,this.type=this.options.type,this.blockSize=8,this._init(),this.buffer=new Array(this.blockSize),this.bufferOff=0,this.padding=!1!==t.padding}t.exports=n,n.prototype._init=function(){},n.prototype.update=function(t){return 0===t.length?[]:"decrypt"===this.type?this._updateDecrypt(t):this._updateEncrypt(t)},n.prototype._buffer=function(t,e){for(var r=Math.min(this.buffer.length-this.bufferOff,t.length-e),i=0;i<r;i++)this.buffer[this.bufferOff+i]=t[e+i];return this.bufferOff+=r,r},n.prototype._flushBuffer=function(t,e){return this._update(this.buffer,0,t,e),this.bufferOff=0,this.blockSize},n.prototype._updateEncrypt=function(t){var e=0,r=0,i=(this.bufferOff+t.length)/this.blockSize|0,n=new Array(i*this.blockSize);0!==this.bufferOff&&(e+=this._buffer(t,e),this.bufferOff===this.buffer.length&&(r+=this._flushBuffer(n,r)));for(var s=t.length-(t.length-e)%this.blockSize;e<s;e+=this.blockSize)this._update(t,e,n,r),r+=this.blockSize;for(;e<t.length;e++,this.bufferOff++)this.buffer[this.bufferOff]=t[e];return n},n.prototype._updateDecrypt=function(t){for(var e=0,r=0,i=Math.ceil((this.bufferOff+t.length)/this.blockSize)-1,n=new Array(i*this.blockSize);i>0;i--)e+=this._buffer(t,e),r+=this._flushBuffer(n,r);return e+=this._buffer(t,e),n},n.prototype.final=function(t){var e,r;return t&&(e=this.update(t)),r="encrypt"===this.type?this._finalEncrypt():this._finalDecrypt(),e?e.concat(r):r},n.prototype._pad=function(t,e){if(0===e)return!1;for(;e<t.length;)t[e++]=0;return!0},n.prototype._finalEncrypt=function(){if(!this._pad(this.buffer,this.bufferOff))return[];var t=new Array(this.blockSize);return this._update(this.buffer,0,t,0),t},n.prototype._unpad=function(t){return t},n.prototype._finalDecrypt=function(){i.equal(this.bufferOff,this.blockSize,"Not enough data to decrypt");var t=new Array(this.blockSize);return this._flushBuffer(t,0),this._unpad(t)}},778:(t,e,r)=>{"use strict";var i=r(9746),n=r(5717),s=r(1278),o=r(5756);function a(){this.tmp=new Array(2),this.keys=null}function u(t){o.call(this,t);var e=new a;this._desState=e,this.deriveKeys(e,t.key)}n(u,o),t.exports=u,u.create=function(t){return new u(t)};var h=[1,1,2,2,2,2,2,2,1,2,2,2,2,2,2,1];u.prototype.deriveKeys=function(t,e){t.keys=new Array(32),i.equal(e.length,this.blockSize,"Invalid key length");var r=s.readUInt32BE(e,0),n=s.readUInt32BE(e,4);s.pc1(r,n,t.tmp,0),r=t.tmp[0],n=t.tmp[1];for(var o=0;o<t.keys.length;o+=2){var a=h[o>>>1];r=s.r28shl(r,a),n=s.r28shl(n,a),s.pc2(r,n,t.keys,o)}},u.prototype._update=function(t,e,r,i){var n=this._desState,o=s.readUInt32BE(t,e),a=s.readUInt32BE(t,e+4);s.ip(o,a,n.tmp,0),o=n.tmp[0],a=n.tmp[1],"encrypt"===this.type?this._encrypt(n,o,a,n.tmp,0):this._decrypt(n,o,a,n.tmp,0),o=n.tmp[0],a=n.tmp[1],s.writeUInt32BE(r,o,i),s.writeUInt32BE(r,a,i+4)},u.prototype._pad=function(t,e){if(!1===this.padding)return!1;for(var r=t.length-e,i=e;i<t.length;i++)t[i]=r;return!0},u.prototype._unpad=function(t){if(!1===this.padding)return t;for(var e=t[t.length-1],r=t.length-e;r<t.length;r++)i.equal(t[r],e);return t.slice(0,t.length-e)},u.prototype._encrypt=function(t,e,r,i,n){for(var o=e,a=r,u=0;u<t.keys.length;u+=2){var h=t.keys[u],c=t.keys[u+1];s.expand(a,t.tmp,0),h^=t.tmp[0],c^=t.tmp[1];var l=s.substitute(h,c),d=a;a=(o^s.permute(l))>>>0,o=d}s.rip(a,o,i,n)},u.prototype._decrypt=function(t,e,r,i,n){for(var o=r,a=e,u=t.keys.length-2;u>=0;u-=2){var h=t.keys[u],c=t.keys[u+1];s.expand(o,t.tmp,0),h^=t.tmp[0],c^=t.tmp[1];var l=s.substitute(h,c),d=o;o=(a^s.permute(l))>>>0,a=d}s.rip(o,a,i,n)}},651:(t,e,r)=>{"use strict";var i=r(9746),n=r(5717),s=r(5756),o=r(778);function a(t,e){i.equal(e.length,24,"Invalid key length");var r=e.slice(0,8),n=e.slice(8,16),s=e.slice(16,24);this.ciphers="encrypt"===t?[o.create({type:"encrypt",key:r}),o.create({type:"decrypt",key:n}),o.create({type:"encrypt",key:s})]:[o.create({type:"decrypt",key:s}),o.create({type:"encrypt",key:n}),o.create({type:"decrypt",key:r})]}function u(t){s.call(this,t);var e=new a(this.type,this.options.key);this._edeState=e}n(u,s),t.exports=u,u.create=function(t){return new u(t)},u.prototype._update=function(t,e,r,i){var n=this._edeState;n.ciphers[0]._update(t,e,r,i),n.ciphers[1]._update(r,i,r,i),n.ciphers[2]._update(r,i,r,i)},u.prototype._pad=o.prototype._pad,u.prototype._unpad=o.prototype._unpad},1278:(t,e)=>{"use strict";e.readUInt32BE=function(t,e){return(t[0+e]<<24|t[1+e]<<16|t[2+e]<<8|t[3+e])>>>0},e.writeUInt32BE=function(t,e,r){t[0+r]=e>>>24,t[1+r]=e>>>16&255,t[2+r]=e>>>8&255,t[3+r]=255&e},e.ip=function(t,e,r,i){for(var n=0,s=0,o=6;o>=0;o-=2){for(var a=0;a<=24;a+=8)n<<=1,n|=e>>>a+o&1;for(a=0;a<=24;a+=8)n<<=1,n|=t>>>a+o&1}for(o=6;o>=0;o-=2){for(a=1;a<=25;a+=8)s<<=1,s|=e>>>a+o&1;for(a=1;a<=25;a+=8)s<<=1,s|=t>>>a+o&1}r[i+0]=n>>>0,r[i+1]=s>>>0},e.rip=function(t,e,r,i){for(var n=0,s=0,o=0;o<4;o++)for(var a=24;a>=0;a-=8)n<<=1,n|=e>>>a+o&1,n<<=1,n|=t>>>a+o&1;for(o=4;o<8;o++)for(a=24;a>=0;a-=8)s<<=1,s|=e>>>a+o&1,s<<=1,s|=t>>>a+o&1;r[i+0]=n>>>0,r[i+1]=s>>>0},e.pc1=function(t,e,r,i){for(var n=0,s=0,o=7;o>=5;o--){for(var a=0;a<=24;a+=8)n<<=1,n|=e>>a+o&1;for(a=0;a<=24;a+=8)n<<=1,n|=t>>a+o&1}for(a=0;a<=24;a+=8)n<<=1,n|=e>>a+o&1;for(o=1;o<=3;o++){for(a=0;a<=24;a+=8)s<<=1,s|=e>>a+o&1;for(a=0;a<=24;a+=8)s<<=1,s|=t>>a+o&1}for(a=0;a<=24;a+=8)s<<=1,s|=t>>a+o&1;r[i+0]=n>>>0,r[i+1]=s>>>0},e.r28shl=function(t,e){return t<<e&268435455|t>>>28-e};var r=[14,11,17,4,27,23,25,0,13,22,7,18,5,9,16,24,2,20,12,21,1,8,15,26,15,4,25,19,9,1,26,16,5,11,23,8,12,7,17,0,22,3,10,14,6,20,27,24];e.pc2=function(t,e,i,n){for(var s=0,o=0,a=r.length>>>1,u=0;u<a;u++)s<<=1,s|=t>>>r[u]&1;for(u=a;u<r.length;u++)o<<=1,o|=e>>>r[u]&1;i[n+0]=s>>>0,i[n+1]=o>>>0},e.expand=function(t,e,r){var i=0,n=0;i=(1&t)<<5|t>>>27;for(var s=23;s>=15;s-=4)i<<=6,i|=t>>>s&63;for(s=11;s>=3;s-=4)n|=t>>>s&63,n<<=6;n|=(31&t)<<1|t>>>31,e[r+0]=i>>>0,e[r+1]=n>>>0};var i=[14,0,4,15,13,7,1,4,2,14,15,2,11,13,8,1,3,10,10,6,6,12,12,11,5,9,9,5,0,3,7,8,4,15,1,12,14,8,8,2,13,4,6,9,2,1,11,7,15,5,12,11,9,3,7,14,3,10,10,0,5,6,0,13,15,3,1,13,8,4,14,7,6,15,11,2,3,8,4,14,9,12,7,0,2,1,13,10,12,6,0,9,5,11,10,5,0,13,14,8,7,10,11,1,10,3,4,15,13,4,1,2,5,11,8,6,12,7,6,12,9,0,3,5,2,14,15,9,10,13,0,7,9,0,14,9,6,3,3,4,15,6,5,10,1,2,13,8,12,5,7,14,11,12,4,11,2,15,8,1,13,1,6,10,4,13,9,0,8,6,15,9,3,8,0,7,11,4,1,15,2,14,12,3,5,11,10,5,14,2,7,12,7,13,13,8,14,11,3,5,0,6,6,15,9,0,10,3,1,4,2,7,8,2,5,12,11,1,12,10,4,14,15,9,10,3,6,15,9,0,0,6,12,10,11,1,7,13,13,8,15,9,1,4,3,5,14,11,5,12,2,7,8,2,4,14,2,14,12,11,4,2,1,12,7,4,10,7,11,13,6,1,8,5,5,0,3,15,15,10,13,3,0,9,14,8,9,6,4,11,2,8,1,12,11,7,10,1,13,14,7,2,8,13,15,6,9,15,12,0,5,9,6,10,3,4,0,5,14,3,12,10,1,15,10,4,15,2,9,7,2,12,6,9,8,5,0,6,13,1,3,13,4,14,14,0,7,11,5,3,11,8,9,4,14,3,15,2,5,12,2,9,8,5,12,15,3,10,7,11,0,14,4,1,10,7,1,6,13,0,11,8,6,13,4,13,11,0,2,11,14,7,15,4,0,9,8,1,13,10,3,14,12,3,9,5,7,12,5,2,10,15,6,8,1,6,1,6,4,11,11,13,13,8,12,1,3,4,7,10,14,7,10,9,15,5,6,0,8,15,0,14,5,2,9,3,2,12,13,1,2,15,8,13,4,8,6,10,15,3,11,7,1,4,10,12,9,5,3,6,14,11,5,0,0,14,12,9,7,2,7,2,11,1,4,14,1,7,9,4,12,10,14,8,2,13,0,15,6,12,10,9,13,0,15,3,3,5,5,6,8,11];e.substitute=function(t,e){for(var r=0,n=0;n<4;n++)r<<=4,r|=i[64*n+(t>>>18-6*n&63)];for(n=0;n<4;n++)r<<=4,r|=i[256+64*n+(e>>>18-6*n&63)];return r>>>0};var n=[16,25,12,11,3,20,4,15,31,17,9,6,27,14,1,22,30,24,8,18,0,5,29,23,13,19,2,26,10,21,28,7];e.permute=function(t){for(var e=0,r=0;r<n.length;r++)e<<=1,e|=t>>>n[r]&1;return e>>>0},e.padSplit=function(t,e,r){for(var i=t.toString(2);i.length<e;)i="0"+i;for(var n=[],s=0;s<e;s+=r)n.push(i.slice(s,s+r));return n.join(" ")}},2607:(t,e,r)=>{var i=r(8764).Buffer,n=r(3590),s=r(9799),o=r(7426),a={binary:!0,hex:!0,base64:!0};e.DiffieHellmanGroup=e.createDiffieHellmanGroup=e.getDiffieHellman=function(t){var e=new i(s[t].prime,"hex"),r=new i(s[t].gen,"hex");return new o(e,r)},e.createDiffieHellman=e.DiffieHellman=function t(e,r,s,u){return i.isBuffer(r)||void 0===a[r]?t(e,"binary",r,s):(r=r||"binary",u=u||"binary",s=s||new i([2]),i.isBuffer(s)||(s=new i(s,u)),"number"==typeof e?new o(n(e,s),s,!0):(i.isBuffer(e)||(e=new i(e,r)),new o(e,s,!0)))}},7426:(t,e,r)=>{var i=r(8764).Buffer,n=r(3620),s=new(r(3047)),o=new n(24),a=new n(11),u=new n(10),h=new n(3),c=new n(7),l=r(3590),d=r(1798);function f(t,e){return e=e||"utf8",i.isBuffer(t)||(t=new i(t,e)),this._pub=new n(t),this}function p(t,e){return e=e||"utf8",i.isBuffer(t)||(t=new i(t,e)),this._priv=new n(t),this}t.exports=m;var g={};function m(t,e,r){this.setGenerator(e),this.__prime=new n(t),this._prime=n.mont(this.__prime),this._primeLen=t.length,this._pub=void 0,this._priv=void 0,this._primeCode=void 0,r?(this.setPublicKey=f,this.setPrivateKey=p):this._primeCode=8}function y(t,e){var r=new i(t.toArray());return e?r.toString(e):r}Object.defineProperty(m.prototype,"verifyError",{enumerable:!0,get:function(){return"number"!=typeof this._primeCode&&(this._primeCode=function(t,e){var r=e.toString("hex"),i=[r,t.toString(16)].join("_");if(i in g)return g[i];var n,d=0;if(t.isEven()||!l.simpleSieve||!l.fermatTest(t)||!s.test(t))return d+=1,d+="02"===r||"05"===r?8:4,g[i]=d,d;switch(s.test(t.shrn(1))||(d+=2),r){case"02":t.mod(o).cmp(a)&&(d+=8);break;case"05":(n=t.mod(u)).cmp(h)&&n.cmp(c)&&(d+=8);break;default:d+=4}return g[i]=d,d}(this.__prime,this.__gen)),this._primeCode}}),m.prototype.generateKeys=function(){return this._priv||(this._priv=new n(d(this._primeLen))),this._pub=this._gen.toRed(this._prime).redPow(this._priv).fromRed(),this.getPublicKey()},m.prototype.computeSecret=function(t){var e=(t=(t=new n(t)).toRed(this._prime)).redPow(this._priv).fromRed(),r=new i(e.toArray()),s=this.getPrime();if(r.length<s.length){var o=new i(s.length-r.length);o.fill(0),r=i.concat([o,r])}return r},m.prototype.getPublicKey=function(t){return y(this._pub,t)},m.prototype.getPrivateKey=function(t){return y(this._priv,t)},m.prototype.getPrime=function(t){return y(this.__prime,t)},m.prototype.getGenerator=function(t){return y(this._gen,t)},m.prototype.setGenerator=function(t,e){return e=e||"utf8",i.isBuffer(t)||(t=new i(t,e)),this.__gen=t,this._gen=new n(t),this}},3590:(t,e,r)=>{var i=r(1798);t.exports=v,v.simpleSieve=m,v.fermatTest=y;var n=r(3620),s=new n(24),o=new(r(3047)),a=new n(1),u=new n(2),h=new n(5),c=(new n(16),new n(8),new n(10)),l=new n(3),d=(new n(7),new n(11)),f=new n(4),p=(new n(12),null);function g(){if(null!==p)return p;var t=[];t[0]=2;for(var e=1,r=3;r<1048576;r+=2){for(var i=Math.ceil(Math.sqrt(r)),n=0;n<e&&t[n]<=i&&r%t[n]!=0;n++);e!==n&&t[n]<=i||(t[e++]=r)}return p=t,t}function m(t){for(var e=g(),r=0;r<e.length;r++)if(0===t.modn(e[r]))return 0===t.cmpn(e[r]);return!0}function y(t){var e=n.mont(t);return 0===u.toRed(e).redPow(t.subn(1)).fromRed().cmpn(1)}function v(t,e){if(t<16)return new n(2===e||5===e?[140,123]:[140,39]);var r,p;for(e=new n(e);;){for(r=new n(i(Math.ceil(t/8)));r.bitLength()>t;)r.ishrn(1);if(r.isEven()&&r.iadd(a),r.testn(1)||r.iadd(u),e.cmp(u)){if(!e.cmp(h))for(;r.mod(c).cmp(l);)r.iadd(f)}else for(;r.mod(s).cmp(d);)r.iadd(f);if(m(p=r.shrn(1))&&m(r)&&y(p)&&y(r)&&o.test(p)&&o.test(r))return r}}},3620:function(t,e,r){!function(t,e){"use strict";function i(t,e){if(!t)throw new Error(e||"Assertion failed")}function n(t,e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}function s(t,e,r){if(s.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==e&&"be"!==e||(r=e,e=10),this._init(t||0,e||10,r||"be"))}var o;"object"==typeof t?t.exports=s:e.BN=s,s.BN=s,s.wordSize=26;try{o="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:r(7748).Buffer}catch(t){}function a(t,e){var r=t.charCodeAt(e);return r>=65&&r<=70?r-55:r>=97&&r<=102?r-87:r-48&15}function u(t,e,r){var i=a(t,r);return r-1>=e&&(i|=a(t,r-1)<<4),i}function h(t,e,r,i){for(var n=0,s=Math.min(t.length,r),o=e;o<s;o++){var a=t.charCodeAt(o)-48;n*=i,n+=a>=49?a-49+10:a>=17?a-17+10:a}return n}s.isBN=function(t){return t instanceof s||null!==t&&"object"==typeof t&&t.constructor.wordSize===s.wordSize&&Array.isArray(t.words)},s.max=function(t,e){return t.cmp(e)>0?t:e},s.min=function(t,e){return t.cmp(e)<0?t:e},s.prototype._init=function(t,e,r){if("number"==typeof t)return this._initNumber(t,e,r);if("object"==typeof t)return this._initArray(t,e,r);"hex"===e&&(e=16),i(e===(0|e)&&e>=2&&e<=36);var n=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&(n++,this.negative=1),n<t.length&&(16===e?this._parseHex(t,n,r):(this._parseBase(t,e,n),"le"===r&&this._initArray(this.toArray(),e,r)))},s.prototype._initNumber=function(t,e,r){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(i(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===r&&this._initArray(this.toArray(),e,r)},s.prototype._initArray=function(t,e,r){if(i("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var s,o,a=0;if("be"===r)for(n=t.length-1,s=0;n>=0;n-=3)o=t[n]|t[n-1]<<8|t[n-2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);else if("le"===r)for(n=0,s=0;n<t.length;n+=3)o=t[n]|t[n+1]<<8|t[n+2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);return this.strip()},s.prototype._parseHex=function(t,e,r){this.length=Math.ceil((t.length-e)/6),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var n,s=0,o=0;if("be"===r)for(i=t.length-1;i>=e;i-=2)n=u(t,e,i)<<s,this.words[o]|=67108863&n,s>=18?(s-=18,o+=1,this.words[o]|=n>>>26):s+=8;else for(i=(t.length-e)%2==0?e+1:e;i<t.length;i+=2)n=u(t,e,i)<<s,this.words[o]|=67108863&n,s>=18?(s-=18,o+=1,this.words[o]|=n>>>26):s+=8;this.strip()},s.prototype._parseBase=function(t,e,r){this.words=[0],this.length=1;for(var i=0,n=1;n<=67108863;n*=e)i++;i--,n=n/e|0;for(var s=t.length-r,o=s%i,a=Math.min(s,s-o)+r,u=0,c=r;c<a;c+=i)u=h(t,c,c+i,e),this.imuln(n),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u);if(0!==o){var l=1;for(u=h(t,c,t.length,e),c=0;c<o;c++)l*=e;this.imuln(l),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u)}this.strip()},s.prototype.copy=function(t){t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];t.length=this.length,t.negative=this.negative,t.red=this.red},s.prototype.clone=function(){var t=new s(null);return this.copy(t),t},s.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},s.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},s.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},s.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var c=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],l=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],d=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function f(t,e,r){r.negative=e.negative^t.negative;var i=t.length+e.length|0;r.length=i,i=i-1|0;var n=0|t.words[0],s=0|e.words[0],o=n*s,a=67108863&o,u=o/67108864|0;r.words[0]=a;for(var h=1;h<i;h++){for(var c=u>>>26,l=67108863&u,d=Math.min(h,e.length-1),f=Math.max(0,h-t.length+1);f<=d;f++){var p=h-f|0;c+=(o=(n=0|t.words[p])*(s=0|e.words[f])+l)/67108864|0,l=67108863&o}r.words[h]=0|l,u=0|c}return 0!==u?r.words[h]=0|u:r.length--,r.strip()}s.prototype.toString=function(t,e){var r;if(e=0|e||1,16===(t=t||10)||"hex"===t){r="";for(var n=0,s=0,o=0;o<this.length;o++){var a=this.words[o],u=(16777215&(a<<n|s)).toString(16);r=0!=(s=a>>>24-n&16777215)||o!==this.length-1?c[6-u.length]+u+r:u+r,(n+=2)>=26&&(n-=26,o--)}for(0!==s&&(r=s.toString(16)+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}if(t===(0|t)&&t>=2&&t<=36){var h=l[t],f=d[t];r="";var p=this.clone();for(p.negative=0;!p.isZero();){var g=p.modn(f).toString(t);r=(p=p.idivn(f)).isZero()?g+r:c[h-g.length]+g+r}for(this.isZero()&&(r="0"+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}i(!1,"Base should be between 2 and 36")},s.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&i(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},s.prototype.toJSON=function(){return this.toString(16)},s.prototype.toBuffer=function(t,e){return i(void 0!==o),this.toArrayLike(o,t,e)},s.prototype.toArray=function(t,e){return this.toArrayLike(Array,t,e)},s.prototype.toArrayLike=function(t,e,r){var n=this.byteLength(),s=r||Math.max(1,n);i(n<=s,"byte array longer than desired length"),i(s>0,"Requested array length <= 0"),this.strip();var o,a,u="le"===e,h=new t(s),c=this.clone();if(u){for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[a]=o;for(;a<s;a++)h[a]=0}else{for(a=0;a<s-n;a++)h[a]=0;for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[s-a-1]=o}return h},Math.clz32?s.prototype._countBits=function(t){return 32-Math.clz32(t)}:s.prototype._countBits=function(t){var e=t,r=0;return e>=4096&&(r+=13,e>>>=13),e>=64&&(r+=7,e>>>=7),e>=8&&(r+=4,e>>>=4),e>=2&&(r+=2,e>>>=2),r+e},s.prototype._zeroBits=function(t){if(0===t)return 26;var e=t,r=0;return 0==(8191&e)&&(r+=13,e>>>=13),0==(127&e)&&(r+=7,e>>>=7),0==(15&e)&&(r+=4,e>>>=4),0==(3&e)&&(r+=2,e>>>=2),0==(1&e)&&r++,r},s.prototype.bitLength=function(){var t=this.words[this.length-1],e=this._countBits(t);return 26*(this.length-1)+e},s.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,e=0;e<this.length;e++){var r=this._zeroBits(this.words[e]);if(t+=r,26!==r)break}return t},s.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},s.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},s.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},s.prototype.isNeg=function(){return 0!==this.negative},s.prototype.neg=function(){return this.clone().ineg()},s.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},s.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]|t.words[e];return this.strip()},s.prototype.ior=function(t){return i(0==(this.negative|t.negative)),this.iuor(t)},s.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},s.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},s.prototype.iuand=function(t){var e;e=this.length>t.length?t:this;for(var r=0;r<e.length;r++)this.words[r]=this.words[r]&t.words[r];return this.length=e.length,this.strip()},s.prototype.iand=function(t){return i(0==(this.negative|t.negative)),this.iuand(t)},s.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},s.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},s.prototype.iuxor=function(t){var e,r;this.length>t.length?(e=this,r=t):(e=t,r=this);for(var i=0;i<r.length;i++)this.words[i]=e.words[i]^r.words[i];if(this!==e)for(;i<e.length;i++)this.words[i]=e.words[i];return this.length=e.length,this.strip()},s.prototype.ixor=function(t){return i(0==(this.negative|t.negative)),this.iuxor(t)},s.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},s.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},s.prototype.inotn=function(t){i("number"==typeof t&&t>=0);var e=0|Math.ceil(t/26),r=t%26;this._expand(e),r>0&&e--;for(var n=0;n<e;n++)this.words[n]=67108863&~this.words[n];return r>0&&(this.words[n]=~this.words[n]&67108863>>26-r),this.strip()},s.prototype.notn=function(t){return this.clone().inotn(t)},s.prototype.setn=function(t,e){i("number"==typeof t&&t>=0);var r=t/26|0,n=t%26;return this._expand(r+1),this.words[r]=e?this.words[r]|1<<n:this.words[r]&~(1<<n),this.strip()},s.prototype.iadd=function(t){var e,r,i;if(0!==this.negative&&0===t.negative)return this.negative=0,e=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,e=this.isub(t),t.negative=1,e._normSign();this.length>t.length?(r=this,i=t):(r=t,i=this);for(var n=0,s=0;s<i.length;s++)e=(0|r.words[s])+(0|i.words[s])+n,this.words[s]=67108863&e,n=e>>>26;for(;0!==n&&s<r.length;s++)e=(0|r.words[s])+n,this.words[s]=67108863&e,n=e>>>26;if(this.length=r.length,0!==n)this.words[this.length]=n,this.length++;else if(r!==this)for(;s<r.length;s++)this.words[s]=r.words[s];return this},s.prototype.add=function(t){var e;return 0!==t.negative&&0===this.negative?(t.negative=0,e=this.sub(t),t.negative^=1,e):0===t.negative&&0!==this.negative?(this.negative=0,e=t.sub(this),this.negative=1,e):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},s.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var e=this.iadd(t);return t.negative=1,e._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var r,i,n=this.cmp(t);if(0===n)return this.negative=0,this.length=1,this.words[0]=0,this;n>0?(r=this,i=t):(r=t,i=this);for(var s=0,o=0;o<i.length;o++)s=(e=(0|r.words[o])-(0|i.words[o])+s)>>26,this.words[o]=67108863&e;for(;0!==s&&o<r.length;o++)s=(e=(0|r.words[o])+s)>>26,this.words[o]=67108863&e;if(0===s&&o<r.length&&r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this.length=Math.max(this.length,o),r!==this&&(this.negative=1),this.strip()},s.prototype.sub=function(t){return this.clone().isub(t)};var p=function(t,e,r){var i,n,s,o=t.words,a=e.words,u=r.words,h=0,c=0|o[0],l=8191&c,d=c>>>13,f=0|o[1],p=8191&f,g=f>>>13,m=0|o[2],y=8191&m,v=m>>>13,b=0|o[3],w=8191&b,E=b>>>13,S=0|o[4],N=8191&S,M=S>>>13,x=0|o[5],I=8191&x,A=x>>>13,P=0|o[6],T=8191&P,R=P>>>13,k=0|o[7],B=8191&k,O=k>>>13,C=0|o[8],L=8191&C,j=C>>>13,Z=0|o[9],D=8191&Z,F=Z>>>13,z=0|a[0],H=8191&z,W=z>>>13,K=0|a[1],q=8191&K,U=K>>>13,V=0|a[2],X=8191&V,G=V>>>13,Y=0|a[3],Q=8191&Y,J=Y>>>13,_=0|a[4],$=8191&_,tt=_>>>13,et=0|a[5],rt=8191&et,it=et>>>13,nt=0|a[6],st=8191&nt,ot=nt>>>13,at=0|a[7],ut=8191&at,ht=at>>>13,ct=0|a[8],lt=8191&ct,dt=ct>>>13,ft=0|a[9],pt=8191&ft,gt=ft>>>13;r.negative=t.negative^e.negative,r.length=19;var mt=(h+(i=Math.imul(l,H))|0)+((8191&(n=(n=Math.imul(l,W))+Math.imul(d,H)|0))<<13)|0;h=((s=Math.imul(d,W))+(n>>>13)|0)+(mt>>>26)|0,mt&=67108863,i=Math.imul(p,H),n=(n=Math.imul(p,W))+Math.imul(g,H)|0,s=Math.imul(g,W);var yt=(h+(i=i+Math.imul(l,q)|0)|0)+((8191&(n=(n=n+Math.imul(l,U)|0)+Math.imul(d,q)|0))<<13)|0;h=((s=s+Math.imul(d,U)|0)+(n>>>13)|0)+(yt>>>26)|0,yt&=67108863,i=Math.imul(y,H),n=(n=Math.imul(y,W))+Math.imul(v,H)|0,s=Math.imul(v,W),i=i+Math.imul(p,q)|0,n=(n=n+Math.imul(p,U)|0)+Math.imul(g,q)|0,s=s+Math.imul(g,U)|0;var vt=(h+(i=i+Math.imul(l,X)|0)|0)+((8191&(n=(n=n+Math.imul(l,G)|0)+Math.imul(d,X)|0))<<13)|0;h=((s=s+Math.imul(d,G)|0)+(n>>>13)|0)+(vt>>>26)|0,vt&=67108863,i=Math.imul(w,H),n=(n=Math.imul(w,W))+Math.imul(E,H)|0,s=Math.imul(E,W),i=i+Math.imul(y,q)|0,n=(n=n+Math.imul(y,U)|0)+Math.imul(v,q)|0,s=s+Math.imul(v,U)|0,i=i+Math.imul(p,X)|0,n=(n=n+Math.imul(p,G)|0)+Math.imul(g,X)|0,s=s+Math.imul(g,G)|0;var bt=(h+(i=i+Math.imul(l,Q)|0)|0)+((8191&(n=(n=n+Math.imul(l,J)|0)+Math.imul(d,Q)|0))<<13)|0;h=((s=s+Math.imul(d,J)|0)+(n>>>13)|0)+(bt>>>26)|0,bt&=67108863,i=Math.imul(N,H),n=(n=Math.imul(N,W))+Math.imul(M,H)|0,s=Math.imul(M,W),i=i+Math.imul(w,q)|0,n=(n=n+Math.imul(w,U)|0)+Math.imul(E,q)|0,s=s+Math.imul(E,U)|0,i=i+Math.imul(y,X)|0,n=(n=n+Math.imul(y,G)|0)+Math.imul(v,X)|0,s=s+Math.imul(v,G)|0,i=i+Math.imul(p,Q)|0,n=(n=n+Math.imul(p,J)|0)+Math.imul(g,Q)|0,s=s+Math.imul(g,J)|0;var wt=(h+(i=i+Math.imul(l,$)|0)|0)+((8191&(n=(n=n+Math.imul(l,tt)|0)+Math.imul(d,$)|0))<<13)|0;h=((s=s+Math.imul(d,tt)|0)+(n>>>13)|0)+(wt>>>26)|0,wt&=67108863,i=Math.imul(I,H),n=(n=Math.imul(I,W))+Math.imul(A,H)|0,s=Math.imul(A,W),i=i+Math.imul(N,q)|0,n=(n=n+Math.imul(N,U)|0)+Math.imul(M,q)|0,s=s+Math.imul(M,U)|0,i=i+Math.imul(w,X)|0,n=(n=n+Math.imul(w,G)|0)+Math.imul(E,X)|0,s=s+Math.imul(E,G)|0,i=i+Math.imul(y,Q)|0,n=(n=n+Math.imul(y,J)|0)+Math.imul(v,Q)|0,s=s+Math.imul(v,J)|0,i=i+Math.imul(p,$)|0,n=(n=n+Math.imul(p,tt)|0)+Math.imul(g,$)|0,s=s+Math.imul(g,tt)|0;var Et=(h+(i=i+Math.imul(l,rt)|0)|0)+((8191&(n=(n=n+Math.imul(l,it)|0)+Math.imul(d,rt)|0))<<13)|0;h=((s=s+Math.imul(d,it)|0)+(n>>>13)|0)+(Et>>>26)|0,Et&=67108863,i=Math.imul(T,H),n=(n=Math.imul(T,W))+Math.imul(R,H)|0,s=Math.imul(R,W),i=i+Math.imul(I,q)|0,n=(n=n+Math.imul(I,U)|0)+Math.imul(A,q)|0,s=s+Math.imul(A,U)|0,i=i+Math.imul(N,X)|0,n=(n=n+Math.imul(N,G)|0)+Math.imul(M,X)|0,s=s+Math.imul(M,G)|0,i=i+Math.imul(w,Q)|0,n=(n=n+Math.imul(w,J)|0)+Math.imul(E,Q)|0,s=s+Math.imul(E,J)|0,i=i+Math.imul(y,$)|0,n=(n=n+Math.imul(y,tt)|0)+Math.imul(v,$)|0,s=s+Math.imul(v,tt)|0,i=i+Math.imul(p,rt)|0,n=(n=n+Math.imul(p,it)|0)+Math.imul(g,rt)|0,s=s+Math.imul(g,it)|0;var St=(h+(i=i+Math.imul(l,st)|0)|0)+((8191&(n=(n=n+Math.imul(l,ot)|0)+Math.imul(d,st)|0))<<13)|0;h=((s=s+Math.imul(d,ot)|0)+(n>>>13)|0)+(St>>>26)|0,St&=67108863,i=Math.imul(B,H),n=(n=Math.imul(B,W))+Math.imul(O,H)|0,s=Math.imul(O,W),i=i+Math.imul(T,q)|0,n=(n=n+Math.imul(T,U)|0)+Math.imul(R,q)|0,s=s+Math.imul(R,U)|0,i=i+Math.imul(I,X)|0,n=(n=n+Math.imul(I,G)|0)+Math.imul(A,X)|0,s=s+Math.imul(A,G)|0,i=i+Math.imul(N,Q)|0,n=(n=n+Math.imul(N,J)|0)+Math.imul(M,Q)|0,s=s+Math.imul(M,J)|0,i=i+Math.imul(w,$)|0,n=(n=n+Math.imul(w,tt)|0)+Math.imul(E,$)|0,s=s+Math.imul(E,tt)|0,i=i+Math.imul(y,rt)|0,n=(n=n+Math.imul(y,it)|0)+Math.imul(v,rt)|0,s=s+Math.imul(v,it)|0,i=i+Math.imul(p,st)|0,n=(n=n+Math.imul(p,ot)|0)+Math.imul(g,st)|0,s=s+Math.imul(g,ot)|0;var Nt=(h+(i=i+Math.imul(l,ut)|0)|0)+((8191&(n=(n=n+Math.imul(l,ht)|0)+Math.imul(d,ut)|0))<<13)|0;h=((s=s+Math.imul(d,ht)|0)+(n>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,i=Math.imul(L,H),n=(n=Math.imul(L,W))+Math.imul(j,H)|0,s=Math.imul(j,W),i=i+Math.imul(B,q)|0,n=(n=n+Math.imul(B,U)|0)+Math.imul(O,q)|0,s=s+Math.imul(O,U)|0,i=i+Math.imul(T,X)|0,n=(n=n+Math.imul(T,G)|0)+Math.imul(R,X)|0,s=s+Math.imul(R,G)|0,i=i+Math.imul(I,Q)|0,n=(n=n+Math.imul(I,J)|0)+Math.imul(A,Q)|0,s=s+Math.imul(A,J)|0,i=i+Math.imul(N,$)|0,n=(n=n+Math.imul(N,tt)|0)+Math.imul(M,$)|0,s=s+Math.imul(M,tt)|0,i=i+Math.imul(w,rt)|0,n=(n=n+Math.imul(w,it)|0)+Math.imul(E,rt)|0,s=s+Math.imul(E,it)|0,i=i+Math.imul(y,st)|0,n=(n=n+Math.imul(y,ot)|0)+Math.imul(v,st)|0,s=s+Math.imul(v,ot)|0,i=i+Math.imul(p,ut)|0,n=(n=n+Math.imul(p,ht)|0)+Math.imul(g,ut)|0,s=s+Math.imul(g,ht)|0;var Mt=(h+(i=i+Math.imul(l,lt)|0)|0)+((8191&(n=(n=n+Math.imul(l,dt)|0)+Math.imul(d,lt)|0))<<13)|0;h=((s=s+Math.imul(d,dt)|0)+(n>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,i=Math.imul(D,H),n=(n=Math.imul(D,W))+Math.imul(F,H)|0,s=Math.imul(F,W),i=i+Math.imul(L,q)|0,n=(n=n+Math.imul(L,U)|0)+Math.imul(j,q)|0,s=s+Math.imul(j,U)|0,i=i+Math.imul(B,X)|0,n=(n=n+Math.imul(B,G)|0)+Math.imul(O,X)|0,s=s+Math.imul(O,G)|0,i=i+Math.imul(T,Q)|0,n=(n=n+Math.imul(T,J)|0)+Math.imul(R,Q)|0,s=s+Math.imul(R,J)|0,i=i+Math.imul(I,$)|0,n=(n=n+Math.imul(I,tt)|0)+Math.imul(A,$)|0,s=s+Math.imul(A,tt)|0,i=i+Math.imul(N,rt)|0,n=(n=n+Math.imul(N,it)|0)+Math.imul(M,rt)|0,s=s+Math.imul(M,it)|0,i=i+Math.imul(w,st)|0,n=(n=n+Math.imul(w,ot)|0)+Math.imul(E,st)|0,s=s+Math.imul(E,ot)|0,i=i+Math.imul(y,ut)|0,n=(n=n+Math.imul(y,ht)|0)+Math.imul(v,ut)|0,s=s+Math.imul(v,ht)|0,i=i+Math.imul(p,lt)|0,n=(n=n+Math.imul(p,dt)|0)+Math.imul(g,lt)|0,s=s+Math.imul(g,dt)|0;var xt=(h+(i=i+Math.imul(l,pt)|0)|0)+((8191&(n=(n=n+Math.imul(l,gt)|0)+Math.imul(d,pt)|0))<<13)|0;h=((s=s+Math.imul(d,gt)|0)+(n>>>13)|0)+(xt>>>26)|0,xt&=67108863,i=Math.imul(D,q),n=(n=Math.imul(D,U))+Math.imul(F,q)|0,s=Math.imul(F,U),i=i+Math.imul(L,X)|0,n=(n=n+Math.imul(L,G)|0)+Math.imul(j,X)|0,s=s+Math.imul(j,G)|0,i=i+Math.imul(B,Q)|0,n=(n=n+Math.imul(B,J)|0)+Math.imul(O,Q)|0,s=s+Math.imul(O,J)|0,i=i+Math.imul(T,$)|0,n=(n=n+Math.imul(T,tt)|0)+Math.imul(R,$)|0,s=s+Math.imul(R,tt)|0,i=i+Math.imul(I,rt)|0,n=(n=n+Math.imul(I,it)|0)+Math.imul(A,rt)|0,s=s+Math.imul(A,it)|0,i=i+Math.imul(N,st)|0,n=(n=n+Math.imul(N,ot)|0)+Math.imul(M,st)|0,s=s+Math.imul(M,ot)|0,i=i+Math.imul(w,ut)|0,n=(n=n+Math.imul(w,ht)|0)+Math.imul(E,ut)|0,s=s+Math.imul(E,ht)|0,i=i+Math.imul(y,lt)|0,n=(n=n+Math.imul(y,dt)|0)+Math.imul(v,lt)|0,s=s+Math.imul(v,dt)|0;var It=(h+(i=i+Math.imul(p,pt)|0)|0)+((8191&(n=(n=n+Math.imul(p,gt)|0)+Math.imul(g,pt)|0))<<13)|0;h=((s=s+Math.imul(g,gt)|0)+(n>>>13)|0)+(It>>>26)|0,It&=67108863,i=Math.imul(D,X),n=(n=Math.imul(D,G))+Math.imul(F,X)|0,s=Math.imul(F,G),i=i+Math.imul(L,Q)|0,n=(n=n+Math.imul(L,J)|0)+Math.imul(j,Q)|0,s=s+Math.imul(j,J)|0,i=i+Math.imul(B,$)|0,n=(n=n+Math.imul(B,tt)|0)+Math.imul(O,$)|0,s=s+Math.imul(O,tt)|0,i=i+Math.imul(T,rt)|0,n=(n=n+Math.imul(T,it)|0)+Math.imul(R,rt)|0,s=s+Math.imul(R,it)|0,i=i+Math.imul(I,st)|0,n=(n=n+Math.imul(I,ot)|0)+Math.imul(A,st)|0,s=s+Math.imul(A,ot)|0,i=i+Math.imul(N,ut)|0,n=(n=n+Math.imul(N,ht)|0)+Math.imul(M,ut)|0,s=s+Math.imul(M,ht)|0,i=i+Math.imul(w,lt)|0,n=(n=n+Math.imul(w,dt)|0)+Math.imul(E,lt)|0,s=s+Math.imul(E,dt)|0;var At=(h+(i=i+Math.imul(y,pt)|0)|0)+((8191&(n=(n=n+Math.imul(y,gt)|0)+Math.imul(v,pt)|0))<<13)|0;h=((s=s+Math.imul(v,gt)|0)+(n>>>13)|0)+(At>>>26)|0,At&=67108863,i=Math.imul(D,Q),n=(n=Math.imul(D,J))+Math.imul(F,Q)|0,s=Math.imul(F,J),i=i+Math.imul(L,$)|0,n=(n=n+Math.imul(L,tt)|0)+Math.imul(j,$)|0,s=s+Math.imul(j,tt)|0,i=i+Math.imul(B,rt)|0,n=(n=n+Math.imul(B,it)|0)+Math.imul(O,rt)|0,s=s+Math.imul(O,it)|0,i=i+Math.imul(T,st)|0,n=(n=n+Math.imul(T,ot)|0)+Math.imul(R,st)|0,s=s+Math.imul(R,ot)|0,i=i+Math.imul(I,ut)|0,n=(n=n+Math.imul(I,ht)|0)+Math.imul(A,ut)|0,s=s+Math.imul(A,ht)|0,i=i+Math.imul(N,lt)|0,n=(n=n+Math.imul(N,dt)|0)+Math.imul(M,lt)|0,s=s+Math.imul(M,dt)|0;var Pt=(h+(i=i+Math.imul(w,pt)|0)|0)+((8191&(n=(n=n+Math.imul(w,gt)|0)+Math.imul(E,pt)|0))<<13)|0;h=((s=s+Math.imul(E,gt)|0)+(n>>>13)|0)+(Pt>>>26)|0,Pt&=67108863,i=Math.imul(D,$),n=(n=Math.imul(D,tt))+Math.imul(F,$)|0,s=Math.imul(F,tt),i=i+Math.imul(L,rt)|0,n=(n=n+Math.imul(L,it)|0)+Math.imul(j,rt)|0,s=s+Math.imul(j,it)|0,i=i+Math.imul(B,st)|0,n=(n=n+Math.imul(B,ot)|0)+Math.imul(O,st)|0,s=s+Math.imul(O,ot)|0,i=i+Math.imul(T,ut)|0,n=(n=n+Math.imul(T,ht)|0)+Math.imul(R,ut)|0,s=s+Math.imul(R,ht)|0,i=i+Math.imul(I,lt)|0,n=(n=n+Math.imul(I,dt)|0)+Math.imul(A,lt)|0,s=s+Math.imul(A,dt)|0;var Tt=(h+(i=i+Math.imul(N,pt)|0)|0)+((8191&(n=(n=n+Math.imul(N,gt)|0)+Math.imul(M,pt)|0))<<13)|0;h=((s=s+Math.imul(M,gt)|0)+(n>>>13)|0)+(Tt>>>26)|0,Tt&=67108863,i=Math.imul(D,rt),n=(n=Math.imul(D,it))+Math.imul(F,rt)|0,s=Math.imul(F,it),i=i+Math.imul(L,st)|0,n=(n=n+Math.imul(L,ot)|0)+Math.imul(j,st)|0,s=s+Math.imul(j,ot)|0,i=i+Math.imul(B,ut)|0,n=(n=n+Math.imul(B,ht)|0)+Math.imul(O,ut)|0,s=s+Math.imul(O,ht)|0,i=i+Math.imul(T,lt)|0,n=(n=n+Math.imul(T,dt)|0)+Math.imul(R,lt)|0,s=s+Math.imul(R,dt)|0;var Rt=(h+(i=i+Math.imul(I,pt)|0)|0)+((8191&(n=(n=n+Math.imul(I,gt)|0)+Math.imul(A,pt)|0))<<13)|0;h=((s=s+Math.imul(A,gt)|0)+(n>>>13)|0)+(Rt>>>26)|0,Rt&=67108863,i=Math.imul(D,st),n=(n=Math.imul(D,ot))+Math.imul(F,st)|0,s=Math.imul(F,ot),i=i+Math.imul(L,ut)|0,n=(n=n+Math.imul(L,ht)|0)+Math.imul(j,ut)|0,s=s+Math.imul(j,ht)|0,i=i+Math.imul(B,lt)|0,n=(n=n+Math.imul(B,dt)|0)+Math.imul(O,lt)|0,s=s+Math.imul(O,dt)|0;var kt=(h+(i=i+Math.imul(T,pt)|0)|0)+((8191&(n=(n=n+Math.imul(T,gt)|0)+Math.imul(R,pt)|0))<<13)|0;h=((s=s+Math.imul(R,gt)|0)+(n>>>13)|0)+(kt>>>26)|0,kt&=67108863,i=Math.imul(D,ut),n=(n=Math.imul(D,ht))+Math.imul(F,ut)|0,s=Math.imul(F,ht),i=i+Math.imul(L,lt)|0,n=(n=n+Math.imul(L,dt)|0)+Math.imul(j,lt)|0,s=s+Math.imul(j,dt)|0;var Bt=(h+(i=i+Math.imul(B,pt)|0)|0)+((8191&(n=(n=n+Math.imul(B,gt)|0)+Math.imul(O,pt)|0))<<13)|0;h=((s=s+Math.imul(O,gt)|0)+(n>>>13)|0)+(Bt>>>26)|0,Bt&=67108863,i=Math.imul(D,lt),n=(n=Math.imul(D,dt))+Math.imul(F,lt)|0,s=Math.imul(F,dt);var Ot=(h+(i=i+Math.imul(L,pt)|0)|0)+((8191&(n=(n=n+Math.imul(L,gt)|0)+Math.imul(j,pt)|0))<<13)|0;h=((s=s+Math.imul(j,gt)|0)+(n>>>13)|0)+(Ot>>>26)|0,Ot&=67108863;var Ct=(h+(i=Math.imul(D,pt))|0)+((8191&(n=(n=Math.imul(D,gt))+Math.imul(F,pt)|0))<<13)|0;return h=((s=Math.imul(F,gt))+(n>>>13)|0)+(Ct>>>26)|0,Ct&=67108863,u[0]=mt,u[1]=yt,u[2]=vt,u[3]=bt,u[4]=wt,u[5]=Et,u[6]=St,u[7]=Nt,u[8]=Mt,u[9]=xt,u[10]=It,u[11]=At,u[12]=Pt,u[13]=Tt,u[14]=Rt,u[15]=kt,u[16]=Bt,u[17]=Ot,u[18]=Ct,0!==h&&(u[19]=h,r.length++),r};function g(t,e,r){return(new m).mulp(t,e,r)}function m(t,e){this.x=t,this.y=e}Math.imul||(p=f),s.prototype.mulTo=function(t,e){var r,i=this.length+t.length;return r=10===this.length&&10===t.length?p(this,t,e):i<63?f(this,t,e):i<1024?function(t,e,r){r.negative=e.negative^t.negative,r.length=t.length+e.length;for(var i=0,n=0,s=0;s<r.length-1;s++){var o=n;n=0;for(var a=67108863&i,u=Math.min(s,e.length-1),h=Math.max(0,s-t.length+1);h<=u;h++){var c=s-h,l=(0|t.words[c])*(0|e.words[h]),d=67108863&l;a=67108863&(d=d+a|0),n+=(o=(o=o+(l/67108864|0)|0)+(d>>>26)|0)>>>26,o&=67108863}r.words[s]=a,i=o,o=n}return 0!==i?r.words[s]=i:r.length--,r.strip()}(this,t,e):g(this,t,e),r},m.prototype.makeRBT=function(t){for(var e=new Array(t),r=s.prototype._countBits(t)-1,i=0;i<t;i++)e[i]=this.revBin(i,r,t);return e},m.prototype.revBin=function(t,e,r){if(0===t||t===r-1)return t;for(var i=0,n=0;n<e;n++)i|=(1&t)<<e-n-1,t>>=1;return i},m.prototype.permute=function(t,e,r,i,n,s){for(var o=0;o<s;o++)i[o]=e[t[o]],n[o]=r[t[o]]},m.prototype.transform=function(t,e,r,i,n,s){this.permute(s,t,e,r,i,n);for(var o=1;o<n;o<<=1)for(var a=o<<1,u=Math.cos(2*Math.PI/a),h=Math.sin(2*Math.PI/a),c=0;c<n;c+=a)for(var l=u,d=h,f=0;f<o;f++){var p=r[c+f],g=i[c+f],m=r[c+f+o],y=i[c+f+o],v=l*m-d*y;y=l*y+d*m,m=v,r[c+f]=p+m,i[c+f]=g+y,r[c+f+o]=p-m,i[c+f+o]=g-y,f!==a&&(v=u*l-h*d,d=u*d+h*l,l=v)}},m.prototype.guessLen13b=function(t,e){var r=1|Math.max(e,t),i=1&r,n=0;for(r=r/2|0;r;r>>>=1)n++;return 1<<n+1+i},m.prototype.conjugate=function(t,e,r){if(!(r<=1))for(var i=0;i<r/2;i++){var n=t[i];t[i]=t[r-i-1],t[r-i-1]=n,n=e[i],e[i]=-e[r-i-1],e[r-i-1]=-n}},m.prototype.normalize13b=function(t,e){for(var r=0,i=0;i<e/2;i++){var n=8192*Math.round(t[2*i+1]/e)+Math.round(t[2*i]/e)+r;t[i]=67108863&n,r=n<67108864?0:n/67108864|0}return t},m.prototype.convert13b=function(t,e,r,n){for(var s=0,o=0;o<e;o++)s+=0|t[o],r[2*o]=8191&s,s>>>=13,r[2*o+1]=8191&s,s>>>=13;for(o=2*e;o<n;++o)r[o]=0;i(0===s),i(0==(-8192&s))},m.prototype.stub=function(t){for(var e=new Array(t),r=0;r<t;r++)e[r]=0;return e},m.prototype.mulp=function(t,e,r){var i=2*this.guessLen13b(t.length,e.length),n=this.makeRBT(i),s=this.stub(i),o=new Array(i),a=new Array(i),u=new Array(i),h=new Array(i),c=new Array(i),l=new Array(i),d=r.words;d.length=i,this.convert13b(t.words,t.length,o,i),this.convert13b(e.words,e.length,h,i),this.transform(o,s,a,u,i,n),this.transform(h,s,c,l,i,n);for(var f=0;f<i;f++){var p=a[f]*c[f]-u[f]*l[f];u[f]=a[f]*l[f]+u[f]*c[f],a[f]=p}return this.conjugate(a,u,i),this.transform(a,u,d,s,i,n),this.conjugate(d,s,i),this.normalize13b(d,i),r.negative=t.negative^e.negative,r.length=t.length+e.length,r.strip()},s.prototype.mul=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),this.mulTo(t,e)},s.prototype.mulf=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),g(this,t,e)},s.prototype.imul=function(t){return this.clone().mulTo(t,this)},s.prototype.imuln=function(t){i("number"==typeof t),i(t<67108864);for(var e=0,r=0;r<this.length;r++){var n=(0|this.words[r])*t,s=(67108863&n)+(67108863&e);e>>=26,e+=n/67108864|0,e+=s>>>26,this.words[r]=67108863&s}return 0!==e&&(this.words[r]=e,this.length++),this},s.prototype.muln=function(t){return this.clone().imuln(t)},s.prototype.sqr=function(){return this.mul(this)},s.prototype.isqr=function(){return this.imul(this.clone())},s.prototype.pow=function(t){var e=function(t){for(var e=new Array(t.bitLength()),r=0;r<e.length;r++){var i=r/26|0,n=r%26;e[r]=(t.words[i]&1<<n)>>>n}return e}(t);if(0===e.length)return new s(1);for(var r=this,i=0;i<e.length&&0===e[i];i++,r=r.sqr());if(++i<e.length)for(var n=r.sqr();i<e.length;i++,n=n.sqr())0!==e[i]&&(r=r.mul(n));return r},s.prototype.iushln=function(t){i("number"==typeof t&&t>=0);var e,r=t%26,n=(t-r)/26,s=67108863>>>26-r<<26-r;if(0!==r){var o=0;for(e=0;e<this.length;e++){var a=this.words[e]&s,u=(0|this.words[e])-a<<r;this.words[e]=u|o,o=a>>>26-r}o&&(this.words[e]=o,this.length++)}if(0!==n){for(e=this.length-1;e>=0;e--)this.words[e+n]=this.words[e];for(e=0;e<n;e++)this.words[e]=0;this.length+=n}return this.strip()},s.prototype.ishln=function(t){return i(0===this.negative),this.iushln(t)},s.prototype.iushrn=function(t,e,r){var n;i("number"==typeof t&&t>=0),n=e?(e-e%26)/26:0;var s=t%26,o=Math.min((t-s)/26,this.length),a=67108863^67108863>>>s<<s,u=r;if(n-=o,n=Math.max(0,n),u){for(var h=0;h<o;h++)u.words[h]=this.words[h];u.length=o}if(0===o);else if(this.length>o)for(this.length-=o,h=0;h<this.length;h++)this.words[h]=this.words[h+o];else this.words[0]=0,this.length=1;var c=0;for(h=this.length-1;h>=0&&(0!==c||h>=n);h--){var l=0|this.words[h];this.words[h]=c<<26-s|l>>>s,c=l&a}return u&&0!==c&&(u.words[u.length++]=c),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},s.prototype.ishrn=function(t,e,r){return i(0===this.negative),this.iushrn(t,e,r)},s.prototype.shln=function(t){return this.clone().ishln(t)},s.prototype.ushln=function(t){return this.clone().iushln(t)},s.prototype.shrn=function(t){return this.clone().ishrn(t)},s.prototype.ushrn=function(t){return this.clone().iushrn(t)},s.prototype.testn=function(t){i("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26,n=1<<e;return!(this.length<=r||!(this.words[r]&n))},s.prototype.imaskn=function(t){i("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26;if(i(0===this.negative,"imaskn works only with positive numbers"),this.length<=r)return this;if(0!==e&&r++,this.length=Math.min(r,this.length),0!==e){var n=67108863^67108863>>>e<<e;this.words[this.length-1]&=n}return this.strip()},s.prototype.maskn=function(t){return this.clone().imaskn(t)},s.prototype.iaddn=function(t){return i("number"==typeof t),i(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},s.prototype._iaddn=function(t){this.words[0]+=t;for(var e=0;e<this.length&&this.words[e]>=67108864;e++)this.words[e]-=67108864,e===this.length-1?this.words[e+1]=1:this.words[e+1]++;return this.length=Math.max(this.length,e+1),this},s.prototype.isubn=function(t){if(i("number"==typeof t),i(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var e=0;e<this.length&&this.words[e]<0;e++)this.words[e]+=67108864,this.words[e+1]-=1;return this.strip()},s.prototype.addn=function(t){return this.clone().iaddn(t)},s.prototype.subn=function(t){return this.clone().isubn(t)},s.prototype.iabs=function(){return this.negative=0,this},s.prototype.abs=function(){return this.clone().iabs()},s.prototype._ishlnsubmul=function(t,e,r){var n,s,o=t.length+r;this._expand(o);var a=0;for(n=0;n<t.length;n++){s=(0|this.words[n+r])+a;var u=(0|t.words[n])*e;a=((s-=67108863&u)>>26)-(u/67108864|0),this.words[n+r]=67108863&s}for(;n<this.length-r;n++)a=(s=(0|this.words[n+r])+a)>>26,this.words[n+r]=67108863&s;if(0===a)return this.strip();for(i(-1===a),a=0,n=0;n<this.length;n++)a=(s=-(0|this.words[n])+a)>>26,this.words[n]=67108863&s;return this.negative=1,this.strip()},s.prototype._wordDiv=function(t,e){var r=(this.length,t.length),i=this.clone(),n=t,o=0|n.words[n.length-1];0!=(r=26-this._countBits(o))&&(n=n.ushln(r),i.iushln(r),o=0|n.words[n.length-1]);var a,u=i.length-n.length;if("mod"!==e){(a=new s(null)).length=u+1,a.words=new Array(a.length);for(var h=0;h<a.length;h++)a.words[h]=0}var c=i.clone()._ishlnsubmul(n,1,u);0===c.negative&&(i=c,a&&(a.words[u]=1));for(var l=u-1;l>=0;l--){var d=67108864*(0|i.words[n.length+l])+(0|i.words[n.length+l-1]);for(d=Math.min(d/o|0,67108863),i._ishlnsubmul(n,d,l);0!==i.negative;)d--,i.negative=0,i._ishlnsubmul(n,1,l),i.isZero()||(i.negative^=1);a&&(a.words[l]=d)}return a&&a.strip(),i.strip(),"div"!==e&&0!==r&&i.iushrn(r),{div:a||null,mod:i}},s.prototype.divmod=function(t,e,r){return i(!t.isZero()),this.isZero()?{div:new s(0),mod:new s(0)}:0!==this.negative&&0===t.negative?(a=this.neg().divmod(t,e),"mod"!==e&&(n=a.div.neg()),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.iadd(t)),{div:n,mod:o}):0===this.negative&&0!==t.negative?(a=this.divmod(t.neg(),e),"mod"!==e&&(n=a.div.neg()),{div:n,mod:a.mod}):0!=(this.negative&t.negative)?(a=this.neg().divmod(t.neg(),e),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.isub(t)),{div:a.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new s(0),mod:this}:1===t.length?"div"===e?{div:this.divn(t.words[0]),mod:null}:"mod"===e?{div:null,mod:new s(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new s(this.modn(t.words[0]))}:this._wordDiv(t,e);var n,o,a},s.prototype.div=function(t){return this.divmod(t,"div",!1).div},s.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},s.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},s.prototype.divRound=function(t){var e=this.divmod(t);if(e.mod.isZero())return e.div;var r=0!==e.div.negative?e.mod.isub(t):e.mod,i=t.ushrn(1),n=t.andln(1),s=r.cmp(i);return s<0||1===n&&0===s?e.div:0!==e.div.negative?e.div.isubn(1):e.div.iaddn(1)},s.prototype.modn=function(t){i(t<=67108863);for(var e=(1<<26)%t,r=0,n=this.length-1;n>=0;n--)r=(e*r+(0|this.words[n]))%t;return r},s.prototype.idivn=function(t){i(t<=67108863);for(var e=0,r=this.length-1;r>=0;r--){var n=(0|this.words[r])+67108864*e;this.words[r]=n/t|0,e=n%t}return this.strip()},s.prototype.divn=function(t){return this.clone().idivn(t)},s.prototype.egcd=function(t){i(0===t.negative),i(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var n=new s(1),o=new s(0),a=new s(0),u=new s(1),h=0;e.isEven()&&r.isEven();)e.iushrn(1),r.iushrn(1),++h;for(var c=r.clone(),l=e.clone();!e.isZero();){for(var d=0,f=1;0==(e.words[0]&f)&&d<26;++d,f<<=1);if(d>0)for(e.iushrn(d);d-- >0;)(n.isOdd()||o.isOdd())&&(n.iadd(c),o.isub(l)),n.iushrn(1),o.iushrn(1);for(var p=0,g=1;0==(r.words[0]&g)&&p<26;++p,g<<=1);if(p>0)for(r.iushrn(p);p-- >0;)(a.isOdd()||u.isOdd())&&(a.iadd(c),u.isub(l)),a.iushrn(1),u.iushrn(1);e.cmp(r)>=0?(e.isub(r),n.isub(a),o.isub(u)):(r.isub(e),a.isub(n),u.isub(o))}return{a,b:u,gcd:r.iushln(h)}},s.prototype._invmp=function(t){i(0===t.negative),i(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var n,o=new s(1),a=new s(0),u=r.clone();e.cmpn(1)>0&&r.cmpn(1)>0;){for(var h=0,c=1;0==(e.words[0]&c)&&h<26;++h,c<<=1);if(h>0)for(e.iushrn(h);h-- >0;)o.isOdd()&&o.iadd(u),o.iushrn(1);for(var l=0,d=1;0==(r.words[0]&d)&&l<26;++l,d<<=1);if(l>0)for(r.iushrn(l);l-- >0;)a.isOdd()&&a.iadd(u),a.iushrn(1);e.cmp(r)>=0?(e.isub(r),o.isub(a)):(r.isub(e),a.isub(o))}return(n=0===e.cmpn(1)?o:a).cmpn(0)<0&&n.iadd(t),n},s.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var e=this.clone(),r=t.clone();e.negative=0,r.negative=0;for(var i=0;e.isEven()&&r.isEven();i++)e.iushrn(1),r.iushrn(1);for(;;){for(;e.isEven();)e.iushrn(1);for(;r.isEven();)r.iushrn(1);var n=e.cmp(r);if(n<0){var s=e;e=r,r=s}else if(0===n||0===r.cmpn(1))break;e.isub(r)}return r.iushln(i)},s.prototype.invm=function(t){return this.egcd(t).a.umod(t)},s.prototype.isEven=function(){return 0==(1&this.words[0])},s.prototype.isOdd=function(){return 1==(1&this.words[0])},s.prototype.andln=function(t){return this.words[0]&t},s.prototype.bincn=function(t){i("number"==typeof t);var e=t%26,r=(t-e)/26,n=1<<e;if(this.length<=r)return this._expand(r+1),this.words[r]|=n,this;for(var s=n,o=r;0!==s&&o<this.length;o++){var a=0|this.words[o];s=(a+=s)>>>26,a&=67108863,this.words[o]=a}return 0!==s&&(this.words[o]=s,this.length++),this},s.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},s.prototype.cmpn=function(t){var e,r=t<0;if(0!==this.negative&&!r)return-1;if(0===this.negative&&r)return 1;if(this.strip(),this.length>1)e=1;else{r&&(t=-t),i(t<=67108863,"Number is too big");var n=0|this.words[0];e=n===t?0:n<t?-1:1}return 0!==this.negative?0|-e:e},s.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var e=this.ucmp(t);return 0!==this.negative?0|-e:e},s.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var e=0,r=this.length-1;r>=0;r--){var i=0|this.words[r],n=0|t.words[r];if(i!==n){i<n?e=-1:i>n&&(e=1);break}}return e},s.prototype.gtn=function(t){return 1===this.cmpn(t)},s.prototype.gt=function(t){return 1===this.cmp(t)},s.prototype.gten=function(t){return this.cmpn(t)>=0},s.prototype.gte=function(t){return this.cmp(t)>=0},s.prototype.ltn=function(t){return-1===this.cmpn(t)},s.prototype.lt=function(t){return-1===this.cmp(t)},s.prototype.lten=function(t){return this.cmpn(t)<=0},s.prototype.lte=function(t){return this.cmp(t)<=0},s.prototype.eqn=function(t){return 0===this.cmpn(t)},s.prototype.eq=function(t){return 0===this.cmp(t)},s.red=function(t){return new N(t)},s.prototype.toRed=function(t){return i(!this.red,"Already a number in reduction context"),i(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},s.prototype.fromRed=function(){return i(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},s.prototype._forceRed=function(t){return this.red=t,this},s.prototype.forceRed=function(t){return i(!this.red,"Already a number in reduction context"),this._forceRed(t)},s.prototype.redAdd=function(t){return i(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},s.prototype.redIAdd=function(t){return i(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},s.prototype.redSub=function(t){return i(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},s.prototype.redISub=function(t){return i(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},s.prototype.redShl=function(t){return i(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},s.prototype.redMul=function(t){return i(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},s.prototype.redIMul=function(t){return i(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},s.prototype.redSqr=function(){return i(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},s.prototype.redISqr=function(){return i(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},s.prototype.redSqrt=function(){return i(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},s.prototype.redInvm=function(){return i(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},s.prototype.redNeg=function(){return i(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},s.prototype.redPow=function(t){return i(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var y={k256:null,p224:null,p192:null,p25519:null};function v(t,e){this.name=t,this.p=new s(e,16),this.n=this.p.bitLength(),this.k=new s(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function b(){v.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function w(){v.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function E(){v.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function S(){v.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function N(t){if("string"==typeof t){var e=s._prime(t);this.m=e.p,this.prime=e}else i(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function M(t){N.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new s(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}v.prototype._tmp=function(){var t=new s(null);return t.words=new Array(Math.ceil(this.n/13)),t},v.prototype.ireduce=function(t){var e,r=t;do{this.split(r,this.tmp),e=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(e>this.n);var i=e<this.n?-1:r.ucmp(this.p);return 0===i?(r.words[0]=0,r.length=1):i>0?r.isub(this.p):void 0!==r.strip?r.strip():r._strip(),r},v.prototype.split=function(t,e){t.iushrn(this.n,0,e)},v.prototype.imulK=function(t){return t.imul(this.k)},n(b,v),b.prototype.split=function(t,e){for(var r=4194303,i=Math.min(t.length,9),n=0;n<i;n++)e.words[n]=t.words[n];if(e.length=i,t.length<=9)return t.words[0]=0,void(t.length=1);var s=t.words[9];for(e.words[e.length++]=s&r,n=10;n<t.length;n++){var o=0|t.words[n];t.words[n-10]=(o&r)<<4|s>>>22,s=o}s>>>=22,t.words[n-10]=s,0===s&&t.length>10?t.length-=10:t.length-=9},b.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var e=0,r=0;r<t.length;r++){var i=0|t.words[r];e+=977*i,t.words[r]=67108863&e,e=64*i+(e/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},n(w,v),n(E,v),n(S,v),S.prototype.imulK=function(t){for(var e=0,r=0;r<t.length;r++){var i=19*(0|t.words[r])+e,n=67108863&i;i>>>=26,t.words[r]=n,e=i}return 0!==e&&(t.words[t.length++]=e),t},s._prime=function(t){if(y[t])return y[t];var e;if("k256"===t)e=new b;else if("p224"===t)e=new w;else if("p192"===t)e=new E;else{if("p25519"!==t)throw new Error("Unknown prime "+t);e=new S}return y[t]=e,e},N.prototype._verify1=function(t){i(0===t.negative,"red works only with positives"),i(t.red,"red works only with red numbers")},N.prototype._verify2=function(t,e){i(0==(t.negative|e.negative),"red works only with positives"),i(t.red&&t.red===e.red,"red works only with red numbers")},N.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},N.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},N.prototype.add=function(t,e){this._verify2(t,e);var r=t.add(e);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},N.prototype.iadd=function(t,e){this._verify2(t,e);var r=t.iadd(e);return r.cmp(this.m)>=0&&r.isub(this.m),r},N.prototype.sub=function(t,e){this._verify2(t,e);var r=t.sub(e);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},N.prototype.isub=function(t,e){this._verify2(t,e);var r=t.isub(e);return r.cmpn(0)<0&&r.iadd(this.m),r},N.prototype.shl=function(t,e){return this._verify1(t),this.imod(t.ushln(e))},N.prototype.imul=function(t,e){return this._verify2(t,e),this.imod(t.imul(e))},N.prototype.mul=function(t,e){return this._verify2(t,e),this.imod(t.mul(e))},N.prototype.isqr=function(t){return this.imul(t,t.clone())},N.prototype.sqr=function(t){return this.mul(t,t)},N.prototype.sqrt=function(t){if(t.isZero())return t.clone();var e=this.m.andln(3);if(i(e%2==1),3===e){var r=this.m.add(new s(1)).iushrn(2);return this.pow(t,r)}for(var n=this.m.subn(1),o=0;!n.isZero()&&0===n.andln(1);)o++,n.iushrn(1);i(!n.isZero());var a=new s(1).toRed(this),u=a.redNeg(),h=this.m.subn(1).iushrn(1),c=this.m.bitLength();for(c=new s(2*c*c).toRed(this);0!==this.pow(c,h).cmp(u);)c.redIAdd(u);for(var l=this.pow(c,n),d=this.pow(t,n.addn(1).iushrn(1)),f=this.pow(t,n),p=o;0!==f.cmp(a);){for(var g=f,m=0;0!==g.cmp(a);m++)g=g.redSqr();i(m<p);var y=this.pow(l,new s(1).iushln(p-m-1));d=d.redMul(y),l=y.redSqr(),f=f.redMul(l),p=m}return d},N.prototype.invm=function(t){var e=t._invmp(this.m);return 0!==e.negative?(e.negative=0,this.imod(e).redNeg()):this.imod(e)},N.prototype.pow=function(t,e){if(e.isZero())return new s(1).toRed(this);if(0===e.cmpn(1))return t.clone();var r=new Array(16);r[0]=new s(1).toRed(this),r[1]=t;for(var i=2;i<r.length;i++)r[i]=this.mul(r[i-1],t);var n=r[0],o=0,a=0,u=e.bitLength()%26;for(0===u&&(u=26),i=e.length-1;i>=0;i--){for(var h=e.words[i],c=u-1;c>=0;c--){var l=h>>c&1;n!==r[0]&&(n=this.sqr(n)),0!==l||0!==o?(o<<=1,o|=l,(4==++a||0===i&&0===c)&&(n=this.mul(n,r[o]),a=0,o=0)):a=0}u=26}return n},N.prototype.convertTo=function(t){var e=t.umod(this.m);return e===t?e.clone():e},N.prototype.convertFrom=function(t){var e=t.clone();return e.red=null,e},s.mont=function(t){return new M(t)},n(M,N),M.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},M.prototype.convertFrom=function(t){var e=this.imod(t.mul(this.rinv));return e.red=null,e},M.prototype.imul=function(t,e){if(t.isZero()||e.isZero())return t.words[0]=0,t.length=1,t;var r=t.imul(e),i=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=r.isub(i).iushrn(this.shift),s=n;return n.cmp(this.m)>=0?s=n.isub(this.m):n.cmpn(0)<0&&(s=n.iadd(this.m)),s._forceRed(this)},M.prototype.mul=function(t,e){if(t.isZero()||e.isZero())return new s(0)._forceRed(this);var r=t.mul(e),i=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=r.isub(i).iushrn(this.shift),o=n;return n.cmp(this.m)>=0?o=n.isub(this.m):n.cmpn(0)<0&&(o=n.iadd(this.m)),o._forceRed(this)},M.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=r.nmd(t),this)},6266:(t,e,r)=>{"use strict";var i=e;i.version=r(8597).i8,i.utils=r(953),i.rand=r(9931),i.curve=r(8254),i.curves=r(5427),i.ec=r(7954),i.eddsa=r(5980)},4918:(t,e,r)=>{"use strict";var i=r(3785),n=r(953),s=n.getNAF,o=n.getJSF,a=n.assert;function u(t,e){this.type=t,this.p=new i(e.p,16),this.red=e.prime?i.red(e.prime):i.mont(this.p),this.zero=new i(0).toRed(this.red),this.one=new i(1).toRed(this.red),this.two=new i(2).toRed(this.red),this.n=e.n&&new i(e.n,16),this.g=e.g&&this.pointFromJSON(e.g,e.gRed),this._wnafT1=new Array(4),this._wnafT2=new Array(4),this._wnafT3=new Array(4),this._wnafT4=new Array(4),this._bitLength=this.n?this.n.bitLength():0;var r=this.n&&this.p.div(this.n);!r||r.cmpn(100)>0?this.redN=null:(this._maxwellTrick=!0,this.redN=this.n.toRed(this.red))}function h(t,e){this.curve=t,this.type=e,this.precomputed=null}t.exports=u,u.prototype.point=function(){throw new Error("Not implemented")},u.prototype.validate=function(){throw new Error("Not implemented")},u.prototype._fixedNafMul=function(t,e){a(t.precomputed);var r=t._getDoubles(),i=s(e,1,this._bitLength),n=(1<<r.step+1)-(r.step%2==0?2:1);n/=3;var o,u,h=[];for(o=0;o<i.length;o+=r.step){u=0;for(var c=o+r.step-1;c>=o;c--)u=(u<<1)+i[c];h.push(u)}for(var l=this.jpoint(null,null,null),d=this.jpoint(null,null,null),f=n;f>0;f--){for(o=0;o<h.length;o++)(u=h[o])===f?d=d.mixedAdd(r.points[o]):u===-f&&(d=d.mixedAdd(r.points[o].neg()));l=l.add(d)}return l.toP()},u.prototype._wnafMul=function(t,e){var r=4,i=t._getNAFPoints(r);r=i.wnd;for(var n=i.points,o=s(e,r,this._bitLength),u=this.jpoint(null,null,null),h=o.length-1;h>=0;h--){for(var c=0;h>=0&&0===o[h];h--)c++;if(h>=0&&c++,u=u.dblp(c),h<0)break;var l=o[h];a(0!==l),u="affine"===t.type?l>0?u.mixedAdd(n[l-1>>1]):u.mixedAdd(n[-l-1>>1].neg()):l>0?u.add(n[l-1>>1]):u.add(n[-l-1>>1].neg())}return"affine"===t.type?u.toP():u},u.prototype._wnafMulAdd=function(t,e,r,i,n){var a,u,h,c=this._wnafT1,l=this._wnafT2,d=this._wnafT3,f=0;for(a=0;a<i;a++){var p=(h=e[a])._getNAFPoints(t);c[a]=p.wnd,l[a]=p.points}for(a=i-1;a>=1;a-=2){var g=a-1,m=a;if(1===c[g]&&1===c[m]){var y=[e[g],null,null,e[m]];0===e[g].y.cmp(e[m].y)?(y[1]=e[g].add(e[m]),y[2]=e[g].toJ().mixedAdd(e[m].neg())):0===e[g].y.cmp(e[m].y.redNeg())?(y[1]=e[g].toJ().mixedAdd(e[m]),y[2]=e[g].add(e[m].neg())):(y[1]=e[g].toJ().mixedAdd(e[m]),y[2]=e[g].toJ().mixedAdd(e[m].neg()));var v=[-3,-1,-5,-7,0,7,5,1,3],b=o(r[g],r[m]);for(f=Math.max(b[0].length,f),d[g]=new Array(f),d[m]=new Array(f),u=0;u<f;u++){var w=0|b[0][u],E=0|b[1][u];d[g][u]=v[3*(w+1)+(E+1)],d[m][u]=0,l[g]=y}}else d[g]=s(r[g],c[g],this._bitLength),d[m]=s(r[m],c[m],this._bitLength),f=Math.max(d[g].length,f),f=Math.max(d[m].length,f)}var S=this.jpoint(null,null,null),N=this._wnafT4;for(a=f;a>=0;a--){for(var M=0;a>=0;){var x=!0;for(u=0;u<i;u++)N[u]=0|d[u][a],0!==N[u]&&(x=!1);if(!x)break;M++,a--}if(a>=0&&M++,S=S.dblp(M),a<0)break;for(u=0;u<i;u++){var I=N[u];0!==I&&(I>0?h=l[u][I-1>>1]:I<0&&(h=l[u][-I-1>>1].neg()),S="affine"===h.type?S.mixedAdd(h):S.add(h))}}for(a=0;a<i;a++)l[a]=null;return n?S:S.toP()},u.BasePoint=h,h.prototype.eq=function(){throw new Error("Not implemented")},h.prototype.validate=function(){return this.curve.validate(this)},u.prototype.decodePoint=function(t,e){t=n.toArray(t,e);var r=this.p.byteLength();if((4===t[0]||6===t[0]||7===t[0])&&t.length-1==2*r)return 6===t[0]?a(t[t.length-1]%2==0):7===t[0]&&a(t[t.length-1]%2==1),this.point(t.slice(1,1+r),t.slice(1+r,1+2*r));if((2===t[0]||3===t[0])&&t.length-1===r)return this.pointFromX(t.slice(1,1+r),3===t[0]);throw new Error("Unknown point format")},h.prototype.encodeCompressed=function(t){return this.encode(t,!0)},h.prototype._encode=function(t){var e=this.curve.p.byteLength(),r=this.getX().toArray("be",e);return t?[this.getY().isEven()?2:3].concat(r):[4].concat(r,this.getY().toArray("be",e))},h.prototype.encode=function(t,e){return n.encode(this._encode(e),t)},h.prototype.precompute=function(t){if(this.precomputed)return this;var e={doubles:null,naf:null,beta:null};return e.naf=this._getNAFPoints(8),e.doubles=this._getDoubles(4,t),e.beta=this._getBeta(),this.precomputed=e,this},h.prototype._hasDoubles=function(t){if(!this.precomputed)return!1;var e=this.precomputed.doubles;return!!e&&e.points.length>=Math.ceil((t.bitLength()+1)/e.step)},h.prototype._getDoubles=function(t,e){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;for(var r=[this],i=this,n=0;n<e;n+=t){for(var s=0;s<t;s++)i=i.dbl();r.push(i)}return{step:t,points:r}},h.prototype._getNAFPoints=function(t){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;for(var e=[this],r=(1<<t)-1,i=1===r?null:this.dbl(),n=1;n<r;n++)e[n]=e[n-1].add(i);return{wnd:t,points:e}},h.prototype._getBeta=function(){return null},h.prototype.dblp=function(t){for(var e=this,r=0;r<t;r++)e=e.dbl();return e}},1138:(t,e,r)=>{"use strict";var i=r(953),n=r(3785),s=r(5717),o=r(4918),a=i.assert;function u(t){this.twisted=1!=(0|t.a),this.mOneA=this.twisted&&-1==(0|t.a),this.extended=this.mOneA,o.call(this,"edwards",t),this.a=new n(t.a,16).umod(this.red.m),this.a=this.a.toRed(this.red),this.c=new n(t.c,16).toRed(this.red),this.c2=this.c.redSqr(),this.d=new n(t.d,16).toRed(this.red),this.dd=this.d.redAdd(this.d),a(!this.twisted||0===this.c.fromRed().cmpn(1)),this.oneC=1==(0|t.c)}function h(t,e,r,i,s){o.BasePoint.call(this,t,"projective"),null===e&&null===r&&null===i?(this.x=this.curve.zero,this.y=this.curve.one,this.z=this.curve.one,this.t=this.curve.zero,this.zOne=!0):(this.x=new n(e,16),this.y=new n(r,16),this.z=i?new n(i,16):this.curve.one,this.t=s&&new n(s,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.t&&!this.t.red&&(this.t=this.t.toRed(this.curve.red)),this.zOne=this.z===this.curve.one,this.curve.extended&&!this.t&&(this.t=this.x.redMul(this.y),this.zOne||(this.t=this.t.redMul(this.z.redInvm()))))}s(u,o),t.exports=u,u.prototype._mulA=function(t){return this.mOneA?t.redNeg():this.a.redMul(t)},u.prototype._mulC=function(t){return this.oneC?t:this.c.redMul(t)},u.prototype.jpoint=function(t,e,r,i){return this.point(t,e,r,i)},u.prototype.pointFromX=function(t,e){(t=new n(t,16)).red||(t=t.toRed(this.red));var r=t.redSqr(),i=this.c2.redSub(this.a.redMul(r)),s=this.one.redSub(this.c2.redMul(this.d).redMul(r)),o=i.redMul(s.redInvm()),a=o.redSqrt();if(0!==a.redSqr().redSub(o).cmp(this.zero))throw new Error("invalid point");var u=a.fromRed().isOdd();return(e&&!u||!e&&u)&&(a=a.redNeg()),this.point(t,a)},u.prototype.pointFromY=function(t,e){(t=new n(t,16)).red||(t=t.toRed(this.red));var r=t.redSqr(),i=r.redSub(this.c2),s=r.redMul(this.d).redMul(this.c2).redSub(this.a),o=i.redMul(s.redInvm());if(0===o.cmp(this.zero)){if(e)throw new Error("invalid point");return this.point(this.zero,t)}var a=o.redSqrt();if(0!==a.redSqr().redSub(o).cmp(this.zero))throw new Error("invalid point");return a.fromRed().isOdd()!==e&&(a=a.redNeg()),this.point(a,t)},u.prototype.validate=function(t){if(t.isInfinity())return!0;t.normalize();var e=t.x.redSqr(),r=t.y.redSqr(),i=e.redMul(this.a).redAdd(r),n=this.c2.redMul(this.one.redAdd(this.d.redMul(e).redMul(r)));return 0===i.cmp(n)},s(h,o.BasePoint),u.prototype.pointFromJSON=function(t){return h.fromJSON(this,t)},u.prototype.point=function(t,e,r,i){return new h(this,t,e,r,i)},h.fromJSON=function(t,e){return new h(t,e[0],e[1],e[2])},h.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},h.prototype.isInfinity=function(){return 0===this.x.cmpn(0)&&(0===this.y.cmp(this.z)||this.zOne&&0===this.y.cmp(this.curve.c))},h.prototype._extDbl=function(){var t=this.x.redSqr(),e=this.y.redSqr(),r=this.z.redSqr();r=r.redIAdd(r);var i=this.curve._mulA(t),n=this.x.redAdd(this.y).redSqr().redISub(t).redISub(e),s=i.redAdd(e),o=s.redSub(r),a=i.redSub(e),u=n.redMul(o),h=s.redMul(a),c=n.redMul(a),l=o.redMul(s);return this.curve.point(u,h,l,c)},h.prototype._projDbl=function(){var t,e,r,i,n,s,o=this.x.redAdd(this.y).redSqr(),a=this.x.redSqr(),u=this.y.redSqr();if(this.curve.twisted){var h=(i=this.curve._mulA(a)).redAdd(u);this.zOne?(t=o.redSub(a).redSub(u).redMul(h.redSub(this.curve.two)),e=h.redMul(i.redSub(u)),r=h.redSqr().redSub(h).redSub(h)):(n=this.z.redSqr(),s=h.redSub(n).redISub(n),t=o.redSub(a).redISub(u).redMul(s),e=h.redMul(i.redSub(u)),r=h.redMul(s))}else i=a.redAdd(u),n=this.curve._mulC(this.z).redSqr(),s=i.redSub(n).redSub(n),t=this.curve._mulC(o.redISub(i)).redMul(s),e=this.curve._mulC(i).redMul(a.redISub(u)),r=i.redMul(s);return this.curve.point(t,e,r)},h.prototype.dbl=function(){return this.isInfinity()?this:this.curve.extended?this._extDbl():this._projDbl()},h.prototype._extAdd=function(t){var e=this.y.redSub(this.x).redMul(t.y.redSub(t.x)),r=this.y.redAdd(this.x).redMul(t.y.redAdd(t.x)),i=this.t.redMul(this.curve.dd).redMul(t.t),n=this.z.redMul(t.z.redAdd(t.z)),s=r.redSub(e),o=n.redSub(i),a=n.redAdd(i),u=r.redAdd(e),h=s.redMul(o),c=a.redMul(u),l=s.redMul(u),d=o.redMul(a);return this.curve.point(h,c,d,l)},h.prototype._projAdd=function(t){var e,r,i=this.z.redMul(t.z),n=i.redSqr(),s=this.x.redMul(t.x),o=this.y.redMul(t.y),a=this.curve.d.redMul(s).redMul(o),u=n.redSub(a),h=n.redAdd(a),c=this.x.redAdd(this.y).redMul(t.x.redAdd(t.y)).redISub(s).redISub(o),l=i.redMul(u).redMul(c);return this.curve.twisted?(e=i.redMul(h).redMul(o.redSub(this.curve._mulA(s))),r=u.redMul(h)):(e=i.redMul(h).redMul(o.redSub(s)),r=this.curve._mulC(u).redMul(h)),this.curve.point(l,e,r)},h.prototype.add=function(t){return this.isInfinity()?t:t.isInfinity()?this:this.curve.extended?this._extAdd(t):this._projAdd(t)},h.prototype.mul=function(t){return this._hasDoubles(t)?this.curve._fixedNafMul(this,t):this.curve._wnafMul(this,t)},h.prototype.mulAdd=function(t,e,r){return this.curve._wnafMulAdd(1,[this,e],[t,r],2,!1)},h.prototype.jmulAdd=function(t,e,r){return this.curve._wnafMulAdd(1,[this,e],[t,r],2,!0)},h.prototype.normalize=function(){if(this.zOne)return this;var t=this.z.redInvm();return this.x=this.x.redMul(t),this.y=this.y.redMul(t),this.t&&(this.t=this.t.redMul(t)),this.z=this.curve.one,this.zOne=!0,this},h.prototype.neg=function(){return this.curve.point(this.x.redNeg(),this.y,this.z,this.t&&this.t.redNeg())},h.prototype.getX=function(){return this.normalize(),this.x.fromRed()},h.prototype.getY=function(){return this.normalize(),this.y.fromRed()},h.prototype.eq=function(t){return this===t||0===this.getX().cmp(t.getX())&&0===this.getY().cmp(t.getY())},h.prototype.eqXToP=function(t){var e=t.toRed(this.curve.red).redMul(this.z);if(0===this.x.cmp(e))return!0;for(var r=t.clone(),i=this.curve.redN.redMul(this.z);;){if(r.iadd(this.curve.n),r.cmp(this.curve.p)>=0)return!1;if(e.redIAdd(i),0===this.x.cmp(e))return!0}},h.prototype.toP=h.prototype.normalize,h.prototype.mixedAdd=h.prototype.add},8254:(t,e,r)=>{"use strict";var i=e;i.base=r(4918),i.short=r(6673),i.mont=r(2881),i.edwards=r(1138)},2881:(t,e,r)=>{"use strict";var i=r(3785),n=r(5717),s=r(4918),o=r(953);function a(t){s.call(this,"mont",t),this.a=new i(t.a,16).toRed(this.red),this.b=new i(t.b,16).toRed(this.red),this.i4=new i(4).toRed(this.red).redInvm(),this.two=new i(2).toRed(this.red),this.a24=this.i4.redMul(this.a.redAdd(this.two))}function u(t,e,r){s.BasePoint.call(this,t,"projective"),null===e&&null===r?(this.x=this.curve.one,this.z=this.curve.zero):(this.x=new i(e,16),this.z=new i(r,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)))}n(a,s),t.exports=a,a.prototype.validate=function(t){var e=t.normalize().x,r=e.redSqr(),i=r.redMul(e).redAdd(r.redMul(this.a)).redAdd(e);return 0===i.redSqrt().redSqr().cmp(i)},n(u,s.BasePoint),a.prototype.decodePoint=function(t,e){return this.point(o.toArray(t,e),1)},a.prototype.point=function(t,e){return new u(this,t,e)},a.prototype.pointFromJSON=function(t){return u.fromJSON(this,t)},u.prototype.precompute=function(){},u.prototype._encode=function(){return this.getX().toArray("be",this.curve.p.byteLength())},u.fromJSON=function(t,e){return new u(t,e[0],e[1]||t.one)},u.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},u.prototype.isInfinity=function(){return 0===this.z.cmpn(0)},u.prototype.dbl=function(){var t=this.x.redAdd(this.z).redSqr(),e=this.x.redSub(this.z).redSqr(),r=t.redSub(e),i=t.redMul(e),n=r.redMul(e.redAdd(this.curve.a24.redMul(r)));return this.curve.point(i,n)},u.prototype.add=function(){throw new Error("Not supported on Montgomery curve")},u.prototype.diffAdd=function(t,e){var r=this.x.redAdd(this.z),i=this.x.redSub(this.z),n=t.x.redAdd(t.z),s=t.x.redSub(t.z).redMul(r),o=n.redMul(i),a=e.z.redMul(s.redAdd(o).redSqr()),u=e.x.redMul(s.redISub(o).redSqr());return this.curve.point(a,u)},u.prototype.mul=function(t){for(var e=t.clone(),r=this,i=this.curve.point(null,null),n=[];0!==e.cmpn(0);e.iushrn(1))n.push(e.andln(1));for(var s=n.length-1;s>=0;s--)0===n[s]?(r=r.diffAdd(i,this),i=i.dbl()):(i=r.diffAdd(i,this),r=r.dbl());return i},u.prototype.mulAdd=function(){throw new Error("Not supported on Montgomery curve")},u.prototype.jumlAdd=function(){throw new Error("Not supported on Montgomery curve")},u.prototype.eq=function(t){return 0===this.getX().cmp(t.getX())},u.prototype.normalize=function(){return this.x=this.x.redMul(this.z.redInvm()),this.z=this.curve.one,this},u.prototype.getX=function(){return this.normalize(),this.x.fromRed()}},6673:(t,e,r)=>{"use strict";var i=r(953),n=r(3785),s=r(5717),o=r(4918),a=i.assert;function u(t){o.call(this,"short",t),this.a=new n(t.a,16).toRed(this.red),this.b=new n(t.b,16).toRed(this.red),this.tinv=this.two.redInvm(),this.zeroA=0===this.a.fromRed().cmpn(0),this.threeA=0===this.a.fromRed().sub(this.p).cmpn(-3),this.endo=this._getEndomorphism(t),this._endoWnafT1=new Array(4),this._endoWnafT2=new Array(4)}function h(t,e,r,i){o.BasePoint.call(this,t,"affine"),null===e&&null===r?(this.x=null,this.y=null,this.inf=!0):(this.x=new n(e,16),this.y=new n(r,16),i&&(this.x.forceRed(this.curve.red),this.y.forceRed(this.curve.red)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.inf=!1)}function c(t,e,r,i){o.BasePoint.call(this,t,"jacobian"),null===e&&null===r&&null===i?(this.x=this.curve.one,this.y=this.curve.one,this.z=new n(0)):(this.x=new n(e,16),this.y=new n(r,16),this.z=new n(i,16)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.zOne=this.z===this.curve.one}s(u,o),t.exports=u,u.prototype._getEndomorphism=function(t){if(this.zeroA&&this.g&&this.n&&1===this.p.modn(3)){var e,r;if(t.beta)e=new n(t.beta,16).toRed(this.red);else{var i=this._getEndoRoots(this.p);e=(e=i[0].cmp(i[1])<0?i[0]:i[1]).toRed(this.red)}if(t.lambda)r=new n(t.lambda,16);else{var s=this._getEndoRoots(this.n);0===this.g.mul(s[0]).x.cmp(this.g.x.redMul(e))?r=s[0]:(r=s[1],a(0===this.g.mul(r).x.cmp(this.g.x.redMul(e))))}return{beta:e,lambda:r,basis:t.basis?t.basis.map((function(t){return{a:new n(t.a,16),b:new n(t.b,16)}})):this._getEndoBasis(r)}}},u.prototype._getEndoRoots=function(t){var e=t===this.p?this.red:n.mont(t),r=new n(2).toRed(e).redInvm(),i=r.redNeg(),s=new n(3).toRed(e).redNeg().redSqrt().redMul(r);return[i.redAdd(s).fromRed(),i.redSub(s).fromRed()]},u.prototype._getEndoBasis=function(t){for(var e,r,i,s,o,a,u,h,c,l=this.n.ushrn(Math.floor(this.n.bitLength()/2)),d=t,f=this.n.clone(),p=new n(1),g=new n(0),m=new n(0),y=new n(1),v=0;0!==d.cmpn(0);){var b=f.div(d);h=f.sub(b.mul(d)),c=m.sub(b.mul(p));var w=y.sub(b.mul(g));if(!i&&h.cmp(l)<0)e=u.neg(),r=p,i=h.neg(),s=c;else if(i&&2==++v)break;u=h,f=d,d=h,m=p,p=c,y=g,g=w}o=h.neg(),a=c;var E=i.sqr().add(s.sqr());return o.sqr().add(a.sqr()).cmp(E)>=0&&(o=e,a=r),i.negative&&(i=i.neg(),s=s.neg()),o.negative&&(o=o.neg(),a=a.neg()),[{a:i,b:s},{a:o,b:a}]},u.prototype._endoSplit=function(t){var e=this.endo.basis,r=e[0],i=e[1],n=i.b.mul(t).divRound(this.n),s=r.b.neg().mul(t).divRound(this.n),o=n.mul(r.a),a=s.mul(i.a),u=n.mul(r.b),h=s.mul(i.b);return{k1:t.sub(o).sub(a),k2:u.add(h).neg()}},u.prototype.pointFromX=function(t,e){(t=new n(t,16)).red||(t=t.toRed(this.red));var r=t.redSqr().redMul(t).redIAdd(t.redMul(this.a)).redIAdd(this.b),i=r.redSqrt();if(0!==i.redSqr().redSub(r).cmp(this.zero))throw new Error("invalid point");var s=i.fromRed().isOdd();return(e&&!s||!e&&s)&&(i=i.redNeg()),this.point(t,i)},u.prototype.validate=function(t){if(t.inf)return!0;var e=t.x,r=t.y,i=this.a.redMul(e),n=e.redSqr().redMul(e).redIAdd(i).redIAdd(this.b);return 0===r.redSqr().redISub(n).cmpn(0)},u.prototype._endoWnafMulAdd=function(t,e,r){for(var i=this._endoWnafT1,n=this._endoWnafT2,s=0;s<t.length;s++){var o=this._endoSplit(e[s]),a=t[s],u=a._getBeta();o.k1.negative&&(o.k1.ineg(),a=a.neg(!0)),o.k2.negative&&(o.k2.ineg(),u=u.neg(!0)),i[2*s]=a,i[2*s+1]=u,n[2*s]=o.k1,n[2*s+1]=o.k2}for(var h=this._wnafMulAdd(1,i,n,2*s,r),c=0;c<2*s;c++)i[c]=null,n[c]=null;return h},s(h,o.BasePoint),u.prototype.point=function(t,e,r){return new h(this,t,e,r)},u.prototype.pointFromJSON=function(t,e){return h.fromJSON(this,t,e)},h.prototype._getBeta=function(){if(this.curve.endo){var t=this.precomputed;if(t&&t.beta)return t.beta;var e=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(t){var r=this.curve,i=function(t){return r.point(t.x.redMul(r.endo.beta),t.y)};t.beta=e,e.precomputed={beta:null,naf:t.naf&&{wnd:t.naf.wnd,points:t.naf.points.map(i)},doubles:t.doubles&&{step:t.doubles.step,points:t.doubles.points.map(i)}}}return e}},h.prototype.toJSON=function(){return this.precomputed?[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]:[this.x,this.y]},h.fromJSON=function(t,e,r){"string"==typeof e&&(e=JSON.parse(e));var i=t.point(e[0],e[1],r);if(!e[2])return i;function n(e){return t.point(e[0],e[1],r)}var s=e[2];return i.precomputed={beta:null,doubles:s.doubles&&{step:s.doubles.step,points:[i].concat(s.doubles.points.map(n))},naf:s.naf&&{wnd:s.naf.wnd,points:[i].concat(s.naf.points.map(n))}},i},h.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+">"},h.prototype.isInfinity=function(){return this.inf},h.prototype.add=function(t){if(this.inf)return t;if(t.inf)return this;if(this.eq(t))return this.dbl();if(this.neg().eq(t))return this.curve.point(null,null);if(0===this.x.cmp(t.x))return this.curve.point(null,null);var e=this.y.redSub(t.y);0!==e.cmpn(0)&&(e=e.redMul(this.x.redSub(t.x).redInvm()));var r=e.redSqr().redISub(this.x).redISub(t.x),i=e.redMul(this.x.redSub(r)).redISub(this.y);return this.curve.point(r,i)},h.prototype.dbl=function(){if(this.inf)return this;var t=this.y.redAdd(this.y);if(0===t.cmpn(0))return this.curve.point(null,null);var e=this.curve.a,r=this.x.redSqr(),i=t.redInvm(),n=r.redAdd(r).redIAdd(r).redIAdd(e).redMul(i),s=n.redSqr().redISub(this.x.redAdd(this.x)),o=n.redMul(this.x.redSub(s)).redISub(this.y);return this.curve.point(s,o)},h.prototype.getX=function(){return this.x.fromRed()},h.prototype.getY=function(){return this.y.fromRed()},h.prototype.mul=function(t){return t=new n(t,16),this.isInfinity()?this:this._hasDoubles(t)?this.curve._fixedNafMul(this,t):this.curve.endo?this.curve._endoWnafMulAdd([this],[t]):this.curve._wnafMul(this,t)},h.prototype.mulAdd=function(t,e,r){var i=[this,e],n=[t,r];return this.curve.endo?this.curve._endoWnafMulAdd(i,n):this.curve._wnafMulAdd(1,i,n,2)},h.prototype.jmulAdd=function(t,e,r){var i=[this,e],n=[t,r];return this.curve.endo?this.curve._endoWnafMulAdd(i,n,!0):this.curve._wnafMulAdd(1,i,n,2,!0)},h.prototype.eq=function(t){return this===t||this.inf===t.inf&&(this.inf||0===this.x.cmp(t.x)&&0===this.y.cmp(t.y))},h.prototype.neg=function(t){if(this.inf)return this;var e=this.curve.point(this.x,this.y.redNeg());if(t&&this.precomputed){var r=this.precomputed,i=function(t){return t.neg()};e.precomputed={naf:r.naf&&{wnd:r.naf.wnd,points:r.naf.points.map(i)},doubles:r.doubles&&{step:r.doubles.step,points:r.doubles.points.map(i)}}}return e},h.prototype.toJ=function(){return this.inf?this.curve.jpoint(null,null,null):this.curve.jpoint(this.x,this.y,this.curve.one)},s(c,o.BasePoint),u.prototype.jpoint=function(t,e,r){return new c(this,t,e,r)},c.prototype.toP=function(){if(this.isInfinity())return this.curve.point(null,null);var t=this.z.redInvm(),e=t.redSqr(),r=this.x.redMul(e),i=this.y.redMul(e).redMul(t);return this.curve.point(r,i)},c.prototype.neg=function(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)},c.prototype.add=function(t){if(this.isInfinity())return t;if(t.isInfinity())return this;var e=t.z.redSqr(),r=this.z.redSqr(),i=this.x.redMul(e),n=t.x.redMul(r),s=this.y.redMul(e.redMul(t.z)),o=t.y.redMul(r.redMul(this.z)),a=i.redSub(n),u=s.redSub(o);if(0===a.cmpn(0))return 0!==u.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var h=a.redSqr(),c=h.redMul(a),l=i.redMul(h),d=u.redSqr().redIAdd(c).redISub(l).redISub(l),f=u.redMul(l.redISub(d)).redISub(s.redMul(c)),p=this.z.redMul(t.z).redMul(a);return this.curve.jpoint(d,f,p)},c.prototype.mixedAdd=function(t){if(this.isInfinity())return t.toJ();if(t.isInfinity())return this;var e=this.z.redSqr(),r=this.x,i=t.x.redMul(e),n=this.y,s=t.y.redMul(e).redMul(this.z),o=r.redSub(i),a=n.redSub(s);if(0===o.cmpn(0))return 0!==a.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var u=o.redSqr(),h=u.redMul(o),c=r.redMul(u),l=a.redSqr().redIAdd(h).redISub(c).redISub(c),d=a.redMul(c.redISub(l)).redISub(n.redMul(h)),f=this.z.redMul(o);return this.curve.jpoint(l,d,f)},c.prototype.dblp=function(t){if(0===t)return this;if(this.isInfinity())return this;if(!t)return this.dbl();var e;if(this.curve.zeroA||this.curve.threeA){var r=this;for(e=0;e<t;e++)r=r.dbl();return r}var i=this.curve.a,n=this.curve.tinv,s=this.x,o=this.y,a=this.z,u=a.redSqr().redSqr(),h=o.redAdd(o);for(e=0;e<t;e++){var c=s.redSqr(),l=h.redSqr(),d=l.redSqr(),f=c.redAdd(c).redIAdd(c).redIAdd(i.redMul(u)),p=s.redMul(l),g=f.redSqr().redISub(p.redAdd(p)),m=p.redISub(g),y=f.redMul(m);y=y.redIAdd(y).redISub(d);var v=h.redMul(a);e+1<t&&(u=u.redMul(d)),s=g,a=v,h=y}return this.curve.jpoint(s,h.redMul(n),a)},c.prototype.dbl=function(){return this.isInfinity()?this:this.curve.zeroA?this._zeroDbl():this.curve.threeA?this._threeDbl():this._dbl()},c.prototype._zeroDbl=function(){var t,e,r;if(this.zOne){var i=this.x.redSqr(),n=this.y.redSqr(),s=n.redSqr(),o=this.x.redAdd(n).redSqr().redISub(i).redISub(s);o=o.redIAdd(o);var a=i.redAdd(i).redIAdd(i),u=a.redSqr().redISub(o).redISub(o),h=s.redIAdd(s);h=(h=h.redIAdd(h)).redIAdd(h),t=u,e=a.redMul(o.redISub(u)).redISub(h),r=this.y.redAdd(this.y)}else{var c=this.x.redSqr(),l=this.y.redSqr(),d=l.redSqr(),f=this.x.redAdd(l).redSqr().redISub(c).redISub(d);f=f.redIAdd(f);var p=c.redAdd(c).redIAdd(c),g=p.redSqr(),m=d.redIAdd(d);m=(m=m.redIAdd(m)).redIAdd(m),t=g.redISub(f).redISub(f),e=p.redMul(f.redISub(t)).redISub(m),r=(r=this.y.redMul(this.z)).redIAdd(r)}return this.curve.jpoint(t,e,r)},c.prototype._threeDbl=function(){var t,e,r;if(this.zOne){var i=this.x.redSqr(),n=this.y.redSqr(),s=n.redSqr(),o=this.x.redAdd(n).redSqr().redISub(i).redISub(s);o=o.redIAdd(o);var a=i.redAdd(i).redIAdd(i).redIAdd(this.curve.a),u=a.redSqr().redISub(o).redISub(o);t=u;var h=s.redIAdd(s);h=(h=h.redIAdd(h)).redIAdd(h),e=a.redMul(o.redISub(u)).redISub(h),r=this.y.redAdd(this.y)}else{var c=this.z.redSqr(),l=this.y.redSqr(),d=this.x.redMul(l),f=this.x.redSub(c).redMul(this.x.redAdd(c));f=f.redAdd(f).redIAdd(f);var p=d.redIAdd(d),g=(p=p.redIAdd(p)).redAdd(p);t=f.redSqr().redISub(g),r=this.y.redAdd(this.z).redSqr().redISub(l).redISub(c);var m=l.redSqr();m=(m=(m=m.redIAdd(m)).redIAdd(m)).redIAdd(m),e=f.redMul(p.redISub(t)).redISub(m)}return this.curve.jpoint(t,e,r)},c.prototype._dbl=function(){var t=this.curve.a,e=this.x,r=this.y,i=this.z,n=i.redSqr().redSqr(),s=e.redSqr(),o=r.redSqr(),a=s.redAdd(s).redIAdd(s).redIAdd(t.redMul(n)),u=e.redAdd(e),h=(u=u.redIAdd(u)).redMul(o),c=a.redSqr().redISub(h.redAdd(h)),l=h.redISub(c),d=o.redSqr();d=(d=(d=d.redIAdd(d)).redIAdd(d)).redIAdd(d);var f=a.redMul(l).redISub(d),p=r.redAdd(r).redMul(i);return this.curve.jpoint(c,f,p)},c.prototype.trpl=function(){if(!this.curve.zeroA)return this.dbl().add(this);var t=this.x.redSqr(),e=this.y.redSqr(),r=this.z.redSqr(),i=e.redSqr(),n=t.redAdd(t).redIAdd(t),s=n.redSqr(),o=this.x.redAdd(e).redSqr().redISub(t).redISub(i),a=(o=(o=(o=o.redIAdd(o)).redAdd(o).redIAdd(o)).redISub(s)).redSqr(),u=i.redIAdd(i);u=(u=(u=u.redIAdd(u)).redIAdd(u)).redIAdd(u);var h=n.redIAdd(o).redSqr().redISub(s).redISub(a).redISub(u),c=e.redMul(h);c=(c=c.redIAdd(c)).redIAdd(c);var l=this.x.redMul(a).redISub(c);l=(l=l.redIAdd(l)).redIAdd(l);var d=this.y.redMul(h.redMul(u.redISub(h)).redISub(o.redMul(a)));d=(d=(d=d.redIAdd(d)).redIAdd(d)).redIAdd(d);var f=this.z.redAdd(o).redSqr().redISub(r).redISub(a);return this.curve.jpoint(l,d,f)},c.prototype.mul=function(t,e){return t=new n(t,e),this.curve._wnafMul(this,t)},c.prototype.eq=function(t){if("affine"===t.type)return this.eq(t.toJ());if(this===t)return!0;var e=this.z.redSqr(),r=t.z.redSqr();if(0!==this.x.redMul(r).redISub(t.x.redMul(e)).cmpn(0))return!1;var i=e.redMul(this.z),n=r.redMul(t.z);return 0===this.y.redMul(n).redISub(t.y.redMul(i)).cmpn(0)},c.prototype.eqXToP=function(t){var e=this.z.redSqr(),r=t.toRed(this.curve.red).redMul(e);if(0===this.x.cmp(r))return!0;for(var i=t.clone(),n=this.curve.redN.redMul(e);;){if(i.iadd(this.curve.n),i.cmp(this.curve.p)>=0)return!1;if(r.redIAdd(n),0===this.x.cmp(r))return!0}},c.prototype.inspect=function(){return this.isInfinity()?"<EC JPoint Infinity>":"<EC JPoint x: "+this.x.toString(16,2)+" y: "+this.y.toString(16,2)+" z: "+this.z.toString(16,2)+">"},c.prototype.isInfinity=function(){return 0===this.z.cmpn(0)}},5427:(t,e,r)=>{"use strict";var i,n=e,s=r(3715),o=r(8254),a=r(953).assert;function u(t){"short"===t.type?this.curve=new o.short(t):"edwards"===t.type?this.curve=new o.edwards(t):this.curve=new o.mont(t),this.g=this.curve.g,this.n=this.curve.n,this.hash=t.hash,a(this.g.validate(),"Invalid curve"),a(this.g.mul(this.n).isInfinity(),"Invalid curve, G*N != O")}function h(t,e){Object.defineProperty(n,t,{configurable:!0,enumerable:!0,get:function(){var r=new u(e);return Object.defineProperty(n,t,{configurable:!0,enumerable:!0,value:r}),r}})}n.PresetCurve=u,h("p192",{type:"short",prime:"p192",p:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",a:"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",b:"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",n:"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",hash:s.sha256,gRed:!1,g:["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012","07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]}),h("p224",{type:"short",prime:"p224",p:"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",a:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",b:"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",n:"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",hash:s.sha256,gRed:!1,g:["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21","bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]}),h("p256",{type:"short",prime:null,p:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",a:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",b:"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",n:"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",hash:s.sha256,gRed:!1,g:["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296","4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]}),h("p384",{type:"short",prime:null,p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",a:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",b:"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",n:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",hash:s.sha384,gRed:!1,g:["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7","3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]}),h("p521",{type:"short",prime:null,p:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",a:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",b:"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",n:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",hash:s.sha512,gRed:!1,g:["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66","00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]}),h("curve25519",{type:"mont",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"76d06",b:"1",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:s.sha256,gRed:!1,g:["9"]}),h("ed25519",{type:"edwards",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"-1",c:"1",d:"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:s.sha256,gRed:!1,g:["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a","6666666666666666666666666666666666666666666666666666666666666658"]});try{i=r(1037)}catch(t){i=void 0}h("secp256k1",{type:"short",prime:"k256",p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",a:"0",b:"7",n:"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",h:"1",hash:s.sha256,beta:"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",lambda:"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",basis:[{a:"3086d221a7d46bcde86c90e49284eb15",b:"-e4437ed6010e88286f547fa90abfe4c3"},{a:"114ca50f7a8e2f3f657c1108d9d44cfd8",b:"3086d221a7d46bcde86c90e49284eb15"}],gRed:!1,g:["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798","483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",i]})},7954:(t,e,r)=>{"use strict";var i=r(3785),n=r(2156),s=r(953),o=r(5427),a=r(9931),u=s.assert,h=r(1251),c=r(611);function l(t){if(!(this instanceof l))return new l(t);"string"==typeof t&&(u(Object.prototype.hasOwnProperty.call(o,t),"Unknown curve "+t),t=o[t]),t instanceof o.PresetCurve&&(t={curve:t}),this.curve=t.curve.curve,this.n=this.curve.n,this.nh=this.n.ushrn(1),this.g=this.curve.g,this.g=t.curve.g,this.g.precompute(t.curve.n.bitLength()+1),this.hash=t.hash||t.curve.hash}t.exports=l,l.prototype.keyPair=function(t){return new h(this,t)},l.prototype.keyFromPrivate=function(t,e){return h.fromPrivate(this,t,e)},l.prototype.keyFromPublic=function(t,e){return h.fromPublic(this,t,e)},l.prototype.genKeyPair=function(t){t||(t={});for(var e=new n({hash:this.hash,pers:t.pers,persEnc:t.persEnc||"utf8",entropy:t.entropy||a(this.hash.hmacStrength),entropyEnc:t.entropy&&t.entropyEnc||"utf8",nonce:this.n.toArray()}),r=this.n.byteLength(),s=this.n.sub(new i(2));;){var o=new i(e.generate(r));if(!(o.cmp(s)>0))return o.iaddn(1),this.keyFromPrivate(o)}},l.prototype._truncateToN=function(t,e){var r=8*t.byteLength()-this.n.bitLength();return r>0&&(t=t.ushrn(r)),!e&&t.cmp(this.n)>=0?t.sub(this.n):t},l.prototype.sign=function(t,e,r,s){"object"==typeof r&&(s=r,r=null),s||(s={}),e=this.keyFromPrivate(e,r),t=this._truncateToN(new i(t,16));for(var o=this.n.byteLength(),a=e.getPrivate().toArray("be",o),u=t.toArray("be",o),h=new n({hash:this.hash,entropy:a,nonce:u,pers:s.pers,persEnc:s.persEnc||"utf8"}),l=this.n.sub(new i(1)),d=0;;d++){var f=s.k?s.k(d):new i(h.generate(this.n.byteLength()));if(!((f=this._truncateToN(f,!0)).cmpn(1)<=0||f.cmp(l)>=0)){var p=this.g.mul(f);if(!p.isInfinity()){var g=p.getX(),m=g.umod(this.n);if(0!==m.cmpn(0)){var y=f.invm(this.n).mul(m.mul(e.getPrivate()).iadd(t));if(0!==(y=y.umod(this.n)).cmpn(0)){var v=(p.getY().isOdd()?1:0)|(0!==g.cmp(m)?2:0);return s.canonical&&y.cmp(this.nh)>0&&(y=this.n.sub(y),v^=1),new c({r:m,s:y,recoveryParam:v})}}}}}},l.prototype.verify=function(t,e,r,n){t=this._truncateToN(new i(t,16)),r=this.keyFromPublic(r,n);var s=(e=new c(e,"hex")).r,o=e.s;if(s.cmpn(1)<0||s.cmp(this.n)>=0)return!1;if(o.cmpn(1)<0||o.cmp(this.n)>=0)return!1;var a,u=o.invm(this.n),h=u.mul(t).umod(this.n),l=u.mul(s).umod(this.n);return this.curve._maxwellTrick?!(a=this.g.jmulAdd(h,r.getPublic(),l)).isInfinity()&&a.eqXToP(s):!(a=this.g.mulAdd(h,r.getPublic(),l)).isInfinity()&&0===a.getX().umod(this.n).cmp(s)},l.prototype.recoverPubKey=function(t,e,r,n){u((3&r)===r,"The recovery param is more than two bits"),e=new c(e,n);var s=this.n,o=new i(t),a=e.r,h=e.s,l=1&r,d=r>>1;if(a.cmp(this.curve.p.umod(this.curve.n))>=0&&d)throw new Error("Unable to find sencond key candinate");a=d?this.curve.pointFromX(a.add(this.curve.n),l):this.curve.pointFromX(a,l);var f=e.r.invm(s),p=s.sub(o).mul(f).umod(s),g=h.mul(f).umod(s);return this.g.mulAdd(p,a,g)},l.prototype.getKeyRecoveryParam=function(t,e,r,i){if(null!==(e=new c(e,i)).recoveryParam)return e.recoveryParam;for(var n=0;n<4;n++){var s;try{s=this.recoverPubKey(t,e,n)}catch(t){continue}if(s.eq(r))return n}throw new Error("Unable to find valid recovery factor")}},1251:(t,e,r)=>{"use strict";var i=r(3785),n=r(953).assert;function s(t,e){this.ec=t,this.priv=null,this.pub=null,e.priv&&this._importPrivate(e.priv,e.privEnc),e.pub&&this._importPublic(e.pub,e.pubEnc)}t.exports=s,s.fromPublic=function(t,e,r){return e instanceof s?e:new s(t,{pub:e,pubEnc:r})},s.fromPrivate=function(t,e,r){return e instanceof s?e:new s(t,{priv:e,privEnc:r})},s.prototype.validate=function(){var t=this.getPublic();return t.isInfinity()?{result:!1,reason:"Invalid public key"}:t.validate()?t.mul(this.ec.curve.n).isInfinity()?{result:!0,reason:null}:{result:!1,reason:"Public key * N != O"}:{result:!1,reason:"Public key is not a point"}},s.prototype.getPublic=function(t,e){return"string"==typeof t&&(e=t,t=null),this.pub||(this.pub=this.ec.g.mul(this.priv)),e?this.pub.encode(e,t):this.pub},s.prototype.getPrivate=function(t){return"hex"===t?this.priv.toString(16,2):this.priv},s.prototype._importPrivate=function(t,e){this.priv=new i(t,e||16),this.priv=this.priv.umod(this.ec.curve.n)},s.prototype._importPublic=function(t,e){if(t.x||t.y)return"mont"===this.ec.curve.type?n(t.x,"Need x coordinate"):"short"!==this.ec.curve.type&&"edwards"!==this.ec.curve.type||n(t.x&&t.y,"Need both x and y coordinate"),void(this.pub=this.ec.curve.point(t.x,t.y));this.pub=this.ec.curve.decodePoint(t,e)},s.prototype.derive=function(t){return t.validate()||n(t.validate(),"public point not validated"),t.mul(this.priv).getX()},s.prototype.sign=function(t,e,r){return this.ec.sign(t,this,e,r)},s.prototype.verify=function(t,e){return this.ec.verify(t,e,this)},s.prototype.inspect=function(){return"<Key priv: "+(this.priv&&this.priv.toString(16,2))+" pub: "+(this.pub&&this.pub.inspect())+" >"}},611:(t,e,r)=>{"use strict";var i=r(3785),n=r(953),s=n.assert;function o(t,e){if(t instanceof o)return t;this._importDER(t,e)||(s(t.r&&t.s,"Signature without r or s"),this.r=new i(t.r,16),this.s=new i(t.s,16),void 0===t.recoveryParam?this.recoveryParam=null:this.recoveryParam=t.recoveryParam)}function a(){this.place=0}function u(t,e){var r=t[e.place++];if(!(128&r))return r;var i=15&r;if(0===i||i>4)return!1;if(0===t[e.place])return!1;for(var n=0,s=0,o=e.place;s<i;s++,o++)n<<=8,n|=t[o],n>>>=0;return!(n<=127)&&(e.place=o,n)}function h(t){for(var e=0,r=t.length-1;!t[e]&&!(128&t[e+1])&&e<r;)e++;return 0===e?t:t.slice(e)}function c(t,e){if(e<128)t.push(e);else{var r=1+(Math.log(e)/Math.LN2>>>3);for(t.push(128|r);--r;)t.push(e>>>(r<<3)&255);t.push(e)}}t.exports=o,o.prototype._importDER=function(t,e){t=n.toArray(t,e);var r=new a;if(48!==t[r.place++])return!1;var s=u(t,r);if(!1===s)return!1;if(s+r.place!==t.length)return!1;if(2!==t[r.place++])return!1;var o=u(t,r);if(!1===o)return!1;if(0!=(128&t[r.place]))return!1;var h=t.slice(r.place,o+r.place);if(r.place+=o,2!==t[r.place++])return!1;var c=u(t,r);if(!1===c)return!1;if(t.length!==c+r.place)return!1;if(0!=(128&t[r.place]))return!1;var l=t.slice(r.place,c+r.place);if(0===h[0]){if(!(128&h[1]))return!1;h=h.slice(1)}if(0===l[0]){if(!(128&l[1]))return!1;l=l.slice(1)}return this.r=new i(h),this.s=new i(l),this.recoveryParam=null,!0},o.prototype.toDER=function(t){var e=this.r.toArray(),r=this.s.toArray();for(128&e[0]&&(e=[0].concat(e)),128&r[0]&&(r=[0].concat(r)),e=h(e),r=h(r);!(r[0]||128&r[1]);)r=r.slice(1);var i=[2];c(i,e.length),(i=i.concat(e)).push(2),c(i,r.length);var s=i.concat(r),o=[48];return c(o,s.length),o=o.concat(s),n.encode(o,t)}},5980:(t,e,r)=>{"use strict";var i=r(3715),n=r(5427),s=r(953),o=s.assert,a=s.parseBytes,u=r(9087),h=r(3622);function c(t){if(o("ed25519"===t,"only tested with ed25519 so far"),!(this instanceof c))return new c(t);t=n[t].curve,this.curve=t,this.g=t.g,this.g.precompute(t.n.bitLength()+1),this.pointClass=t.point().constructor,this.encodingLength=Math.ceil(t.n.bitLength()/8),this.hash=i.sha512}t.exports=c,c.prototype.sign=function(t,e){t=a(t);var r=this.keyFromSecret(e),i=this.hashInt(r.messagePrefix(),t),n=this.g.mul(i),s=this.encodePoint(n),o=this.hashInt(s,r.pubBytes(),t).mul(r.priv()),u=i.add(o).umod(this.curve.n);return this.makeSignature({R:n,S:u,Rencoded:s})},c.prototype.verify=function(t,e,r){if(t=a(t),(e=this.makeSignature(e)).S().gte(e.eddsa.curve.n)||e.S().isNeg())return!1;var i=this.keyFromPublic(r),n=this.hashInt(e.Rencoded(),i.pubBytes(),t),s=this.g.mul(e.S());return e.R().add(i.pub().mul(n)).eq(s)},c.prototype.hashInt=function(){for(var t=this.hash(),e=0;e<arguments.length;e++)t.update(arguments[e]);return s.intFromLE(t.digest()).umod(this.curve.n)},c.prototype.keyFromPublic=function(t){return u.fromPublic(this,t)},c.prototype.keyFromSecret=function(t){return u.fromSecret(this,t)},c.prototype.makeSignature=function(t){return t instanceof h?t:new h(this,t)},c.prototype.encodePoint=function(t){var e=t.getY().toArray("le",this.encodingLength);return e[this.encodingLength-1]|=t.getX().isOdd()?128:0,e},c.prototype.decodePoint=function(t){var e=(t=s.parseBytes(t)).length-1,r=t.slice(0,e).concat(-129&t[e]),i=0!=(128&t[e]),n=s.intFromLE(r);return this.curve.pointFromY(n,i)},c.prototype.encodeInt=function(t){return t.toArray("le",this.encodingLength)},c.prototype.decodeInt=function(t){return s.intFromLE(t)},c.prototype.isPoint=function(t){return t instanceof this.pointClass}},9087:(t,e,r)=>{"use strict";var i=r(953),n=i.assert,s=i.parseBytes,o=i.cachedProperty;function a(t,e){this.eddsa=t,this._secret=s(e.secret),t.isPoint(e.pub)?this._pub=e.pub:this._pubBytes=s(e.pub)}a.fromPublic=function(t,e){return e instanceof a?e:new a(t,{pub:e})},a.fromSecret=function(t,e){return e instanceof a?e:new a(t,{secret:e})},a.prototype.secret=function(){return this._secret},o(a,"pubBytes",(function(){return this.eddsa.encodePoint(this.pub())})),o(a,"pub",(function(){return this._pubBytes?this.eddsa.decodePoint(this._pubBytes):this.eddsa.g.mul(this.priv())})),o(a,"privBytes",(function(){var t=this.eddsa,e=this.hash(),r=t.encodingLength-1,i=e.slice(0,t.encodingLength);return i[0]&=248,i[r]&=127,i[r]|=64,i})),o(a,"priv",(function(){return this.eddsa.decodeInt(this.privBytes())})),o(a,"hash",(function(){return this.eddsa.hash().update(this.secret()).digest()})),o(a,"messagePrefix",(function(){return this.hash().slice(this.eddsa.encodingLength)})),a.prototype.sign=function(t){return n(this._secret,"KeyPair can only verify"),this.eddsa.sign(t,this)},a.prototype.verify=function(t,e){return this.eddsa.verify(t,e,this)},a.prototype.getSecret=function(t){return n(this._secret,"KeyPair is public only"),i.encode(this.secret(),t)},a.prototype.getPublic=function(t){return i.encode(this.pubBytes(),t)},t.exports=a},3622:(t,e,r)=>{"use strict";var i=r(3785),n=r(953),s=n.assert,o=n.cachedProperty,a=n.parseBytes;function u(t,e){this.eddsa=t,"object"!=typeof e&&(e=a(e)),Array.isArray(e)&&(s(e.length===2*t.encodingLength,"Signature has invalid size"),e={R:e.slice(0,t.encodingLength),S:e.slice(t.encodingLength)}),s(e.R&&e.S,"Signature without R or S"),t.isPoint(e.R)&&(this._R=e.R),e.S instanceof i&&(this._S=e.S),this._Rencoded=Array.isArray(e.R)?e.R:e.Rencoded,this._Sencoded=Array.isArray(e.S)?e.S:e.Sencoded}o(u,"S",(function(){return this.eddsa.decodeInt(this.Sencoded())})),o(u,"R",(function(){return this.eddsa.decodePoint(this.Rencoded())})),o(u,"Rencoded",(function(){return this.eddsa.encodePoint(this.R())})),o(u,"Sencoded",(function(){return this.eddsa.encodeInt(this.S())})),u.prototype.toBytes=function(){return this.Rencoded().concat(this.Sencoded())},u.prototype.toHex=function(){return n.encode(this.toBytes(),"hex").toUpperCase()},t.exports=u},1037:t=>{t.exports={doubles:{step:4,points:[["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a","f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"],["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508","11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"],["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739","d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"],["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640","4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"],["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c","4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"],["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda","96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"],["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa","5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"],["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0","cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"],["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d","9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"],["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d","e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"],["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1","9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"],["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0","5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"],["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047","10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"],["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862","283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"],["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7","7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"],["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd","56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"],["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83","7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"],["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a","53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"],["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8","bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"],["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d","4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"],["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725","7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"],["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754","4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"],["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c","17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"],["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6","6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"],["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39","c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"],["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891","893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"],["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b","febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"],["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03","2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"],["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d","eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"],["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070","7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"],["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4","e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"],["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da","662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"],["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11","1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"],["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e","efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"],["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41","2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"],["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef","67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"],["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8","db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"],["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d","648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"],["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96","35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"],["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd","ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"],["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5","9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"],["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266","40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"],["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71","34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"],["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac","c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"],["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751","1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"],["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e","493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"],["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241","c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"],["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3","be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"],["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f","4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"],["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19","aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"],["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be","b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"],["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9","6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"],["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2","8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"],["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13","7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"],["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c","ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"],["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba","2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"],["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151","e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"],["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073","d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"],["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458","38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"],["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b","69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"],["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366","d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"],["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa","40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"],["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0","620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"],["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787","7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"],["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e","ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]]},naf:{wnd:7,points:[["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9","388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"],["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4","d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"],["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc","6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"],["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe","cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"],["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb","d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"],["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8","ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"],["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e","581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"],["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34","4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"],["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c","85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"],["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5","321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"],["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f","2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"],["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714","73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"],["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729","a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"],["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db","2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"],["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4","e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"],["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5","b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"],["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479","2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"],["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d","80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"],["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f","1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"],["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb","d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"],["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9","eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"],["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963","758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"],["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74","958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"],["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530","e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"],["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b","5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"],["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247","cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"],["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1","cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"],["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120","4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"],["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435","91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"],["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18","673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"],["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8","59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"],["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb","3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"],["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f","55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"],["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143","efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"],["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba","e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"],["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45","f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"],["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a","744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"],["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e","c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"],["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8","e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"],["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c","30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"],["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519","e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"],["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab","100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"],["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca","ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"],["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf","8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"],["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610","68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"],["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4","f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"],["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c","d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"],["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940","edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"],["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980","a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"],["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3","66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"],["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf","9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"],["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63","4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"],["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448","fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"],["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf","5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"],["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5","8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"],["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6","8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"],["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5","5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"],["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99","f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"],["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51","f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"],["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5","42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"],["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5","204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"],["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997","4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"],["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881","73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"],["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5","39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"],["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66","d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"],["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726","ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"],["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede","6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"],["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94","60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"],["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31","3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"],["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51","b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"],["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252","ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"],["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5","cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"],["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b","6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"],["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4","322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"],["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f","6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"],["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889","2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"],["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246","b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"],["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984","998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"],["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a","b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"],["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030","bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"],["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197","6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"],["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593","c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"],["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef","21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"],["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38","60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"],["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a","49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"],["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111","5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"],["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502","7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"],["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea","be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"],["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26","8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"],["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986","39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"],["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e","62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"],["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4","25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"],["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda","ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"],["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859","cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"],["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f","f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"],["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c","6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"],["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942","fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"],["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a","1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"],["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80","5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"],["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d","438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"],["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1","cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"],["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63","c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"],["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352","6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"],["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193","ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"],["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00","9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"],["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58","ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"],["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7","d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"],["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8","c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"],["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e","67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"],["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d","cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"],["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b","299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"],["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f","f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"],["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6","462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"],["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297","62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"],["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a","7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"],["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c","ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"],["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52","4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"],["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb","bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"],["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065","bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"],["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917","603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"],["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9","cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"],["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3","553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"],["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57","712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"],["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66","ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"],["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8","9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"],["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721","9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"],["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180","4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]]}}},953:(t,e,r)=>{"use strict";var i=e,n=r(3785),s=r(9746),o=r(4504);i.assert=s,i.toArray=o.toArray,i.zero2=o.zero2,i.toHex=o.toHex,i.encode=o.encode,i.getNAF=function(t,e,r){var i,n=new Array(Math.max(t.bitLength(),r)+1);for(i=0;i<n.length;i+=1)n[i]=0;var s=1<<e+1,o=t.clone();for(i=0;i<n.length;i++){var a,u=o.andln(s-1);o.isOdd()?(a=u>(s>>1)-1?(s>>1)-u:u,o.isubn(a)):a=0,n[i]=a,o.iushrn(1)}return n},i.getJSF=function(t,e){var r=[[],[]];t=t.clone(),e=e.clone();for(var i,n=0,s=0;t.cmpn(-n)>0||e.cmpn(-s)>0;){var o,a,u=t.andln(3)+n&3,h=e.andln(3)+s&3;3===u&&(u=-1),3===h&&(h=-1),o=0==(1&u)?0:3!=(i=t.andln(7)+n&7)&&5!==i||2!==h?u:-u,r[0].push(o),a=0==(1&h)?0:3!=(i=e.andln(7)+s&7)&&5!==i||2!==u?h:-h,r[1].push(a),2*n===o+1&&(n=1-n),2*s===a+1&&(s=1-s),t.iushrn(1),e.iushrn(1)}return r},i.cachedProperty=function(t,e,r){var i="_"+e;t.prototype[e]=function(){return void 0!==this[i]?this[i]:this[i]=r.call(this)}},i.parseBytes=function(t){return"string"==typeof t?i.toArray(t,"hex"):t},i.intFromLE=function(t){return new n(t,"hex","le")}},3785:function(t,e,r){!function(t,e){"use strict";function i(t,e){if(!t)throw new Error(e||"Assertion failed")}function n(t,e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}function s(t,e,r){if(s.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==e&&"be"!==e||(r=e,e=10),this._init(t||0,e||10,r||"be"))}var o;"object"==typeof t?t.exports=s:e.BN=s,s.BN=s,s.wordSize=26;try{o="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:r(5568).Buffer}catch(t){}function a(t,e){var r=t.charCodeAt(e);return r>=65&&r<=70?r-55:r>=97&&r<=102?r-87:r-48&15}function u(t,e,r){var i=a(t,r);return r-1>=e&&(i|=a(t,r-1)<<4),i}function h(t,e,r,i){for(var n=0,s=Math.min(t.length,r),o=e;o<s;o++){var a=t.charCodeAt(o)-48;n*=i,n+=a>=49?a-49+10:a>=17?a-17+10:a}return n}s.isBN=function(t){return t instanceof s||null!==t&&"object"==typeof t&&t.constructor.wordSize===s.wordSize&&Array.isArray(t.words)},s.max=function(t,e){return t.cmp(e)>0?t:e},s.min=function(t,e){return t.cmp(e)<0?t:e},s.prototype._init=function(t,e,r){if("number"==typeof t)return this._initNumber(t,e,r);if("object"==typeof t)return this._initArray(t,e,r);"hex"===e&&(e=16),i(e===(0|e)&&e>=2&&e<=36);var n=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&(n++,this.negative=1),n<t.length&&(16===e?this._parseHex(t,n,r):(this._parseBase(t,e,n),"le"===r&&this._initArray(this.toArray(),e,r)))},s.prototype._initNumber=function(t,e,r){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(i(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===r&&this._initArray(this.toArray(),e,r)},s.prototype._initArray=function(t,e,r){if(i("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var s,o,a=0;if("be"===r)for(n=t.length-1,s=0;n>=0;n-=3)o=t[n]|t[n-1]<<8|t[n-2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);else if("le"===r)for(n=0,s=0;n<t.length;n+=3)o=t[n]|t[n+1]<<8|t[n+2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);return this.strip()},s.prototype._parseHex=function(t,e,r){this.length=Math.ceil((t.length-e)/6),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var n,s=0,o=0;if("be"===r)for(i=t.length-1;i>=e;i-=2)n=u(t,e,i)<<s,this.words[o]|=67108863&n,s>=18?(s-=18,o+=1,this.words[o]|=n>>>26):s+=8;else for(i=(t.length-e)%2==0?e+1:e;i<t.length;i+=2)n=u(t,e,i)<<s,this.words[o]|=67108863&n,s>=18?(s-=18,o+=1,this.words[o]|=n>>>26):s+=8;this.strip()},s.prototype._parseBase=function(t,e,r){this.words=[0],this.length=1;for(var i=0,n=1;n<=67108863;n*=e)i++;i--,n=n/e|0;for(var s=t.length-r,o=s%i,a=Math.min(s,s-o)+r,u=0,c=r;c<a;c+=i)u=h(t,c,c+i,e),this.imuln(n),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u);if(0!==o){var l=1;for(u=h(t,c,t.length,e),c=0;c<o;c++)l*=e;this.imuln(l),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u)}this.strip()},s.prototype.copy=function(t){t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];t.length=this.length,t.negative=this.negative,t.red=this.red},s.prototype.clone=function(){var t=new s(null);return this.copy(t),t},s.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},s.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},s.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},s.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var c=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],l=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],d=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function f(t,e,r){r.negative=e.negative^t.negative;var i=t.length+e.length|0;r.length=i,i=i-1|0;var n=0|t.words[0],s=0|e.words[0],o=n*s,a=67108863&o,u=o/67108864|0;r.words[0]=a;for(var h=1;h<i;h++){for(var c=u>>>26,l=67108863&u,d=Math.min(h,e.length-1),f=Math.max(0,h-t.length+1);f<=d;f++){var p=h-f|0;c+=(o=(n=0|t.words[p])*(s=0|e.words[f])+l)/67108864|0,l=67108863&o}r.words[h]=0|l,u=0|c}return 0!==u?r.words[h]=0|u:r.length--,r.strip()}s.prototype.toString=function(t,e){var r;if(e=0|e||1,16===(t=t||10)||"hex"===t){r="";for(var n=0,s=0,o=0;o<this.length;o++){var a=this.words[o],u=(16777215&(a<<n|s)).toString(16);r=0!=(s=a>>>24-n&16777215)||o!==this.length-1?c[6-u.length]+u+r:u+r,(n+=2)>=26&&(n-=26,o--)}for(0!==s&&(r=s.toString(16)+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}if(t===(0|t)&&t>=2&&t<=36){var h=l[t],f=d[t];r="";var p=this.clone();for(p.negative=0;!p.isZero();){var g=p.modn(f).toString(t);r=(p=p.idivn(f)).isZero()?g+r:c[h-g.length]+g+r}for(this.isZero()&&(r="0"+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}i(!1,"Base should be between 2 and 36")},s.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&i(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},s.prototype.toJSON=function(){return this.toString(16)},s.prototype.toBuffer=function(t,e){return i(void 0!==o),this.toArrayLike(o,t,e)},s.prototype.toArray=function(t,e){return this.toArrayLike(Array,t,e)},s.prototype.toArrayLike=function(t,e,r){var n=this.byteLength(),s=r||Math.max(1,n);i(n<=s,"byte array longer than desired length"),i(s>0,"Requested array length <= 0"),this.strip();var o,a,u="le"===e,h=new t(s),c=this.clone();if(u){for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[a]=o;for(;a<s;a++)h[a]=0}else{for(a=0;a<s-n;a++)h[a]=0;for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[s-a-1]=o}return h},Math.clz32?s.prototype._countBits=function(t){return 32-Math.clz32(t)}:s.prototype._countBits=function(t){var e=t,r=0;return e>=4096&&(r+=13,e>>>=13),e>=64&&(r+=7,e>>>=7),e>=8&&(r+=4,e>>>=4),e>=2&&(r+=2,e>>>=2),r+e},s.prototype._zeroBits=function(t){if(0===t)return 26;var e=t,r=0;return 0==(8191&e)&&(r+=13,e>>>=13),0==(127&e)&&(r+=7,e>>>=7),0==(15&e)&&(r+=4,e>>>=4),0==(3&e)&&(r+=2,e>>>=2),0==(1&e)&&r++,r},s.prototype.bitLength=function(){var t=this.words[this.length-1],e=this._countBits(t);return 26*(this.length-1)+e},s.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,e=0;e<this.length;e++){var r=this._zeroBits(this.words[e]);if(t+=r,26!==r)break}return t},s.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},s.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},s.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},s.prototype.isNeg=function(){return 0!==this.negative},s.prototype.neg=function(){return this.clone().ineg()},s.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},s.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]|t.words[e];return this.strip()},s.prototype.ior=function(t){return i(0==(this.negative|t.negative)),this.iuor(t)},s.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},s.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},s.prototype.iuand=function(t){var e;e=this.length>t.length?t:this;for(var r=0;r<e.length;r++)this.words[r]=this.words[r]&t.words[r];return this.length=e.length,this.strip()},s.prototype.iand=function(t){return i(0==(this.negative|t.negative)),this.iuand(t)},s.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},s.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},s.prototype.iuxor=function(t){var e,r;this.length>t.length?(e=this,r=t):(e=t,r=this);for(var i=0;i<r.length;i++)this.words[i]=e.words[i]^r.words[i];if(this!==e)for(;i<e.length;i++)this.words[i]=e.words[i];return this.length=e.length,this.strip()},s.prototype.ixor=function(t){return i(0==(this.negative|t.negative)),this.iuxor(t)},s.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},s.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},s.prototype.inotn=function(t){i("number"==typeof t&&t>=0);var e=0|Math.ceil(t/26),r=t%26;this._expand(e),r>0&&e--;for(var n=0;n<e;n++)this.words[n]=67108863&~this.words[n];return r>0&&(this.words[n]=~this.words[n]&67108863>>26-r),this.strip()},s.prototype.notn=function(t){return this.clone().inotn(t)},s.prototype.setn=function(t,e){i("number"==typeof t&&t>=0);var r=t/26|0,n=t%26;return this._expand(r+1),this.words[r]=e?this.words[r]|1<<n:this.words[r]&~(1<<n),this.strip()},s.prototype.iadd=function(t){var e,r,i;if(0!==this.negative&&0===t.negative)return this.negative=0,e=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,e=this.isub(t),t.negative=1,e._normSign();this.length>t.length?(r=this,i=t):(r=t,i=this);for(var n=0,s=0;s<i.length;s++)e=(0|r.words[s])+(0|i.words[s])+n,this.words[s]=67108863&e,n=e>>>26;for(;0!==n&&s<r.length;s++)e=(0|r.words[s])+n,this.words[s]=67108863&e,n=e>>>26;if(this.length=r.length,0!==n)this.words[this.length]=n,this.length++;else if(r!==this)for(;s<r.length;s++)this.words[s]=r.words[s];return this},s.prototype.add=function(t){var e;return 0!==t.negative&&0===this.negative?(t.negative=0,e=this.sub(t),t.negative^=1,e):0===t.negative&&0!==this.negative?(this.negative=0,e=t.sub(this),this.negative=1,e):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},s.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var e=this.iadd(t);return t.negative=1,e._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var r,i,n=this.cmp(t);if(0===n)return this.negative=0,this.length=1,this.words[0]=0,this;n>0?(r=this,i=t):(r=t,i=this);for(var s=0,o=0;o<i.length;o++)s=(e=(0|r.words[o])-(0|i.words[o])+s)>>26,this.words[o]=67108863&e;for(;0!==s&&o<r.length;o++)s=(e=(0|r.words[o])+s)>>26,this.words[o]=67108863&e;if(0===s&&o<r.length&&r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this.length=Math.max(this.length,o),r!==this&&(this.negative=1),this.strip()},s.prototype.sub=function(t){return this.clone().isub(t)};var p=function(t,e,r){var i,n,s,o=t.words,a=e.words,u=r.words,h=0,c=0|o[0],l=8191&c,d=c>>>13,f=0|o[1],p=8191&f,g=f>>>13,m=0|o[2],y=8191&m,v=m>>>13,b=0|o[3],w=8191&b,E=b>>>13,S=0|o[4],N=8191&S,M=S>>>13,x=0|o[5],I=8191&x,A=x>>>13,P=0|o[6],T=8191&P,R=P>>>13,k=0|o[7],B=8191&k,O=k>>>13,C=0|o[8],L=8191&C,j=C>>>13,Z=0|o[9],D=8191&Z,F=Z>>>13,z=0|a[0],H=8191&z,W=z>>>13,K=0|a[1],q=8191&K,U=K>>>13,V=0|a[2],X=8191&V,G=V>>>13,Y=0|a[3],Q=8191&Y,J=Y>>>13,_=0|a[4],$=8191&_,tt=_>>>13,et=0|a[5],rt=8191&et,it=et>>>13,nt=0|a[6],st=8191&nt,ot=nt>>>13,at=0|a[7],ut=8191&at,ht=at>>>13,ct=0|a[8],lt=8191&ct,dt=ct>>>13,ft=0|a[9],pt=8191&ft,gt=ft>>>13;r.negative=t.negative^e.negative,r.length=19;var mt=(h+(i=Math.imul(l,H))|0)+((8191&(n=(n=Math.imul(l,W))+Math.imul(d,H)|0))<<13)|0;h=((s=Math.imul(d,W))+(n>>>13)|0)+(mt>>>26)|0,mt&=67108863,i=Math.imul(p,H),n=(n=Math.imul(p,W))+Math.imul(g,H)|0,s=Math.imul(g,W);var yt=(h+(i=i+Math.imul(l,q)|0)|0)+((8191&(n=(n=n+Math.imul(l,U)|0)+Math.imul(d,q)|0))<<13)|0;h=((s=s+Math.imul(d,U)|0)+(n>>>13)|0)+(yt>>>26)|0,yt&=67108863,i=Math.imul(y,H),n=(n=Math.imul(y,W))+Math.imul(v,H)|0,s=Math.imul(v,W),i=i+Math.imul(p,q)|0,n=(n=n+Math.imul(p,U)|0)+Math.imul(g,q)|0,s=s+Math.imul(g,U)|0;var vt=(h+(i=i+Math.imul(l,X)|0)|0)+((8191&(n=(n=n+Math.imul(l,G)|0)+Math.imul(d,X)|0))<<13)|0;h=((s=s+Math.imul(d,G)|0)+(n>>>13)|0)+(vt>>>26)|0,vt&=67108863,i=Math.imul(w,H),n=(n=Math.imul(w,W))+Math.imul(E,H)|0,s=Math.imul(E,W),i=i+Math.imul(y,q)|0,n=(n=n+Math.imul(y,U)|0)+Math.imul(v,q)|0,s=s+Math.imul(v,U)|0,i=i+Math.imul(p,X)|0,n=(n=n+Math.imul(p,G)|0)+Math.imul(g,X)|0,s=s+Math.imul(g,G)|0;var bt=(h+(i=i+Math.imul(l,Q)|0)|0)+((8191&(n=(n=n+Math.imul(l,J)|0)+Math.imul(d,Q)|0))<<13)|0;h=((s=s+Math.imul(d,J)|0)+(n>>>13)|0)+(bt>>>26)|0,bt&=67108863,i=Math.imul(N,H),n=(n=Math.imul(N,W))+Math.imul(M,H)|0,s=Math.imul(M,W),i=i+Math.imul(w,q)|0,n=(n=n+Math.imul(w,U)|0)+Math.imul(E,q)|0,s=s+Math.imul(E,U)|0,i=i+Math.imul(y,X)|0,n=(n=n+Math.imul(y,G)|0)+Math.imul(v,X)|0,s=s+Math.imul(v,G)|0,i=i+Math.imul(p,Q)|0,n=(n=n+Math.imul(p,J)|0)+Math.imul(g,Q)|0,s=s+Math.imul(g,J)|0;var wt=(h+(i=i+Math.imul(l,$)|0)|0)+((8191&(n=(n=n+Math.imul(l,tt)|0)+Math.imul(d,$)|0))<<13)|0;h=((s=s+Math.imul(d,tt)|0)+(n>>>13)|0)+(wt>>>26)|0,wt&=67108863,i=Math.imul(I,H),n=(n=Math.imul(I,W))+Math.imul(A,H)|0,s=Math.imul(A,W),i=i+Math.imul(N,q)|0,n=(n=n+Math.imul(N,U)|0)+Math.imul(M,q)|0,s=s+Math.imul(M,U)|0,i=i+Math.imul(w,X)|0,n=(n=n+Math.imul(w,G)|0)+Math.imul(E,X)|0,s=s+Math.imul(E,G)|0,i=i+Math.imul(y,Q)|0,n=(n=n+Math.imul(y,J)|0)+Math.imul(v,Q)|0,s=s+Math.imul(v,J)|0,i=i+Math.imul(p,$)|0,n=(n=n+Math.imul(p,tt)|0)+Math.imul(g,$)|0,s=s+Math.imul(g,tt)|0;var Et=(h+(i=i+Math.imul(l,rt)|0)|0)+((8191&(n=(n=n+Math.imul(l,it)|0)+Math.imul(d,rt)|0))<<13)|0;h=((s=s+Math.imul(d,it)|0)+(n>>>13)|0)+(Et>>>26)|0,Et&=67108863,i=Math.imul(T,H),n=(n=Math.imul(T,W))+Math.imul(R,H)|0,s=Math.imul(R,W),i=i+Math.imul(I,q)|0,n=(n=n+Math.imul(I,U)|0)+Math.imul(A,q)|0,s=s+Math.imul(A,U)|0,i=i+Math.imul(N,X)|0,n=(n=n+Math.imul(N,G)|0)+Math.imul(M,X)|0,s=s+Math.imul(M,G)|0,i=i+Math.imul(w,Q)|0,n=(n=n+Math.imul(w,J)|0)+Math.imul(E,Q)|0,s=s+Math.imul(E,J)|0,i=i+Math.imul(y,$)|0,n=(n=n+Math.imul(y,tt)|0)+Math.imul(v,$)|0,s=s+Math.imul(v,tt)|0,i=i+Math.imul(p,rt)|0,n=(n=n+Math.imul(p,it)|0)+Math.imul(g,rt)|0,s=s+Math.imul(g,it)|0;var St=(h+(i=i+Math.imul(l,st)|0)|0)+((8191&(n=(n=n+Math.imul(l,ot)|0)+Math.imul(d,st)|0))<<13)|0;h=((s=s+Math.imul(d,ot)|0)+(n>>>13)|0)+(St>>>26)|0,St&=67108863,i=Math.imul(B,H),n=(n=Math.imul(B,W))+Math.imul(O,H)|0,s=Math.imul(O,W),i=i+Math.imul(T,q)|0,n=(n=n+Math.imul(T,U)|0)+Math.imul(R,q)|0,s=s+Math.imul(R,U)|0,i=i+Math.imul(I,X)|0,n=(n=n+Math.imul(I,G)|0)+Math.imul(A,X)|0,s=s+Math.imul(A,G)|0,i=i+Math.imul(N,Q)|0,n=(n=n+Math.imul(N,J)|0)+Math.imul(M,Q)|0,s=s+Math.imul(M,J)|0,i=i+Math.imul(w,$)|0,n=(n=n+Math.imul(w,tt)|0)+Math.imul(E,$)|0,s=s+Math.imul(E,tt)|0,i=i+Math.imul(y,rt)|0,n=(n=n+Math.imul(y,it)|0)+Math.imul(v,rt)|0,s=s+Math.imul(v,it)|0,i=i+Math.imul(p,st)|0,n=(n=n+Math.imul(p,ot)|0)+Math.imul(g,st)|0,s=s+Math.imul(g,ot)|0;var Nt=(h+(i=i+Math.imul(l,ut)|0)|0)+((8191&(n=(n=n+Math.imul(l,ht)|0)+Math.imul(d,ut)|0))<<13)|0;h=((s=s+Math.imul(d,ht)|0)+(n>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,i=Math.imul(L,H),n=(n=Math.imul(L,W))+Math.imul(j,H)|0,s=Math.imul(j,W),i=i+Math.imul(B,q)|0,n=(n=n+Math.imul(B,U)|0)+Math.imul(O,q)|0,s=s+Math.imul(O,U)|0,i=i+Math.imul(T,X)|0,n=(n=n+Math.imul(T,G)|0)+Math.imul(R,X)|0,s=s+Math.imul(R,G)|0,i=i+Math.imul(I,Q)|0,n=(n=n+Math.imul(I,J)|0)+Math.imul(A,Q)|0,s=s+Math.imul(A,J)|0,i=i+Math.imul(N,$)|0,n=(n=n+Math.imul(N,tt)|0)+Math.imul(M,$)|0,s=s+Math.imul(M,tt)|0,i=i+Math.imul(w,rt)|0,n=(n=n+Math.imul(w,it)|0)+Math.imul(E,rt)|0,s=s+Math.imul(E,it)|0,i=i+Math.imul(y,st)|0,n=(n=n+Math.imul(y,ot)|0)+Math.imul(v,st)|0,s=s+Math.imul(v,ot)|0,i=i+Math.imul(p,ut)|0,n=(n=n+Math.imul(p,ht)|0)+Math.imul(g,ut)|0,s=s+Math.imul(g,ht)|0;var Mt=(h+(i=i+Math.imul(l,lt)|0)|0)+((8191&(n=(n=n+Math.imul(l,dt)|0)+Math.imul(d,lt)|0))<<13)|0;h=((s=s+Math.imul(d,dt)|0)+(n>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,i=Math.imul(D,H),n=(n=Math.imul(D,W))+Math.imul(F,H)|0,s=Math.imul(F,W),i=i+Math.imul(L,q)|0,n=(n=n+Math.imul(L,U)|0)+Math.imul(j,q)|0,s=s+Math.imul(j,U)|0,i=i+Math.imul(B,X)|0,n=(n=n+Math.imul(B,G)|0)+Math.imul(O,X)|0,s=s+Math.imul(O,G)|0,i=i+Math.imul(T,Q)|0,n=(n=n+Math.imul(T,J)|0)+Math.imul(R,Q)|0,s=s+Math.imul(R,J)|0,i=i+Math.imul(I,$)|0,n=(n=n+Math.imul(I,tt)|0)+Math.imul(A,$)|0,s=s+Math.imul(A,tt)|0,i=i+Math.imul(N,rt)|0,n=(n=n+Math.imul(N,it)|0)+Math.imul(M,rt)|0,s=s+Math.imul(M,it)|0,i=i+Math.imul(w,st)|0,n=(n=n+Math.imul(w,ot)|0)+Math.imul(E,st)|0,s=s+Math.imul(E,ot)|0,i=i+Math.imul(y,ut)|0,n=(n=n+Math.imul(y,ht)|0)+Math.imul(v,ut)|0,s=s+Math.imul(v,ht)|0,i=i+Math.imul(p,lt)|0,n=(n=n+Math.imul(p,dt)|0)+Math.imul(g,lt)|0,s=s+Math.imul(g,dt)|0;var xt=(h+(i=i+Math.imul(l,pt)|0)|0)+((8191&(n=(n=n+Math.imul(l,gt)|0)+Math.imul(d,pt)|0))<<13)|0;h=((s=s+Math.imul(d,gt)|0)+(n>>>13)|0)+(xt>>>26)|0,xt&=67108863,i=Math.imul(D,q),n=(n=Math.imul(D,U))+Math.imul(F,q)|0,s=Math.imul(F,U),i=i+Math.imul(L,X)|0,n=(n=n+Math.imul(L,G)|0)+Math.imul(j,X)|0,s=s+Math.imul(j,G)|0,i=i+Math.imul(B,Q)|0,n=(n=n+Math.imul(B,J)|0)+Math.imul(O,Q)|0,s=s+Math.imul(O,J)|0,i=i+Math.imul(T,$)|0,n=(n=n+Math.imul(T,tt)|0)+Math.imul(R,$)|0,s=s+Math.imul(R,tt)|0,i=i+Math.imul(I,rt)|0,n=(n=n+Math.imul(I,it)|0)+Math.imul(A,rt)|0,s=s+Math.imul(A,it)|0,i=i+Math.imul(N,st)|0,n=(n=n+Math.imul(N,ot)|0)+Math.imul(M,st)|0,s=s+Math.imul(M,ot)|0,i=i+Math.imul(w,ut)|0,n=(n=n+Math.imul(w,ht)|0)+Math.imul(E,ut)|0,s=s+Math.imul(E,ht)|0,i=i+Math.imul(y,lt)|0,n=(n=n+Math.imul(y,dt)|0)+Math.imul(v,lt)|0,s=s+Math.imul(v,dt)|0;var It=(h+(i=i+Math.imul(p,pt)|0)|0)+((8191&(n=(n=n+Math.imul(p,gt)|0)+Math.imul(g,pt)|0))<<13)|0;h=((s=s+Math.imul(g,gt)|0)+(n>>>13)|0)+(It>>>26)|0,It&=67108863,i=Math.imul(D,X),n=(n=Math.imul(D,G))+Math.imul(F,X)|0,s=Math.imul(F,G),i=i+Math.imul(L,Q)|0,n=(n=n+Math.imul(L,J)|0)+Math.imul(j,Q)|0,s=s+Math.imul(j,J)|0,i=i+Math.imul(B,$)|0,n=(n=n+Math.imul(B,tt)|0)+Math.imul(O,$)|0,s=s+Math.imul(O,tt)|0,i=i+Math.imul(T,rt)|0,n=(n=n+Math.imul(T,it)|0)+Math.imul(R,rt)|0,s=s+Math.imul(R,it)|0,i=i+Math.imul(I,st)|0,n=(n=n+Math.imul(I,ot)|0)+Math.imul(A,st)|0,s=s+Math.imul(A,ot)|0,i=i+Math.imul(N,ut)|0,n=(n=n+Math.imul(N,ht)|0)+Math.imul(M,ut)|0,s=s+Math.imul(M,ht)|0,i=i+Math.imul(w,lt)|0,n=(n=n+Math.imul(w,dt)|0)+Math.imul(E,lt)|0,s=s+Math.imul(E,dt)|0;var At=(h+(i=i+Math.imul(y,pt)|0)|0)+((8191&(n=(n=n+Math.imul(y,gt)|0)+Math.imul(v,pt)|0))<<13)|0;h=((s=s+Math.imul(v,gt)|0)+(n>>>13)|0)+(At>>>26)|0,At&=67108863,i=Math.imul(D,Q),n=(n=Math.imul(D,J))+Math.imul(F,Q)|0,s=Math.imul(F,J),i=i+Math.imul(L,$)|0,n=(n=n+Math.imul(L,tt)|0)+Math.imul(j,$)|0,s=s+Math.imul(j,tt)|0,i=i+Math.imul(B,rt)|0,n=(n=n+Math.imul(B,it)|0)+Math.imul(O,rt)|0,s=s+Math.imul(O,it)|0,i=i+Math.imul(T,st)|0,n=(n=n+Math.imul(T,ot)|0)+Math.imul(R,st)|0,s=s+Math.imul(R,ot)|0,i=i+Math.imul(I,ut)|0,n=(n=n+Math.imul(I,ht)|0)+Math.imul(A,ut)|0,s=s+Math.imul(A,ht)|0,i=i+Math.imul(N,lt)|0,n=(n=n+Math.imul(N,dt)|0)+Math.imul(M,lt)|0,s=s+Math.imul(M,dt)|0;var Pt=(h+(i=i+Math.imul(w,pt)|0)|0)+((8191&(n=(n=n+Math.imul(w,gt)|0)+Math.imul(E,pt)|0))<<13)|0;h=((s=s+Math.imul(E,gt)|0)+(n>>>13)|0)+(Pt>>>26)|0,Pt&=67108863,i=Math.imul(D,$),n=(n=Math.imul(D,tt))+Math.imul(F,$)|0,s=Math.imul(F,tt),i=i+Math.imul(L,rt)|0,n=(n=n+Math.imul(L,it)|0)+Math.imul(j,rt)|0,s=s+Math.imul(j,it)|0,i=i+Math.imul(B,st)|0,n=(n=n+Math.imul(B,ot)|0)+Math.imul(O,st)|0,s=s+Math.imul(O,ot)|0,i=i+Math.imul(T,ut)|0,n=(n=n+Math.imul(T,ht)|0)+Math.imul(R,ut)|0,s=s+Math.imul(R,ht)|0,i=i+Math.imul(I,lt)|0,n=(n=n+Math.imul(I,dt)|0)+Math.imul(A,lt)|0,s=s+Math.imul(A,dt)|0;var Tt=(h+(i=i+Math.imul(N,pt)|0)|0)+((8191&(n=(n=n+Math.imul(N,gt)|0)+Math.imul(M,pt)|0))<<13)|0;h=((s=s+Math.imul(M,gt)|0)+(n>>>13)|0)+(Tt>>>26)|0,Tt&=67108863,i=Math.imul(D,rt),n=(n=Math.imul(D,it))+Math.imul(F,rt)|0,s=Math.imul(F,it),i=i+Math.imul(L,st)|0,n=(n=n+Math.imul(L,ot)|0)+Math.imul(j,st)|0,s=s+Math.imul(j,ot)|0,i=i+Math.imul(B,ut)|0,n=(n=n+Math.imul(B,ht)|0)+Math.imul(O,ut)|0,s=s+Math.imul(O,ht)|0,i=i+Math.imul(T,lt)|0,n=(n=n+Math.imul(T,dt)|0)+Math.imul(R,lt)|0,s=s+Math.imul(R,dt)|0;var Rt=(h+(i=i+Math.imul(I,pt)|0)|0)+((8191&(n=(n=n+Math.imul(I,gt)|0)+Math.imul(A,pt)|0))<<13)|0;h=((s=s+Math.imul(A,gt)|0)+(n>>>13)|0)+(Rt>>>26)|0,Rt&=67108863,i=Math.imul(D,st),n=(n=Math.imul(D,ot))+Math.imul(F,st)|0,s=Math.imul(F,ot),i=i+Math.imul(L,ut)|0,n=(n=n+Math.imul(L,ht)|0)+Math.imul(j,ut)|0,s=s+Math.imul(j,ht)|0,i=i+Math.imul(B,lt)|0,n=(n=n+Math.imul(B,dt)|0)+Math.imul(O,lt)|0,s=s+Math.imul(O,dt)|0;var kt=(h+(i=i+Math.imul(T,pt)|0)|0)+((8191&(n=(n=n+Math.imul(T,gt)|0)+Math.imul(R,pt)|0))<<13)|0;h=((s=s+Math.imul(R,gt)|0)+(n>>>13)|0)+(kt>>>26)|0,kt&=67108863,i=Math.imul(D,ut),n=(n=Math.imul(D,ht))+Math.imul(F,ut)|0,s=Math.imul(F,ht),i=i+Math.imul(L,lt)|0,n=(n=n+Math.imul(L,dt)|0)+Math.imul(j,lt)|0,s=s+Math.imul(j,dt)|0;var Bt=(h+(i=i+Math.imul(B,pt)|0)|0)+((8191&(n=(n=n+Math.imul(B,gt)|0)+Math.imul(O,pt)|0))<<13)|0;h=((s=s+Math.imul(O,gt)|0)+(n>>>13)|0)+(Bt>>>26)|0,Bt&=67108863,i=Math.imul(D,lt),n=(n=Math.imul(D,dt))+Math.imul(F,lt)|0,s=Math.imul(F,dt);var Ot=(h+(i=i+Math.imul(L,pt)|0)|0)+((8191&(n=(n=n+Math.imul(L,gt)|0)+Math.imul(j,pt)|0))<<13)|0;h=((s=s+Math.imul(j,gt)|0)+(n>>>13)|0)+(Ot>>>26)|0,Ot&=67108863;var Ct=(h+(i=Math.imul(D,pt))|0)+((8191&(n=(n=Math.imul(D,gt))+Math.imul(F,pt)|0))<<13)|0;return h=((s=Math.imul(F,gt))+(n>>>13)|0)+(Ct>>>26)|0,Ct&=67108863,u[0]=mt,u[1]=yt,u[2]=vt,u[3]=bt,u[4]=wt,u[5]=Et,u[6]=St,u[7]=Nt,u[8]=Mt,u[9]=xt,u[10]=It,u[11]=At,u[12]=Pt,u[13]=Tt,u[14]=Rt,u[15]=kt,u[16]=Bt,u[17]=Ot,u[18]=Ct,0!==h&&(u[19]=h,r.length++),r};function g(t,e,r){return(new m).mulp(t,e,r)}function m(t,e){this.x=t,this.y=e}Math.imul||(p=f),s.prototype.mulTo=function(t,e){var r,i=this.length+t.length;return r=10===this.length&&10===t.length?p(this,t,e):i<63?f(this,t,e):i<1024?function(t,e,r){r.negative=e.negative^t.negative,r.length=t.length+e.length;for(var i=0,n=0,s=0;s<r.length-1;s++){var o=n;n=0;for(var a=67108863&i,u=Math.min(s,e.length-1),h=Math.max(0,s-t.length+1);h<=u;h++){var c=s-h,l=(0|t.words[c])*(0|e.words[h]),d=67108863&l;a=67108863&(d=d+a|0),n+=(o=(o=o+(l/67108864|0)|0)+(d>>>26)|0)>>>26,o&=67108863}r.words[s]=a,i=o,o=n}return 0!==i?r.words[s]=i:r.length--,r.strip()}(this,t,e):g(this,t,e),r},m.prototype.makeRBT=function(t){for(var e=new Array(t),r=s.prototype._countBits(t)-1,i=0;i<t;i++)e[i]=this.revBin(i,r,t);return e},m.prototype.revBin=function(t,e,r){if(0===t||t===r-1)return t;for(var i=0,n=0;n<e;n++)i|=(1&t)<<e-n-1,t>>=1;return i},m.prototype.permute=function(t,e,r,i,n,s){for(var o=0;o<s;o++)i[o]=e[t[o]],n[o]=r[t[o]]},m.prototype.transform=function(t,e,r,i,n,s){this.permute(s,t,e,r,i,n);for(var o=1;o<n;o<<=1)for(var a=o<<1,u=Math.cos(2*Math.PI/a),h=Math.sin(2*Math.PI/a),c=0;c<n;c+=a)for(var l=u,d=h,f=0;f<o;f++){var p=r[c+f],g=i[c+f],m=r[c+f+o],y=i[c+f+o],v=l*m-d*y;y=l*y+d*m,m=v,r[c+f]=p+m,i[c+f]=g+y,r[c+f+o]=p-m,i[c+f+o]=g-y,f!==a&&(v=u*l-h*d,d=u*d+h*l,l=v)}},m.prototype.guessLen13b=function(t,e){var r=1|Math.max(e,t),i=1&r,n=0;for(r=r/2|0;r;r>>>=1)n++;return 1<<n+1+i},m.prototype.conjugate=function(t,e,r){if(!(r<=1))for(var i=0;i<r/2;i++){var n=t[i];t[i]=t[r-i-1],t[r-i-1]=n,n=e[i],e[i]=-e[r-i-1],e[r-i-1]=-n}},m.prototype.normalize13b=function(t,e){for(var r=0,i=0;i<e/2;i++){var n=8192*Math.round(t[2*i+1]/e)+Math.round(t[2*i]/e)+r;t[i]=67108863&n,r=n<67108864?0:n/67108864|0}return t},m.prototype.convert13b=function(t,e,r,n){for(var s=0,o=0;o<e;o++)s+=0|t[o],r[2*o]=8191&s,s>>>=13,r[2*o+1]=8191&s,s>>>=13;for(o=2*e;o<n;++o)r[o]=0;i(0===s),i(0==(-8192&s))},m.prototype.stub=function(t){for(var e=new Array(t),r=0;r<t;r++)e[r]=0;return e},m.prototype.mulp=function(t,e,r){var i=2*this.guessLen13b(t.length,e.length),n=this.makeRBT(i),s=this.stub(i),o=new Array(i),a=new Array(i),u=new Array(i),h=new Array(i),c=new Array(i),l=new Array(i),d=r.words;d.length=i,this.convert13b(t.words,t.length,o,i),this.convert13b(e.words,e.length,h,i),this.transform(o,s,a,u,i,n),this.transform(h,s,c,l,i,n);for(var f=0;f<i;f++){var p=a[f]*c[f]-u[f]*l[f];u[f]=a[f]*l[f]+u[f]*c[f],a[f]=p}return this.conjugate(a,u,i),this.transform(a,u,d,s,i,n),this.conjugate(d,s,i),this.normalize13b(d,i),r.negative=t.negative^e.negative,r.length=t.length+e.length,r.strip()},s.prototype.mul=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),this.mulTo(t,e)},s.prototype.mulf=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),g(this,t,e)},s.prototype.imul=function(t){return this.clone().mulTo(t,this)},s.prototype.imuln=function(t){i("number"==typeof t),i(t<67108864);for(var e=0,r=0;r<this.length;r++){var n=(0|this.words[r])*t,s=(67108863&n)+(67108863&e);e>>=26,e+=n/67108864|0,e+=s>>>26,this.words[r]=67108863&s}return 0!==e&&(this.words[r]=e,this.length++),this},s.prototype.muln=function(t){return this.clone().imuln(t)},s.prototype.sqr=function(){return this.mul(this)},s.prototype.isqr=function(){return this.imul(this.clone())},s.prototype.pow=function(t){var e=function(t){for(var e=new Array(t.bitLength()),r=0;r<e.length;r++){var i=r/26|0,n=r%26;e[r]=(t.words[i]&1<<n)>>>n}return e}(t);if(0===e.length)return new s(1);for(var r=this,i=0;i<e.length&&0===e[i];i++,r=r.sqr());if(++i<e.length)for(var n=r.sqr();i<e.length;i++,n=n.sqr())0!==e[i]&&(r=r.mul(n));return r},s.prototype.iushln=function(t){i("number"==typeof t&&t>=0);var e,r=t%26,n=(t-r)/26,s=67108863>>>26-r<<26-r;if(0!==r){var o=0;for(e=0;e<this.length;e++){var a=this.words[e]&s,u=(0|this.words[e])-a<<r;this.words[e]=u|o,o=a>>>26-r}o&&(this.words[e]=o,this.length++)}if(0!==n){for(e=this.length-1;e>=0;e--)this.words[e+n]=this.words[e];for(e=0;e<n;e++)this.words[e]=0;this.length+=n}return this.strip()},s.prototype.ishln=function(t){return i(0===this.negative),this.iushln(t)},s.prototype.iushrn=function(t,e,r){var n;i("number"==typeof t&&t>=0),n=e?(e-e%26)/26:0;var s=t%26,o=Math.min((t-s)/26,this.length),a=67108863^67108863>>>s<<s,u=r;if(n-=o,n=Math.max(0,n),u){for(var h=0;h<o;h++)u.words[h]=this.words[h];u.length=o}if(0===o);else if(this.length>o)for(this.length-=o,h=0;h<this.length;h++)this.words[h]=this.words[h+o];else this.words[0]=0,this.length=1;var c=0;for(h=this.length-1;h>=0&&(0!==c||h>=n);h--){var l=0|this.words[h];this.words[h]=c<<26-s|l>>>s,c=l&a}return u&&0!==c&&(u.words[u.length++]=c),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},s.prototype.ishrn=function(t,e,r){return i(0===this.negative),this.iushrn(t,e,r)},s.prototype.shln=function(t){return this.clone().ishln(t)},s.prototype.ushln=function(t){return this.clone().iushln(t)},s.prototype.shrn=function(t){return this.clone().ishrn(t)},s.prototype.ushrn=function(t){return this.clone().iushrn(t)},s.prototype.testn=function(t){i("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26,n=1<<e;return!(this.length<=r||!(this.words[r]&n))},s.prototype.imaskn=function(t){i("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26;if(i(0===this.negative,"imaskn works only with positive numbers"),this.length<=r)return this;if(0!==e&&r++,this.length=Math.min(r,this.length),0!==e){var n=67108863^67108863>>>e<<e;this.words[this.length-1]&=n}return this.strip()},s.prototype.maskn=function(t){return this.clone().imaskn(t)},s.prototype.iaddn=function(t){return i("number"==typeof t),i(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},s.prototype._iaddn=function(t){this.words[0]+=t;for(var e=0;e<this.length&&this.words[e]>=67108864;e++)this.words[e]-=67108864,e===this.length-1?this.words[e+1]=1:this.words[e+1]++;return this.length=Math.max(this.length,e+1),this},s.prototype.isubn=function(t){if(i("number"==typeof t),i(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var e=0;e<this.length&&this.words[e]<0;e++)this.words[e]+=67108864,this.words[e+1]-=1;return this.strip()},s.prototype.addn=function(t){return this.clone().iaddn(t)},s.prototype.subn=function(t){return this.clone().isubn(t)},s.prototype.iabs=function(){return this.negative=0,this},s.prototype.abs=function(){return this.clone().iabs()},s.prototype._ishlnsubmul=function(t,e,r){var n,s,o=t.length+r;this._expand(o);var a=0;for(n=0;n<t.length;n++){s=(0|this.words[n+r])+a;var u=(0|t.words[n])*e;a=((s-=67108863&u)>>26)-(u/67108864|0),this.words[n+r]=67108863&s}for(;n<this.length-r;n++)a=(s=(0|this.words[n+r])+a)>>26,this.words[n+r]=67108863&s;if(0===a)return this.strip();for(i(-1===a),a=0,n=0;n<this.length;n++)a=(s=-(0|this.words[n])+a)>>26,this.words[n]=67108863&s;return this.negative=1,this.strip()},s.prototype._wordDiv=function(t,e){var r=(this.length,t.length),i=this.clone(),n=t,o=0|n.words[n.length-1];0!=(r=26-this._countBits(o))&&(n=n.ushln(r),i.iushln(r),o=0|n.words[n.length-1]);var a,u=i.length-n.length;if("mod"!==e){(a=new s(null)).length=u+1,a.words=new Array(a.length);for(var h=0;h<a.length;h++)a.words[h]=0}var c=i.clone()._ishlnsubmul(n,1,u);0===c.negative&&(i=c,a&&(a.words[u]=1));for(var l=u-1;l>=0;l--){var d=67108864*(0|i.words[n.length+l])+(0|i.words[n.length+l-1]);for(d=Math.min(d/o|0,67108863),i._ishlnsubmul(n,d,l);0!==i.negative;)d--,i.negative=0,i._ishlnsubmul(n,1,l),i.isZero()||(i.negative^=1);a&&(a.words[l]=d)}return a&&a.strip(),i.strip(),"div"!==e&&0!==r&&i.iushrn(r),{div:a||null,mod:i}},s.prototype.divmod=function(t,e,r){return i(!t.isZero()),this.isZero()?{div:new s(0),mod:new s(0)}:0!==this.negative&&0===t.negative?(a=this.neg().divmod(t,e),"mod"!==e&&(n=a.div.neg()),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.iadd(t)),{div:n,mod:o}):0===this.negative&&0!==t.negative?(a=this.divmod(t.neg(),e),"mod"!==e&&(n=a.div.neg()),{div:n,mod:a.mod}):0!=(this.negative&t.negative)?(a=this.neg().divmod(t.neg(),e),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.isub(t)),{div:a.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new s(0),mod:this}:1===t.length?"div"===e?{div:this.divn(t.words[0]),mod:null}:"mod"===e?{div:null,mod:new s(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new s(this.modn(t.words[0]))}:this._wordDiv(t,e);var n,o,a},s.prototype.div=function(t){return this.divmod(t,"div",!1).div},s.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},s.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},s.prototype.divRound=function(t){var e=this.divmod(t);if(e.mod.isZero())return e.div;var r=0!==e.div.negative?e.mod.isub(t):e.mod,i=t.ushrn(1),n=t.andln(1),s=r.cmp(i);return s<0||1===n&&0===s?e.div:0!==e.div.negative?e.div.isubn(1):e.div.iaddn(1)},s.prototype.modn=function(t){i(t<=67108863);for(var e=(1<<26)%t,r=0,n=this.length-1;n>=0;n--)r=(e*r+(0|this.words[n]))%t;return r},s.prototype.idivn=function(t){i(t<=67108863);for(var e=0,r=this.length-1;r>=0;r--){var n=(0|this.words[r])+67108864*e;this.words[r]=n/t|0,e=n%t}return this.strip()},s.prototype.divn=function(t){return this.clone().idivn(t)},s.prototype.egcd=function(t){i(0===t.negative),i(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var n=new s(1),o=new s(0),a=new s(0),u=new s(1),h=0;e.isEven()&&r.isEven();)e.iushrn(1),r.iushrn(1),++h;for(var c=r.clone(),l=e.clone();!e.isZero();){for(var d=0,f=1;0==(e.words[0]&f)&&d<26;++d,f<<=1);if(d>0)for(e.iushrn(d);d-- >0;)(n.isOdd()||o.isOdd())&&(n.iadd(c),o.isub(l)),n.iushrn(1),o.iushrn(1);for(var p=0,g=1;0==(r.words[0]&g)&&p<26;++p,g<<=1);if(p>0)for(r.iushrn(p);p-- >0;)(a.isOdd()||u.isOdd())&&(a.iadd(c),u.isub(l)),a.iushrn(1),u.iushrn(1);e.cmp(r)>=0?(e.isub(r),n.isub(a),o.isub(u)):(r.isub(e),a.isub(n),u.isub(o))}return{a,b:u,gcd:r.iushln(h)}},s.prototype._invmp=function(t){i(0===t.negative),i(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var n,o=new s(1),a=new s(0),u=r.clone();e.cmpn(1)>0&&r.cmpn(1)>0;){for(var h=0,c=1;0==(e.words[0]&c)&&h<26;++h,c<<=1);if(h>0)for(e.iushrn(h);h-- >0;)o.isOdd()&&o.iadd(u),o.iushrn(1);for(var l=0,d=1;0==(r.words[0]&d)&&l<26;++l,d<<=1);if(l>0)for(r.iushrn(l);l-- >0;)a.isOdd()&&a.iadd(u),a.iushrn(1);e.cmp(r)>=0?(e.isub(r),o.isub(a)):(r.isub(e),a.isub(o))}return(n=0===e.cmpn(1)?o:a).cmpn(0)<0&&n.iadd(t),n},s.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var e=this.clone(),r=t.clone();e.negative=0,r.negative=0;for(var i=0;e.isEven()&&r.isEven();i++)e.iushrn(1),r.iushrn(1);for(;;){for(;e.isEven();)e.iushrn(1);for(;r.isEven();)r.iushrn(1);var n=e.cmp(r);if(n<0){var s=e;e=r,r=s}else if(0===n||0===r.cmpn(1))break;e.isub(r)}return r.iushln(i)},s.prototype.invm=function(t){return this.egcd(t).a.umod(t)},s.prototype.isEven=function(){return 0==(1&this.words[0])},s.prototype.isOdd=function(){return 1==(1&this.words[0])},s.prototype.andln=function(t){return this.words[0]&t},s.prototype.bincn=function(t){i("number"==typeof t);var e=t%26,r=(t-e)/26,n=1<<e;if(this.length<=r)return this._expand(r+1),this.words[r]|=n,this;for(var s=n,o=r;0!==s&&o<this.length;o++){var a=0|this.words[o];s=(a+=s)>>>26,a&=67108863,this.words[o]=a}return 0!==s&&(this.words[o]=s,this.length++),this},s.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},s.prototype.cmpn=function(t){var e,r=t<0;if(0!==this.negative&&!r)return-1;if(0===this.negative&&r)return 1;if(this.strip(),this.length>1)e=1;else{r&&(t=-t),i(t<=67108863,"Number is too big");var n=0|this.words[0];e=n===t?0:n<t?-1:1}return 0!==this.negative?0|-e:e},s.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var e=this.ucmp(t);return 0!==this.negative?0|-e:e},s.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var e=0,r=this.length-1;r>=0;r--){var i=0|this.words[r],n=0|t.words[r];if(i!==n){i<n?e=-1:i>n&&(e=1);break}}return e},s.prototype.gtn=function(t){return 1===this.cmpn(t)},s.prototype.gt=function(t){return 1===this.cmp(t)},s.prototype.gten=function(t){return this.cmpn(t)>=0},s.prototype.gte=function(t){return this.cmp(t)>=0},s.prototype.ltn=function(t){return-1===this.cmpn(t)},s.prototype.lt=function(t){return-1===this.cmp(t)},s.prototype.lten=function(t){return this.cmpn(t)<=0},s.prototype.lte=function(t){return this.cmp(t)<=0},s.prototype.eqn=function(t){return 0===this.cmpn(t)},s.prototype.eq=function(t){return 0===this.cmp(t)},s.red=function(t){return new N(t)},s.prototype.toRed=function(t){return i(!this.red,"Already a number in reduction context"),i(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},s.prototype.fromRed=function(){return i(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},s.prototype._forceRed=function(t){return this.red=t,this},s.prototype.forceRed=function(t){return i(!this.red,"Already a number in reduction context"),this._forceRed(t)},s.prototype.redAdd=function(t){return i(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},s.prototype.redIAdd=function(t){return i(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},s.prototype.redSub=function(t){return i(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},s.prototype.redISub=function(t){return i(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},s.prototype.redShl=function(t){return i(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},s.prototype.redMul=function(t){return i(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},s.prototype.redIMul=function(t){return i(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},s.prototype.redSqr=function(){return i(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},s.prototype.redISqr=function(){return i(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},s.prototype.redSqrt=function(){return i(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},s.prototype.redInvm=function(){return i(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},s.prototype.redNeg=function(){return i(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},s.prototype.redPow=function(t){return i(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var y={k256:null,p224:null,p192:null,p25519:null};function v(t,e){this.name=t,this.p=new s(e,16),this.n=this.p.bitLength(),this.k=new s(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function b(){v.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function w(){v.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function E(){v.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function S(){v.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function N(t){if("string"==typeof t){var e=s._prime(t);this.m=e.p,this.prime=e}else i(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function M(t){N.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new s(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}v.prototype._tmp=function(){var t=new s(null);return t.words=new Array(Math.ceil(this.n/13)),t},v.prototype.ireduce=function(t){var e,r=t;do{this.split(r,this.tmp),e=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(e>this.n);var i=e<this.n?-1:r.ucmp(this.p);return 0===i?(r.words[0]=0,r.length=1):i>0?r.isub(this.p):void 0!==r.strip?r.strip():r._strip(),r},v.prototype.split=function(t,e){t.iushrn(this.n,0,e)},v.prototype.imulK=function(t){return t.imul(this.k)},n(b,v),b.prototype.split=function(t,e){for(var r=4194303,i=Math.min(t.length,9),n=0;n<i;n++)e.words[n]=t.words[n];if(e.length=i,t.length<=9)return t.words[0]=0,void(t.length=1);var s=t.words[9];for(e.words[e.length++]=s&r,n=10;n<t.length;n++){var o=0|t.words[n];t.words[n-10]=(o&r)<<4|s>>>22,s=o}s>>>=22,t.words[n-10]=s,0===s&&t.length>10?t.length-=10:t.length-=9},b.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var e=0,r=0;r<t.length;r++){var i=0|t.words[r];e+=977*i,t.words[r]=67108863&e,e=64*i+(e/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},n(w,v),n(E,v),n(S,v),S.prototype.imulK=function(t){for(var e=0,r=0;r<t.length;r++){var i=19*(0|t.words[r])+e,n=67108863&i;i>>>=26,t.words[r]=n,e=i}return 0!==e&&(t.words[t.length++]=e),t},s._prime=function(t){if(y[t])return y[t];var e;if("k256"===t)e=new b;else if("p224"===t)e=new w;else if("p192"===t)e=new E;else{if("p25519"!==t)throw new Error("Unknown prime "+t);e=new S}return y[t]=e,e},N.prototype._verify1=function(t){i(0===t.negative,"red works only with positives"),i(t.red,"red works only with red numbers")},N.prototype._verify2=function(t,e){i(0==(t.negative|e.negative),"red works only with positives"),i(t.red&&t.red===e.red,"red works only with red numbers")},N.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},N.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},N.prototype.add=function(t,e){this._verify2(t,e);var r=t.add(e);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},N.prototype.iadd=function(t,e){this._verify2(t,e);var r=t.iadd(e);return r.cmp(this.m)>=0&&r.isub(this.m),r},N.prototype.sub=function(t,e){this._verify2(t,e);var r=t.sub(e);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},N.prototype.isub=function(t,e){this._verify2(t,e);var r=t.isub(e);return r.cmpn(0)<0&&r.iadd(this.m),r},N.prototype.shl=function(t,e){return this._verify1(t),this.imod(t.ushln(e))},N.prototype.imul=function(t,e){return this._verify2(t,e),this.imod(t.imul(e))},N.prototype.mul=function(t,e){return this._verify2(t,e),this.imod(t.mul(e))},N.prototype.isqr=function(t){return this.imul(t,t.clone())},N.prototype.sqr=function(t){return this.mul(t,t)},N.prototype.sqrt=function(t){if(t.isZero())return t.clone();var e=this.m.andln(3);if(i(e%2==1),3===e){var r=this.m.add(new s(1)).iushrn(2);return this.pow(t,r)}for(var n=this.m.subn(1),o=0;!n.isZero()&&0===n.andln(1);)o++,n.iushrn(1);i(!n.isZero());var a=new s(1).toRed(this),u=a.redNeg(),h=this.m.subn(1).iushrn(1),c=this.m.bitLength();for(c=new s(2*c*c).toRed(this);0!==this.pow(c,h).cmp(u);)c.redIAdd(u);for(var l=this.pow(c,n),d=this.pow(t,n.addn(1).iushrn(1)),f=this.pow(t,n),p=o;0!==f.cmp(a);){for(var g=f,m=0;0!==g.cmp(a);m++)g=g.redSqr();i(m<p);var y=this.pow(l,new s(1).iushln(p-m-1));d=d.redMul(y),l=y.redSqr(),f=f.redMul(l),p=m}return d},N.prototype.invm=function(t){var e=t._invmp(this.m);return 0!==e.negative?(e.negative=0,this.imod(e).redNeg()):this.imod(e)},N.prototype.pow=function(t,e){if(e.isZero())return new s(1).toRed(this);if(0===e.cmpn(1))return t.clone();var r=new Array(16);r[0]=new s(1).toRed(this),r[1]=t;for(var i=2;i<r.length;i++)r[i]=this.mul(r[i-1],t);var n=r[0],o=0,a=0,u=e.bitLength()%26;for(0===u&&(u=26),i=e.length-1;i>=0;i--){for(var h=e.words[i],c=u-1;c>=0;c--){var l=h>>c&1;n!==r[0]&&(n=this.sqr(n)),0!==l||0!==o?(o<<=1,o|=l,(4==++a||0===i&&0===c)&&(n=this.mul(n,r[o]),a=0,o=0)):a=0}u=26}return n},N.prototype.convertTo=function(t){var e=t.umod(this.m);return e===t?e.clone():e},N.prototype.convertFrom=function(t){var e=t.clone();return e.red=null,e},s.mont=function(t){return new M(t)},n(M,N),M.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},M.prototype.convertFrom=function(t){var e=this.imod(t.mul(this.rinv));return e.red=null,e},M.prototype.imul=function(t,e){if(t.isZero()||e.isZero())return t.words[0]=0,t.length=1,t;var r=t.imul(e),i=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=r.isub(i).iushrn(this.shift),s=n;return n.cmp(this.m)>=0?s=n.isub(this.m):n.cmpn(0)<0&&(s=n.iadd(this.m)),s._forceRed(this)},M.prototype.mul=function(t,e){if(t.isZero()||e.isZero())return new s(0)._forceRed(this);var r=t.mul(e),i=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=r.isub(i).iushrn(this.shift),o=n;return n.cmp(this.m)>=0?o=n.isub(this.m):n.cmpn(0)<0&&(o=n.iadd(this.m)),o._forceRed(this)},M.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=r.nmd(t),this)},7187:t=>{"use strict";var e,r="object"==typeof Reflect?Reflect:null,i=r&&"function"==typeof r.apply?r.apply:function(t,e,r){return Function.prototype.apply.call(t,e,r)};e=r&&"function"==typeof r.ownKeys?r.ownKeys:Object.getOwnPropertySymbols?function(t){return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t))}:function(t){return Object.getOwnPropertyNames(t)};var n=Number.isNaN||function(t){return t!=t};function s(){s.init.call(this)}t.exports=s,t.exports.once=function(t,e){return new Promise((function(r,i){function n(r){t.removeListener(e,s),i(r)}function s(){"function"==typeof t.removeListener&&t.removeListener("error",n),r([].slice.call(arguments))}g(t,e,s,{once:!0}),"error"!==e&&function(t,e,r){"function"==typeof t.on&&g(t,"error",e,{once:!0})}(t,n)}))},s.EventEmitter=s,s.prototype._events=void 0,s.prototype._eventsCount=0,s.prototype._maxListeners=void 0;var o=10;function a(t){if("function"!=typeof t)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof t)}function u(t){return void 0===t._maxListeners?s.defaultMaxListeners:t._maxListeners}function h(t,e,r,i){var n,s,o,h;if(a(r),void 0===(s=t._events)?(s=t._events=Object.create(null),t._eventsCount=0):(void 0!==s.newListener&&(t.emit("newListener",e,r.listener?r.listener:r),s=t._events),o=s[e]),void 0===o)o=s[e]=r,++t._eventsCount;else if("function"==typeof o?o=s[e]=i?[r,o]:[o,r]:i?o.unshift(r):o.push(r),(n=u(t))>0&&o.length>n&&!o.warned){o.warned=!0;var c=new Error("Possible EventEmitter memory leak detected. "+o.length+" "+String(e)+" listeners added. Use emitter.setMaxListeners() to increase limit");c.name="MaxListenersExceededWarning",c.emitter=t,c.type=e,c.count=o.length,h=c,console&&console.warn&&console.warn(h)}return t}function c(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function l(t,e,r){var i={fired:!1,wrapFn:void 0,target:t,type:e,listener:r},n=c.bind(i);return n.listener=r,i.wrapFn=n,n}function d(t,e,r){var i=t._events;if(void 0===i)return[];var n=i[e];return void 0===n?[]:"function"==typeof n?r?[n.listener||n]:[n]:r?function(t){for(var e=new Array(t.length),r=0;r<e.length;++r)e[r]=t[r].listener||t[r];return e}(n):p(n,n.length)}function f(t){var e=this._events;if(void 0!==e){var r=e[t];if("function"==typeof r)return 1;if(void 0!==r)return r.length}return 0}function p(t,e){for(var r=new Array(e),i=0;i<e;++i)r[i]=t[i];return r}function g(t,e,r,i){if("function"==typeof t.on)i.once?t.once(e,r):t.on(e,r);else{if("function"!=typeof t.addEventListener)throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof t);t.addEventListener(e,(function n(s){i.once&&t.removeEventListener(e,n),r(s)}))}}Object.defineProperty(s,"defaultMaxListeners",{enumerable:!0,get:function(){return o},set:function(t){if("number"!=typeof t||t<0||n(t))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+t+".");o=t}}),s.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},s.prototype.setMaxListeners=function(t){if("number"!=typeof t||t<0||n(t))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+t+".");return this._maxListeners=t,this},s.prototype.getMaxListeners=function(){return u(this)},s.prototype.emit=function(t){for(var e=[],r=1;r<arguments.length;r++)e.push(arguments[r]);var n="error"===t,s=this._events;if(void 0!==s)n=n&&void 0===s.error;else if(!n)return!1;if(n){var o;if(e.length>0&&(o=e[0]),o instanceof Error)throw o;var a=new Error("Unhandled error."+(o?" ("+o.message+")":""));throw a.context=o,a}var u=s[t];if(void 0===u)return!1;if("function"==typeof u)i(u,this,e);else{var h=u.length,c=p(u,h);for(r=0;r<h;++r)i(c[r],this,e)}return!0},s.prototype.addListener=function(t,e){return h(this,t,e,!1)},s.prototype.on=s.prototype.addListener,s.prototype.prependListener=function(t,e){return h(this,t,e,!0)},s.prototype.once=function(t,e){return a(e),this.on(t,l(this,t,e)),this},s.prototype.prependOnceListener=function(t,e){return a(e),this.prependListener(t,l(this,t,e)),this},s.prototype.removeListener=function(t,e){var r,i,n,s,o;if(a(e),void 0===(i=this._events))return this;if(void 0===(r=i[t]))return this;if(r===e||r.listener===e)0==--this._eventsCount?this._events=Object.create(null):(delete i[t],i.removeListener&&this.emit("removeListener",t,r.listener||e));else if("function"!=typeof r){for(n=-1,s=r.length-1;s>=0;s--)if(r[s]===e||r[s].listener===e){o=r[s].listener,n=s;break}if(n<0)return this;0===n?r.shift():function(t,e){for(;e+1<t.length;e++)t[e]=t[e+1];t.pop()}(r,n),1===r.length&&(i[t]=r[0]),void 0!==i.removeListener&&this.emit("removeListener",t,o||e)}return this},s.prototype.off=s.prototype.removeListener,s.prototype.removeAllListeners=function(t){var e,r,i;if(void 0===(r=this._events))return this;if(void 0===r.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==r[t]&&(0==--this._eventsCount?this._events=Object.create(null):delete r[t]),this;if(0===arguments.length){var n,s=Object.keys(r);for(i=0;i<s.length;++i)"removeListener"!==(n=s[i])&&this.removeAllListeners(n);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(e=r[t]))this.removeListener(t,e);else if(void 0!==e)for(i=e.length-1;i>=0;i--)this.removeListener(t,e[i]);return this},s.prototype.listeners=function(t){return d(this,t,!0)},s.prototype.rawListeners=function(t){return d(this,t,!1)},s.listenerCount=function(t,e){return"function"==typeof t.listenerCount?t.listenerCount(e):f.call(t,e)},s.prototype.listenerCount=f,s.prototype.eventNames=function(){return this._eventsCount>0?e(this._events):[]}},3048:(t,e,r)=>{var i=r(9509).Buffer,n=r(1167);t.exports=function(t,e,r,s){if(i.isBuffer(t)||(t=i.from(t,"binary")),e&&(i.isBuffer(e)||(e=i.from(e,"binary")),8!==e.length))throw new RangeError("salt should be Buffer with 8 byte length");for(var o=r/8,a=i.alloc(o),u=i.alloc(s||0),h=i.alloc(0);o>0||s>0;){var c=new n;c.update(h),c.update(t),e&&c.update(e),h=c.digest();var l=0;if(o>0){var d=a.length-o;l=Math.min(o,h.length),h.copy(a,d,0,l),o-=l}if(l<h.length&&s>0){var f=u.length-s,p=Math.min(s,h.length-l);h.copy(u,f,l,l+p),s-=p}}return h.fill(0),{key:a,iv:u}}},4029:(t,e,r)=>{"use strict";var i=r(5320),n=Object.prototype.toString,s=Object.prototype.hasOwnProperty;t.exports=function(t,e,r){if(!i(e))throw new TypeError("iterator must be a function");var o;arguments.length>=3&&(o=r),"[object Array]"===n.call(t)?function(t,e,r){for(var i=0,n=t.length;i<n;i++)s.call(t,i)&&(null==r?e(t[i],i,t):e.call(r,t[i],i,t))}(t,e,o):"string"==typeof t?function(t,e,r){for(var i=0,n=t.length;i<n;i++)null==r?e(t.charAt(i),i,t):e.call(r,t.charAt(i),i,t)}(t,e,o):function(t,e,r){for(var i in t)s.call(t,i)&&(null==r?e(t[i],i,t):e.call(r,t[i],i,t))}(t,e,o)}},7648:t=>{"use strict";var e=Array.prototype.slice,r=Object.prototype.toString;t.exports=function(t){var i=this;if("function"!=typeof i||"[object Function]"!==r.call(i))throw new TypeError("Function.prototype.bind called on incompatible "+i);for(var n,s=e.call(arguments,1),o=Math.max(0,i.length-s.length),a=[],u=0;u<o;u++)a.push("$"+u);if(n=Function("binder","return function ("+a.join(",")+"){ return binder.apply(this,arguments); }")((function(){if(this instanceof n){var r=i.apply(this,s.concat(e.call(arguments)));return Object(r)===r?r:this}return i.apply(t,s.concat(e.call(arguments)))})),i.prototype){var h=function(){};h.prototype=i.prototype,n.prototype=new h,h.prototype=null}return n}},8612:(t,e,r)=>{"use strict";var i=r(7648);t.exports=Function.prototype.bind||i},210:(t,e,r)=>{"use strict";var i,n=SyntaxError,s=Function,o=TypeError,a=function(t){try{return s('"use strict"; return ('+t+").constructor;")()}catch(t){}},u=Object.getOwnPropertyDescriptor;if(u)try{u({},"")}catch(t){u=null}var h=function(){throw new o},c=u?function(){try{return h}catch(t){try{return u(arguments,"callee").get}catch(t){return h}}}():h,l=r(1405)(),d=r(8185)(),f=Object.getPrototypeOf||(d?function(t){return t.__proto__}:null),p={},g="undefined"!=typeof Uint8Array&&f?f(Uint8Array):i,m={"%AggregateError%":"undefined"==typeof AggregateError?i:AggregateError,"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?i:ArrayBuffer,"%ArrayIteratorPrototype%":l&&f?f([][Symbol.iterator]()):i,"%AsyncFromSyncIteratorPrototype%":i,"%AsyncFunction%":p,"%AsyncGenerator%":p,"%AsyncGeneratorFunction%":p,"%AsyncIteratorPrototype%":p,"%Atomics%":"undefined"==typeof Atomics?i:Atomics,"%BigInt%":"undefined"==typeof BigInt?i:BigInt,"%BigInt64Array%":"undefined"==typeof BigInt64Array?i:BigInt64Array,"%BigUint64Array%":"undefined"==typeof BigUint64Array?i:BigUint64Array,"%Boolean%":Boolean,"%DataView%":"undefined"==typeof DataView?i:DataView,"%Date%":Date,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":Error,"%eval%":eval,"%EvalError%":EvalError,"%Float32Array%":"undefined"==typeof Float32Array?i:Float32Array,"%Float64Array%":"undefined"==typeof Float64Array?i:Float64Array,"%FinalizationRegistry%":"undefined"==typeof FinalizationRegistry?i:FinalizationRegistry,"%Function%":s,"%GeneratorFunction%":p,"%Int8Array%":"undefined"==typeof Int8Array?i:Int8Array,"%Int16Array%":"undefined"==typeof Int16Array?i:Int16Array,"%Int32Array%":"undefined"==typeof Int32Array?i:Int32Array,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":l&&f?f(f([][Symbol.iterator]())):i,"%JSON%":"object"==typeof JSON?JSON:i,"%Map%":"undefined"==typeof Map?i:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&l&&f?f((new Map)[Symbol.iterator]()):i,"%Math%":Math,"%Number%":Number,"%Object%":Object,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?i:Promise,"%Proxy%":"undefined"==typeof Proxy?i:Proxy,"%RangeError%":RangeError,"%ReferenceError%":ReferenceError,"%Reflect%":"undefined"==typeof Reflect?i:Reflect,"%RegExp%":RegExp,"%Set%":"undefined"==typeof Set?i:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&l&&f?f((new Set)[Symbol.iterator]()):i,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?i:SharedArrayBuffer,"%String%":String,"%StringIteratorPrototype%":l&&f?f(""[Symbol.iterator]()):i,"%Symbol%":l?Symbol:i,"%SyntaxError%":n,"%ThrowTypeError%":c,"%TypedArray%":g,"%TypeError%":o,"%Uint8Array%":"undefined"==typeof Uint8Array?i:Uint8Array,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?i:Uint8ClampedArray,"%Uint16Array%":"undefined"==typeof Uint16Array?i:Uint16Array,"%Uint32Array%":"undefined"==typeof Uint32Array?i:Uint32Array,"%URIError%":URIError,"%WeakMap%":"undefined"==typeof WeakMap?i:WeakMap,"%WeakRef%":"undefined"==typeof WeakRef?i:WeakRef,"%WeakSet%":"undefined"==typeof WeakSet?i:WeakSet};if(f)try{null.error}catch(t){var y=f(f(t));m["%Error.prototype%"]=y}var v=function t(e){var r;if("%AsyncFunction%"===e)r=a("async function () {}");else if("%GeneratorFunction%"===e)r=a("function* () {}");else if("%AsyncGeneratorFunction%"===e)r=a("async function* () {}");else if("%AsyncGenerator%"===e){var i=t("%AsyncGeneratorFunction%");i&&(r=i.prototype)}else if("%AsyncIteratorPrototype%"===e){var n=t("%AsyncGenerator%");n&&f&&(r=f(n.prototype))}return m[e]=r,r},b={"%ArrayBufferPrototype%":["ArrayBuffer","prototype"],"%ArrayPrototype%":["Array","prototype"],"%ArrayProto_entries%":["Array","prototype","entries"],"%ArrayProto_forEach%":["Array","prototype","forEach"],"%ArrayProto_keys%":["Array","prototype","keys"],"%ArrayProto_values%":["Array","prototype","values"],"%AsyncFunctionPrototype%":["AsyncFunction","prototype"],"%AsyncGenerator%":["AsyncGeneratorFunction","prototype"],"%AsyncGeneratorPrototype%":["AsyncGeneratorFunction","prototype","prototype"],"%BooleanPrototype%":["Boolean","prototype"],"%DataViewPrototype%":["DataView","prototype"],"%DatePrototype%":["Date","prototype"],"%ErrorPrototype%":["Error","prototype"],"%EvalErrorPrototype%":["EvalError","prototype"],"%Float32ArrayPrototype%":["Float32Array","prototype"],"%Float64ArrayPrototype%":["Float64Array","prototype"],"%FunctionPrototype%":["Function","prototype"],"%Generator%":["GeneratorFunction","prototype"],"%GeneratorPrototype%":["GeneratorFunction","prototype","prototype"],"%Int8ArrayPrototype%":["Int8Array","prototype"],"%Int16ArrayPrototype%":["Int16Array","prototype"],"%Int32ArrayPrototype%":["Int32Array","prototype"],"%JSONParse%":["JSON","parse"],"%JSONStringify%":["JSON","stringify"],"%MapPrototype%":["Map","prototype"],"%NumberPrototype%":["Number","prototype"],"%ObjectPrototype%":["Object","prototype"],"%ObjProto_toString%":["Object","prototype","toString"],"%ObjProto_valueOf%":["Object","prototype","valueOf"],"%PromisePrototype%":["Promise","prototype"],"%PromiseProto_then%":["Promise","prototype","then"],"%Promise_all%":["Promise","all"],"%Promise_reject%":["Promise","reject"],"%Promise_resolve%":["Promise","resolve"],"%RangeErrorPrototype%":["RangeError","prototype"],"%ReferenceErrorPrototype%":["ReferenceError","prototype"],"%RegExpPrototype%":["RegExp","prototype"],"%SetPrototype%":["Set","prototype"],"%SharedArrayBufferPrototype%":["SharedArrayBuffer","prototype"],"%StringPrototype%":["String","prototype"],"%SymbolPrototype%":["Symbol","prototype"],"%SyntaxErrorPrototype%":["SyntaxError","prototype"],"%TypedArrayPrototype%":["TypedArray","prototype"],"%TypeErrorPrototype%":["TypeError","prototype"],"%Uint8ArrayPrototype%":["Uint8Array","prototype"],"%Uint8ClampedArrayPrototype%":["Uint8ClampedArray","prototype"],"%Uint16ArrayPrototype%":["Uint16Array","prototype"],"%Uint32ArrayPrototype%":["Uint32Array","prototype"],"%URIErrorPrototype%":["URIError","prototype"],"%WeakMapPrototype%":["WeakMap","prototype"],"%WeakSetPrototype%":["WeakSet","prototype"]},w=r(8612),E=r(7642),S=w.call(Function.call,Array.prototype.concat),N=w.call(Function.apply,Array.prototype.splice),M=w.call(Function.call,String.prototype.replace),x=w.call(Function.call,String.prototype.slice),I=w.call(Function.call,RegExp.prototype.exec),A=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,P=/\\(\\)?/g,T=function(t,e){var r,i=t;if(E(b,i)&&(i="%"+(r=b[i])[0]+"%"),E(m,i)){var s=m[i];if(s===p&&(s=v(i)),void 0===s&&!e)throw new o("intrinsic "+t+" exists, but is not available. Please file an issue!");return{alias:r,name:i,value:s}}throw new n("intrinsic "+t+" does not exist!")};t.exports=function(t,e){if("string"!=typeof t||0===t.length)throw new o("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof e)throw new o('"allowMissing" argument must be a boolean');if(null===I(/^%?[^%]*%?$/,t))throw new n("`%` may not be present anywhere but at the beginning and end of the intrinsic name");var r=function(t){var e=x(t,0,1),r=x(t,-1);if("%"===e&&"%"!==r)throw new n("invalid intrinsic syntax, expected closing `%`");if("%"===r&&"%"!==e)throw new n("invalid intrinsic syntax, expected opening `%`");var i=[];return M(t,A,(function(t,e,r,n){i[i.length]=r?M(n,P,"$1"):e||t})),i}(t),i=r.length>0?r[0]:"",s=T("%"+i+"%",e),a=s.name,h=s.value,c=!1,l=s.alias;l&&(i=l[0],N(r,S([0,1],l)));for(var d=1,f=!0;d<r.length;d+=1){var p=r[d],g=x(p,0,1),y=x(p,-1);if(('"'===g||"'"===g||"`"===g||'"'===y||"'"===y||"`"===y)&&g!==y)throw new n("property names with quotes must have matching quotes");if("constructor"!==p&&f||(c=!0),E(m,a="%"+(i+="."+p)+"%"))h=m[a];else if(null!=h){if(!(p in h)){if(!e)throw new o("base intrinsic for "+t+" exists, but the property is not available.");return}if(u&&d+1>=r.length){var v=u(h,p);h=(f=!!v)&&"get"in v&&!("originalValue"in v.get)?v.get:h[p]}else f=E(h,p),h=h[p];f&&!c&&(m[a]=h)}}return h}},7296:(t,e,r)=>{"use strict";var i=r(210)("%Object.getOwnPropertyDescriptor%",!0);if(i)try{i([],"length")}catch(t){i=null}t.exports=i},1044:(t,e,r)=>{"use strict";var i=r(210)("%Object.defineProperty%",!0),n=function(){if(i)try{return i({},"a",{value:1}),!0}catch(t){return!1}return!1};n.hasArrayLengthDefineBug=function(){if(!n())return null;try{return 1!==i([],"length",{value:1}).length}catch(t){return!0}},t.exports=n},8185:t=>{"use strict";var e={foo:{}},r=Object;t.exports=function(){return{__proto__:e}.foo===e.foo&&!({__proto__:null}instanceof r)}},1405:(t,e,r)=>{"use strict";var i="undefined"!=typeof Symbol&&Symbol,n=r(5419);t.exports=function(){return"function"==typeof i&&"function"==typeof Symbol&&"symbol"==typeof i("foo")&&"symbol"==typeof Symbol("bar")&&n()}},5419:t=>{"use strict";t.exports=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var t={},e=Symbol("test"),r=Object(e);if("string"==typeof e)return!1;if("[object Symbol]"!==Object.prototype.toString.call(e))return!1;if("[object Symbol]"!==Object.prototype.toString.call(r))return!1;for(e in t[e]=42,t)return!1;if("function"==typeof Object.keys&&0!==Object.keys(t).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(t).length)return!1;var i=Object.getOwnPropertySymbols(t);if(1!==i.length||i[0]!==e)return!1;if(!Object.prototype.propertyIsEnumerable.call(t,e))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var n=Object.getOwnPropertyDescriptor(t,e);if(42!==n.value||!0!==n.enumerable)return!1}return!0}},6410:(t,e,r)=>{"use strict";var i=r(5419);t.exports=function(){return i()&&!!Symbol.toStringTag}},7642:(t,e,r)=>{"use strict";var i=r(8612);t.exports=i.call(Function.call,Object.prototype.hasOwnProperty)},3349:(t,e,r)=>{"use strict";var i=r(9509).Buffer,n=r(8473).Transform;function s(t){n.call(this),this._block=i.allocUnsafe(t),this._blockSize=t,this._blockOffset=0,this._length=[0,0,0,0],this._finalized=!1}r(5717)(s,n),s.prototype._transform=function(t,e,r){var i=null;try{this.update(t,e)}catch(t){i=t}r(i)},s.prototype._flush=function(t){var e=null;try{this.push(this.digest())}catch(t){e=t}t(e)},s.prototype.update=function(t,e){if(function(t,e){if(!i.isBuffer(t)&&"string"!=typeof t)throw new TypeError("Data must be a string or a buffer")}(t),this._finalized)throw new Error("Digest already called");i.isBuffer(t)||(t=i.from(t,e));for(var r=this._block,n=0;this._blockOffset+t.length-n>=this._blockSize;){for(var s=this._blockOffset;s<this._blockSize;)r[s++]=t[n++];this._update(),this._blockOffset=0}for(;n<t.length;)r[this._blockOffset++]=t[n++];for(var o=0,a=8*t.length;a>0;++o)this._length[o]+=a,(a=this._length[o]/4294967296|0)>0&&(this._length[o]-=4294967296*a);return this},s.prototype._update=function(){throw new Error("_update is not implemented")},s.prototype.digest=function(t){if(this._finalized)throw new Error("Digest already called");this._finalized=!0;var e=this._digest();void 0!==t&&(e=e.toString(t)),this._block.fill(0),this._blockOffset=0;for(var r=0;r<4;++r)this._length[r]=0;return e},s.prototype._digest=function(){throw new Error("_digest is not implemented")},t.exports=s},3715:(t,e,r)=>{var i=e;i.utils=r(6436),i.common=r(5772),i.sha=r(9041),i.ripemd=r(2949),i.hmac=r(2344),i.sha1=i.sha.sha1,i.sha256=i.sha.sha256,i.sha224=i.sha.sha224,i.sha384=i.sha.sha384,i.sha512=i.sha.sha512,i.ripemd160=i.ripemd.ripemd160},5772:(t,e,r)=>{"use strict";var i=r(6436),n=r(9746);function s(){this.pending=null,this.pendingTotal=0,this.blockSize=this.constructor.blockSize,this.outSize=this.constructor.outSize,this.hmacStrength=this.constructor.hmacStrength,this.padLength=this.constructor.padLength/8,this.endian="big",this._delta8=this.blockSize/8,this._delta32=this.blockSize/32}e.BlockHash=s,s.prototype.update=function(t,e){if(t=i.toArray(t,e),this.pending?this.pending=this.pending.concat(t):this.pending=t,this.pendingTotal+=t.length,this.pending.length>=this._delta8){var r=(t=this.pending).length%this._delta8;this.pending=t.slice(t.length-r,t.length),0===this.pending.length&&(this.pending=null),t=i.join32(t,0,t.length-r,this.endian);for(var n=0;n<t.length;n+=this._delta32)this._update(t,n,n+this._delta32)}return this},s.prototype.digest=function(t){return this.update(this._pad()),n(null===this.pending),this._digest(t)},s.prototype._pad=function(){var t=this.pendingTotal,e=this._delta8,r=e-(t+this.padLength)%e,i=new Array(r+this.padLength);i[0]=128;for(var n=1;n<r;n++)i[n]=0;if(t<<=3,"big"===this.endian){for(var s=8;s<this.padLength;s++)i[n++]=0;i[n++]=0,i[n++]=0,i[n++]=0,i[n++]=0,i[n++]=t>>>24&255,i[n++]=t>>>16&255,i[n++]=t>>>8&255,i[n++]=255&t}else for(i[n++]=255&t,i[n++]=t>>>8&255,i[n++]=t>>>16&255,i[n++]=t>>>24&255,i[n++]=0,i[n++]=0,i[n++]=0,i[n++]=0,s=8;s<this.padLength;s++)i[n++]=0;return i}},2344:(t,e,r)=>{"use strict";var i=r(6436),n=r(9746);function s(t,e,r){if(!(this instanceof s))return new s(t,e,r);this.Hash=t,this.blockSize=t.blockSize/8,this.outSize=t.outSize/8,this.inner=null,this.outer=null,this._init(i.toArray(e,r))}t.exports=s,s.prototype._init=function(t){t.length>this.blockSize&&(t=(new this.Hash).update(t).digest()),n(t.length<=this.blockSize);for(var e=t.length;e<this.blockSize;e++)t.push(0);for(e=0;e<t.length;e++)t[e]^=54;for(this.inner=(new this.Hash).update(t),e=0;e<t.length;e++)t[e]^=106;this.outer=(new this.Hash).update(t)},s.prototype.update=function(t,e){return this.inner.update(t,e),this},s.prototype.digest=function(t){return this.outer.update(this.inner.digest()),this.outer.digest(t)}},2949:(t,e,r)=>{"use strict";var i=r(6436),n=r(5772),s=i.rotl32,o=i.sum32,a=i.sum32_3,u=i.sum32_4,h=n.BlockHash;function c(){if(!(this instanceof c))return new c;h.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.endian="little"}function l(t,e,r,i){return t<=15?e^r^i:t<=31?e&r|~e&i:t<=47?(e|~r)^i:t<=63?e&i|r&~i:e^(r|~i)}function d(t){return t<=15?0:t<=31?1518500249:t<=47?1859775393:t<=63?2400959708:2840853838}function f(t){return t<=15?1352829926:t<=31?1548603684:t<=47?1836072691:t<=63?2053994217:0}i.inherits(c,h),e.ripemd160=c,c.blockSize=512,c.outSize=160,c.hmacStrength=192,c.padLength=64,c.prototype._update=function(t,e){for(var r=this.h[0],i=this.h[1],n=this.h[2],h=this.h[3],c=this.h[4],v=r,b=i,w=n,E=h,S=c,N=0;N<80;N++){var M=o(s(u(r,l(N,i,n,h),t[p[N]+e],d(N)),m[N]),c);r=c,c=h,h=s(n,10),n=i,i=M,M=o(s(u(v,l(79-N,b,w,E),t[g[N]+e],f(N)),y[N]),S),v=S,S=E,E=s(w,10),w=b,b=M}M=a(this.h[1],n,E),this.h[1]=a(this.h[2],h,S),this.h[2]=a(this.h[3],c,v),this.h[3]=a(this.h[4],r,b),this.h[4]=a(this.h[0],i,w),this.h[0]=M},c.prototype._digest=function(t){return"hex"===t?i.toHex32(this.h,"little"):i.split32(this.h,"little")};var p=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],g=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],m=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],y=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]},9041:(t,e,r)=>{"use strict";e.sha1=r(4761),e.sha224=r(799),e.sha256=r(9344),e.sha384=r(772),e.sha512=r(5900)},4761:(t,e,r)=>{"use strict";var i=r(6436),n=r(5772),s=r(7038),o=i.rotl32,a=i.sum32,u=i.sum32_5,h=s.ft_1,c=n.BlockHash,l=[1518500249,1859775393,2400959708,3395469782];function d(){if(!(this instanceof d))return new d;c.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.W=new Array(80)}i.inherits(d,c),t.exports=d,d.blockSize=512,d.outSize=160,d.hmacStrength=80,d.padLength=64,d.prototype._update=function(t,e){for(var r=this.W,i=0;i<16;i++)r[i]=t[e+i];for(;i<r.length;i++)r[i]=o(r[i-3]^r[i-8]^r[i-14]^r[i-16],1);var n=this.h[0],s=this.h[1],c=this.h[2],d=this.h[3],f=this.h[4];for(i=0;i<r.length;i++){var p=~~(i/20),g=u(o(n,5),h(p,s,c,d),f,r[i],l[p]);f=d,d=c,c=o(s,30),s=n,n=g}this.h[0]=a(this.h[0],n),this.h[1]=a(this.h[1],s),this.h[2]=a(this.h[2],c),this.h[3]=a(this.h[3],d),this.h[4]=a(this.h[4],f)},d.prototype._digest=function(t){return"hex"===t?i.toHex32(this.h,"big"):i.split32(this.h,"big")}},799:(t,e,r)=>{"use strict";var i=r(6436),n=r(9344);function s(){if(!(this instanceof s))return new s;n.call(this),this.h=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]}i.inherits(s,n),t.exports=s,s.blockSize=512,s.outSize=224,s.hmacStrength=192,s.padLength=64,s.prototype._digest=function(t){return"hex"===t?i.toHex32(this.h.slice(0,7),"big"):i.split32(this.h.slice(0,7),"big")}},9344:(t,e,r)=>{"use strict";var i=r(6436),n=r(5772),s=r(7038),o=r(9746),a=i.sum32,u=i.sum32_4,h=i.sum32_5,c=s.ch32,l=s.maj32,d=s.s0_256,f=s.s1_256,p=s.g0_256,g=s.g1_256,m=n.BlockHash,y=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function v(){if(!(this instanceof v))return new v;m.call(this),this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],this.k=y,this.W=new Array(64)}i.inherits(v,m),t.exports=v,v.blockSize=512,v.outSize=256,v.hmacStrength=192,v.padLength=64,v.prototype._update=function(t,e){for(var r=this.W,i=0;i<16;i++)r[i]=t[e+i];for(;i<r.length;i++)r[i]=u(g(r[i-2]),r[i-7],p(r[i-15]),r[i-16]);var n=this.h[0],s=this.h[1],m=this.h[2],y=this.h[3],v=this.h[4],b=this.h[5],w=this.h[6],E=this.h[7];for(o(this.k.length===r.length),i=0;i<r.length;i++){var S=h(E,f(v),c(v,b,w),this.k[i],r[i]),N=a(d(n),l(n,s,m));E=w,w=b,b=v,v=a(y,S),y=m,m=s,s=n,n=a(S,N)}this.h[0]=a(this.h[0],n),this.h[1]=a(this.h[1],s),this.h[2]=a(this.h[2],m),this.h[3]=a(this.h[3],y),this.h[4]=a(this.h[4],v),this.h[5]=a(this.h[5],b),this.h[6]=a(this.h[6],w),this.h[7]=a(this.h[7],E)},v.prototype._digest=function(t){return"hex"===t?i.toHex32(this.h,"big"):i.split32(this.h,"big")}},772:(t,e,r)=>{"use strict";var i=r(6436),n=r(5900);function s(){if(!(this instanceof s))return new s;n.call(this),this.h=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]}i.inherits(s,n),t.exports=s,s.blockSize=1024,s.outSize=384,s.hmacStrength=192,s.padLength=128,s.prototype._digest=function(t){return"hex"===t?i.toHex32(this.h.slice(0,12),"big"):i.split32(this.h.slice(0,12),"big")}},5900:(t,e,r)=>{"use strict";var i=r(6436),n=r(5772),s=r(9746),o=i.rotr64_hi,a=i.rotr64_lo,u=i.shr64_hi,h=i.shr64_lo,c=i.sum64,l=i.sum64_hi,d=i.sum64_lo,f=i.sum64_4_hi,p=i.sum64_4_lo,g=i.sum64_5_hi,m=i.sum64_5_lo,y=n.BlockHash,v=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function b(){if(!(this instanceof b))return new b;y.call(this),this.h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209],this.k=v,this.W=new Array(160)}function w(t,e,r,i,n){var s=t&r^~t&n;return s<0&&(s+=4294967296),s}function E(t,e,r,i,n,s){var o=e&i^~e&s;return o<0&&(o+=4294967296),o}function S(t,e,r,i,n){var s=t&r^t&n^r&n;return s<0&&(s+=4294967296),s}function N(t,e,r,i,n,s){var o=e&i^e&s^i&s;return o<0&&(o+=4294967296),o}function M(t,e){var r=o(t,e,28)^o(e,t,2)^o(e,t,7);return r<0&&(r+=4294967296),r}function x(t,e){var r=a(t,e,28)^a(e,t,2)^a(e,t,7);return r<0&&(r+=4294967296),r}function I(t,e){var r=a(t,e,14)^a(t,e,18)^a(e,t,9);return r<0&&(r+=4294967296),r}function A(t,e){var r=o(t,e,1)^o(t,e,8)^u(t,e,7);return r<0&&(r+=4294967296),r}function P(t,e){var r=a(t,e,1)^a(t,e,8)^h(t,e,7);return r<0&&(r+=4294967296),r}function T(t,e){var r=a(t,e,19)^a(e,t,29)^h(t,e,6);return r<0&&(r+=4294967296),r}i.inherits(b,y),t.exports=b,b.blockSize=1024,b.outSize=512,b.hmacStrength=192,b.padLength=128,b.prototype._prepareBlock=function(t,e){for(var r=this.W,i=0;i<32;i++)r[i]=t[e+i];for(;i<r.length;i+=2){var n=(m=r[i-4],y=r[i-3],v=void 0,(v=o(m,y,19)^o(y,m,29)^u(m,y,6))<0&&(v+=4294967296),v),s=T(r[i-4],r[i-3]),a=r[i-14],h=r[i-13],c=A(r[i-30],r[i-29]),l=P(r[i-30],r[i-29]),d=r[i-32],g=r[i-31];r[i]=f(n,s,a,h,c,l,d,g),r[i+1]=p(n,s,a,h,c,l,d,g)}var m,y,v},b.prototype._update=function(t,e){this._prepareBlock(t,e);var r,i,n,a=this.W,u=this.h[0],h=this.h[1],f=this.h[2],p=this.h[3],y=this.h[4],v=this.h[5],b=this.h[6],A=this.h[7],P=this.h[8],T=this.h[9],R=this.h[10],k=this.h[11],B=this.h[12],O=this.h[13],C=this.h[14],L=this.h[15];s(this.k.length===a.length);for(var j=0;j<a.length;j+=2){var Z=C,D=L,F=(n=void 0,(n=o(r=P,i=T,14)^o(r,i,18)^o(i,r,9))<0&&(n+=4294967296),n),z=I(P,T),H=w(P,0,R,0,B),W=E(0,T,0,k,0,O),K=this.k[j],q=this.k[j+1],U=a[j],V=a[j+1],X=g(Z,D,F,z,H,W,K,q,U,V),G=m(Z,D,F,z,H,W,K,q,U,V);Z=M(u,h),D=x(u,h),F=S(u,0,f,0,y),z=N(0,h,0,p,0,v);var Y=l(Z,D,F,z),Q=d(Z,D,F,z);C=B,L=O,B=R,O=k,R=P,k=T,P=l(b,A,X,G),T=d(A,A,X,G),b=y,A=v,y=f,v=p,f=u,p=h,u=l(X,G,Y,Q),h=d(X,G,Y,Q)}c(this.h,0,u,h),c(this.h,2,f,p),c(this.h,4,y,v),c(this.h,6,b,A),c(this.h,8,P,T),c(this.h,10,R,k),c(this.h,12,B,O),c(this.h,14,C,L)},b.prototype._digest=function(t){return"hex"===t?i.toHex32(this.h,"big"):i.split32(this.h,"big")}},7038:(t,e,r)=>{"use strict";var i=r(6436).rotr32;function n(t,e,r){return t&e^~t&r}function s(t,e,r){return t&e^t&r^e&r}function o(t,e,r){return t^e^r}e.ft_1=function(t,e,r,i){return 0===t?n(e,r,i):1===t||3===t?o(e,r,i):2===t?s(e,r,i):void 0},e.ch32=n,e.maj32=s,e.p32=o,e.s0_256=function(t){return i(t,2)^i(t,13)^i(t,22)},e.s1_256=function(t){return i(t,6)^i(t,11)^i(t,25)},e.g0_256=function(t){return i(t,7)^i(t,18)^t>>>3},e.g1_256=function(t){return i(t,17)^i(t,19)^t>>>10}},6436:(t,e,r)=>{"use strict";var i=r(9746),n=r(5717);function s(t,e){return 55296==(64512&t.charCodeAt(e))&&!(e<0||e+1>=t.length)&&56320==(64512&t.charCodeAt(e+1))}function o(t){return(t>>>24|t>>>8&65280|t<<8&16711680|(255&t)<<24)>>>0}function a(t){return 1===t.length?"0"+t:t}function u(t){return 7===t.length?"0"+t:6===t.length?"00"+t:5===t.length?"000"+t:4===t.length?"0000"+t:3===t.length?"00000"+t:2===t.length?"000000"+t:1===t.length?"0000000"+t:t}e.inherits=n,e.toArray=function(t,e){if(Array.isArray(t))return t.slice();if(!t)return[];var r=[];if("string"==typeof t)if(e){if("hex"===e)for((t=t.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(t="0"+t),n=0;n<t.length;n+=2)r.push(parseInt(t[n]+t[n+1],16))}else for(var i=0,n=0;n<t.length;n++){var o=t.charCodeAt(n);o<128?r[i++]=o:o<2048?(r[i++]=o>>6|192,r[i++]=63&o|128):s(t,n)?(o=65536+((1023&o)<<10)+(1023&t.charCodeAt(++n)),r[i++]=o>>18|240,r[i++]=o>>12&63|128,r[i++]=o>>6&63|128,r[i++]=63&o|128):(r[i++]=o>>12|224,r[i++]=o>>6&63|128,r[i++]=63&o|128)}else for(n=0;n<t.length;n++)r[n]=0|t[n];return r},e.toHex=function(t){for(var e="",r=0;r<t.length;r++)e+=a(t[r].toString(16));return e},e.htonl=o,e.toHex32=function(t,e){for(var r="",i=0;i<t.length;i++){var n=t[i];"little"===e&&(n=o(n)),r+=u(n.toString(16))}return r},e.zero2=a,e.zero8=u,e.join32=function(t,e,r,n){var s=r-e;i(s%4==0);for(var o=new Array(s/4),a=0,u=e;a<o.length;a++,u+=4){var h;h="big"===n?t[u]<<24|t[u+1]<<16|t[u+2]<<8|t[u+3]:t[u+3]<<24|t[u+2]<<16|t[u+1]<<8|t[u],o[a]=h>>>0}return o},e.split32=function(t,e){for(var r=new Array(4*t.length),i=0,n=0;i<t.length;i++,n+=4){var s=t[i];"big"===e?(r[n]=s>>>24,r[n+1]=s>>>16&255,r[n+2]=s>>>8&255,r[n+3]=255&s):(r[n+3]=s>>>24,r[n+2]=s>>>16&255,r[n+1]=s>>>8&255,r[n]=255&s)}return r},e.rotr32=function(t,e){return t>>>e|t<<32-e},e.rotl32=function(t,e){return t<<e|t>>>32-e},e.sum32=function(t,e){return t+e>>>0},e.sum32_3=function(t,e,r){return t+e+r>>>0},e.sum32_4=function(t,e,r,i){return t+e+r+i>>>0},e.sum32_5=function(t,e,r,i,n){return t+e+r+i+n>>>0},e.sum64=function(t,e,r,i){var n=t[e],s=i+t[e+1]>>>0,o=(s<i?1:0)+r+n;t[e]=o>>>0,t[e+1]=s},e.sum64_hi=function(t,e,r,i){return(e+i>>>0<e?1:0)+t+r>>>0},e.sum64_lo=function(t,e,r,i){return e+i>>>0},e.sum64_4_hi=function(t,e,r,i,n,s,o,a){var u=0,h=e;return u+=(h=h+i>>>0)<e?1:0,u+=(h=h+s>>>0)<s?1:0,t+r+n+o+(u+=(h=h+a>>>0)<a?1:0)>>>0},e.sum64_4_lo=function(t,e,r,i,n,s,o,a){return e+i+s+a>>>0},e.sum64_5_hi=function(t,e,r,i,n,s,o,a,u,h){var c=0,l=e;return c+=(l=l+i>>>0)<e?1:0,c+=(l=l+s>>>0)<s?1:0,c+=(l=l+a>>>0)<a?1:0,t+r+n+o+u+(c+=(l=l+h>>>0)<h?1:0)>>>0},e.sum64_5_lo=function(t,e,r,i,n,s,o,a,u,h){return e+i+s+a+h>>>0},e.rotr64_hi=function(t,e,r){return(e<<32-r|t>>>r)>>>0},e.rotr64_lo=function(t,e,r){return(t<<32-r|e>>>r)>>>0},e.shr64_hi=function(t,e,r){return t>>>r},e.shr64_lo=function(t,e,r){return(t<<32-r|e>>>r)>>>0}},2156:(t,e,r)=>{"use strict";var i=r(3715),n=r(4504),s=r(9746);function o(t){if(!(this instanceof o))return new o(t);this.hash=t.hash,this.predResist=!!t.predResist,this.outLen=this.hash.outSize,this.minEntropy=t.minEntropy||this.hash.hmacStrength,this._reseed=null,this.reseedInterval=null,this.K=null,this.V=null;var e=n.toArray(t.entropy,t.entropyEnc||"hex"),r=n.toArray(t.nonce,t.nonceEnc||"hex"),i=n.toArray(t.pers,t.persEnc||"hex");s(e.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._init(e,r,i)}t.exports=o,o.prototype._init=function(t,e,r){var i=t.concat(e).concat(r);this.K=new Array(this.outLen/8),this.V=new Array(this.outLen/8);for(var n=0;n<this.V.length;n++)this.K[n]=0,this.V[n]=1;this._update(i),this._reseed=1,this.reseedInterval=281474976710656},o.prototype._hmac=function(){return new i.hmac(this.hash,this.K)},o.prototype._update=function(t){var e=this._hmac().update(this.V).update([0]);t&&(e=e.update(t)),this.K=e.digest(),this.V=this._hmac().update(this.V).digest(),t&&(this.K=this._hmac().update(this.V).update([1]).update(t).digest(),this.V=this._hmac().update(this.V).digest())},o.prototype.reseed=function(t,e,r,i){"string"!=typeof e&&(i=r,r=e,e=null),t=n.toArray(t,e),r=n.toArray(r,i),s(t.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._update(t.concat(r||[])),this._reseed=1},o.prototype.generate=function(t,e,r,i){if(this._reseed>this.reseedInterval)throw new Error("Reseed is required");"string"!=typeof e&&(i=r,r=e,e=null),r&&(r=n.toArray(r,i||"hex"),this._update(r));for(var s=[];s.length<t;)this.V=this._hmac().update(this.V).digest(),s=s.concat(this.V);var o=s.slice(0,t);return this._update(r),this._reseed++,n.encode(o,e)}},9267:(t,e,r)=>{var i=r(8501),n=r(8575),s=t.exports;for(var o in i)i.hasOwnProperty(o)&&(s[o]=i[o]);function a(t){if("string"==typeof t&&(t=n.parse(t)),t.protocol||(t.protocol="https:"),"https:"!==t.protocol)throw new Error('Protocol "'+t.protocol+'" not supported. Expected "https:"');return t}s.request=function(t,e){return t=a(t),i.request.call(this,t,e)},s.get=function(t,e){return t=a(t),i.get.call(this,t,e)}},645:(t,e)=>{e.read=function(t,e,r,i,n){var s,o,a=8*n-i-1,u=(1<<a)-1,h=u>>1,c=-7,l=r?n-1:0,d=r?-1:1,f=t[e+l];for(l+=d,s=f&(1<<-c)-1,f>>=-c,c+=a;c>0;s=256*s+t[e+l],l+=d,c-=8);for(o=s&(1<<-c)-1,s>>=-c,c+=i;c>0;o=256*o+t[e+l],l+=d,c-=8);if(0===s)s=1-h;else{if(s===u)return o?NaN:1/0*(f?-1:1);o+=Math.pow(2,i),s-=h}return(f?-1:1)*o*Math.pow(2,s-i)},e.write=function(t,e,r,i,n,s){var o,a,u,h=8*s-n-1,c=(1<<h)-1,l=c>>1,d=23===n?Math.pow(2,-24)-Math.pow(2,-77):0,f=i?0:s-1,p=i?1:-1,g=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(a=isNaN(e)?1:0,o=c):(o=Math.floor(Math.log(e)/Math.LN2),e*(u=Math.pow(2,-o))<1&&(o--,u*=2),(e+=o+l>=1?d/u:d*Math.pow(2,1-l))*u>=2&&(o++,u/=2),o+l>=c?(a=0,o=c):o+l>=1?(a=(e*u-1)*Math.pow(2,n),o+=l):(a=e*Math.pow(2,l-1)*Math.pow(2,n),o=0));n>=8;t[r+f]=255&a,f+=p,a/=256,n-=8);for(o=o<<n|a,h+=n;h>0;t[r+f]=255&o,f+=p,o/=256,h-=8);t[r+f-p]|=128*g}},5717:t=>{"function"==typeof Object.create?t.exports=function(t,e){e&&(t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}))}:t.exports=function(t,e){if(e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}}},2584:(t,e,r)=>{"use strict";var i=r(6410)(),n=r(1924)("Object.prototype.toString"),s=function(t){return!(i&&t&&"object"==typeof t&&Symbol.toStringTag in t)&&"[object Arguments]"===n(t)},o=function(t){return!!s(t)||null!==t&&"object"==typeof t&&"number"==typeof t.length&&t.length>=0&&"[object Array]"!==n(t)&&"[object Function]"===n(t.callee)},a=function(){return s(arguments)}();s.isLegacyArguments=o,t.exports=a?s:o},5320:t=>{"use strict";var e,r,i=Function.prototype.toString,n="object"==typeof Reflect&&null!==Reflect&&Reflect.apply;if("function"==typeof n&&"function"==typeof Object.defineProperty)try{e=Object.defineProperty({},"length",{get:function(){throw r}}),r={},n((function(){throw 42}),null,e)}catch(t){t!==r&&(n=null)}else n=null;var s=/^\s*class\b/,o=function(t){try{var e=i.call(t);return s.test(e)}catch(t){return!1}},a=function(t){try{return!o(t)&&(i.call(t),!0)}catch(t){return!1}},u=Object.prototype.toString,h="function"==typeof Symbol&&!!Symbol.toStringTag,c=!(0 in[,]),l=function(){return!1};if("object"==typeof document){var d=document.all;u.call(d)===u.call(document.all)&&(l=function(t){if((c||!t)&&(void 0===t||"object"==typeof t))try{var e=u.call(t);return("[object HTMLAllCollection]"===e||"[object HTML document.all class]"===e||"[object HTMLCollection]"===e||"[object Object]"===e)&&null==t("")}catch(t){}return!1})}t.exports=n?function(t){if(l(t))return!0;if(!t)return!1;if("function"!=typeof t&&"object"!=typeof t)return!1;try{n(t,null,e)}catch(t){if(t!==r)return!1}return!o(t)&&a(t)}:function(t){if(l(t))return!0;if(!t)return!1;if("function"!=typeof t&&"object"!=typeof t)return!1;if(h)return a(t);if(o(t))return!1;var e=u.call(t);return!("[object Function]"!==e&&"[object GeneratorFunction]"!==e&&!/^\[object HTML/.test(e))&&a(t)}},8662:(t,e,r)=>{"use strict";var i,n=Object.prototype.toString,s=Function.prototype.toString,o=/^\s*(?:function)?\*/,a=r(6410)(),u=Object.getPrototypeOf;t.exports=function(t){if("function"!=typeof t)return!1;if(o.test(s.call(t)))return!0;if(!a)return"[object GeneratorFunction]"===n.call(t);if(!u)return!1;if(void 0===i){var e=function(){if(!a)return!1;try{return Function("return function*() {}")()}catch(t){}}();i=!!e&&u(e)}return u(t)===i}},8611:t=>{"use strict";t.exports=function(t){return t!=t}},360:(t,e,r)=>{"use strict";var i=r(5559),n=r(4289),s=r(8611),o=r(9415),a=r(3194),u=i(o(),Number);n(u,{getPolyfill:o,implementation:s,shim:a}),t.exports=u},9415:(t,e,r)=>{"use strict";var i=r(8611);t.exports=function(){return Number.isNaN&&Number.isNaN(NaN)&&!Number.isNaN("a")?Number.isNaN:i}},3194:(t,e,r)=>{"use strict";var i=r(4289),n=r(9415);t.exports=function(){var t=n();return i(Number,{isNaN:t},{isNaN:function(){return Number.isNaN!==t}}),t}},5692:(t,e,r)=>{"use strict";var i=r(6430);t.exports=function(t){return!!i(t)}},1167:(t,e,r)=>{"use strict";var i=r(5717),n=r(3349),s=r(9509).Buffer,o=new Array(16);function a(){n.call(this,64),this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878}function u(t,e){return t<<e|t>>>32-e}function h(t,e,r,i,n,s,o){return u(t+(e&r|~e&i)+n+s|0,o)+e|0}function c(t,e,r,i,n,s,o){return u(t+(e&i|r&~i)+n+s|0,o)+e|0}function l(t,e,r,i,n,s,o){return u(t+(e^r^i)+n+s|0,o)+e|0}function d(t,e,r,i,n,s,o){return u(t+(r^(e|~i))+n+s|0,o)+e|0}i(a,n),a.prototype._update=function(){for(var t=o,e=0;e<16;++e)t[e]=this._block.readInt32LE(4*e);var r=this._a,i=this._b,n=this._c,s=this._d;r=h(r,i,n,s,t[0],3614090360,7),s=h(s,r,i,n,t[1],3905402710,12),n=h(n,s,r,i,t[2],606105819,17),i=h(i,n,s,r,t[3],3250441966,22),r=h(r,i,n,s,t[4],4118548399,7),s=h(s,r,i,n,t[5],1200080426,12),n=h(n,s,r,i,t[6],2821735955,17),i=h(i,n,s,r,t[7],4249261313,22),r=h(r,i,n,s,t[8],1770035416,7),s=h(s,r,i,n,t[9],2336552879,12),n=h(n,s,r,i,t[10],4294925233,17),i=h(i,n,s,r,t[11],2304563134,22),r=h(r,i,n,s,t[12],1804603682,7),s=h(s,r,i,n,t[13],4254626195,12),n=h(n,s,r,i,t[14],2792965006,17),r=c(r,i=h(i,n,s,r,t[15],1236535329,22),n,s,t[1],4129170786,5),s=c(s,r,i,n,t[6],3225465664,9),n=c(n,s,r,i,t[11],643717713,14),i=c(i,n,s,r,t[0],3921069994,20),r=c(r,i,n,s,t[5],3593408605,5),s=c(s,r,i,n,t[10],38016083,9),n=c(n,s,r,i,t[15],3634488961,14),i=c(i,n,s,r,t[4],3889429448,20),r=c(r,i,n,s,t[9],568446438,5),s=c(s,r,i,n,t[14],3275163606,9),n=c(n,s,r,i,t[3],4107603335,14),i=c(i,n,s,r,t[8],1163531501,20),r=c(r,i,n,s,t[13],2850285829,5),s=c(s,r,i,n,t[2],4243563512,9),n=c(n,s,r,i,t[7],1735328473,14),r=l(r,i=c(i,n,s,r,t[12],2368359562,20),n,s,t[5],4294588738,4),s=l(s,r,i,n,t[8],2272392833,11),n=l(n,s,r,i,t[11],1839030562,16),i=l(i,n,s,r,t[14],4259657740,23),r=l(r,i,n,s,t[1],2763975236,4),s=l(s,r,i,n,t[4],1272893353,11),n=l(n,s,r,i,t[7],4139469664,16),i=l(i,n,s,r,t[10],3200236656,23),r=l(r,i,n,s,t[13],681279174,4),s=l(s,r,i,n,t[0],3936430074,11),n=l(n,s,r,i,t[3],3572445317,16),i=l(i,n,s,r,t[6],76029189,23),r=l(r,i,n,s,t[9],3654602809,4),s=l(s,r,i,n,t[12],3873151461,11),n=l(n,s,r,i,t[15],530742520,16),r=d(r,i=l(i,n,s,r,t[2],3299628645,23),n,s,t[0],4096336452,6),s=d(s,r,i,n,t[7],1126891415,10),n=d(n,s,r,i,t[14],2878612391,15),i=d(i,n,s,r,t[5],4237533241,21),r=d(r,i,n,s,t[12],1700485571,6),s=d(s,r,i,n,t[3],2399980690,10),n=d(n,s,r,i,t[10],4293915773,15),i=d(i,n,s,r,t[1],2240044497,21),r=d(r,i,n,s,t[8],1873313359,6),s=d(s,r,i,n,t[15],4264355552,10),n=d(n,s,r,i,t[6],2734768916,15),i=d(i,n,s,r,t[13],1309151649,21),r=d(r,i,n,s,t[4],4149444226,6),s=d(s,r,i,n,t[11],3174756917,10),n=d(n,s,r,i,t[2],718787259,15),i=d(i,n,s,r,t[9],3951481745,21),this._a=this._a+r|0,this._b=this._b+i|0,this._c=this._c+n|0,this._d=this._d+s|0},a.prototype._digest=function(){this._block[this._blockOffset++]=128,this._blockOffset>56&&(this._block.fill(0,this._blockOffset,64),this._update(),this._blockOffset=0),this._block.fill(0,this._blockOffset,56),this._block.writeUInt32LE(this._length[0],56),this._block.writeUInt32LE(this._length[1],60),this._update();var t=s.allocUnsafe(16);return t.writeInt32LE(this._a,0),t.writeInt32LE(this._b,4),t.writeInt32LE(this._c,8),t.writeInt32LE(this._d,12),t},t.exports=a},5615:(t,e,r)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Dir=void 0;const i=r(8036),n=r(832);class s{constructor(t,e){this.link=t,this.options=e,this.iteratorInfo=[],this.path=t.getParentPath(),this.iteratorInfo.push(t.children[Symbol.iterator]())}wrapAsync(t,e,r){(0,i.validateCallback)(r),setImmediate((()=>{let i;try{i=t.apply(this,e)}catch(t){return void r(t)}r(null,i)}))}isFunction(t){return"function"==typeof t}promisify(t,e){return(...r)=>new Promise(((i,n)=>{this.isFunction(t[e])?t[e].bind(t)(...r,((t,e)=>{t&&n(t),i(e)})):n("Not a function")}))}closeBase(){}readBase(t){let e,r,i,s;do{do{if(({done:e,value:r}=t[t.length-1].next()),e)break;[i,s]=r}while("."===i||".."===i);if(!e)return this.options.recursive&&s.children.size&&t.push(s.children[Symbol.iterator]()),n.default.build(s,this.options.encoding);if(t.pop(),0===t.length)break;e=!1}while(!e);return null}closeBaseAsync(t){this.wrapAsync(this.closeBase,[],t)}close(t){if("function"!=typeof t)return this.promisify(this,"closeBaseAsync")();this.closeBaseAsync(t)}closeSync(){this.closeBase()}readBaseAsync(t){this.wrapAsync(this.readBase,[this.iteratorInfo],t)}read(t){if("function"!=typeof t)return this.promisify(this,"readBaseAsync")();this.readBaseAsync(t)}readSync(){return this.readBase(this.iteratorInfo)}[Symbol.asyncIterator](){const t=[],e=this;t.push(e.link.children[Symbol.iterator]());const r={readBaseAsync(r){e.wrapAsync(e.readBase,[t],r)}};return{async next(){const t=await e.promisify(r,"readBaseAsync")();return null!==t?{done:!1,value:t}:{done:!0,value:void 0}},[Symbol.asyncIterator](){throw new Error("Not implemented")}}}}e.Dir=s},832:(t,e,r)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Dirent=void 0;const i=r(5561),n=r(9568),{S_IFMT:s,S_IFDIR:o,S_IFREG:a,S_IFBLK:u,S_IFCHR:h,S_IFLNK:c,S_IFIFO:l,S_IFSOCK:d}=i.constants;class f{constructor(){this.name="",this.path="",this.mode=0}static build(t,e){const r=new f,{mode:i}=t.getNode();return r.name=(0,n.strToEncoding)(t.getName(),e),r.mode=i,r.path=t.getParentPath(),r}_checkModeProperty(t){return(this.mode&s)===t}isDirectory(){return this._checkModeProperty(o)}isFile(){return this._checkModeProperty(a)}isBlockDevice(){return this._checkModeProperty(u)}isCharacterDevice(){return this._checkModeProperty(h)}isSymbolicLink(){return this._checkModeProperty(c)}isFIFO(){return this._checkModeProperty(l)}isSocket(){return this._checkModeProperty(d)}}e.Dirent=f,e.default=f},1507:(t,e,r)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Stats=void 0;const i=r(5561),{S_IFMT:n,S_IFDIR:s,S_IFREG:o,S_IFBLK:a,S_IFCHR:u,S_IFLNK:h,S_IFIFO:c,S_IFSOCK:l}=i.constants;class d{static build(t,e=!1){const r=new d,{uid:i,gid:n,atime:s,mtime:o,ctime:a}=t,u=e?t=>BigInt(t):t=>t;r.uid=u(i),r.gid=u(n),r.rdev=u(0),r.blksize=u(4096),r.ino=u(t.ino),r.size=u(t.getSize()),r.blocks=u(1),r.atime=s,r.mtime=o,r.ctime=a,r.birthtime=a,r.atimeMs=u(s.getTime()),r.mtimeMs=u(o.getTime());const h=u(a.getTime());if(r.ctimeMs=h,r.birthtimeMs=h,e){r.atimeNs=BigInt(s.getTime())*BigInt(1e6),r.mtimeNs=BigInt(o.getTime())*BigInt(1e6);const t=BigInt(a.getTime())*BigInt(1e6);r.ctimeNs=t,r.birthtimeNs=t}return r.dev=u(0),r.mode=u(t.mode),r.nlink=u(t.nlink),r}_checkModeProperty(t){return(Number(this.mode)&n)===t}isDirectory(){return this._checkModeProperty(s)}isFile(){return this._checkModeProperty(o)}isBlockDevice(){return this._checkModeProperty(a)}isCharacterDevice(){return this._checkModeProperty(u)}isSymbolicLink(){return this._checkModeProperty(h)}isFIFO(){return this._checkModeProperty(c)}isSocket(){return this._checkModeProperty(l)}}e.Stats=d,e.default=d},5561:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.constants=void 0,e.constants={O_RDONLY:0,O_WRONLY:1,O_RDWR:2,S_IFMT:61440,S_IFREG:32768,S_IFDIR:16384,S_IFCHR:8192,S_IFBLK:24576,S_IFIFO:4096,S_IFLNK:40960,S_IFSOCK:49152,O_CREAT:64,O_EXCL:128,O_NOCTTY:256,O_TRUNC:512,O_APPEND:1024,O_DIRECTORY:65536,O_NOATIME:262144,O_NOFOLLOW:131072,O_SYNC:1052672,O_SYMLINK:2097152,O_DIRECT:16384,O_NONBLOCK:2048,S_IRWXU:448,S_IRUSR:256,S_IWUSR:128,S_IXUSR:64,S_IRWXG:56,S_IRGRP:32,S_IWGRP:16,S_IXGRP:8,S_IRWXO:7,S_IROTH:4,S_IWOTH:2,S_IXOTH:1,F_OK:0,R_OK:4,W_OK:2,X_OK:1,UV_FS_SYMLINK_DIR:1,UV_FS_SYMLINK_JUNCTION:2,UV_FS_COPYFILE_EXCL:1,UV_FS_COPYFILE_FICLONE:2,UV_FS_COPYFILE_FICLONE_FORCE:4,COPYFILE_EXCL:1,COPYFILE_FICLONE:2,COPYFILE_FICLONE_FORCE:4}},9568:(t,e,r)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.ENCODING_UTF8=void 0,e.assertEncoding=function(t){if(t&&!i.Buffer.isEncoding(t))throw new n.TypeError("ERR_INVALID_OPT_VALUE_ENCODING",t)},e.strToEncoding=function(t,r){return r&&r!==e.ENCODING_UTF8?"buffer"===r?new i.Buffer(t):new i.Buffer(t).toString(r):t};const i=r(6426),n=r(6978);e.ENCODING_UTF8="utf8"},6551:(t,e,r)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.memfs=e.fs=e.vol=e.Volume=void 0,e.createFsFromVolume=f;const i=r(1507),n=r(832),s=r(6898),o=r(5561),a=r(9930),u=r(3228),{F_OK:h,R_OK:c,W_OK:l,X_OK:d}=o.constants;function f(t){const e={F_OK:h,R_OK:c,W_OK:l,X_OK:d,constants:o.constants,Stats:i.default,Dirent:n.default};for(const r of a.fsSynchronousApiList)"function"==typeof t[r]&&(e[r]=t[r].bind(t));for(const r of u.fsCallbackApiList)"function"==typeof t[r]&&(e[r]=t[r].bind(t));return e.StatWatcher=t.StatWatcher,e.FSWatcher=t.FSWatcher,e.WriteStream=t.WriteStream,e.ReadStream=t.ReadStream,e.promises=t.promises,e._toUnixTimestamp=s.toUnixTimestamp,e.__vol=t,e}e.Volume=s.Volume,e.vol=new s.Volume,e.fs=f(e.vol),e.memfs=(t={},r="/")=>{const i=e.Volume.fromNestedJSON(t,r);return{fs:f(i),vol:i}},t.exports=Object.assign(Object.assign({},t.exports),e.fs),t.exports.semantic=!0},6426:(t,e,r)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.bufferFrom=e.bufferAllocUnsafe=e.Buffer=void 0;const i=r(8764);function n(t,...e){return new i.Buffer(t,...e)}Object.defineProperty(e,"Buffer",{enumerable:!0,get:function(){return i.Buffer}});const s=i.Buffer.allocUnsafe||n;e.bufferAllocUnsafe=s;const o=i.Buffer.from||n;e.bufferFrom=o},6978:(t,e,r)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.AssertionError=e.RangeError=e.TypeError=e.Error=void 0,e.message=c,e.E=l;const i=r(9282),n=r(9539),s="undefined"==typeof Symbol?"_kCode":Symbol("code"),o={};function a(t){return class extends t{constructor(t,...e){super(c(t,e)),this.code=t,this[s]=t,this.name=`${super.name} [${this[s]}]`}}}const u="undefined"!=typeof globalThis?globalThis:r.g;class h extends u.Error{constructor(t){if("object"!=typeof t||null===t)throw new e.TypeError("ERR_INVALID_ARG_TYPE","options","object");t.message?super(t.message):super(`${n.inspect(t.actual).slice(0,128)} ${t.operator} ${n.inspect(t.expected).slice(0,128)}`),this.generatedMessage=!t.message,this.name="AssertionError [ERR_ASSERTION]",this.code="ERR_ASSERTION",this.actual=t.actual,this.expected=t.expected,this.operator=t.operator,e.Error.captureStackTrace(this,t.stackStartFunction)}}function c(t,e){i.strictEqual(typeof t,"string");const r=o[t];let s;if(i(r,`An invalid error message key was used: ${t}.`),"function"==typeof r)s=r;else{if(s=n.format,void 0===e||0===e.length)return r;e.unshift(r)}return String(s.apply(null,e))}function l(t,e){o[t]="function"==typeof e?e:String(e)}function d(t,e){if(i(t,"expected is required"),i("string"==typeof e,"thing is required"),Array.isArray(t)){const r=t.length;return i(r>0,"At least one expected value needs to be specified"),t=t.map((t=>String(t))),r>2?`one of ${e} ${t.slice(0,r-1).join(", ")}, or `+t[r-1]:2===r?`one of ${e} ${t[0]} or ${t[1]}`:`of ${e} ${t[0]}`}return`of ${e} ${String(t)}`}e.AssertionError=h,e.Error=a(u.Error),e.TypeError=a(u.TypeError),e.RangeError=a(u.RangeError),l("ERR_ARG_NOT_ITERABLE","%s must be iterable"),l("ERR_ASSERTION","%s"),l("ERR_BUFFER_OUT_OF_BOUNDS",(function(t,e){return e?"Attempt to write outside buffer bounds":`"${t}" is outside of buffer bounds`})),l("ERR_CHILD_CLOSED_BEFORE_REPLY","Child closed before reply received"),l("ERR_CONSOLE_WRITABLE_STREAM","Console expects a writable stream instance for %s"),l("ERR_CPU_USAGE","Unable to obtain cpu usage %s"),l("ERR_DNS_SET_SERVERS_FAILED",((t,e)=>`c-ares failed to set servers: "${t}" [${e}]`)),l("ERR_FALSY_VALUE_REJECTION","Promise was rejected with falsy value"),l("ERR_ENCODING_NOT_SUPPORTED",(t=>`The "${t}" encoding is not supported`)),l("ERR_ENCODING_INVALID_ENCODED_DATA",(t=>`The encoded data was not valid for encoding ${t}`)),l("ERR_HTTP_HEADERS_SENT","Cannot render headers after they are sent to the client"),l("ERR_HTTP_INVALID_STATUS_CODE","Invalid status code: %s"),l("ERR_HTTP_TRAILER_INVALID","Trailers are invalid with this transfer encoding"),l("ERR_INDEX_OUT_OF_RANGE","Index out of range"),l("ERR_INVALID_ARG_TYPE",(function(t,e,r){let n,s;if(i(t,"name is required"),e.includes("not ")?(n="must not be",e=e.split("not ")[1]):n="must be",Array.isArray(t))s=`The ${t.map((t=>`"${t}"`)).join(", ")} arguments ${n} ${d(e,"type")}`;else if(t.includes(" argument"))s=`The ${t} ${n} ${d(e,"type")}`;else{const r=t.includes(".")?"property":"argument";s=`The "${t}" ${r} ${n} ${d(e,"type")}`}return arguments.length>=3&&(s+=". Received type "+(null!==r?typeof r:"null")),s})),l("ERR_INVALID_ARRAY_LENGTH",((t,e,r)=>(i.strictEqual(typeof r,"number"),`The array "${t}" (length ${r}) must be of length ${e}.`))),l("ERR_INVALID_BUFFER_SIZE","Buffer size must be a multiple of %s"),l("ERR_INVALID_CALLBACK","Callback must be a function"),l("ERR_INVALID_CHAR","Invalid character in %s"),l("ERR_INVALID_CURSOR_POS","Cannot set cursor row without setting its column"),l("ERR_INVALID_FD",'"fd" must be a positive integer: %s'),l("ERR_INVALID_FILE_URL_HOST",'File URL host must be "localhost" or empty on %s'),l("ERR_INVALID_FILE_URL_PATH","File URL path %s"),l("ERR_INVALID_HANDLE_TYPE","This handle type cannot be sent"),l("ERR_INVALID_IP_ADDRESS","Invalid IP address: %s"),l("ERR_INVALID_OPT_VALUE",((t,e)=>`The value "${String(e)}" is invalid for option "${t}"`)),l("ERR_INVALID_OPT_VALUE_ENCODING",(t=>`The value "${String(t)}" is invalid for option "encoding"`)),l("ERR_INVALID_REPL_EVAL_CONFIG",'Cannot specify both "breakEvalOnSigint" and "eval" for REPL'),l("ERR_INVALID_SYNC_FORK_INPUT","Asynchronous forks do not support Buffer, Uint8Array or string input: %s"),l("ERR_INVALID_THIS",'Value of "this" must be of type %s'),l("ERR_INVALID_TUPLE","%s must be an iterable %s tuple"),l("ERR_INVALID_URL","Invalid URL: %s"),l("ERR_INVALID_URL_SCHEME",(t=>`The URL must be ${d(t,"scheme")}`)),l("ERR_IPC_CHANNEL_CLOSED","Channel closed"),l("ERR_IPC_DISCONNECTED","IPC channel is already disconnected"),l("ERR_IPC_ONE_PIPE","Child process can have only one IPC pipe"),l("ERR_IPC_SYNC_FORK","IPC cannot be used with synchronous forks"),l("ERR_MISSING_ARGS",(function(...t){i(t.length>0,"At least one arg needs to be specified");let e="The ";const r=t.length;switch(t=t.map((t=>`"${t}"`)),r){case 1:e+=`${t[0]} argument`;break;case 2:e+=`${t[0]} and ${t[1]} arguments`;break;default:e+=t.slice(0,r-1).join(", "),e+=`, and ${t[r-1]} arguments`}return`${e} must be specified`})),l("ERR_MULTIPLE_CALLBACK","Callback called multiple times"),l("ERR_NAPI_CONS_FUNCTION","Constructor must be a function"),l("ERR_NAPI_CONS_PROTOTYPE_OBJECT","Constructor.prototype must be an object"),l("ERR_NO_CRYPTO","Node.js is not compiled with OpenSSL crypto support"),l("ERR_NO_LONGER_SUPPORTED","%s is no longer supported"),l("ERR_PARSE_HISTORY_DATA","Could not parse history data in %s"),l("ERR_SOCKET_ALREADY_BOUND","Socket is already bound"),l("ERR_SOCKET_BAD_PORT","Port should be > 0 and < 65536"),l("ERR_SOCKET_BAD_TYPE","Bad socket type specified. Valid types are: udp4, udp6"),l("ERR_SOCKET_CANNOT_SEND","Unable to send data"),l("ERR_SOCKET_CLOSED","Socket is closed"),l("ERR_SOCKET_DGRAM_NOT_RUNNING","Not running"),l("ERR_STDERR_CLOSE","process.stderr cannot be closed"),l("ERR_STDOUT_CLOSE","process.stdout cannot be closed"),l("ERR_STREAM_WRAP","Stream has StringDecoder set or is in objectMode"),l("ERR_TLS_CERT_ALTNAME_INVALID","Hostname/IP does not match certificate's altnames: %s"),l("ERR_TLS_DH_PARAM_SIZE",(t=>`DH parameter size ${t} is less than 2048`)),l("ERR_TLS_HANDSHAKE_TIMEOUT","TLS handshake timeout"),l("ERR_TLS_RENEGOTIATION_FAILED","Failed to renegotiate"),l("ERR_TLS_REQUIRED_SERVER_NAME",'"servername" is required parameter for Server.addContext'),l("ERR_TLS_SESSION_ATTACK","TSL session renegotiation attack detected"),l("ERR_TRANSFORM_ALREADY_TRANSFORMING","Calling transform done when still transforming"),l("ERR_TRANSFORM_WITH_LENGTH_0","Calling transform done when writableState.length != 0"),l("ERR_UNKNOWN_ENCODING","Unknown encoding: %s"),l("ERR_UNKNOWN_SIGNAL","Unknown signal: %s"),l("ERR_UNKNOWN_STDIN_TYPE","Unknown stdin file type"),l("ERR_UNKNOWN_STREAM_TYPE","Unknown stream file type"),l("ERR_V8BREAKITERATOR","Full ICU data not installed. See https://github.com/nodejs/node/wiki/Intl")},7884:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.newNotAllowedError=e.newTypeMismatchError=e.newNotFoundError=e.assertCanWrite=e.assertName=e.basename=e.ctx=void 0,e.ctx=(t={})=>Object.assign({separator:"/",syncHandleAllowed:!1,mode:"read"},t),e.basename=(t,e)=>{t[t.length-1]===e&&(t=t.slice(0,-1));const r=t.lastIndexOf(e);return-1===r?t:t.slice(r+1)};const r=/^(\.{1,2})$|^(.*([\/\\]).*)$/;e.assertName=(t,e,i)=>{if(!t||r.test(t))throw new TypeError(`Failed to execute '${e}' on '${i}': Name is not allowed.`)},e.assertCanWrite=t=>{if("readwrite"!==t)throw new DOMException("The request is not allowed by the user agent or the platform in the current context.","NotAllowedError")},e.newNotFoundError=()=>new DOMException("A requested file or directory could not be found at the time an operation was processed.","NotFoundError"),e.newTypeMismatchError=()=>new DOMException("The path supplied exists, but was not an entry of requested type.","TypeMismatchError"),e.newNotAllowedError=()=>new DOMException("Permission not granted.","NotAllowedError")},1172:(t,e,r)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.File=e.Link=e.Node=e.SEP=void 0;const i=r(4880),n=r(6426),s=r(5561),o=r(7187),a=r(1507),{S_IFMT:u,S_IFDIR:h,S_IFREG:c,S_IFLNK:l,O_APPEND:d}=s.constants,f=()=>{var t,e;return null!==(e=null===(t=i.default.getuid)||void 0===t?void 0:t.call(i.default))&&void 0!==e?e:0},p=()=>{var t,e;return null!==(e=null===(t=i.default.getgid)||void 0===t?void 0:t.call(i.default))&&void 0!==e?e:0};e.SEP="/";class g extends o.EventEmitter{constructor(t,e=438){super(),this._uid=f(),this._gid=p(),this._atime=new Date,this._mtime=new Date,this._ctime=new Date,this._perm=438,this.mode=c,this._nlink=1,this._perm=e,this.mode|=e,this.ino=t}set ctime(t){this._ctime=t}get ctime(){return this._ctime}set uid(t){this._uid=t,this.ctime=new Date}get uid(){return this._uid}set gid(t){this._gid=t,this.ctime=new Date}get gid(){return this._gid}set atime(t){this._atime=t,this.ctime=new Date}get atime(){return this._atime}set mtime(t){this._mtime=t,this.ctime=new Date}get mtime(){return this._mtime}set perm(t){this._perm=t,this.ctime=new Date}get perm(){return this._perm}set nlink(t){this._nlink=t,this.ctime=new Date}get nlink(){return this._nlink}getString(t="utf8"){return this.atime=new Date,this.getBuffer().toString(t)}setString(t){this.buf=(0,n.bufferFrom)(t,"utf8"),this.touch()}getBuffer(){return this.atime=new Date,this.buf||this.setBuffer((0,n.bufferAllocUnsafe)(0)),(0,n.bufferFrom)(this.buf)}setBuffer(t){this.buf=(0,n.bufferFrom)(t),this.touch()}getSize(){return this.buf?this.buf.length:0}setModeProperty(t){this.mode=this.mode&~u|t}setIsFile(){this.setModeProperty(c)}setIsDirectory(){this.setModeProperty(h)}setIsSymlink(){this.setModeProperty(l)}isFile(){return(this.mode&u)===c}isDirectory(){return(this.mode&u)===h}isSymlink(){return(this.mode&u)===l}makeSymlink(t){this.symlink=t,this.setIsSymlink()}write(t,e=0,r=t.length,i=0){if(this.buf||(this.buf=(0,n.bufferAllocUnsafe)(0)),i+r>this.buf.length){const t=(0,n.bufferAllocUnsafe)(i+r);this.buf.copy(t,0,0,this.buf.length),this.buf=t}return t.copy(this.buf,i,e,e+r),this.touch(),r}read(t,e=0,r=t.byteLength,i=0){this.atime=new Date,this.buf||(this.buf=(0,n.bufferAllocUnsafe)(0));let s=r;s>t.byteLength&&(s=t.byteLength),s+i>this.buf.length&&(s=this.buf.length-i);const o=t instanceof n.Buffer?t:n.Buffer.from(t.buffer);return this.buf.copy(o,e,i,i+s),s}truncate(t=0){if(t)if(this.buf||(this.buf=(0,n.bufferAllocUnsafe)(0)),t<=this.buf.length)this.buf=this.buf.slice(0,t);else{const e=(0,n.bufferAllocUnsafe)(t);this.buf.copy(e),e.fill(0,this.buf.length),this.buf=e}else this.buf=(0,n.bufferAllocUnsafe)(0);this.touch()}chmod(t){this.perm=t,this.mode=-512&this.mode|t,this.touch()}chown(t,e){this.uid=t,this.gid=e,this.touch()}touch(){this.mtime=new Date,this.emit("change",this)}canRead(t=f(),e=p()){return!!(4&this.perm)||!!(e===this.gid&&32&this.perm)||!!(t===this.uid&&256&this.perm)}canWrite(t=f(),e=p()){return!!(2&this.perm)||!!(e===this.gid&&16&this.perm)||!!(t===this.uid&&128&this.perm)}del(){this.emit("delete",this)}toJSON(){return{ino:this.ino,uid:this.uid,gid:this.gid,atime:this.atime.getTime(),mtime:this.mtime.getTime(),ctime:this.ctime.getTime(),perm:this.perm,mode:this.mode,nlink:this.nlink,symlink:this.symlink,data:this.getString()}}}e.Node=g;class m extends o.EventEmitter{get steps(){return this._steps}set steps(t){this._steps=t;for(const[t,e]of this.children.entries())"."!==t&&".."!==t&&(null==e||e.syncSteps())}constructor(t,e,r){super(),this.children=new Map,this._steps=[],this.ino=0,this.length=0,this.vol=t,this.parent=e,this.name=r,this.syncSteps()}setNode(t){this.node=t,this.ino=t.ino}getNode(){return this.node}createChild(t,e=this.vol.createNode()){const r=new m(this.vol,this,t);return r.setNode(e),e.isDirectory()&&(r.children.set(".",r),r.getNode().nlink++),this.setChild(t,r),r}setChild(t,e=new m(this.vol,this,t)){return this.children.set(t,e),e.parent=this,this.length++,e.getNode().isDirectory()&&(e.children.set("..",this),this.getNode().nlink++),this.getNode().mtime=new Date,this.emit("child:add",e,this),e}deleteChild(t){t.getNode().isDirectory()&&(t.children.delete(".."),this.getNode().nlink--),this.children.delete(t.getName()),this.length--,this.getNode().mtime=new Date,this.emit("child:delete",t,this)}getChild(t){return this.getNode().mtime=new Date,this.children.get(t)}getPath(){return this.steps.join(e.SEP)}getParentPath(){return this.steps.slice(0,-1).join(e.SEP)}getName(){return this.steps[this.steps.length-1]}walk(t,e=t.length,r=0){if(r>=t.length)return this;if(r>=e)return this;const i=t[r],n=this.getChild(i);return n?n.walk(t,e,r+1):null}toJSON(){return{steps:this.steps,ino:this.ino,children:Array.from(this.children.keys())}}syncSteps(){this.steps=this.parent?this.parent.steps.concat([this.name]):[this.name]}}e.Link=m,e.File=class{constructor(t,e,r,i){this.link=t,this.node=e,this.flags=r,this.fd=i,this.position=0,this.flags&d&&(this.position=this.getSize())}getString(t="utf8"){return this.node.getString()}setString(t){this.node.setString(t)}getBuffer(){return this.node.getBuffer()}setBuffer(t){this.node.setBuffer(t)}getSize(){return this.node.getSize()}truncate(t){this.node.truncate(t)}seekTo(t){this.position=t}stats(){return a.default.build(this.node)}write(t,e=0,r=t.length,i){"number"!=typeof i&&(i=this.position);const n=this.node.write(t,e,r,i);return this.position=i+n,n}read(t,e=0,r=t.byteLength,i){"number"!=typeof i&&(i=this.position);const n=this.node.read(t,e,r,i);return this.position=i+n,n}chmod(t){this.node.chmod(t)}chown(t,e){this.node.chown(t,e)}}},9534:(t,e,r)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.FileHandle=void 0;const i=r(8036);e.FileHandle=class{constructor(t,e){this.fs=t,this.fd=e}appendFile(t,e){return(0,i.promisify)(this.fs,"appendFile")(this.fd,t,e)}chmod(t){return(0,i.promisify)(this.fs,"fchmod")(this.fd,t)}chown(t,e){return(0,i.promisify)(this.fs,"fchown")(this.fd,t,e)}close(){return(0,i.promisify)(this.fs,"close")(this.fd)}datasync(){return(0,i.promisify)(this.fs,"fdatasync")(this.fd)}readableWebStream(t){return new ReadableStream({pull:async t=>{const e=await this.readFile();t.enqueue(e),t.close()}})}read(t,e,r,n){return(0,i.promisify)(this.fs,"read",(e=>({bytesRead:e,buffer:t})))(this.fd,t,e,r,n)}readv(t,e){return(0,i.promisify)(this.fs,"readv",(e=>({bytesRead:e,buffers:t})))(this.fd,t,e)}readFile(t){return(0,i.promisify)(this.fs,"readFile")(this.fd,t)}stat(t){return(0,i.promisify)(this.fs,"fstat")(this.fd,t)}sync(){return(0,i.promisify)(this.fs,"fsync")(this.fd)}truncate(t){return(0,i.promisify)(this.fs,"ftruncate")(this.fd,t)}utimes(t,e){return(0,i.promisify)(this.fs,"futimes")(this.fd,t,e)}write(t,e,r,n){return(0,i.promisify)(this.fs,"write",(e=>({bytesWritten:e,buffer:t})))(this.fd,t,e,r,n)}writev(t,e){return(0,i.promisify)(this.fs,"writev",(e=>({bytesWritten:e,buffers:t})))(this.fd,t,e)}writeFile(t,e){return(0,i.promisify)(this.fs,"writeFile")(this.fd,t,e)}}},9319:(t,e,r)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.FsPromises=void 0;const i=r(8036),n=r(5561);e.FsPromises=class{constructor(t,e){this.fs=t,this.FileHandle=e,this.constants=n.constants,this.cp=(0,i.promisify)(this.fs,"cp"),this.opendir=(0,i.promisify)(this.fs,"opendir"),this.statfs=(0,i.promisify)(this.fs,"statfs"),this.lutimes=(0,i.promisify)(this.fs,"lutimes"),this.access=(0,i.promisify)(this.fs,"access"),this.chmod=(0,i.promisify)(this.fs,"chmod"),this.chown=(0,i.promisify)(this.fs,"chown"),this.copyFile=(0,i.promisify)(this.fs,"copyFile"),this.lchmod=(0,i.promisify)(this.fs,"lchmod"),this.lchown=(0,i.promisify)(this.fs,"lchown"),this.link=(0,i.promisify)(this.fs,"link"),this.lstat=(0,i.promisify)(this.fs,"lstat"),this.mkdir=(0,i.promisify)(this.fs,"mkdir"),this.mkdtemp=(0,i.promisify)(this.fs,"mkdtemp"),this.readdir=(0,i.promisify)(this.fs,"readdir"),this.readlink=(0,i.promisify)(this.fs,"readlink"),this.realpath=(0,i.promisify)(this.fs,"realpath"),this.rename=(0,i.promisify)(this.fs,"rename"),this.rmdir=(0,i.promisify)(this.fs,"rmdir"),this.rm=(0,i.promisify)(this.fs,"rm"),this.stat=(0,i.promisify)(this.fs,"stat"),this.symlink=(0,i.promisify)(this.fs,"symlink"),this.truncate=(0,i.promisify)(this.fs,"truncate"),this.unlink=(0,i.promisify)(this.fs,"unlink"),this.utimes=(0,i.promisify)(this.fs,"utimes"),this.readFile=(t,e)=>(0,i.promisify)(this.fs,"readFile")(t instanceof this.FileHandle?t.fd:t,e),this.appendFile=(t,e,r)=>(0,i.promisify)(this.fs,"appendFile")(t instanceof this.FileHandle?t.fd:t,e,r),this.open=(t,e="r",r)=>(0,i.promisify)(this.fs,"open",(t=>new this.FileHandle(this.fs,t)))(t,e,r),this.writeFile=(t,e,r)=>(0,i.promisify)(this.fs,"writeFile")(t instanceof this.FileHandle?t.fd:t,e,r),this.watch=()=>{throw new Error("Not implemented")}}}},3371:(t,e,r)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.FLAGS=e.ERRSTR=void 0;const i=r(5561);e.ERRSTR={PATH_STR:"path must be a string or Buffer",FD:"fd must be a file descriptor",MODE_INT:"mode must be an int",CB:"callback must be a function",UID:"uid must be an unsigned int",GID:"gid must be an unsigned int",LEN:"len must be an integer",ATIME:"atime must be an integer",MTIME:"mtime must be an integer",PREFIX:"filename prefix is required",BUFFER:"buffer must be an instance of Buffer or StaticBuffer",OFFSET:"offset must be an integer",LENGTH:"length must be an integer",POSITION:"position must be an integer"};const{O_RDONLY:n,O_WRONLY:s,O_RDWR:o,O_CREAT:a,O_EXCL:u,O_TRUNC:h,O_APPEND:c,O_SYNC:l}=i.constants;var d;!function(t){t[t.r=n]="r",t[t["r+"]=o]="r+",t[t.rs=n|l]="rs",t[t.sr=t.rs]="sr",t[t["rs+"]=o|l]="rs+",t[t["sr+"]=t["rs+"]]="sr+",t[t.w=s|a|h]="w",t[t.wx=s|a|h|u]="wx",t[t.xw=t.wx]="xw",t[t["w+"]=o|a|h]="w+",t[t["wx+"]=o|a|h|u]="wx+",t[t["xw+"]=t["wx+"]]="xw+",t[t.a=s|c|a]="a",t[t.ax=s|c|a|u]="ax",t[t.xa=t.ax]="xa",t[t["a+"]=o|c|a]="a+",t[t["ax+"]=o|c|a|u]="ax+",t[t["xa+"]=t["ax+"]]="xa+"}(d||(e.FLAGS=d={}))},3228:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.fsCallbackApiList=void 0,e.fsCallbackApiList=["access","appendFile","chmod","chown","close","copyFile","createReadStream","createWriteStream","exists","fchmod","fchown","fdatasync","fstat","fsync","ftruncate","futimes","lchmod","lchown","link","lstat","mkdir","mkdtemp","open","read","readv","readdir","readFile","readlink","realpath","rename","rm","rmdir","stat","symlink","truncate","unlink","unwatchFile","utimes","watch","watchFile","write","writev","writeFile"]},9930:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.fsSynchronousApiList=void 0,e.fsSynchronousApiList=["accessSync","appendFileSync","chmodSync","chownSync","closeSync","copyFileSync","existsSync","fchmodSync","fchownSync","fdatasyncSync","fstatSync","fsyncSync","ftruncateSync","futimesSync","lchmodSync","lchownSync","linkSync","lstatSync","mkdirSync","mkdtempSync","openSync","readdirSync","readFileSync","readlinkSync","readSync","readvSync","realpathSync","renameSync","rmdirSync","rmSync","statSync","symlinkSync","truncateSync","unlinkSync","utimesSync","writeFileSync","writeSync","writevSync"]},2780:(t,e,r)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.getWriteFileOptions=e.writeFileDefaults=e.getRealpathOptsAndCb=e.getRealpathOptions=e.getStatOptsAndCb=e.getStatOptions=e.getAppendFileOptsAndCb=e.getAppendFileOpts=e.getOpendirOptsAndCb=e.getOpendirOptions=e.getReaddirOptsAndCb=e.getReaddirOptions=e.getReadFileOptions=e.getRmOptsAndCb=e.getRmdirOptions=e.getDefaultOptsAndCb=e.getDefaultOpts=e.optsDefaults=e.getMkdirOptions=void 0,e.getOptions=u,e.optsGenerator=h,e.optsAndCbGenerator=c;const i=r(3371),n=r(9568),s=r(8036),o={mode:511,recursive:!1};e.getMkdirOptions=t=>"number"==typeof t?Object.assign({},o,{mode:t}):Object.assign({},o,t);const a=t=>`Expected options to be either an object or a string, but got ${t} instead`;function u(t,e){let r;if(!e)return t;{const i=typeof e;switch(i){case"string":r=Object.assign({},t,{encoding:e});break;case"object":r=Object.assign({},t,e);break;default:throw TypeError(a(i))}}return"buffer"!==r.encoding&&(0,n.assertEncoding)(r.encoding),r}function h(t){return e=>u(t,e)}function c(t){return(e,r)=>"function"==typeof e?[t(),e]:[t(e),(0,s.validateCallback)(r)]}e.optsDefaults={encoding:"utf8"},e.getDefaultOpts=h(e.optsDefaults),e.getDefaultOptsAndCb=c(e.getDefaultOpts);const l={recursive:!1};e.getRmdirOptions=t=>Object.assign({},l,t);const d=h(e.optsDefaults);e.getRmOptsAndCb=c(d),e.getReadFileOptions=h({flag:"r"}),e.getReaddirOptions=h({encoding:"utf8",recursive:!1,withFileTypes:!1}),e.getReaddirOptsAndCb=c(e.getReaddirOptions),e.getOpendirOptions=h({encoding:"utf8",bufferSize:32,recursive:!1}),e.getOpendirOptsAndCb=c(e.getOpendirOptions);const f={encoding:"utf8",mode:438,flag:i.FLAGS[i.FLAGS.a]};e.getAppendFileOpts=h(f),e.getAppendFileOptsAndCb=c(e.getAppendFileOpts);const p={bigint:!1};e.getStatOptions=(t={})=>Object.assign({},p,t),e.getStatOptsAndCb=(t,r)=>"function"==typeof t?[(0,e.getStatOptions)(),t]:[(0,e.getStatOptions)(t),(0,s.validateCallback)(r)];const g=e.optsDefaults;e.getRealpathOptions=h(g),e.getRealpathOptsAndCb=c(e.getRealpathOptions),e.writeFileDefaults={encoding:"utf8",mode:438,flag:i.FLAGS[i.FLAGS.w]},e.getWriteFileOptions=h(e.writeFileDefaults)},8036:(t,e,r)=>{"use strict";var i=r(4155);Object.defineProperty(e,"__esModule",{value:!0}),e.unixify=e.getWriteSyncArgs=e.getWriteArgs=e.bufToUint8=e.isWin=void 0,e.promisify=function(t,e,r=(t=>t)){return(...i)=>new Promise(((n,s)=>{t[e].bind(t)(...i,((t,e)=>t?s(t):n(r(e))))}))},e.validateCallback=c,e.modeToNumber=function t(e,r){const i=function(e,r){return"number"==typeof e?e:"string"==typeof e?parseInt(e,8):r?t(r):void 0}(e,r);if("number"!=typeof i||isNaN(i))throw new TypeError(n.ERRSTR.MODE_INT);return i},e.nullCheck=l,e.pathToFilename=function(t){if("string"!=typeof t&&!o.Buffer.isBuffer(t)){try{if(!(t instanceof r(8575).URL))throw new TypeError(n.ERRSTR.PATH_STR)}catch(t){throw new TypeError(n.ERRSTR.PATH_STR)}t=function(t){if(""!==t.hostname)throw new s.TypeError("ERR_INVALID_FILE_URL_HOST",i.platform);const e=t.pathname;for(let t=0;t<e.length;t++)if("%"===e[t]){const r=32|e.codePointAt(t+2);if("2"===e[t+1]&&102===r)throw new s.TypeError("ERR_INVALID_FILE_URL_PATH","must not include encoded / characters")}return decodeURIComponent(e)}(t)}const e=String(t);return l(e),e},e.createError=function(t,e="",r="",i="",n=Error){const s=new n(function(t,e="",r="",i=""){let n="";switch(r&&(n=` '${r}'`),i&&(n+=` -> '${i}'`),t){case d:return`ENOENT: no such file or directory, ${e}${n}`;case f:return`EBADF: bad file descriptor, ${e}${n}`;case p:return`EINVAL: invalid argument, ${e}${n}`;case g:return`EPERM: operation not permitted, ${e}${n}`;case m:return`EPROTO: protocol error, ${e}${n}`;case y:return`EEXIST: file already exists, ${e}${n}`;case v:return`ENOTDIR: not a directory, ${e}${n}`;case E:return`EISDIR: illegal operation on a directory, ${e}${n}`;case w:return`EACCES: permission denied, ${e}${n}`;case S:return`ENOTEMPTY: directory not empty, ${e}${n}`;case b:return`EMFILE: too many open files, ${e}${n}`;case N:return`ENOSYS: function not implemented, ${e}${n}`;case M:return`[ERR_FS_EISDIR]: Path is a directory: ${e} returned EISDIR (is a directory) ${r}`;case x:return`[ERR_OUT_OF_RANGE]: value out of range, ${e}${n}`;default:return`${t}: error occurred, ${e}${n}`}}(t,e,r,i));return s.code=t,r&&(s.path=r),s},e.genRndStr6=function t(){const e=(Math.random()+1).toString(36).substring(2,8);return 6===e.length?e:t()},e.flagsToNumber=function(t){if("number"==typeof t)return t;if("string"==typeof t){const e=n.FLAGS[t];if(void 0!==e)return e}throw new s.TypeError("ERR_INVALID_OPT_VALUE","flags",t)},e.isFd=I,e.validateFd=A,e.dataToBuffer=P,e.bufferToEncoding=function(t,e){return e&&"buffer"!==e?t.toString(e):t};const n=r(3371),s=r(6978),o=r(6426),a=r(9568),u=r(6426),h=r(2810);function c(t){if("function"!=typeof t)throw TypeError(n.ERRSTR.CB);return t}function l(t,e){if(-1!==(""+t).indexOf("\0")){const t=new Error("Path must be a string without null bytes");if(t.code="ENOENT","function"!=typeof e)throw t;return(0,h.default)((()=>{e(t)})),!1}return!0}e.isWin="win32"===i.platform;const d="ENOENT",f="EBADF",p="EINVAL",g="EPERM",m="EPROTO",y="EEXIST",v="ENOTDIR",b="EMFILE",w="EACCES",E="EISDIR",S="ENOTEMPTY",N="ENOSYS",M="ERR_FS_EISDIR",x="ERR_OUT_OF_RANGE";function I(t){return t>>>0===t}function A(t){if(!I(t))throw TypeError(n.ERRSTR.FD)}function P(t,e=a.ENCODING_UTF8){return o.Buffer.isBuffer(t)?t:t instanceof Uint8Array?(0,u.bufferFrom)(t):(0,u.bufferFrom)(String(t),e)}e.bufToUint8=t=>new Uint8Array(t.buffer,t.byteOffset,t.byteLength),e.getWriteArgs=(t,e,r,i,n,s)=>{A(t);let o,a,u,h=0,l=null;const d=typeof e,f=typeof r,p=typeof i,g=typeof n;"string"!==d?"function"===f?u=r:"function"===p?(h=0|r,u=i):"function"===g?(h=0|r,o=i,u=n):(h=0|r,o=i,l=n,u=s):"function"===f?u=r:"function"===p?(l=r,u=i):"function"===g&&(l=r,a=i,u=n);const m=P(e,a);return"string"!==d?void 0===o&&(o=m.length):(h=0,o=m.length),[t,"string"===d,m,h,o,l,c(u)]},e.getWriteSyncArgs=(t,e,r,i,n)=>{let s,o,a,u;A(t);const h="string"!=typeof e;h?(o=0|(r||0),a=i,u=n):(u=r,s=i);const c=P(e,s);return h?void 0===a&&(a=c.length):(o=0,a=c.length),[t,c,o||0,a,u]};const T=(t,r)=>{let i=t[r];return r>0&&("/"===i||e.isWin&&"\\"===i)};e.unixify=(t,r=!0)=>e.isWin?(t=((t,e)=>{if("string"!=typeof t)throw new TypeError("expected a string");return t=t.replace(/[\\\/]+/g,"/"),!1!==e&&(t=(t=>{let e=t.length-1;if(e<2)return t;for(;T(t,e);)e--;return t.substr(0,e+1)})(t)),t})(t,r)).replace(/^([a-zA-Z]+:|\.\/)/,""):t},8871:(t,e,r)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.toTreeSync=void 0;const i=r(9032),n=r(7884);e.toTreeSync=(t,r={})=>{var s;const o=r.separator||"/";let a=r.dir||o;a[a.length-1]!==o&&(a+=o);const u=r.tab||"",h=null!==(s=r.depth)&&void 0!==s?s:10;let c=" (...)";if(h>0){const r=t.readdirSync(a,{withFileTypes:!0});c=(0,i.printTree)(u,r.map((r=>i=>r.isDirectory()?(0,e.toTreeSync)(t,{dir:a+r.name,depth:h-1,tab:i}):r.isSymbolicLink()?r.name+" → "+t.readlinkSync(a+r.name):""+r.name)))}return(0,n.basename)(a,o)+o+c}},4880:(t,e,r)=>{"use strict";var i=r(4155);Object.defineProperty(e,"__esModule",{value:!0}),e.createProcess=s;const n=()=>{if(void 0!==i)return i;try{return r(4155)}catch(t){return}};function s(){const t=n()||{};return t.cwd||(t.cwd=()=>"/"),t.emitWarning||(t.emitWarning=(t,e)=>{console.warn(`${e}${e?": ":""}${t}`)}),t.env||(t.env={}),t}e.default=s()},2810:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default="function"==typeof queueMicrotask?queueMicrotask:t=>Promise.resolve().then((()=>t())).catch((()=>{}))},6015:(t,e,r)=>{"use strict";let i;Object.defineProperty(e,"__esModule",{value:!0}),i="function"==typeof setImmediate?setImmediate.bind("undefined"!=typeof globalThis?globalThis:r.g):setTimeout.bind("undefined"!=typeof globalThis?globalThis:r.g),e.default=i},8369:(t,e,r)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t,e,i){const n=setTimeout.apply("undefined"!=typeof globalThis?globalThis:r.g,arguments);return n&&"object"==typeof n&&"function"==typeof n.unref&&n.unref(),n}},6898:(t,e,r)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.FSWatcher=e.StatWatcher=e.Volume=void 0,e.filenameToSteps=X,e.pathToSteps=function(t){return X((0,S.pathToFilename)(t))},e.dataToStr=function(t,e=g.ENCODING_UTF8){return a.Buffer.isBuffer(t)?t.toString(e):t instanceof Uint8Array?(0,a.bufferFrom)(t).toString(e):String(t)},e.toUnixTimestamp=G;const i=r(6470),n=r(1172),s=r(1507),o=r(832),a=r(6426),u=r(6015),h=r(2810),c=r(4880),l=r(8369),d=r(2830),f=r(5561),p=r(7187),g=r(9568),m=r(9534),y=r(9539),v=r(9319),b=r(8871),w=r(3371),E=r(2780),S=r(8036),N=r(5615),M=i.resolve,{O_RDONLY:x,O_WRONLY:I,O_RDWR:A,O_CREAT:P,O_EXCL:T,O_TRUNC:R,O_APPEND:k,O_DIRECTORY:B,O_SYMLINK:O,F_OK:C,COPYFILE_EXCL:L,COPYFILE_FICLONE_FORCE:j}=f.constants,{sep:Z,relative:D,join:F,dirname:z}=i.posix?i.posix:i,H="ENOENT",W="EBADF",K="EEXIST",q="ENOTDIR",U="EISDIR";let V=(t,e=c.default.cwd())=>M(e,t);if(S.isWin){const t=V;V=(e,r)=>(0,S.unixify)(t(e,r))}function X(t,e){const r=V(t,e).substring(1);return r?r.split(Z):[]}function G(t){if("string"==typeof t&&+t==t)return+t;if(t instanceof Date)return t.getTime()/1e3;if(isFinite(t))return t<0?Date.now()/1e3:t;throw new Error("Cannot parse time: "+t)}function Y(t){if("number"!=typeof t)throw TypeError(w.ERRSTR.UID)}function Q(t){if("number"!=typeof t)throw TypeError(w.ERRSTR.GID)}const J=()=>{throw new Error("Not implemented")};class _{static fromJSON(t,e){const r=new _;return r.fromJSON(t,e),r}static fromNestedJSON(t,e){const r=new _;return r.fromNestedJSON(t,e),r}get promises(){if(null===this.promisesApi)throw new Error("Promise is not supported in this environment.");return this.promisesApi}constructor(t={}){this.ino=0,this.inodes={},this.releasedInos=[],this.fds={},this.releasedFds=[],this.maxFiles=1e4,this.openFiles=0,this.promisesApi=new v.FsPromises(this,m.FileHandle),this.statWatchers={},this.cpSync=J,this.lutimesSync=J,this.statfsSync=J,this.cp=J,this.lutimes=J,this.statfs=J,this.openAsBlob=J,this.props=Object.assign({Node:n.Node,Link:n.Link,File:n.File},t);const e=this.createLink();e.setNode(this.createNode(!0));const r=this;this.StatWatcher=class extends tt{constructor(){super(r)}};const i=rt;this.ReadStream=class extends i{constructor(...t){super(r,...t)}};const s=nt;this.WriteStream=class extends s{constructor(...t){super(r,...t)}},this.FSWatcher=class extends st{constructor(){super(r)}},e.setChild(".",e),e.getNode().nlink++,e.setChild("..",e),e.getNode().nlink++,this.root=e}createLink(t,e,r=!1,i){if(!t)return new this.props.Link(this,null,"");if(!e)throw new Error("createLink: name cannot be empty");return t.createChild(e,this.createNode(r,i))}deleteLink(t){const e=t.parent;return!!e&&(e.deleteChild(t),!0)}newInoNumber(){return this.releasedInos.pop()||(this.ino=(this.ino+1)%4294967295,this.ino)}newFdNumber(){const t=this.releasedFds.pop();return"number"==typeof t?t:_.fd--}createNode(t=!1,e){const r=new this.props.Node(this.newInoNumber(),e);return t&&r.setIsDirectory(),this.inodes[r.ino]=r,r}deleteNode(t){t.del(),delete this.inodes[t.ino],this.releasedInos.push(t.ino)}getLink(t){return this.root.walk(t)}getLinkOrThrow(t,e){const r=X(t),i=this.getLink(r);if(!i)throw(0,S.createError)(H,e,t);return i}getResolvedLink(t){let e="string"==typeof t?X(t):t,r=this.root,i=0;for(;i<e.length;){const t=e[i];if(r=r.getChild(t),!r)return null;const n=r.getNode();n.isSymlink()?(e=n.symlink.concat(e.slice(i+1)),r=this.root,i=0):i++}return r}getResolvedLinkOrThrow(t,e){const r=this.getResolvedLink(t);if(!r)throw(0,S.createError)(H,e,t);return r}resolveSymlinks(t){return this.getResolvedLink(t.steps.slice(1))}getLinkAsDirOrThrow(t,e){const r=this.getLinkOrThrow(t,e);if(!r.getNode().isDirectory())throw(0,S.createError)(q,e,t);return r}getLinkParent(t){return this.root.walk(t,t.length-1)}getLinkParentAsDirOrThrow(t,e){const r=t instanceof Array?t:X(t),i=this.getLinkParent(r);if(!i)throw(0,S.createError)(H,e,Z+r.join(Z));if(!i.getNode().isDirectory())throw(0,S.createError)(q,e,Z+r.join(Z));return i}getFileByFd(t){return this.fds[String(t)]}getFileByFdOrThrow(t,e){if(!(0,S.isFd)(t))throw TypeError(w.ERRSTR.FD);const r=this.getFileByFd(t);if(!r)throw(0,S.createError)(W,e);return r}wrapAsync(t,e,r){(0,S.validateCallback)(r),(0,u.default)((()=>{let i;try{i=t.apply(this,e)}catch(t){return void r(t)}r(null,i)}))}_toJSON(t=this.root,e={},r,i){let n=!0,s=t.children;t.getNode().isFile()&&(s=new Map([[t.getName(),t.parent.getChild(t.getName())]]),t=t.parent);for(const o of s.keys()){if("."===o||".."===o)continue;n=!1;const s=t.getChild(o);if(!s)throw new Error("_toJSON: unexpected undefined");const a=s.getNode();if(a.isFile()){let t=s.getPath();r&&(t=D(r,t)),e[t]=i?a.getBuffer():a.getString()}else a.isDirectory()&&this._toJSON(s,e,r,i)}let o=t.getPath();return r&&(o=D(r,o)),o&&n&&(e[o]=null),e}toJSON(t,e={},r=!1,i=!1){const n=[];if(t){Array.isArray(t)||(t=[t]);for(const e of t){const t=(0,S.pathToFilename)(e),r=this.getResolvedLink(t);r&&n.push(r)}}else n.push(this.root);if(!n.length)return e;for(const t of n)this._toJSON(t,e,r?t.getPath():"",i);return e}fromJSON(t,e=c.default.cwd()){for(let r in t){const i=t[r];if(r=V(r,e),"string"==typeof i||i instanceof a.Buffer){const t=z(r);this.mkdirpBase(t,511),this.writeFileSync(r,i)}else this.mkdirpBase(r,511)}}fromNestedJSON(t,e){this.fromJSON(function(t){const e={};return function t(r,i){for(const n in i){const s=i[n],o=F(r,n);"string"==typeof s||s instanceof a.Buffer?e[o]=s:"object"==typeof s&&null!==s&&Object.keys(s).length>0?t(o,s):e[o]=null}}("",t),e}(t),e)}toTree(t={separator:Z}){return(0,b.toTreeSync)(this,t)}reset(){this.ino=0,this.inodes={},this.releasedInos=[],this.fds={},this.releasedFds=[],this.openFiles=0,this.root=this.createLink(),this.root.setNode(this.createNode(!0))}mountSync(t,e){this.fromJSON(e,t)}openLink(t,e,r=!0){if(this.openFiles>=this.maxFiles)throw(0,S.createError)("EMFILE","open",t.getPath());let i=t;if(r&&(i=this.resolveSymlinks(t)),!i)throw(0,S.createError)(H,"open",t.getPath());const n=i.getNode();if(n.isDirectory()){if((e&(x|A|I))!==x)throw(0,S.createError)(U,"open",t.getPath())}else if(e&B)throw(0,S.createError)(q,"open",t.getPath());if(!(e&I||n.canRead()))throw(0,S.createError)("EACCES","open",t.getPath());const s=new this.props.File(t,n,e,this.newFdNumber());return this.fds[s.fd]=s,this.openFiles++,e&R&&s.truncate(),s}openFile(t,e,r,i=!0){const n=X(t);let s=i?this.getResolvedLink(n):this.getLink(n);if(s&&e&T)throw(0,S.createError)(K,"open",t);if(!s&&e&P){const t=this.getResolvedLink(n.slice(0,n.length-1));if(!t)throw(0,S.createError)(H,"open",Z+n.join(Z));e&P&&"number"==typeof r&&(s=this.createLink(t,n[n.length-1],!1,r))}if(s)return this.openLink(s,e,i);throw(0,S.createError)(H,"open",t)}openBase(t,e,r,i=!0){const n=this.openFile(t,e,r,i);if(!n)throw(0,S.createError)(H,"open",t);return n.fd}openSync(t,e,r=438){const i=(0,S.modeToNumber)(r),n=(0,S.pathToFilename)(t),s=(0,S.flagsToNumber)(e);return this.openBase(n,s,i,!(s&O))}open(t,e,r,i){let n=r,s=i;"function"==typeof r&&(n=438,s=r),n=n||438;const o=(0,S.modeToNumber)(n),a=(0,S.pathToFilename)(t),u=(0,S.flagsToNumber)(e);this.wrapAsync(this.openBase,[a,u,o,!(u&O)],s)}closeFile(t){this.fds[t.fd]&&(this.openFiles--,delete this.fds[t.fd],this.releasedFds.push(t.fd))}closeSync(t){(0,S.validateFd)(t);const e=this.getFileByFdOrThrow(t,"close");this.closeFile(e)}close(t,e){(0,S.validateFd)(t),this.wrapAsync(this.closeSync,[t],e)}openFileOrGetById(t,e,r){if("number"==typeof t){const e=this.fds[t];if(!e)throw(0,S.createError)(H);return e}return this.openFile((0,S.pathToFilename)(t),e,r)}readBase(t,e,r,i,n){if(e.byteLength<i)throw(0,S.createError)("ERR_OUT_OF_RANGE","read",void 0,void 0,RangeError);const s=this.getFileByFdOrThrow(t);if(s.node.isSymlink())throw(0,S.createError)("EPERM","read",s.link.getPath());return s.read(e,Number(r),Number(i),-1===n||"number"!=typeof n?void 0:n)}readSync(t,e,r,i,n){return(0,S.validateFd)(t),this.readBase(t,e,r,i,n)}read(t,e,r,i,n,s){if((0,S.validateCallback)(s),0===i)return(0,h.default)((()=>{s&&s(null,0,e)}));(0,u.default)((()=>{try{const o=this.readBase(t,e,r,i,n);s(null,o,e)}catch(t){s(t)}}))}readvBase(t,e,r){const i=this.getFileByFdOrThrow(t);let n=null!=r?r:void 0;-1===n&&(n=void 0);let s=0;for(const t of e){const e=i.read(t,0,t.byteLength,n);if(n=void 0,s+=e,e<t.byteLength)break}return s}readv(t,e,r,i){let n=r,s=i;"function"==typeof r&&(n=null,s=r),(0,S.validateCallback)(s),(0,u.default)((()=>{try{const r=this.readvBase(t,e,n);s(null,r,e)}catch(t){s(t)}}))}readvSync(t,e,r){return(0,S.validateFd)(t),this.readvBase(t,e,r)}readFileBase(t,e,r){let i;const n="number"==typeof t&&(0,S.isFd)(t);let s;if(n)s=t;else{const r=X((0,S.pathToFilename)(t)),i=this.getResolvedLink(r);if(i&&i.getNode().isDirectory())throw(0,S.createError)(U,"open",i.getPath());s=this.openSync(t,e)}try{i=(0,S.bufferToEncoding)(this.getFileByFdOrThrow(s).getBuffer(),r)}finally{n||this.closeSync(s)}return i}readFileSync(t,e){const r=(0,E.getReadFileOptions)(e),i=(0,S.flagsToNumber)(r.flag);return this.readFileBase(t,i,r.encoding)}readFile(t,e,r){const[i,n]=(0,E.optsAndCbGenerator)(E.getReadFileOptions)(e,r),s=(0,S.flagsToNumber)(i.flag);this.wrapAsync(this.readFileBase,[t,s,i.encoding],n)}writeBase(t,e,r,i,n){const s=this.getFileByFdOrThrow(t,"write");if(s.node.isSymlink())throw(0,S.createError)(W,"write",s.link.getPath());return s.write(e,r,i,-1===n||"number"!=typeof n?void 0:n)}writeSync(t,e,r,i,n){const[,s,o,a,u]=(0,S.getWriteSyncArgs)(t,e,r,i,n);return this.writeBase(t,s,o,a,u)}write(t,e,r,i,n,s){const[,o,a,h,c,l,d]=(0,S.getWriteArgs)(t,e,r,i,n,s);(0,u.default)((()=>{try{const r=this.writeBase(t,a,h,c,l);d(null,r,o?e:a)}catch(t){d(t)}}))}writevBase(t,e,r){const i=this.getFileByFdOrThrow(t);let n=null!=r?r:void 0;-1===n&&(n=void 0);let s=0;for(const t of e){const e=a.Buffer.from(t.buffer,t.byteOffset,t.byteLength),r=i.write(e,0,e.byteLength,n);if(n=void 0,s+=r,r<e.byteLength)break}return s}writev(t,e,r,i){let n=r,s=i;"function"==typeof r&&(n=null,s=r),(0,S.validateCallback)(s),(0,u.default)((()=>{try{const r=this.writevBase(t,e,n);s(null,r,e)}catch(t){s(t)}}))}writevSync(t,e,r){return(0,S.validateFd)(t),this.writevBase(t,e,r)}writeFileBase(t,e,r,i){const n="number"==typeof t;let s;s=n?t:this.openBase((0,S.pathToFilename)(t),r,i);let o=0,a=e.length,u=r&k?void 0:0;try{for(;a>0;){const t=this.writeSync(s,e,o,a,u);o+=t,a-=t,void 0!==u&&(u+=t)}}finally{n||this.closeSync(s)}}writeFileSync(t,e,r){const i=(0,E.getWriteFileOptions)(r),n=(0,S.flagsToNumber)(i.flag),s=(0,S.modeToNumber)(i.mode),o=(0,S.dataToBuffer)(e,i.encoding);this.writeFileBase(t,o,n,s)}writeFile(t,e,r,i){let n=r,s=i;"function"==typeof r&&(n=E.writeFileDefaults,s=r);const o=(0,S.validateCallback)(s),a=(0,E.getWriteFileOptions)(n),u=(0,S.flagsToNumber)(a.flag),h=(0,S.modeToNumber)(a.mode),c=(0,S.dataToBuffer)(e,a.encoding);this.wrapAsync(this.writeFileBase,[t,c,u,h],o)}linkBase(t,e){const r=X(t),i=this.getLink(r);if(!i)throw(0,S.createError)(H,"link",t,e);const n=X(e),s=this.getLinkParent(n);if(!s)throw(0,S.createError)(H,"link",t,e);const o=n[n.length-1];if(s.getChild(o))throw(0,S.createError)(K,"link",t,e);const a=i.getNode();a.nlink++,s.createChild(o,a)}copyFileBase(t,e,r){const i=this.readFileSync(t);if(r&L&&this.existsSync(e))throw(0,S.createError)(K,"copyFile",t,e);if(r&j)throw(0,S.createError)("ENOSYS","copyFile",t,e);this.writeFileBase(e,i,w.FLAGS.w,438)}copyFileSync(t,e,r){const i=(0,S.pathToFilename)(t),n=(0,S.pathToFilename)(e);return this.copyFileBase(i,n,0|(r||0))}copyFile(t,e,r,i){const n=(0,S.pathToFilename)(t),s=(0,S.pathToFilename)(e);let o,a;"function"==typeof r?(o=0,a=r):(o=r,a=i),(0,S.validateCallback)(a),this.wrapAsync(this.copyFileBase,[n,s,o],a)}linkSync(t,e){const r=(0,S.pathToFilename)(t),i=(0,S.pathToFilename)(e);this.linkBase(r,i)}link(t,e,r){const i=(0,S.pathToFilename)(t),n=(0,S.pathToFilename)(e);this.wrapAsync(this.linkBase,[i,n],r)}unlinkBase(t){const e=X(t),r=this.getLink(e);if(!r)throw(0,S.createError)(H,"unlink",t);if(r.length)throw Error("Dir not empty...");this.deleteLink(r);const i=r.getNode();i.nlink--,i.nlink<=0&&this.deleteNode(i)}unlinkSync(t){const e=(0,S.pathToFilename)(t);this.unlinkBase(e)}unlink(t,e){const r=(0,S.pathToFilename)(t);this.wrapAsync(this.unlinkBase,[r],e)}symlinkBase(t,e){const r=X(e),i=this.getLinkParent(r);if(!i)throw(0,S.createError)(H,"symlink",t,e);const n=r[r.length-1];if(i.getChild(n))throw(0,S.createError)(K,"symlink",t,e);const s=i.createChild(n);return s.getNode().makeSymlink(X(t)),s}symlinkSync(t,e,r){const i=(0,S.pathToFilename)(t),n=(0,S.pathToFilename)(e);this.symlinkBase(i,n)}symlink(t,e,r,i){const n=(0,S.validateCallback)("function"==typeof r?r:i),s=(0,S.pathToFilename)(t),o=(0,S.pathToFilename)(e);this.wrapAsync(this.symlinkBase,[s,o],n)}realpathBase(t,e){const r=X(t),i=this.getResolvedLink(r);if(!i)throw(0,S.createError)(H,"realpath",t);return(0,g.strToEncoding)(i.getPath()||"/",e)}realpathSync(t,e){return this.realpathBase((0,S.pathToFilename)(t),(0,E.getRealpathOptions)(e).encoding)}realpath(t,e,r){const[i,n]=(0,E.getRealpathOptsAndCb)(e,r),s=(0,S.pathToFilename)(t);this.wrapAsync(this.realpathBase,[s,i.encoding],n)}lstatBase(t,e=!1,r=!1){const i=this.getLink(X(t));if(i)return s.default.build(i.getNode(),e);if(r)throw(0,S.createError)(H,"lstat",t)}lstatSync(t,e){const{throwIfNoEntry:r=!0,bigint:i=!1}=(0,E.getStatOptions)(e);return this.lstatBase((0,S.pathToFilename)(t),i,r)}lstat(t,e,r){const[{throwIfNoEntry:i=!0,bigint:n=!1},s]=(0,E.getStatOptsAndCb)(e,r);this.wrapAsync(this.lstatBase,[(0,S.pathToFilename)(t),n,i],s)}statBase(t,e=!1,r=!0){const i=this.getResolvedLink(X(t));if(i)return s.default.build(i.getNode(),e);if(r)throw(0,S.createError)(H,"stat",t)}statSync(t,e){const{bigint:r=!0,throwIfNoEntry:i=!0}=(0,E.getStatOptions)(e);return this.statBase((0,S.pathToFilename)(t),r,i)}stat(t,e,r){const[{bigint:i=!1,throwIfNoEntry:n=!0},s]=(0,E.getStatOptsAndCb)(e,r);this.wrapAsync(this.statBase,[(0,S.pathToFilename)(t),i,n],s)}fstatBase(t,e=!1){const r=this.getFileByFd(t);if(!r)throw(0,S.createError)(W,"fstat");return s.default.build(r.node,e)}fstatSync(t,e){return this.fstatBase(t,(0,E.getStatOptions)(e).bigint)}fstat(t,e,r){const[i,n]=(0,E.getStatOptsAndCb)(e,r);this.wrapAsync(this.fstatBase,[t,i.bigint],n)}renameBase(t,e){const r=this.getLink(X(t));if(!r)throw(0,S.createError)(H,"rename",t,e);const i=X(e),n=this.getLinkParent(i);if(!n)throw(0,S.createError)(H,"rename",t,e);const s=r.parent;s&&s.deleteChild(r);const o=i[i.length-1];r.name=o,r.steps=[...n.steps,o],n.setChild(r.getName(),r)}renameSync(t,e){const r=(0,S.pathToFilename)(t),i=(0,S.pathToFilename)(e);this.renameBase(r,i)}rename(t,e,r){const i=(0,S.pathToFilename)(t),n=(0,S.pathToFilename)(e);this.wrapAsync(this.renameBase,[i,n],r)}existsBase(t){return!!this.statBase(t)}existsSync(t){try{return this.existsBase((0,S.pathToFilename)(t))}catch(t){return!1}}exists(t,e){const r=(0,S.pathToFilename)(t);if("function"!=typeof e)throw Error(w.ERRSTR.CB);(0,u.default)((()=>{try{e(this.existsBase(r))}catch(t){e(!1)}}))}accessBase(t,e){this.getLinkOrThrow(t,"access")}accessSync(t,e=C){const r=(0,S.pathToFilename)(t);e|=0,this.accessBase(r,e)}access(t,e,r){let i,n=C;"function"!=typeof e?(n=0|e,i=(0,S.validateCallback)(r)):i=e;const s=(0,S.pathToFilename)(t);this.wrapAsync(this.accessBase,[s,n],i)}appendFileSync(t,e,r){const i=(0,E.getAppendFileOpts)(r);i.flag&&!(0,S.isFd)(t)||(i.flag="a"),this.writeFileSync(t,e,i)}appendFile(t,e,r,i){const[n,s]=(0,E.getAppendFileOptsAndCb)(r,i);n.flag&&!(0,S.isFd)(t)||(n.flag="a"),this.writeFile(t,e,n,s)}readdirBase(t,e){const r=X(t),n=this.getResolvedLink(r);if(!n)throw(0,S.createError)(H,"readdir",t);if(!n.getNode().isDirectory())throw(0,S.createError)(q,"scandir",t);const s=[];for(const t of n.children.keys()){const r=n.getChild(t);if(r&&"."!==t&&".."!==t&&(s.push(o.default.build(r,e.encoding)),e.recursive&&r.children.size)){const t=Object.assign(Object.assign({},e),{recursive:!0,withFileTypes:!0}),i=this.readdirBase(r.getPath(),t);s.push(...i)}}if(S.isWin||"buffer"===e.encoding||s.sort(((t,e)=>t.name<e.name?-1:t.name>e.name?1:0)),e.withFileTypes)return s;let a=t;return S.isWin&&(a=a.replace(/\\/g,"/")),s.map((t=>{if(e.recursive){let e=i.join(t.path,t.name.toString());return S.isWin&&(e=e.replace(/\\/g,"/")),e.replace(a+i.posix.sep,"")}return t.name}))}readdirSync(t,e){const r=(0,E.getReaddirOptions)(e),i=(0,S.pathToFilename)(t);return this.readdirBase(i,r)}readdir(t,e,r){const[i,n]=(0,E.getReaddirOptsAndCb)(e,r),s=(0,S.pathToFilename)(t);this.wrapAsync(this.readdirBase,[s,i],n)}readlinkBase(t,e){const r=this.getLinkOrThrow(t,"readlink").getNode();if(!r.isSymlink())throw(0,S.createError)("EINVAL","readlink",t);const i=Z+r.symlink.join(Z);return(0,g.strToEncoding)(i,e)}readlinkSync(t,e){const r=(0,E.getDefaultOpts)(e),i=(0,S.pathToFilename)(t);return this.readlinkBase(i,r.encoding)}readlink(t,e,r){const[i,n]=(0,E.getDefaultOptsAndCb)(e,r),s=(0,S.pathToFilename)(t);this.wrapAsync(this.readlinkBase,[s,i.encoding],n)}fsyncBase(t){this.getFileByFdOrThrow(t,"fsync")}fsyncSync(t){this.fsyncBase(t)}fsync(t,e){this.wrapAsync(this.fsyncBase,[t],e)}fdatasyncBase(t){this.getFileByFdOrThrow(t,"fdatasync")}fdatasyncSync(t){this.fdatasyncBase(t)}fdatasync(t,e){this.wrapAsync(this.fdatasyncBase,[t],e)}ftruncateBase(t,e){this.getFileByFdOrThrow(t,"ftruncate").truncate(e)}ftruncateSync(t,e){this.ftruncateBase(t,e)}ftruncate(t,e,r){const i="number"==typeof e?e:0,n=(0,S.validateCallback)("number"==typeof e?r:e);this.wrapAsync(this.ftruncateBase,[t,i],n)}truncateBase(t,e){const r=this.openSync(t,"r+");try{this.ftruncateSync(r,e)}finally{this.closeSync(r)}}truncateSync(t,e){if((0,S.isFd)(t))return this.ftruncateSync(t,e);this.truncateBase(t,e)}truncate(t,e,r){const i="number"==typeof e?e:0,n=(0,S.validateCallback)("number"==typeof e?r:e);if((0,S.isFd)(t))return this.ftruncate(t,i,n);this.wrapAsync(this.truncateBase,[t,i],n)}futimesBase(t,e,r){const i=this.getFileByFdOrThrow(t,"futimes").node;i.atime=new Date(1e3*e),i.mtime=new Date(1e3*r)}futimesSync(t,e,r){this.futimesBase(t,G(e),G(r))}futimes(t,e,r,i){this.wrapAsync(this.futimesBase,[t,G(e),G(r)],i)}utimesBase(t,e,r){const i=this.openSync(t,"r");try{this.futimesBase(i,e,r)}finally{this.closeSync(i)}}utimesSync(t,e,r){this.utimesBase((0,S.pathToFilename)(t),G(e),G(r))}utimes(t,e,r,i){this.wrapAsync(this.utimesBase,[(0,S.pathToFilename)(t),G(e),G(r)],i)}mkdirBase(t,e){const r=X(t);if(!r.length)throw(0,S.createError)(K,"mkdir",t);const i=this.getLinkParentAsDirOrThrow(t,"mkdir"),n=r[r.length-1];if(i.getChild(n))throw(0,S.createError)(K,"mkdir",t);i.createChild(n,this.createNode(!0,e))}mkdirpBase(t,e){const r=V(t),i=r.substring(1),n=i?i.split(Z):[];let s=this.root,o=!1;for(let t=0;t<n.length;t++){const r=n[t];if(!s.getNode().isDirectory())throw(0,S.createError)(q,"mkdir",s.getPath());const i=s.getChild(r);if(i){if(!i.getNode().isDirectory())throw(0,S.createError)(q,"mkdir",i.getPath());s=i}else s=s.createChild(r,this.createNode(!0,e)),o=!0}return o?r:void 0}mkdirSync(t,e){const r=(0,E.getMkdirOptions)(e),i=(0,S.modeToNumber)(r.mode,511),n=(0,S.pathToFilename)(t);if(r.recursive)return this.mkdirpBase(n,i);this.mkdirBase(n,i)}mkdir(t,e,r){const i=(0,E.getMkdirOptions)(e),n=(0,S.validateCallback)("function"==typeof e?e:r),s=(0,S.modeToNumber)(i.mode,511),o=(0,S.pathToFilename)(t);i.recursive?this.wrapAsync(this.mkdirpBase,[o,s],n):this.wrapAsync(this.mkdirBase,[o,s],n)}mkdtempBase(t,e,r=5){const i=t+(0,S.genRndStr6)();try{return this.mkdirBase(i,511),(0,g.strToEncoding)(i,e)}catch(i){if(i.code===K){if(r>1)return this.mkdtempBase(t,e,r-1);throw Error("Could not create temp dir.")}throw i}}mkdtempSync(t,e){const{encoding:r}=(0,E.getDefaultOpts)(e);if(!t||"string"!=typeof t)throw new TypeError("filename prefix is required");return(0,S.nullCheck)(t),this.mkdtempBase(t,r)}mkdtemp(t,e,r){const[{encoding:i},n]=(0,E.getDefaultOptsAndCb)(e,r);if(!t||"string"!=typeof t)throw new TypeError("filename prefix is required");(0,S.nullCheck)(t)&&this.wrapAsync(this.mkdtempBase,[t,i],n)}rmdirBase(t,e){const r=(0,E.getRmdirOptions)(e),i=this.getLinkAsDirOrThrow(t,"rmdir");if(i.length&&!r.recursive)throw(0,S.createError)("ENOTEMPTY","rmdir",t);this.deleteLink(i)}rmdirSync(t,e){this.rmdirBase((0,S.pathToFilename)(t),e)}rmdir(t,e,r){const i=(0,E.getRmdirOptions)(e),n=(0,S.validateCallback)("function"==typeof e?e:r);this.wrapAsync(this.rmdirBase,[(0,S.pathToFilename)(t),i],n)}rmBase(t,e={}){const r=this.getResolvedLink(t);if(r){if(r.getNode().isDirectory()&&!e.recursive)throw(0,S.createError)("ERR_FS_EISDIR","rm",t);this.deleteLink(r)}else if(!e.force)throw(0,S.createError)(H,"stat",t)}rmSync(t,e){this.rmBase((0,S.pathToFilename)(t),e)}rm(t,e,r){const[i,n]=(0,E.getRmOptsAndCb)(e,r);this.wrapAsync(this.rmBase,[(0,S.pathToFilename)(t),i],n)}fchmodBase(t,e){this.getFileByFdOrThrow(t,"fchmod").chmod(e)}fchmodSync(t,e){this.fchmodBase(t,(0,S.modeToNumber)(e))}fchmod(t,e,r){this.wrapAsync(this.fchmodBase,[t,(0,S.modeToNumber)(e)],r)}chmodBase(t,e){const r=this.openSync(t,"r");try{this.fchmodBase(r,e)}finally{this.closeSync(r)}}chmodSync(t,e){const r=(0,S.modeToNumber)(e),i=(0,S.pathToFilename)(t);this.chmodBase(i,r)}chmod(t,e,r){const i=(0,S.modeToNumber)(e),n=(0,S.pathToFilename)(t);this.wrapAsync(this.chmodBase,[n,i],r)}lchmodBase(t,e){const r=this.openBase(t,A,0,!1);try{this.fchmodBase(r,e)}finally{this.closeSync(r)}}lchmodSync(t,e){const r=(0,S.modeToNumber)(e),i=(0,S.pathToFilename)(t);this.lchmodBase(i,r)}lchmod(t,e,r){const i=(0,S.modeToNumber)(e),n=(0,S.pathToFilename)(t);this.wrapAsync(this.lchmodBase,[n,i],r)}fchownBase(t,e,r){this.getFileByFdOrThrow(t,"fchown").chown(e,r)}fchownSync(t,e,r){Y(e),Q(r),this.fchownBase(t,e,r)}fchown(t,e,r,i){Y(e),Q(r),this.wrapAsync(this.fchownBase,[t,e,r],i)}chownBase(t,e,r){this.getResolvedLinkOrThrow(t,"chown").getNode().chown(e,r)}chownSync(t,e,r){Y(e),Q(r),this.chownBase((0,S.pathToFilename)(t),e,r)}chown(t,e,r,i){Y(e),Q(r),this.wrapAsync(this.chownBase,[(0,S.pathToFilename)(t),e,r],i)}lchownBase(t,e,r){this.getLinkOrThrow(t,"lchown").getNode().chown(e,r)}lchownSync(t,e,r){Y(e),Q(r),this.lchownBase((0,S.pathToFilename)(t),e,r)}lchown(t,e,r,i){Y(e),Q(r),this.wrapAsync(this.lchownBase,[(0,S.pathToFilename)(t),e,r],i)}watchFile(t,e,r){const i=(0,S.pathToFilename)(t);let n=e,s=r;if("function"==typeof n&&(s=e,n=null),"function"!=typeof s)throw Error('"watchFile()" requires a listener function');let o=5007,a=!0;n&&"object"==typeof n&&("number"==typeof n.interval&&(o=n.interval),"boolean"==typeof n.persistent&&(a=n.persistent));let u=this.statWatchers[i];return u||(u=new this.StatWatcher,u.start(i,a,o),this.statWatchers[i]=u),u.addListener("change",s),u}unwatchFile(t,e){const r=(0,S.pathToFilename)(t),i=this.statWatchers[r];i&&("function"==typeof e?i.removeListener("change",e):i.removeAllListeners("change"),0===i.listenerCount("change")&&(i.stop(),delete this.statWatchers[r]))}createReadStream(t,e){return new this.ReadStream(t,e)}createWriteStream(t,e){return new this.WriteStream(t,e)}watch(t,e,r){const i=(0,S.pathToFilename)(t);let n=e;"function"==typeof e&&(r=e,n=null);let{persistent:s,recursive:o,encoding:a}=(0,E.getDefaultOpts)(n);void 0===s&&(s=!0),void 0===o&&(o=!1);const u=new this.FSWatcher;return u.start(i,s,o,a),r&&u.addListener("change",r),u}opendirBase(t,e){const r=X(t),i=this.getResolvedLink(r);if(!i)throw(0,S.createError)(H,"opendir",t);if(!i.getNode().isDirectory())throw(0,S.createError)(q,"scandir",t);return new N.Dir(i,e)}opendirSync(t,e){const r=(0,E.getOpendirOptions)(e),i=(0,S.pathToFilename)(t);return this.opendirBase(i,r)}opendir(t,e,r){const[i,n]=(0,E.getOpendirOptsAndCb)(e,r),s=(0,S.pathToFilename)(t);this.wrapAsync(this.opendirBase,[s,i],n)}}function $(t){t.emit("stop")}e.Volume=_,_.fd=2147483647;class tt extends p.EventEmitter{constructor(t){super(),this.onInterval=()=>{try{const t=this.vol.statSync(this.filename);this.hasChanged(t)&&(this.emit("change",t,this.prev),this.prev=t)}finally{this.loop()}},this.vol=t}loop(){this.timeoutRef=this.setTimeout(this.onInterval,this.interval)}hasChanged(t){return t.mtimeMs>this.prev.mtimeMs||t.nlink!==this.prev.nlink}start(t,e=!0,i=5007){this.filename=(0,S.pathToFilename)(t),this.setTimeout=e?setTimeout.bind("undefined"!=typeof globalThis?globalThis:r.g):l.default,this.interval=i,this.prev=this.vol.statSync(this.filename),this.loop()}stop(){clearTimeout(this.timeoutRef),(0,h.default)((()=>{$.call(this,this)}))}}var et;function rt(t,e,r){if(!(this instanceof rt))return new rt(t,e,r);if(this._vol=t,void 0===(r=Object.assign({},(0,E.getOptions)(r,{}))).highWaterMark&&(r.highWaterMark=65536),d.Readable.call(this,r),this.path=(0,S.pathToFilename)(e),this.fd=void 0===r.fd?null:r.fd,this.flags=void 0===r.flags?"r":r.flags,this.mode=void 0===r.mode?438:r.mode,this.start=r.start,this.end=r.end,this.autoClose=void 0===r.autoClose||r.autoClose,this.pos=void 0,this.bytesRead=0,void 0!==this.start){if("number"!=typeof this.start)throw new TypeError('"start" option must be a Number');if(void 0===this.end)this.end=1/0;else if("number"!=typeof this.end)throw new TypeError('"end" option must be a Number');if(this.start>this.end)throw new Error('"start" option must be <= "end" option');this.pos=this.start}"number"!=typeof this.fd&&this.open(),this.on("end",(function(){this.autoClose&&this.destroy&&this.destroy()}))}function it(t){this.close()}function nt(t,e,r){if(!(this instanceof nt))return new nt(t,e,r);if(this._vol=t,r=Object.assign({},(0,E.getOptions)(r,{})),d.Writable.call(this,r),this.path=(0,S.pathToFilename)(e),this.fd=void 0===r.fd?null:r.fd,this.flags=void 0===r.flags?"w":r.flags,this.mode=void 0===r.mode?438:r.mode,this.start=r.start,this.autoClose=void 0===r.autoClose||!!r.autoClose,this.pos=void 0,this.bytesWritten=0,this.pending=!0,void 0!==this.start){if("number"!=typeof this.start)throw new TypeError('"start" option must be a Number');if(this.start<0)throw new Error('"start" must be >= zero');this.pos=this.start}r.encoding&&this.setDefaultEncoding(r.encoding),"number"!=typeof this.fd&&this.open(),this.once("finish",(function(){this.autoClose&&this.close()}))}e.StatWatcher=tt,y.inherits(rt,d.Readable),e.ReadStream=rt,rt.prototype.open=function(){var t=this;this._vol.open(this.path,this.flags,this.mode,((e,r)=>{if(e)return t.autoClose&&t.destroy&&t.destroy(),void t.emit("error",e);t.fd=r,t.emit("open",r),t.read()}))},rt.prototype._read=function(t){if("number"!=typeof this.fd)return this.once("open",(function(){this._read(t)}));if(!this.destroyed){var e;(!et||et.length-et.used<128)&&(e=this._readableState.highWaterMark,(et=(0,a.bufferAllocUnsafe)(e)).used=0);var r=et,i=Math.min(et.length-et.used,t),n=et.used;if(void 0!==this.pos&&(i=Math.min(this.end-this.pos+1,i)),i<=0)return this.push(null);var s=this;this._vol.read(this.fd,et,et.used,i,this.pos,(function(t,e){if(t)s.autoClose&&s.destroy&&s.destroy(),s.emit("error",t);else{var i=null;e>0&&(s.bytesRead+=e,i=r.slice(n,n+e)),s.push(i)}})),void 0!==this.pos&&(this.pos+=i),et.used+=i}},rt.prototype._destroy=function(t,e){this.close((r=>{e(t||r)}))},rt.prototype.close=function(t){var e;if(t&&this.once("close",t),this.closed||"number"!=typeof this.fd)return"number"!=typeof this.fd?void this.once("open",it):(0,h.default)((()=>this.emit("close")));"boolean"==typeof(null===(e=this._readableState)||void 0===e?void 0:e.closed)?this._readableState.closed=!0:this.closed=!0,this._vol.close(this.fd,(t=>{t?this.emit("error",t):this.emit("close")})),this.fd=null},y.inherits(nt,d.Writable),e.WriteStream=nt,nt.prototype.open=function(){this._vol.open(this.path,this.flags,this.mode,function(t,e){if(t)return this.autoClose&&this.destroy&&this.destroy(),void this.emit("error",t);this.fd=e,this.pending=!1,this.emit("open",e)}.bind(this))},nt.prototype._write=function(t,e,r){if(!(t instanceof a.Buffer||t instanceof Uint8Array))return this.emit("error",new Error("Invalid data"));if("number"!=typeof this.fd)return this.once("open",(function(){this._write(t,e,r)}));var i=this;this._vol.write(this.fd,t,0,t.length,this.pos,((t,e)=>{if(t)return i.autoClose&&i.destroy&&i.destroy(),r(t);i.bytesWritten+=e,r()})),void 0!==this.pos&&(this.pos+=t.length)},nt.prototype._writev=function(t,e){if("number"!=typeof this.fd)return this.once("open",(function(){this._writev(t,e)}));const r=this,i=t.length,n=new Array(i);for(var s=0,o=0;o<i;o++){var u=t[o].chunk;n[o]=u,s+=u.length}const h=a.Buffer.concat(n);this._vol.write(this.fd,h,0,h.length,this.pos,((t,i)=>{if(t)return r.destroy&&r.destroy(),e(t);r.bytesWritten+=i,e()})),void 0!==this.pos&&(this.pos+=s)},nt.prototype.close=function(t){var e;if(t&&this.once("close",t),this.closed||"number"!=typeof this.fd)return"number"!=typeof this.fd?void this.once("open",it):(0,h.default)((()=>this.emit("close")));"boolean"==typeof(null===(e=this._writableState)||void 0===e?void 0:e.closed)?this._writableState.closed=!0:this.closed=!0,this._vol.close(this.fd,(t=>{t?this.emit("error",t):this.emit("close")})),this.fd=null},nt.prototype._destroy=rt.prototype._destroy,nt.prototype.destroySoon=nt.prototype.end;class st extends p.EventEmitter{constructor(t){super(),this._filename="",this._filenameEncoded="",this._recursive=!1,this._encoding=g.ENCODING_UTF8,this._listenerRemovers=new Map,this._onParentChild=t=>{t.getName()===this._getName()&&this._emit("rename")},this._emit=t=>{this.emit("change",t,this._filenameEncoded)},this._persist=()=>{this._timer=setTimeout(this._persist,1e6)},this._vol=t}_getName(){return this._steps[this._steps.length-1]}start(t,e=!0,r=!1,i=g.ENCODING_UTF8){this._filename=(0,S.pathToFilename)(t),this._steps=X(this._filename),this._filenameEncoded=(0,g.strToEncoding)(this._filename),this._recursive=r,this._encoding=i;try{this._link=this._vol.getLinkOrThrow(this._filename,"FSWatcher")}catch(t){const e=new Error(`watch ${this._filename} ${t.code}`);throw e.code=t.code,e.errno=t.code,e}const n=t=>{var e;const r=t.getPath(),i=t.getNode(),n=()=>{let t=D(this._filename,r);return t||(t=this._getName()),this.emit("change","change",t)};i.on("change",n);const s=null!==(e=this._listenerRemovers.get(i.ino))&&void 0!==e?e:[];s.push((()=>i.removeListener("change",n))),this._listenerRemovers.set(i.ino,s)},s=t=>{var e;const i=t.getNode(),o=t=>{this.emit("change","rename",D(this._filename,t.getPath())),setTimeout((()=>{n(t),s(t)}))},a=t=>{const e=t=>{const r=t.getNode().ino,i=this._listenerRemovers.get(r);i&&(i.forEach((t=>t())),this._listenerRemovers.delete(r));for(const[r,i]of t.children.entries())i&&"."!==r&&".."!==r&&e(i)};e(t),this.emit("change","rename",D(this._filename,t.getPath()))};for(const[e,r]of t.children.entries())r&&"."!==e&&".."!==e&&n(r);if(t.on("child:add",o),t.on("child:delete",a),(null!==(e=this._listenerRemovers.get(i.ino))&&void 0!==e?e:[]).push((()=>{t.removeListener("child:add",o),t.removeListener("child:delete",a)})),r)for(const[e,r]of t.children.entries())r&&"."!==e&&".."!==e&&s(r)};n(this._link),s(this._link);const o=this._link.parent;o&&(o.setMaxListeners(o.getMaxListeners()+1),o.on("child:delete",this._onParentChild)),e&&this._persist()}close(){clearTimeout(this._timer),this._listenerRemovers.forEach((t=>{t.forEach((t=>t()))})),this._listenerRemovers.clear();const t=this._link.parent;t&&t.removeListener("child:delete",this._onParentChild)}}e.FSWatcher=st},3047:(t,e,r)=>{var i=r(6240),n=r(9931);function s(t){this.rand=t||new n.Rand}t.exports=s,s.create=function(t){return new s(t)},s.prototype._randbelow=function(t){var e=t.bitLength(),r=Math.ceil(e/8);do{var n=new i(this.rand.generate(r))}while(n.cmp(t)>=0);return n},s.prototype._randrange=function(t,e){var r=e.sub(t);return t.add(this._randbelow(r))},s.prototype.test=function(t,e,r){var n=t.bitLength(),s=i.mont(t),o=new i(1).toRed(s);e||(e=Math.max(1,n/48|0));for(var a=t.subn(1),u=0;!a.testn(u);u++);for(var h=t.shrn(u),c=a.toRed(s);e>0;e--){var l=this._randrange(new i(2),a);r&&r(l);var d=l.toRed(s).redPow(h);if(0!==d.cmp(o)&&0!==d.cmp(c)){for(var f=1;f<u;f++){if(0===(d=d.redSqr()).cmp(o))return!1;if(0===d.cmp(c))break}if(f===u)return!1}}return!0},s.prototype.getDivisor=function(t,e){var r=t.bitLength(),n=i.mont(t),s=new i(1).toRed(n);e||(e=Math.max(1,r/48|0));for(var o=t.subn(1),a=0;!o.testn(a);a++);for(var u=t.shrn(a),h=o.toRed(n);e>0;e--){var c=this._randrange(new i(2),o),l=t.gcd(c);if(0!==l.cmpn(1))return l;var d=c.toRed(n).redPow(u);if(0!==d.cmp(s)&&0!==d.cmp(h)){for(var f=1;f<a;f++){if(0===(d=d.redSqr()).cmp(s))return d.fromRed().subn(1).gcd(t);if(0===d.cmp(h))break}if(f===a)return(d=d.redSqr()).fromRed().subn(1).gcd(t)}}return!1}},6240:function(t,e,r){!function(t,e){"use strict";function i(t,e){if(!t)throw new Error(e||"Assertion failed")}function n(t,e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}function s(t,e,r){if(s.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==e&&"be"!==e||(r=e,e=10),this._init(t||0,e||10,r||"be"))}var o;"object"==typeof t?t.exports=s:e.BN=s,s.BN=s,s.wordSize=26;try{o="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:r(6619).Buffer}catch(t){}function a(t,e){var r=t.charCodeAt(e);return r>=65&&r<=70?r-55:r>=97&&r<=102?r-87:r-48&15}function u(t,e,r){var i=a(t,r);return r-1>=e&&(i|=a(t,r-1)<<4),i}function h(t,e,r,i){for(var n=0,s=Math.min(t.length,r),o=e;o<s;o++){var a=t.charCodeAt(o)-48;n*=i,n+=a>=49?a-49+10:a>=17?a-17+10:a}return n}s.isBN=function(t){return t instanceof s||null!==t&&"object"==typeof t&&t.constructor.wordSize===s.wordSize&&Array.isArray(t.words)},s.max=function(t,e){return t.cmp(e)>0?t:e},s.min=function(t,e){return t.cmp(e)<0?t:e},s.prototype._init=function(t,e,r){if("number"==typeof t)return this._initNumber(t,e,r);if("object"==typeof t)return this._initArray(t,e,r);"hex"===e&&(e=16),i(e===(0|e)&&e>=2&&e<=36);var n=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&(n++,this.negative=1),n<t.length&&(16===e?this._parseHex(t,n,r):(this._parseBase(t,e,n),"le"===r&&this._initArray(this.toArray(),e,r)))},s.prototype._initNumber=function(t,e,r){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(i(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===r&&this._initArray(this.toArray(),e,r)},s.prototype._initArray=function(t,e,r){if(i("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var s,o,a=0;if("be"===r)for(n=t.length-1,s=0;n>=0;n-=3)o=t[n]|t[n-1]<<8|t[n-2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);else if("le"===r)for(n=0,s=0;n<t.length;n+=3)o=t[n]|t[n+1]<<8|t[n+2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);return this.strip()},s.prototype._parseHex=function(t,e,r){this.length=Math.ceil((t.length-e)/6),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var n,s=0,o=0;if("be"===r)for(i=t.length-1;i>=e;i-=2)n=u(t,e,i)<<s,this.words[o]|=67108863&n,s>=18?(s-=18,o+=1,this.words[o]|=n>>>26):s+=8;else for(i=(t.length-e)%2==0?e+1:e;i<t.length;i+=2)n=u(t,e,i)<<s,this.words[o]|=67108863&n,s>=18?(s-=18,o+=1,this.words[o]|=n>>>26):s+=8;this.strip()},s.prototype._parseBase=function(t,e,r){this.words=[0],this.length=1;for(var i=0,n=1;n<=67108863;n*=e)i++;i--,n=n/e|0;for(var s=t.length-r,o=s%i,a=Math.min(s,s-o)+r,u=0,c=r;c<a;c+=i)u=h(t,c,c+i,e),this.imuln(n),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u);if(0!==o){var l=1;for(u=h(t,c,t.length,e),c=0;c<o;c++)l*=e;this.imuln(l),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u)}this.strip()},s.prototype.copy=function(t){t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];t.length=this.length,t.negative=this.negative,t.red=this.red},s.prototype.clone=function(){var t=new s(null);return this.copy(t),t},s.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},s.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},s.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},s.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var c=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],l=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],d=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function f(t,e,r){r.negative=e.negative^t.negative;var i=t.length+e.length|0;r.length=i,i=i-1|0;var n=0|t.words[0],s=0|e.words[0],o=n*s,a=67108863&o,u=o/67108864|0;r.words[0]=a;for(var h=1;h<i;h++){for(var c=u>>>26,l=67108863&u,d=Math.min(h,e.length-1),f=Math.max(0,h-t.length+1);f<=d;f++){var p=h-f|0;c+=(o=(n=0|t.words[p])*(s=0|e.words[f])+l)/67108864|0,l=67108863&o}r.words[h]=0|l,u=0|c}return 0!==u?r.words[h]=0|u:r.length--,r.strip()}s.prototype.toString=function(t,e){var r;if(e=0|e||1,16===(t=t||10)||"hex"===t){r="";for(var n=0,s=0,o=0;o<this.length;o++){var a=this.words[o],u=(16777215&(a<<n|s)).toString(16);r=0!=(s=a>>>24-n&16777215)||o!==this.length-1?c[6-u.length]+u+r:u+r,(n+=2)>=26&&(n-=26,o--)}for(0!==s&&(r=s.toString(16)+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}if(t===(0|t)&&t>=2&&t<=36){var h=l[t],f=d[t];r="";var p=this.clone();for(p.negative=0;!p.isZero();){var g=p.modn(f).toString(t);r=(p=p.idivn(f)).isZero()?g+r:c[h-g.length]+g+r}for(this.isZero()&&(r="0"+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}i(!1,"Base should be between 2 and 36")},s.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&i(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},s.prototype.toJSON=function(){return this.toString(16)},s.prototype.toBuffer=function(t,e){return i(void 0!==o),this.toArrayLike(o,t,e)},s.prototype.toArray=function(t,e){return this.toArrayLike(Array,t,e)},s.prototype.toArrayLike=function(t,e,r){var n=this.byteLength(),s=r||Math.max(1,n);i(n<=s,"byte array longer than desired length"),i(s>0,"Requested array length <= 0"),this.strip();var o,a,u="le"===e,h=new t(s),c=this.clone();if(u){for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[a]=o;for(;a<s;a++)h[a]=0}else{for(a=0;a<s-n;a++)h[a]=0;for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[s-a-1]=o}return h},Math.clz32?s.prototype._countBits=function(t){return 32-Math.clz32(t)}:s.prototype._countBits=function(t){var e=t,r=0;return e>=4096&&(r+=13,e>>>=13),e>=64&&(r+=7,e>>>=7),e>=8&&(r+=4,e>>>=4),e>=2&&(r+=2,e>>>=2),r+e},s.prototype._zeroBits=function(t){if(0===t)return 26;var e=t,r=0;return 0==(8191&e)&&(r+=13,e>>>=13),0==(127&e)&&(r+=7,e>>>=7),0==(15&e)&&(r+=4,e>>>=4),0==(3&e)&&(r+=2,e>>>=2),0==(1&e)&&r++,r},s.prototype.bitLength=function(){var t=this.words[this.length-1],e=this._countBits(t);return 26*(this.length-1)+e},s.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,e=0;e<this.length;e++){var r=this._zeroBits(this.words[e]);if(t+=r,26!==r)break}return t},s.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},s.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},s.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},s.prototype.isNeg=function(){return 0!==this.negative},s.prototype.neg=function(){return this.clone().ineg()},s.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},s.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]|t.words[e];return this.strip()},s.prototype.ior=function(t){return i(0==(this.negative|t.negative)),this.iuor(t)},s.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},s.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},s.prototype.iuand=function(t){var e;e=this.length>t.length?t:this;for(var r=0;r<e.length;r++)this.words[r]=this.words[r]&t.words[r];return this.length=e.length,this.strip()},s.prototype.iand=function(t){return i(0==(this.negative|t.negative)),this.iuand(t)},s.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},s.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},s.prototype.iuxor=function(t){var e,r;this.length>t.length?(e=this,r=t):(e=t,r=this);for(var i=0;i<r.length;i++)this.words[i]=e.words[i]^r.words[i];if(this!==e)for(;i<e.length;i++)this.words[i]=e.words[i];return this.length=e.length,this.strip()},s.prototype.ixor=function(t){return i(0==(this.negative|t.negative)),this.iuxor(t)},s.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},s.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},s.prototype.inotn=function(t){i("number"==typeof t&&t>=0);var e=0|Math.ceil(t/26),r=t%26;this._expand(e),r>0&&e--;for(var n=0;n<e;n++)this.words[n]=67108863&~this.words[n];return r>0&&(this.words[n]=~this.words[n]&67108863>>26-r),this.strip()},s.prototype.notn=function(t){return this.clone().inotn(t)},s.prototype.setn=function(t,e){i("number"==typeof t&&t>=0);var r=t/26|0,n=t%26;return this._expand(r+1),this.words[r]=e?this.words[r]|1<<n:this.words[r]&~(1<<n),this.strip()},s.prototype.iadd=function(t){var e,r,i;if(0!==this.negative&&0===t.negative)return this.negative=0,e=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,e=this.isub(t),t.negative=1,e._normSign();this.length>t.length?(r=this,i=t):(r=t,i=this);for(var n=0,s=0;s<i.length;s++)e=(0|r.words[s])+(0|i.words[s])+n,this.words[s]=67108863&e,n=e>>>26;for(;0!==n&&s<r.length;s++)e=(0|r.words[s])+n,this.words[s]=67108863&e,n=e>>>26;if(this.length=r.length,0!==n)this.words[this.length]=n,this.length++;else if(r!==this)for(;s<r.length;s++)this.words[s]=r.words[s];return this},s.prototype.add=function(t){var e;return 0!==t.negative&&0===this.negative?(t.negative=0,e=this.sub(t),t.negative^=1,e):0===t.negative&&0!==this.negative?(this.negative=0,e=t.sub(this),this.negative=1,e):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},s.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var e=this.iadd(t);return t.negative=1,e._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var r,i,n=this.cmp(t);if(0===n)return this.negative=0,this.length=1,this.words[0]=0,this;n>0?(r=this,i=t):(r=t,i=this);for(var s=0,o=0;o<i.length;o++)s=(e=(0|r.words[o])-(0|i.words[o])+s)>>26,this.words[o]=67108863&e;for(;0!==s&&o<r.length;o++)s=(e=(0|r.words[o])+s)>>26,this.words[o]=67108863&e;if(0===s&&o<r.length&&r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this.length=Math.max(this.length,o),r!==this&&(this.negative=1),this.strip()},s.prototype.sub=function(t){return this.clone().isub(t)};var p=function(t,e,r){var i,n,s,o=t.words,a=e.words,u=r.words,h=0,c=0|o[0],l=8191&c,d=c>>>13,f=0|o[1],p=8191&f,g=f>>>13,m=0|o[2],y=8191&m,v=m>>>13,b=0|o[3],w=8191&b,E=b>>>13,S=0|o[4],N=8191&S,M=S>>>13,x=0|o[5],I=8191&x,A=x>>>13,P=0|o[6],T=8191&P,R=P>>>13,k=0|o[7],B=8191&k,O=k>>>13,C=0|o[8],L=8191&C,j=C>>>13,Z=0|o[9],D=8191&Z,F=Z>>>13,z=0|a[0],H=8191&z,W=z>>>13,K=0|a[1],q=8191&K,U=K>>>13,V=0|a[2],X=8191&V,G=V>>>13,Y=0|a[3],Q=8191&Y,J=Y>>>13,_=0|a[4],$=8191&_,tt=_>>>13,et=0|a[5],rt=8191&et,it=et>>>13,nt=0|a[6],st=8191&nt,ot=nt>>>13,at=0|a[7],ut=8191&at,ht=at>>>13,ct=0|a[8],lt=8191&ct,dt=ct>>>13,ft=0|a[9],pt=8191&ft,gt=ft>>>13;r.negative=t.negative^e.negative,r.length=19;var mt=(h+(i=Math.imul(l,H))|0)+((8191&(n=(n=Math.imul(l,W))+Math.imul(d,H)|0))<<13)|0;h=((s=Math.imul(d,W))+(n>>>13)|0)+(mt>>>26)|0,mt&=67108863,i=Math.imul(p,H),n=(n=Math.imul(p,W))+Math.imul(g,H)|0,s=Math.imul(g,W);var yt=(h+(i=i+Math.imul(l,q)|0)|0)+((8191&(n=(n=n+Math.imul(l,U)|0)+Math.imul(d,q)|0))<<13)|0;h=((s=s+Math.imul(d,U)|0)+(n>>>13)|0)+(yt>>>26)|0,yt&=67108863,i=Math.imul(y,H),n=(n=Math.imul(y,W))+Math.imul(v,H)|0,s=Math.imul(v,W),i=i+Math.imul(p,q)|0,n=(n=n+Math.imul(p,U)|0)+Math.imul(g,q)|0,s=s+Math.imul(g,U)|0;var vt=(h+(i=i+Math.imul(l,X)|0)|0)+((8191&(n=(n=n+Math.imul(l,G)|0)+Math.imul(d,X)|0))<<13)|0;h=((s=s+Math.imul(d,G)|0)+(n>>>13)|0)+(vt>>>26)|0,vt&=67108863,i=Math.imul(w,H),n=(n=Math.imul(w,W))+Math.imul(E,H)|0,s=Math.imul(E,W),i=i+Math.imul(y,q)|0,n=(n=n+Math.imul(y,U)|0)+Math.imul(v,q)|0,s=s+Math.imul(v,U)|0,i=i+Math.imul(p,X)|0,n=(n=n+Math.imul(p,G)|0)+Math.imul(g,X)|0,s=s+Math.imul(g,G)|0;var bt=(h+(i=i+Math.imul(l,Q)|0)|0)+((8191&(n=(n=n+Math.imul(l,J)|0)+Math.imul(d,Q)|0))<<13)|0;h=((s=s+Math.imul(d,J)|0)+(n>>>13)|0)+(bt>>>26)|0,bt&=67108863,i=Math.imul(N,H),n=(n=Math.imul(N,W))+Math.imul(M,H)|0,s=Math.imul(M,W),i=i+Math.imul(w,q)|0,n=(n=n+Math.imul(w,U)|0)+Math.imul(E,q)|0,s=s+Math.imul(E,U)|0,i=i+Math.imul(y,X)|0,n=(n=n+Math.imul(y,G)|0)+Math.imul(v,X)|0,s=s+Math.imul(v,G)|0,i=i+Math.imul(p,Q)|0,n=(n=n+Math.imul(p,J)|0)+Math.imul(g,Q)|0,s=s+Math.imul(g,J)|0;var wt=(h+(i=i+Math.imul(l,$)|0)|0)+((8191&(n=(n=n+Math.imul(l,tt)|0)+Math.imul(d,$)|0))<<13)|0;h=((s=s+Math.imul(d,tt)|0)+(n>>>13)|0)+(wt>>>26)|0,wt&=67108863,i=Math.imul(I,H),n=(n=Math.imul(I,W))+Math.imul(A,H)|0,s=Math.imul(A,W),i=i+Math.imul(N,q)|0,n=(n=n+Math.imul(N,U)|0)+Math.imul(M,q)|0,s=s+Math.imul(M,U)|0,i=i+Math.imul(w,X)|0,n=(n=n+Math.imul(w,G)|0)+Math.imul(E,X)|0,s=s+Math.imul(E,G)|0,i=i+Math.imul(y,Q)|0,n=(n=n+Math.imul(y,J)|0)+Math.imul(v,Q)|0,s=s+Math.imul(v,J)|0,i=i+Math.imul(p,$)|0,n=(n=n+Math.imul(p,tt)|0)+Math.imul(g,$)|0,s=s+Math.imul(g,tt)|0;var Et=(h+(i=i+Math.imul(l,rt)|0)|0)+((8191&(n=(n=n+Math.imul(l,it)|0)+Math.imul(d,rt)|0))<<13)|0;h=((s=s+Math.imul(d,it)|0)+(n>>>13)|0)+(Et>>>26)|0,Et&=67108863,i=Math.imul(T,H),n=(n=Math.imul(T,W))+Math.imul(R,H)|0,s=Math.imul(R,W),i=i+Math.imul(I,q)|0,n=(n=n+Math.imul(I,U)|0)+Math.imul(A,q)|0,s=s+Math.imul(A,U)|0,i=i+Math.imul(N,X)|0,n=(n=n+Math.imul(N,G)|0)+Math.imul(M,X)|0,s=s+Math.imul(M,G)|0,i=i+Math.imul(w,Q)|0,n=(n=n+Math.imul(w,J)|0)+Math.imul(E,Q)|0,s=s+Math.imul(E,J)|0,i=i+Math.imul(y,$)|0,n=(n=n+Math.imul(y,tt)|0)+Math.imul(v,$)|0,s=s+Math.imul(v,tt)|0,i=i+Math.imul(p,rt)|0,n=(n=n+Math.imul(p,it)|0)+Math.imul(g,rt)|0,s=s+Math.imul(g,it)|0;var St=(h+(i=i+Math.imul(l,st)|0)|0)+((8191&(n=(n=n+Math.imul(l,ot)|0)+Math.imul(d,st)|0))<<13)|0;h=((s=s+Math.imul(d,ot)|0)+(n>>>13)|0)+(St>>>26)|0,St&=67108863,i=Math.imul(B,H),n=(n=Math.imul(B,W))+Math.imul(O,H)|0,s=Math.imul(O,W),i=i+Math.imul(T,q)|0,n=(n=n+Math.imul(T,U)|0)+Math.imul(R,q)|0,s=s+Math.imul(R,U)|0,i=i+Math.imul(I,X)|0,n=(n=n+Math.imul(I,G)|0)+Math.imul(A,X)|0,s=s+Math.imul(A,G)|0,i=i+Math.imul(N,Q)|0,n=(n=n+Math.imul(N,J)|0)+Math.imul(M,Q)|0,s=s+Math.imul(M,J)|0,i=i+Math.imul(w,$)|0,n=(n=n+Math.imul(w,tt)|0)+Math.imul(E,$)|0,s=s+Math.imul(E,tt)|0,i=i+Math.imul(y,rt)|0,n=(n=n+Math.imul(y,it)|0)+Math.imul(v,rt)|0,s=s+Math.imul(v,it)|0,i=i+Math.imul(p,st)|0,n=(n=n+Math.imul(p,ot)|0)+Math.imul(g,st)|0,s=s+Math.imul(g,ot)|0;var Nt=(h+(i=i+Math.imul(l,ut)|0)|0)+((8191&(n=(n=n+Math.imul(l,ht)|0)+Math.imul(d,ut)|0))<<13)|0;h=((s=s+Math.imul(d,ht)|0)+(n>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,i=Math.imul(L,H),n=(n=Math.imul(L,W))+Math.imul(j,H)|0,s=Math.imul(j,W),i=i+Math.imul(B,q)|0,n=(n=n+Math.imul(B,U)|0)+Math.imul(O,q)|0,s=s+Math.imul(O,U)|0,i=i+Math.imul(T,X)|0,n=(n=n+Math.imul(T,G)|0)+Math.imul(R,X)|0,s=s+Math.imul(R,G)|0,i=i+Math.imul(I,Q)|0,n=(n=n+Math.imul(I,J)|0)+Math.imul(A,Q)|0,s=s+Math.imul(A,J)|0,i=i+Math.imul(N,$)|0,n=(n=n+Math.imul(N,tt)|0)+Math.imul(M,$)|0,s=s+Math.imul(M,tt)|0,i=i+Math.imul(w,rt)|0,n=(n=n+Math.imul(w,it)|0)+Math.imul(E,rt)|0,s=s+Math.imul(E,it)|0,i=i+Math.imul(y,st)|0,n=(n=n+Math.imul(y,ot)|0)+Math.imul(v,st)|0,s=s+Math.imul(v,ot)|0,i=i+Math.imul(p,ut)|0,n=(n=n+Math.imul(p,ht)|0)+Math.imul(g,ut)|0,s=s+Math.imul(g,ht)|0;var Mt=(h+(i=i+Math.imul(l,lt)|0)|0)+((8191&(n=(n=n+Math.imul(l,dt)|0)+Math.imul(d,lt)|0))<<13)|0;h=((s=s+Math.imul(d,dt)|0)+(n>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,i=Math.imul(D,H),n=(n=Math.imul(D,W))+Math.imul(F,H)|0,s=Math.imul(F,W),i=i+Math.imul(L,q)|0,n=(n=n+Math.imul(L,U)|0)+Math.imul(j,q)|0,s=s+Math.imul(j,U)|0,i=i+Math.imul(B,X)|0,n=(n=n+Math.imul(B,G)|0)+Math.imul(O,X)|0,s=s+Math.imul(O,G)|0,i=i+Math.imul(T,Q)|0,n=(n=n+Math.imul(T,J)|0)+Math.imul(R,Q)|0,s=s+Math.imul(R,J)|0,i=i+Math.imul(I,$)|0,n=(n=n+Math.imul(I,tt)|0)+Math.imul(A,$)|0,s=s+Math.imul(A,tt)|0,i=i+Math.imul(N,rt)|0,n=(n=n+Math.imul(N,it)|0)+Math.imul(M,rt)|0,s=s+Math.imul(M,it)|0,i=i+Math.imul(w,st)|0,n=(n=n+Math.imul(w,ot)|0)+Math.imul(E,st)|0,s=s+Math.imul(E,ot)|0,i=i+Math.imul(y,ut)|0,n=(n=n+Math.imul(y,ht)|0)+Math.imul(v,ut)|0,s=s+Math.imul(v,ht)|0,i=i+Math.imul(p,lt)|0,n=(n=n+Math.imul(p,dt)|0)+Math.imul(g,lt)|0,s=s+Math.imul(g,dt)|0;var xt=(h+(i=i+Math.imul(l,pt)|0)|0)+((8191&(n=(n=n+Math.imul(l,gt)|0)+Math.imul(d,pt)|0))<<13)|0;h=((s=s+Math.imul(d,gt)|0)+(n>>>13)|0)+(xt>>>26)|0,xt&=67108863,i=Math.imul(D,q),n=(n=Math.imul(D,U))+Math.imul(F,q)|0,s=Math.imul(F,U),i=i+Math.imul(L,X)|0,n=(n=n+Math.imul(L,G)|0)+Math.imul(j,X)|0,s=s+Math.imul(j,G)|0,i=i+Math.imul(B,Q)|0,n=(n=n+Math.imul(B,J)|0)+Math.imul(O,Q)|0,s=s+Math.imul(O,J)|0,i=i+Math.imul(T,$)|0,n=(n=n+Math.imul(T,tt)|0)+Math.imul(R,$)|0,s=s+Math.imul(R,tt)|0,i=i+Math.imul(I,rt)|0,n=(n=n+Math.imul(I,it)|0)+Math.imul(A,rt)|0,s=s+Math.imul(A,it)|0,i=i+Math.imul(N,st)|0,n=(n=n+Math.imul(N,ot)|0)+Math.imul(M,st)|0,s=s+Math.imul(M,ot)|0,i=i+Math.imul(w,ut)|0,n=(n=n+Math.imul(w,ht)|0)+Math.imul(E,ut)|0,s=s+Math.imul(E,ht)|0,i=i+Math.imul(y,lt)|0,n=(n=n+Math.imul(y,dt)|0)+Math.imul(v,lt)|0,s=s+Math.imul(v,dt)|0;var It=(h+(i=i+Math.imul(p,pt)|0)|0)+((8191&(n=(n=n+Math.imul(p,gt)|0)+Math.imul(g,pt)|0))<<13)|0;h=((s=s+Math.imul(g,gt)|0)+(n>>>13)|0)+(It>>>26)|0,It&=67108863,i=Math.imul(D,X),n=(n=Math.imul(D,G))+Math.imul(F,X)|0,s=Math.imul(F,G),i=i+Math.imul(L,Q)|0,n=(n=n+Math.imul(L,J)|0)+Math.imul(j,Q)|0,s=s+Math.imul(j,J)|0,i=i+Math.imul(B,$)|0,n=(n=n+Math.imul(B,tt)|0)+Math.imul(O,$)|0,s=s+Math.imul(O,tt)|0,i=i+Math.imul(T,rt)|0,n=(n=n+Math.imul(T,it)|0)+Math.imul(R,rt)|0,s=s+Math.imul(R,it)|0,i=i+Math.imul(I,st)|0,n=(n=n+Math.imul(I,ot)|0)+Math.imul(A,st)|0,s=s+Math.imul(A,ot)|0,i=i+Math.imul(N,ut)|0,n=(n=n+Math.imul(N,ht)|0)+Math.imul(M,ut)|0,s=s+Math.imul(M,ht)|0,i=i+Math.imul(w,lt)|0,n=(n=n+Math.imul(w,dt)|0)+Math.imul(E,lt)|0,s=s+Math.imul(E,dt)|0;var At=(h+(i=i+Math.imul(y,pt)|0)|0)+((8191&(n=(n=n+Math.imul(y,gt)|0)+Math.imul(v,pt)|0))<<13)|0;h=((s=s+Math.imul(v,gt)|0)+(n>>>13)|0)+(At>>>26)|0,At&=67108863,i=Math.imul(D,Q),n=(n=Math.imul(D,J))+Math.imul(F,Q)|0,s=Math.imul(F,J),i=i+Math.imul(L,$)|0,n=(n=n+Math.imul(L,tt)|0)+Math.imul(j,$)|0,s=s+Math.imul(j,tt)|0,i=i+Math.imul(B,rt)|0,n=(n=n+Math.imul(B,it)|0)+Math.imul(O,rt)|0,s=s+Math.imul(O,it)|0,i=i+Math.imul(T,st)|0,n=(n=n+Math.imul(T,ot)|0)+Math.imul(R,st)|0,s=s+Math.imul(R,ot)|0,i=i+Math.imul(I,ut)|0,n=(n=n+Math.imul(I,ht)|0)+Math.imul(A,ut)|0,s=s+Math.imul(A,ht)|0,i=i+Math.imul(N,lt)|0,n=(n=n+Math.imul(N,dt)|0)+Math.imul(M,lt)|0,s=s+Math.imul(M,dt)|0;var Pt=(h+(i=i+Math.imul(w,pt)|0)|0)+((8191&(n=(n=n+Math.imul(w,gt)|0)+Math.imul(E,pt)|0))<<13)|0;h=((s=s+Math.imul(E,gt)|0)+(n>>>13)|0)+(Pt>>>26)|0,Pt&=67108863,i=Math.imul(D,$),n=(n=Math.imul(D,tt))+Math.imul(F,$)|0,s=Math.imul(F,tt),i=i+Math.imul(L,rt)|0,n=(n=n+Math.imul(L,it)|0)+Math.imul(j,rt)|0,s=s+Math.imul(j,it)|0,i=i+Math.imul(B,st)|0,n=(n=n+Math.imul(B,ot)|0)+Math.imul(O,st)|0,s=s+Math.imul(O,ot)|0,i=i+Math.imul(T,ut)|0,n=(n=n+Math.imul(T,ht)|0)+Math.imul(R,ut)|0,s=s+Math.imul(R,ht)|0,i=i+Math.imul(I,lt)|0,n=(n=n+Math.imul(I,dt)|0)+Math.imul(A,lt)|0,s=s+Math.imul(A,dt)|0;var Tt=(h+(i=i+Math.imul(N,pt)|0)|0)+((8191&(n=(n=n+Math.imul(N,gt)|0)+Math.imul(M,pt)|0))<<13)|0;h=((s=s+Math.imul(M,gt)|0)+(n>>>13)|0)+(Tt>>>26)|0,Tt&=67108863,i=Math.imul(D,rt),n=(n=Math.imul(D,it))+Math.imul(F,rt)|0,s=Math.imul(F,it),i=i+Math.imul(L,st)|0,n=(n=n+Math.imul(L,ot)|0)+Math.imul(j,st)|0,s=s+Math.imul(j,ot)|0,i=i+Math.imul(B,ut)|0,n=(n=n+Math.imul(B,ht)|0)+Math.imul(O,ut)|0,s=s+Math.imul(O,ht)|0,i=i+Math.imul(T,lt)|0,n=(n=n+Math.imul(T,dt)|0)+Math.imul(R,lt)|0,s=s+Math.imul(R,dt)|0;var Rt=(h+(i=i+Math.imul(I,pt)|0)|0)+((8191&(n=(n=n+Math.imul(I,gt)|0)+Math.imul(A,pt)|0))<<13)|0;h=((s=s+Math.imul(A,gt)|0)+(n>>>13)|0)+(Rt>>>26)|0,Rt&=67108863,i=Math.imul(D,st),n=(n=Math.imul(D,ot))+Math.imul(F,st)|0,s=Math.imul(F,ot),i=i+Math.imul(L,ut)|0,n=(n=n+Math.imul(L,ht)|0)+Math.imul(j,ut)|0,s=s+Math.imul(j,ht)|0,i=i+Math.imul(B,lt)|0,n=(n=n+Math.imul(B,dt)|0)+Math.imul(O,lt)|0,s=s+Math.imul(O,dt)|0;var kt=(h+(i=i+Math.imul(T,pt)|0)|0)+((8191&(n=(n=n+Math.imul(T,gt)|0)+Math.imul(R,pt)|0))<<13)|0;h=((s=s+Math.imul(R,gt)|0)+(n>>>13)|0)+(kt>>>26)|0,kt&=67108863,i=Math.imul(D,ut),n=(n=Math.imul(D,ht))+Math.imul(F,ut)|0,s=Math.imul(F,ht),i=i+Math.imul(L,lt)|0,n=(n=n+Math.imul(L,dt)|0)+Math.imul(j,lt)|0,s=s+Math.imul(j,dt)|0;var Bt=(h+(i=i+Math.imul(B,pt)|0)|0)+((8191&(n=(n=n+Math.imul(B,gt)|0)+Math.imul(O,pt)|0))<<13)|0;h=((s=s+Math.imul(O,gt)|0)+(n>>>13)|0)+(Bt>>>26)|0,Bt&=67108863,i=Math.imul(D,lt),n=(n=Math.imul(D,dt))+Math.imul(F,lt)|0,s=Math.imul(F,dt);var Ot=(h+(i=i+Math.imul(L,pt)|0)|0)+((8191&(n=(n=n+Math.imul(L,gt)|0)+Math.imul(j,pt)|0))<<13)|0;h=((s=s+Math.imul(j,gt)|0)+(n>>>13)|0)+(Ot>>>26)|0,Ot&=67108863;var Ct=(h+(i=Math.imul(D,pt))|0)+((8191&(n=(n=Math.imul(D,gt))+Math.imul(F,pt)|0))<<13)|0;return h=((s=Math.imul(F,gt))+(n>>>13)|0)+(Ct>>>26)|0,Ct&=67108863,u[0]=mt,u[1]=yt,u[2]=vt,u[3]=bt,u[4]=wt,u[5]=Et,u[6]=St,u[7]=Nt,u[8]=Mt,u[9]=xt,u[10]=It,u[11]=At,u[12]=Pt,u[13]=Tt,u[14]=Rt,u[15]=kt,u[16]=Bt,u[17]=Ot,u[18]=Ct,0!==h&&(u[19]=h,r.length++),r};function g(t,e,r){return(new m).mulp(t,e,r)}function m(t,e){this.x=t,this.y=e}Math.imul||(p=f),s.prototype.mulTo=function(t,e){var r,i=this.length+t.length;return r=10===this.length&&10===t.length?p(this,t,e):i<63?f(this,t,e):i<1024?function(t,e,r){r.negative=e.negative^t.negative,r.length=t.length+e.length;for(var i=0,n=0,s=0;s<r.length-1;s++){var o=n;n=0;for(var a=67108863&i,u=Math.min(s,e.length-1),h=Math.max(0,s-t.length+1);h<=u;h++){var c=s-h,l=(0|t.words[c])*(0|e.words[h]),d=67108863&l;a=67108863&(d=d+a|0),n+=(o=(o=o+(l/67108864|0)|0)+(d>>>26)|0)>>>26,o&=67108863}r.words[s]=a,i=o,o=n}return 0!==i?r.words[s]=i:r.length--,r.strip()}(this,t,e):g(this,t,e),r},m.prototype.makeRBT=function(t){for(var e=new Array(t),r=s.prototype._countBits(t)-1,i=0;i<t;i++)e[i]=this.revBin(i,r,t);return e},m.prototype.revBin=function(t,e,r){if(0===t||t===r-1)return t;for(var i=0,n=0;n<e;n++)i|=(1&t)<<e-n-1,t>>=1;return i},m.prototype.permute=function(t,e,r,i,n,s){for(var o=0;o<s;o++)i[o]=e[t[o]],n[o]=r[t[o]]},m.prototype.transform=function(t,e,r,i,n,s){this.permute(s,t,e,r,i,n);for(var o=1;o<n;o<<=1)for(var a=o<<1,u=Math.cos(2*Math.PI/a),h=Math.sin(2*Math.PI/a),c=0;c<n;c+=a)for(var l=u,d=h,f=0;f<o;f++){var p=r[c+f],g=i[c+f],m=r[c+f+o],y=i[c+f+o],v=l*m-d*y;y=l*y+d*m,m=v,r[c+f]=p+m,i[c+f]=g+y,r[c+f+o]=p-m,i[c+f+o]=g-y,f!==a&&(v=u*l-h*d,d=u*d+h*l,l=v)}},m.prototype.guessLen13b=function(t,e){var r=1|Math.max(e,t),i=1&r,n=0;for(r=r/2|0;r;r>>>=1)n++;return 1<<n+1+i},m.prototype.conjugate=function(t,e,r){if(!(r<=1))for(var i=0;i<r/2;i++){var n=t[i];t[i]=t[r-i-1],t[r-i-1]=n,n=e[i],e[i]=-e[r-i-1],e[r-i-1]=-n}},m.prototype.normalize13b=function(t,e){for(var r=0,i=0;i<e/2;i++){var n=8192*Math.round(t[2*i+1]/e)+Math.round(t[2*i]/e)+r;t[i]=67108863&n,r=n<67108864?0:n/67108864|0}return t},m.prototype.convert13b=function(t,e,r,n){for(var s=0,o=0;o<e;o++)s+=0|t[o],r[2*o]=8191&s,s>>>=13,r[2*o+1]=8191&s,s>>>=13;for(o=2*e;o<n;++o)r[o]=0;i(0===s),i(0==(-8192&s))},m.prototype.stub=function(t){for(var e=new Array(t),r=0;r<t;r++)e[r]=0;return e},m.prototype.mulp=function(t,e,r){var i=2*this.guessLen13b(t.length,e.length),n=this.makeRBT(i),s=this.stub(i),o=new Array(i),a=new Array(i),u=new Array(i),h=new Array(i),c=new Array(i),l=new Array(i),d=r.words;d.length=i,this.convert13b(t.words,t.length,o,i),this.convert13b(e.words,e.length,h,i),this.transform(o,s,a,u,i,n),this.transform(h,s,c,l,i,n);for(var f=0;f<i;f++){var p=a[f]*c[f]-u[f]*l[f];u[f]=a[f]*l[f]+u[f]*c[f],a[f]=p}return this.conjugate(a,u,i),this.transform(a,u,d,s,i,n),this.conjugate(d,s,i),this.normalize13b(d,i),r.negative=t.negative^e.negative,r.length=t.length+e.length,r.strip()},s.prototype.mul=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),this.mulTo(t,e)},s.prototype.mulf=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),g(this,t,e)},s.prototype.imul=function(t){return this.clone().mulTo(t,this)},s.prototype.imuln=function(t){i("number"==typeof t),i(t<67108864);for(var e=0,r=0;r<this.length;r++){var n=(0|this.words[r])*t,s=(67108863&n)+(67108863&e);e>>=26,e+=n/67108864|0,e+=s>>>26,this.words[r]=67108863&s}return 0!==e&&(this.words[r]=e,this.length++),this},s.prototype.muln=function(t){return this.clone().imuln(t)},s.prototype.sqr=function(){return this.mul(this)},s.prototype.isqr=function(){return this.imul(this.clone())},s.prototype.pow=function(t){var e=function(t){for(var e=new Array(t.bitLength()),r=0;r<e.length;r++){var i=r/26|0,n=r%26;e[r]=(t.words[i]&1<<n)>>>n}return e}(t);if(0===e.length)return new s(1);for(var r=this,i=0;i<e.length&&0===e[i];i++,r=r.sqr());if(++i<e.length)for(var n=r.sqr();i<e.length;i++,n=n.sqr())0!==e[i]&&(r=r.mul(n));return r},s.prototype.iushln=function(t){i("number"==typeof t&&t>=0);var e,r=t%26,n=(t-r)/26,s=67108863>>>26-r<<26-r;if(0!==r){var o=0;for(e=0;e<this.length;e++){var a=this.words[e]&s,u=(0|this.words[e])-a<<r;this.words[e]=u|o,o=a>>>26-r}o&&(this.words[e]=o,this.length++)}if(0!==n){for(e=this.length-1;e>=0;e--)this.words[e+n]=this.words[e];for(e=0;e<n;e++)this.words[e]=0;this.length+=n}return this.strip()},s.prototype.ishln=function(t){return i(0===this.negative),this.iushln(t)},s.prototype.iushrn=function(t,e,r){var n;i("number"==typeof t&&t>=0),n=e?(e-e%26)/26:0;var s=t%26,o=Math.min((t-s)/26,this.length),a=67108863^67108863>>>s<<s,u=r;if(n-=o,n=Math.max(0,n),u){for(var h=0;h<o;h++)u.words[h]=this.words[h];u.length=o}if(0===o);else if(this.length>o)for(this.length-=o,h=0;h<this.length;h++)this.words[h]=this.words[h+o];else this.words[0]=0,this.length=1;var c=0;for(h=this.length-1;h>=0&&(0!==c||h>=n);h--){var l=0|this.words[h];this.words[h]=c<<26-s|l>>>s,c=l&a}return u&&0!==c&&(u.words[u.length++]=c),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},s.prototype.ishrn=function(t,e,r){return i(0===this.negative),this.iushrn(t,e,r)},s.prototype.shln=function(t){return this.clone().ishln(t)},s.prototype.ushln=function(t){return this.clone().iushln(t)},s.prototype.shrn=function(t){return this.clone().ishrn(t)},s.prototype.ushrn=function(t){return this.clone().iushrn(t)},s.prototype.testn=function(t){i("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26,n=1<<e;return!(this.length<=r||!(this.words[r]&n))},s.prototype.imaskn=function(t){i("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26;if(i(0===this.negative,"imaskn works only with positive numbers"),this.length<=r)return this;if(0!==e&&r++,this.length=Math.min(r,this.length),0!==e){var n=67108863^67108863>>>e<<e;this.words[this.length-1]&=n}return this.strip()},s.prototype.maskn=function(t){return this.clone().imaskn(t)},s.prototype.iaddn=function(t){return i("number"==typeof t),i(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},s.prototype._iaddn=function(t){this.words[0]+=t;for(var e=0;e<this.length&&this.words[e]>=67108864;e++)this.words[e]-=67108864,e===this.length-1?this.words[e+1]=1:this.words[e+1]++;return this.length=Math.max(this.length,e+1),this},s.prototype.isubn=function(t){if(i("number"==typeof t),i(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var e=0;e<this.length&&this.words[e]<0;e++)this.words[e]+=67108864,this.words[e+1]-=1;return this.strip()},s.prototype.addn=function(t){return this.clone().iaddn(t)},s.prototype.subn=function(t){return this.clone().isubn(t)},s.prototype.iabs=function(){return this.negative=0,this},s.prototype.abs=function(){return this.clone().iabs()},s.prototype._ishlnsubmul=function(t,e,r){var n,s,o=t.length+r;this._expand(o);var a=0;for(n=0;n<t.length;n++){s=(0|this.words[n+r])+a;var u=(0|t.words[n])*e;a=((s-=67108863&u)>>26)-(u/67108864|0),this.words[n+r]=67108863&s}for(;n<this.length-r;n++)a=(s=(0|this.words[n+r])+a)>>26,this.words[n+r]=67108863&s;if(0===a)return this.strip();for(i(-1===a),a=0,n=0;n<this.length;n++)a=(s=-(0|this.words[n])+a)>>26,this.words[n]=67108863&s;return this.negative=1,this.strip()},s.prototype._wordDiv=function(t,e){var r=(this.length,t.length),i=this.clone(),n=t,o=0|n.words[n.length-1];0!=(r=26-this._countBits(o))&&(n=n.ushln(r),i.iushln(r),o=0|n.words[n.length-1]);var a,u=i.length-n.length;if("mod"!==e){(a=new s(null)).length=u+1,a.words=new Array(a.length);for(var h=0;h<a.length;h++)a.words[h]=0}var c=i.clone()._ishlnsubmul(n,1,u);0===c.negative&&(i=c,a&&(a.words[u]=1));for(var l=u-1;l>=0;l--){var d=67108864*(0|i.words[n.length+l])+(0|i.words[n.length+l-1]);for(d=Math.min(d/o|0,67108863),i._ishlnsubmul(n,d,l);0!==i.negative;)d--,i.negative=0,i._ishlnsubmul(n,1,l),i.isZero()||(i.negative^=1);a&&(a.words[l]=d)}return a&&a.strip(),i.strip(),"div"!==e&&0!==r&&i.iushrn(r),{div:a||null,mod:i}},s.prototype.divmod=function(t,e,r){return i(!t.isZero()),this.isZero()?{div:new s(0),mod:new s(0)}:0!==this.negative&&0===t.negative?(a=this.neg().divmod(t,e),"mod"!==e&&(n=a.div.neg()),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.iadd(t)),{div:n,mod:o}):0===this.negative&&0!==t.negative?(a=this.divmod(t.neg(),e),"mod"!==e&&(n=a.div.neg()),{div:n,mod:a.mod}):0!=(this.negative&t.negative)?(a=this.neg().divmod(t.neg(),e),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.isub(t)),{div:a.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new s(0),mod:this}:1===t.length?"div"===e?{div:this.divn(t.words[0]),mod:null}:"mod"===e?{div:null,mod:new s(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new s(this.modn(t.words[0]))}:this._wordDiv(t,e);var n,o,a},s.prototype.div=function(t){return this.divmod(t,"div",!1).div},s.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},s.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},s.prototype.divRound=function(t){var e=this.divmod(t);if(e.mod.isZero())return e.div;var r=0!==e.div.negative?e.mod.isub(t):e.mod,i=t.ushrn(1),n=t.andln(1),s=r.cmp(i);return s<0||1===n&&0===s?e.div:0!==e.div.negative?e.div.isubn(1):e.div.iaddn(1)},s.prototype.modn=function(t){i(t<=67108863);for(var e=(1<<26)%t,r=0,n=this.length-1;n>=0;n--)r=(e*r+(0|this.words[n]))%t;return r},s.prototype.idivn=function(t){i(t<=67108863);for(var e=0,r=this.length-1;r>=0;r--){var n=(0|this.words[r])+67108864*e;this.words[r]=n/t|0,e=n%t}return this.strip()},s.prototype.divn=function(t){return this.clone().idivn(t)},s.prototype.egcd=function(t){i(0===t.negative),i(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var n=new s(1),o=new s(0),a=new s(0),u=new s(1),h=0;e.isEven()&&r.isEven();)e.iushrn(1),r.iushrn(1),++h;for(var c=r.clone(),l=e.clone();!e.isZero();){for(var d=0,f=1;0==(e.words[0]&f)&&d<26;++d,f<<=1);if(d>0)for(e.iushrn(d);d-- >0;)(n.isOdd()||o.isOdd())&&(n.iadd(c),o.isub(l)),n.iushrn(1),o.iushrn(1);for(var p=0,g=1;0==(r.words[0]&g)&&p<26;++p,g<<=1);if(p>0)for(r.iushrn(p);p-- >0;)(a.isOdd()||u.isOdd())&&(a.iadd(c),u.isub(l)),a.iushrn(1),u.iushrn(1);e.cmp(r)>=0?(e.isub(r),n.isub(a),o.isub(u)):(r.isub(e),a.isub(n),u.isub(o))}return{a,b:u,gcd:r.iushln(h)}},s.prototype._invmp=function(t){i(0===t.negative),i(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var n,o=new s(1),a=new s(0),u=r.clone();e.cmpn(1)>0&&r.cmpn(1)>0;){for(var h=0,c=1;0==(e.words[0]&c)&&h<26;++h,c<<=1);if(h>0)for(e.iushrn(h);h-- >0;)o.isOdd()&&o.iadd(u),o.iushrn(1);for(var l=0,d=1;0==(r.words[0]&d)&&l<26;++l,d<<=1);if(l>0)for(r.iushrn(l);l-- >0;)a.isOdd()&&a.iadd(u),a.iushrn(1);e.cmp(r)>=0?(e.isub(r),o.isub(a)):(r.isub(e),a.isub(o))}return(n=0===e.cmpn(1)?o:a).cmpn(0)<0&&n.iadd(t),n},s.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var e=this.clone(),r=t.clone();e.negative=0,r.negative=0;for(var i=0;e.isEven()&&r.isEven();i++)e.iushrn(1),r.iushrn(1);for(;;){for(;e.isEven();)e.iushrn(1);for(;r.isEven();)r.iushrn(1);var n=e.cmp(r);if(n<0){var s=e;e=r,r=s}else if(0===n||0===r.cmpn(1))break;e.isub(r)}return r.iushln(i)},s.prototype.invm=function(t){return this.egcd(t).a.umod(t)},s.prototype.isEven=function(){return 0==(1&this.words[0])},s.prototype.isOdd=function(){return 1==(1&this.words[0])},s.prototype.andln=function(t){return this.words[0]&t},s.prototype.bincn=function(t){i("number"==typeof t);var e=t%26,r=(t-e)/26,n=1<<e;if(this.length<=r)return this._expand(r+1),this.words[r]|=n,this;for(var s=n,o=r;0!==s&&o<this.length;o++){var a=0|this.words[o];s=(a+=s)>>>26,a&=67108863,this.words[o]=a}return 0!==s&&(this.words[o]=s,this.length++),this},s.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},s.prototype.cmpn=function(t){var e,r=t<0;if(0!==this.negative&&!r)return-1;if(0===this.negative&&r)return 1;if(this.strip(),this.length>1)e=1;else{r&&(t=-t),i(t<=67108863,"Number is too big");var n=0|this.words[0];e=n===t?0:n<t?-1:1}return 0!==this.negative?0|-e:e},s.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var e=this.ucmp(t);return 0!==this.negative?0|-e:e},s.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var e=0,r=this.length-1;r>=0;r--){var i=0|this.words[r],n=0|t.words[r];if(i!==n){i<n?e=-1:i>n&&(e=1);break}}return e},s.prototype.gtn=function(t){return 1===this.cmpn(t)},s.prototype.gt=function(t){return 1===this.cmp(t)},s.prototype.gten=function(t){return this.cmpn(t)>=0},s.prototype.gte=function(t){return this.cmp(t)>=0},s.prototype.ltn=function(t){return-1===this.cmpn(t)},s.prototype.lt=function(t){return-1===this.cmp(t)},s.prototype.lten=function(t){return this.cmpn(t)<=0},s.prototype.lte=function(t){return this.cmp(t)<=0},s.prototype.eqn=function(t){return 0===this.cmpn(t)},s.prototype.eq=function(t){return 0===this.cmp(t)},s.red=function(t){return new N(t)},s.prototype.toRed=function(t){return i(!this.red,"Already a number in reduction context"),i(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},s.prototype.fromRed=function(){return i(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},s.prototype._forceRed=function(t){return this.red=t,this},s.prototype.forceRed=function(t){return i(!this.red,"Already a number in reduction context"),this._forceRed(t)},s.prototype.redAdd=function(t){return i(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},s.prototype.redIAdd=function(t){return i(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},s.prototype.redSub=function(t){return i(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},s.prototype.redISub=function(t){return i(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},s.prototype.redShl=function(t){return i(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},s.prototype.redMul=function(t){return i(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},s.prototype.redIMul=function(t){return i(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},s.prototype.redSqr=function(){return i(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},s.prototype.redISqr=function(){return i(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},s.prototype.redSqrt=function(){return i(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},s.prototype.redInvm=function(){return i(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},s.prototype.redNeg=function(){return i(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},s.prototype.redPow=function(t){return i(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var y={k256:null,p224:null,p192:null,p25519:null};function v(t,e){this.name=t,this.p=new s(e,16),this.n=this.p.bitLength(),this.k=new s(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function b(){v.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function w(){v.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function E(){v.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function S(){v.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function N(t){if("string"==typeof t){var e=s._prime(t);this.m=e.p,this.prime=e}else i(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function M(t){N.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new s(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}v.prototype._tmp=function(){var t=new s(null);return t.words=new Array(Math.ceil(this.n/13)),t},v.prototype.ireduce=function(t){var e,r=t;do{this.split(r,this.tmp),e=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(e>this.n);var i=e<this.n?-1:r.ucmp(this.p);return 0===i?(r.words[0]=0,r.length=1):i>0?r.isub(this.p):void 0!==r.strip?r.strip():r._strip(),r},v.prototype.split=function(t,e){t.iushrn(this.n,0,e)},v.prototype.imulK=function(t){return t.imul(this.k)},n(b,v),b.prototype.split=function(t,e){for(var r=4194303,i=Math.min(t.length,9),n=0;n<i;n++)e.words[n]=t.words[n];if(e.length=i,t.length<=9)return t.words[0]=0,void(t.length=1);var s=t.words[9];for(e.words[e.length++]=s&r,n=10;n<t.length;n++){var o=0|t.words[n];t.words[n-10]=(o&r)<<4|s>>>22,s=o}s>>>=22,t.words[n-10]=s,0===s&&t.length>10?t.length-=10:t.length-=9},b.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var e=0,r=0;r<t.length;r++){var i=0|t.words[r];e+=977*i,t.words[r]=67108863&e,e=64*i+(e/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},n(w,v),n(E,v),n(S,v),S.prototype.imulK=function(t){for(var e=0,r=0;r<t.length;r++){var i=19*(0|t.words[r])+e,n=67108863&i;i>>>=26,t.words[r]=n,e=i}return 0!==e&&(t.words[t.length++]=e),t},s._prime=function(t){if(y[t])return y[t];var e;if("k256"===t)e=new b;else if("p224"===t)e=new w;else if("p192"===t)e=new E;else{if("p25519"!==t)throw new Error("Unknown prime "+t);e=new S}return y[t]=e,e},N.prototype._verify1=function(t){i(0===t.negative,"red works only with positives"),i(t.red,"red works only with red numbers")},N.prototype._verify2=function(t,e){i(0==(t.negative|e.negative),"red works only with positives"),i(t.red&&t.red===e.red,"red works only with red numbers")},N.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},N.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},N.prototype.add=function(t,e){this._verify2(t,e);var r=t.add(e);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},N.prototype.iadd=function(t,e){this._verify2(t,e);var r=t.iadd(e);return r.cmp(this.m)>=0&&r.isub(this.m),r},N.prototype.sub=function(t,e){this._verify2(t,e);var r=t.sub(e);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},N.prototype.isub=function(t,e){this._verify2(t,e);var r=t.isub(e);return r.cmpn(0)<0&&r.iadd(this.m),r},N.prototype.shl=function(t,e){return this._verify1(t),this.imod(t.ushln(e))},N.prototype.imul=function(t,e){return this._verify2(t,e),this.imod(t.imul(e))},N.prototype.mul=function(t,e){return this._verify2(t,e),this.imod(t.mul(e))},N.prototype.isqr=function(t){return this.imul(t,t.clone())},N.prototype.sqr=function(t){return this.mul(t,t)},N.prototype.sqrt=function(t){if(t.isZero())return t.clone();var e=this.m.andln(3);if(i(e%2==1),3===e){var r=this.m.add(new s(1)).iushrn(2);return this.pow(t,r)}for(var n=this.m.subn(1),o=0;!n.isZero()&&0===n.andln(1);)o++,n.iushrn(1);i(!n.isZero());var a=new s(1).toRed(this),u=a.redNeg(),h=this.m.subn(1).iushrn(1),c=this.m.bitLength();for(c=new s(2*c*c).toRed(this);0!==this.pow(c,h).cmp(u);)c.redIAdd(u);for(var l=this.pow(c,n),d=this.pow(t,n.addn(1).iushrn(1)),f=this.pow(t,n),p=o;0!==f.cmp(a);){for(var g=f,m=0;0!==g.cmp(a);m++)g=g.redSqr();i(m<p);var y=this.pow(l,new s(1).iushln(p-m-1));d=d.redMul(y),l=y.redSqr(),f=f.redMul(l),p=m}return d},N.prototype.invm=function(t){var e=t._invmp(this.m);return 0!==e.negative?(e.negative=0,this.imod(e).redNeg()):this.imod(e)},N.prototype.pow=function(t,e){if(e.isZero())return new s(1).toRed(this);if(0===e.cmpn(1))return t.clone();var r=new Array(16);r[0]=new s(1).toRed(this),r[1]=t;for(var i=2;i<r.length;i++)r[i]=this.mul(r[i-1],t);var n=r[0],o=0,a=0,u=e.bitLength()%26;for(0===u&&(u=26),i=e.length-1;i>=0;i--){for(var h=e.words[i],c=u-1;c>=0;c--){var l=h>>c&1;n!==r[0]&&(n=this.sqr(n)),0!==l||0!==o?(o<<=1,o|=l,(4==++a||0===i&&0===c)&&(n=this.mul(n,r[o]),a=0,o=0)):a=0}u=26}return n},N.prototype.convertTo=function(t){var e=t.umod(this.m);return e===t?e.clone():e},N.prototype.convertFrom=function(t){var e=t.clone();return e.red=null,e},s.mont=function(t){return new M(t)},n(M,N),M.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},M.prototype.convertFrom=function(t){var e=this.imod(t.mul(this.rinv));return e.red=null,e},M.prototype.imul=function(t,e){if(t.isZero()||e.isZero())return t.words[0]=0,t.length=1,t;var r=t.imul(e),i=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=r.isub(i).iushrn(this.shift),s=n;return n.cmp(this.m)>=0?s=n.isub(this.m):n.cmpn(0)<0&&(s=n.iadd(this.m)),s._forceRed(this)},M.prototype.mul=function(t,e){if(t.isZero()||e.isZero())return new s(0)._forceRed(this);var r=t.mul(e),i=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=r.isub(i).iushrn(this.shift),o=n;return n.cmp(this.m)>=0?o=n.isub(this.m):n.cmpn(0)<0&&(o=n.iadd(this.m)),o._forceRed(this)},M.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=r.nmd(t),this)},9746:t=>{function e(t,e){if(!t)throw new Error(e||"Assertion failed")}t.exports=e,e.equal=function(t,e,r){if(t!=e)throw new Error(r||"Assertion failed: "+t+" != "+e)}},4504:(t,e)=>{"use strict";var r=e;function i(t){return 1===t.length?"0"+t:t}function n(t){for(var e="",r=0;r<t.length;r++)e+=i(t[r].toString(16));return e}r.toArray=function(t,e){if(Array.isArray(t))return t.slice();if(!t)return[];var r=[];if("string"!=typeof t){for(var i=0;i<t.length;i++)r[i]=0|t[i];return r}if("hex"===e)for((t=t.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(t="0"+t),i=0;i<t.length;i+=2)r.push(parseInt(t[i]+t[i+1],16));else for(i=0;i<t.length;i++){var n=t.charCodeAt(i),s=n>>8,o=255&n;s?r.push(s,o):r.push(o)}return r},r.zero2=i,r.toHex=n,r.encode=function(t,e){return"hex"===e?n(t):t}},631:(t,e,r)=>{var i="function"==typeof Map&&Map.prototype,n=Object.getOwnPropertyDescriptor&&i?Object.getOwnPropertyDescriptor(Map.prototype,"size"):null,s=i&&n&&"function"==typeof n.get?n.get:null,o=i&&Map.prototype.forEach,a="function"==typeof Set&&Set.prototype,u=Object.getOwnPropertyDescriptor&&a?Object.getOwnPropertyDescriptor(Set.prototype,"size"):null,h=a&&u&&"function"==typeof u.get?u.get:null,c=a&&Set.prototype.forEach,l="function"==typeof WeakMap&&WeakMap.prototype?WeakMap.prototype.has:null,d="function"==typeof WeakSet&&WeakSet.prototype?WeakSet.prototype.has:null,f="function"==typeof WeakRef&&WeakRef.prototype?WeakRef.prototype.deref:null,p=Boolean.prototype.valueOf,g=Object.prototype.toString,m=Function.prototype.toString,y=String.prototype.match,v=String.prototype.slice,b=String.prototype.replace,w=String.prototype.toUpperCase,E=String.prototype.toLowerCase,S=RegExp.prototype.test,N=Array.prototype.concat,M=Array.prototype.join,x=Array.prototype.slice,I=Math.floor,A="function"==typeof BigInt?BigInt.prototype.valueOf:null,P=Object.getOwnPropertySymbols,T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?Symbol.prototype.toString:null,R="function"==typeof Symbol&&"object"==typeof Symbol.iterator,k="function"==typeof Symbol&&Symbol.toStringTag&&(Symbol.toStringTag,1)?Symbol.toStringTag:null,B=Object.prototype.propertyIsEnumerable,O=("function"==typeof Reflect?Reflect.getPrototypeOf:Object.getPrototypeOf)||([].__proto__===Array.prototype?function(t){return t.__proto__}:null);function C(t,e){if(t===1/0||t===-1/0||t!=t||t&&t>-1e3&&t<1e3||S.call(/e/,e))return e;var r=/[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;if("number"==typeof t){var i=t<0?-I(-t):I(t);if(i!==t){var n=String(i),s=v.call(e,n.length+1);return b.call(n,r,"$&_")+"."+b.call(b.call(s,/([0-9]{3})/g,"$&_"),/_$/,"")}}return b.call(e,r,"$&_")}var L=r(4654),j=L.custom,Z=W(j)?j:null;function D(t,e,r){var i="double"===(r.quoteStyle||e)?'"':"'";return i+t+i}function F(t){return b.call(String(t),/"/g,"&quot;")}function z(t){return!("[object Array]"!==U(t)||k&&"object"==typeof t&&k in t)}function H(t){return!("[object RegExp]"!==U(t)||k&&"object"==typeof t&&k in t)}function W(t){if(R)return t&&"object"==typeof t&&t instanceof Symbol;if("symbol"==typeof t)return!0;if(!t||"object"!=typeof t||!T)return!1;try{return T.call(t),!0}catch(t){}return!1}t.exports=function t(e,r,i,n){var a=r||{};if(q(a,"quoteStyle")&&"single"!==a.quoteStyle&&"double"!==a.quoteStyle)throw new TypeError('option "quoteStyle" must be "single" or "double"');if(q(a,"maxStringLength")&&("number"==typeof a.maxStringLength?a.maxStringLength<0&&a.maxStringLength!==1/0:null!==a.maxStringLength))throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');var u=!q(a,"customInspect")||a.customInspect;if("boolean"!=typeof u&&"symbol"!==u)throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");if(q(a,"indent")&&null!==a.indent&&"\t"!==a.indent&&!(parseInt(a.indent,10)===a.indent&&a.indent>0))throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');if(q(a,"numericSeparator")&&"boolean"!=typeof a.numericSeparator)throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');var g=a.numericSeparator;if(void 0===e)return"undefined";if(null===e)return"null";if("boolean"==typeof e)return e?"true":"false";if("string"==typeof e)return X(e,a);if("number"==typeof e){if(0===e)return 1/0/e>0?"0":"-0";var w=String(e);return g?C(e,w):w}if("bigint"==typeof e){var S=String(e)+"n";return g?C(e,S):S}var I=void 0===a.depth?5:a.depth;if(void 0===i&&(i=0),i>=I&&I>0&&"object"==typeof e)return z(e)?"[Array]":"[Object]";var P,j=function(t,e){var r;if("\t"===t.indent)r="\t";else{if(!("number"==typeof t.indent&&t.indent>0))return null;r=M.call(Array(t.indent+1)," ")}return{base:r,prev:M.call(Array(e+1),r)}}(a,i);if(void 0===n)n=[];else if(V(n,e)>=0)return"[Circular]";function K(e,r,s){if(r&&(n=x.call(n)).push(r),s){var o={depth:a.depth};return q(a,"quoteStyle")&&(o.quoteStyle=a.quoteStyle),t(e,o,i+1,n)}return t(e,a,i+1,n)}if("function"==typeof e&&!H(e)){var G=function(t){if(t.name)return t.name;var e=y.call(m.call(t),/^function\s*([\w$]+)/);return e?e[1]:null}(e),tt=$(e,K);return"[Function"+(G?": "+G:" (anonymous)")+"]"+(tt.length>0?" { "+M.call(tt,", ")+" }":"")}if(W(e)){var et=R?b.call(String(e),/^(Symbol\(.*\))_[^)]*$/,"$1"):T.call(e);return"object"!=typeof e||R?et:Y(et)}if((P=e)&&"object"==typeof P&&("undefined"!=typeof HTMLElement&&P instanceof HTMLElement||"string"==typeof P.nodeName&&"function"==typeof P.getAttribute)){for(var rt="<"+E.call(String(e.nodeName)),it=e.attributes||[],nt=0;nt<it.length;nt++)rt+=" "+it[nt].name+"="+D(F(it[nt].value),"double",a);return rt+=">",e.childNodes&&e.childNodes.length&&(rt+="..."),rt+"</"+E.call(String(e.nodeName))+">"}if(z(e)){if(0===e.length)return"[]";var st=$(e,K);return j&&!function(t){for(var e=0;e<t.length;e++)if(V(t[e],"\n")>=0)return!1;return!0}(st)?"["+_(st,j)+"]":"[ "+M.call(st,", ")+" ]"}if(function(t){return!("[object Error]"!==U(t)||k&&"object"==typeof t&&k in t)}(e)){var ot=$(e,K);return"cause"in Error.prototype||!("cause"in e)||B.call(e,"cause")?0===ot.length?"["+String(e)+"]":"{ ["+String(e)+"] "+M.call(ot,", ")+" }":"{ ["+String(e)+"] "+M.call(N.call("[cause]: "+K(e.cause),ot),", ")+" }"}if("object"==typeof e&&u){if(Z&&"function"==typeof e[Z]&&L)return L(e,{depth:I-i});if("symbol"!==u&&"function"==typeof e.inspect)return e.inspect()}if(function(t){if(!s||!t||"object"!=typeof t)return!1;try{s.call(t);try{h.call(t)}catch(t){return!0}return t instanceof Map}catch(t){}return!1}(e)){var at=[];return o&&o.call(e,(function(t,r){at.push(K(r,e,!0)+" => "+K(t,e))})),J("Map",s.call(e),at,j)}if(function(t){if(!h||!t||"object"!=typeof t)return!1;try{h.call(t);try{s.call(t)}catch(t){return!0}return t instanceof Set}catch(t){}return!1}(e)){var ut=[];return c&&c.call(e,(function(t){ut.push(K(t,e))})),J("Set",h.call(e),ut,j)}if(function(t){if(!l||!t||"object"!=typeof t)return!1;try{l.call(t,l);try{d.call(t,d)}catch(t){return!0}return t instanceof WeakMap}catch(t){}return!1}(e))return Q("WeakMap");if(function(t){if(!d||!t||"object"!=typeof t)return!1;try{d.call(t,d);try{l.call(t,l)}catch(t){return!0}return t instanceof WeakSet}catch(t){}return!1}(e))return Q("WeakSet");if(function(t){if(!f||!t||"object"!=typeof t)return!1;try{return f.call(t),!0}catch(t){}return!1}(e))return Q("WeakRef");if(function(t){return!("[object Number]"!==U(t)||k&&"object"==typeof t&&k in t)}(e))return Y(K(Number(e)));if(function(t){if(!t||"object"!=typeof t||!A)return!1;try{return A.call(t),!0}catch(t){}return!1}(e))return Y(K(A.call(e)));if(function(t){return!("[object Boolean]"!==U(t)||k&&"object"==typeof t&&k in t)}(e))return Y(p.call(e));if(function(t){return!("[object String]"!==U(t)||k&&"object"==typeof t&&k in t)}(e))return Y(K(String(e)));if(!function(t){return!("[object Date]"!==U(t)||k&&"object"==typeof t&&k in t)}(e)&&!H(e)){var ht=$(e,K),ct=O?O(e)===Object.prototype:e instanceof Object||e.constructor===Object,lt=e instanceof Object?"":"null prototype",dt=!ct&&k&&Object(e)===e&&k in e?v.call(U(e),8,-1):lt?"Object":"",ft=(ct||"function"!=typeof e.constructor?"":e.constructor.name?e.constructor.name+" ":"")+(dt||lt?"["+M.call(N.call([],dt||[],lt||[]),": ")+"] ":"");return 0===ht.length?ft+"{}":j?ft+"{"+_(ht,j)+"}":ft+"{ "+M.call(ht,", ")+" }"}return String(e)};var K=Object.prototype.hasOwnProperty||function(t){return t in this};function q(t,e){return K.call(t,e)}function U(t){return g.call(t)}function V(t,e){if(t.indexOf)return t.indexOf(e);for(var r=0,i=t.length;r<i;r++)if(t[r]===e)return r;return-1}function X(t,e){if(t.length>e.maxStringLength){var r=t.length-e.maxStringLength,i="... "+r+" more character"+(r>1?"s":"");return X(v.call(t,0,e.maxStringLength),e)+i}return D(b.call(b.call(t,/(['\\])/g,"\\$1"),/[\x00-\x1f]/g,G),"single",e)}function G(t){var e=t.charCodeAt(0),r={8:"b",9:"t",10:"n",12:"f",13:"r"}[e];return r?"\\"+r:"\\x"+(e<16?"0":"")+w.call(e.toString(16))}function Y(t){return"Object("+t+")"}function Q(t){return t+" { ? }"}function J(t,e,r,i){return t+" ("+e+") {"+(i?_(r,i):M.call(r,", "))+"}"}function _(t,e){if(0===t.length)return"";var r="\n"+e.prev+e.base;return r+M.call(t,","+r)+"\n"+e.prev}function $(t,e){var r=z(t),i=[];if(r){i.length=t.length;for(var n=0;n<t.length;n++)i[n]=q(t,n)?e(t[n],t):""}var s,o="function"==typeof P?P(t):[];if(R){s={};for(var a=0;a<o.length;a++)s["$"+o[a]]=o[a]}for(var u in t)q(t,u)&&(r&&String(Number(u))===u&&u<t.length||R&&s["$"+u]instanceof Symbol||(S.call(/[^\w$]/,u)?i.push(e(u,t)+": "+e(t[u],t)):i.push(u+": "+e(t[u],t))));if("function"==typeof P)for(var h=0;h<o.length;h++)B.call(t,o[h])&&i.push("["+e(o[h])+"]: "+e(t[o[h]],t));return i}},4244:t=>{"use strict";var e=function(t){return t!=t};t.exports=function(t,r){return 0===t&&0===r?1/t==1/r:t===r||!(!e(t)||!e(r))}},609:(t,e,r)=>{"use strict";var i=r(4289),n=r(5559),s=r(4244),o=r(5624),a=r(2281),u=n(o(),Object);i(u,{getPolyfill:o,implementation:s,shim:a}),t.exports=u},5624:(t,e,r)=>{"use strict";var i=r(4244);t.exports=function(){return"function"==typeof Object.is?Object.is:i}},2281:(t,e,r)=>{"use strict";var i=r(5624),n=r(4289);t.exports=function(){var t=i();return n(Object,{is:t},{is:function(){return Object.is!==t}}),t}},8987:(t,e,r)=>{"use strict";var i;if(!Object.keys){var n=Object.prototype.hasOwnProperty,s=Object.prototype.toString,o=r(1414),a=Object.prototype.propertyIsEnumerable,u=!a.call({toString:null},"toString"),h=a.call((function(){}),"prototype"),c=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],l=function(t){var e=t.constructor;return e&&e.prototype===t},d={$applicationCache:!0,$console:!0,$external:!0,$frame:!0,$frameElement:!0,$frames:!0,$innerHeight:!0,$innerWidth:!0,$onmozfullscreenchange:!0,$onmozfullscreenerror:!0,$outerHeight:!0,$outerWidth:!0,$pageXOffset:!0,$pageYOffset:!0,$parent:!0,$scrollLeft:!0,$scrollTop:!0,$scrollX:!0,$scrollY:!0,$self:!0,$webkitIndexedDB:!0,$webkitStorageInfo:!0,$window:!0},f=function(){if("undefined"==typeof window)return!1;for(var t in window)try{if(!d["$"+t]&&n.call(window,t)&&null!==window[t]&&"object"==typeof window[t])try{l(window[t])}catch(t){return!0}}catch(t){return!0}return!1}();i=function(t){var e=null!==t&&"object"==typeof t,r="[object Function]"===s.call(t),i=o(t),a=e&&"[object String]"===s.call(t),d=[];if(!e&&!r&&!i)throw new TypeError("Object.keys called on a non-object");var p=h&&r;if(a&&t.length>0&&!n.call(t,0))for(var g=0;g<t.length;++g)d.push(String(g));if(i&&t.length>0)for(var m=0;m<t.length;++m)d.push(String(m));else for(var y in t)p&&"prototype"===y||!n.call(t,y)||d.push(String(y));if(u)for(var v=function(t){if("undefined"==typeof window||!f)return l(t);try{return l(t)}catch(t){return!1}}(t),b=0;b<c.length;++b)v&&"constructor"===c[b]||!n.call(t,c[b])||d.push(c[b]);return d}}t.exports=i},2215:(t,e,r)=>{"use strict";var i=Array.prototype.slice,n=r(1414),s=Object.keys,o=s?function(t){return s(t)}:r(8987),a=Object.keys;o.shim=function(){if(Object.keys){var t=function(){var t=Object.keys(arguments);return t&&t.length===arguments.length}(1,2);t||(Object.keys=function(t){return n(t)?a(i.call(t)):a(t)})}else Object.keys=o;return Object.keys||o},t.exports=o},1414:t=>{"use strict";var e=Object.prototype.toString;t.exports=function(t){var r=e.call(t),i="[object Arguments]"===r;return i||(i="[object Array]"!==r&&null!==t&&"object"==typeof t&&"number"==typeof t.length&&t.length>=0&&"[object Function]"===e.call(t.callee)),i}},2837:(t,e,r)=>{"use strict";var i=r(2215),n=r(5419)(),s=r(1924),o=Object,a=s("Array.prototype.push"),u=s("Object.prototype.propertyIsEnumerable"),h=n?Object.getOwnPropertySymbols:null;t.exports=function(t,e){if(null==t)throw new TypeError("target must be an object");var r=o(t);if(1===arguments.length)return r;for(var s=1;s<arguments.length;++s){var c=o(arguments[s]),l=i(c),d=n&&(Object.getOwnPropertySymbols||h);if(d)for(var f=d(c),p=0;p<f.length;++p){var g=f[p];u(c,g)&&a(l,g)}for(var m=0;m<l.length;++m){var y=l[m];if(u(c,y)){var v=c[y];r[y]=v}}}return r}},8162:(t,e,r)=>{"use strict";var i=r(2837);t.exports=function(){return Object.assign?function(){if(!Object.assign)return!1;for(var t="abcdefghijklmnopqrst",e=t.split(""),r={},i=0;i<e.length;++i)r[e[i]]=e[i];var n=Object.assign({},r),s="";for(var o in n)s+=o;return t!==s}()||function(){if(!Object.assign||!Object.preventExtensions)return!1;var t=Object.preventExtensions({1:2});try{Object.assign(t,"xy")}catch(e){return"y"===t[1]}return!1}()?i:Object.assign:i}},2818:(t,e,r)=>{"use strict";var i=r(9809);e.certificate=r(1934);var n=i.define("RSAPrivateKey",(function(){this.seq().obj(this.key("version").int(),this.key("modulus").int(),this.key("publicExponent").int(),this.key("privateExponent").int(),this.key("prime1").int(),this.key("prime2").int(),this.key("exponent1").int(),this.key("exponent2").int(),this.key("coefficient").int())}));e.RSAPrivateKey=n;var s=i.define("RSAPublicKey",(function(){this.seq().obj(this.key("modulus").int(),this.key("publicExponent").int())}));e.RSAPublicKey=s;var o=i.define("SubjectPublicKeyInfo",(function(){this.seq().obj(this.key("algorithm").use(a),this.key("subjectPublicKey").bitstr())}));e.PublicKey=o;var a=i.define("AlgorithmIdentifier",(function(){this.seq().obj(this.key("algorithm").objid(),this.key("none").null_().optional(),this.key("curve").objid().optional(),this.key("params").seq().obj(this.key("p").int(),this.key("q").int(),this.key("g").int()).optional())})),u=i.define("PrivateKeyInfo",(function(){this.seq().obj(this.key("version").int(),this.key("algorithm").use(a),this.key("subjectPrivateKey").octstr())}));e.PrivateKey=u;var h=i.define("EncryptedPrivateKeyInfo",(function(){this.seq().obj(this.key("algorithm").seq().obj(this.key("id").objid(),this.key("decrypt").seq().obj(this.key("kde").seq().obj(this.key("id").objid(),this.key("kdeparams").seq().obj(this.key("salt").octstr(),this.key("iters").int())),this.key("cipher").seq().obj(this.key("algo").objid(),this.key("iv").octstr()))),this.key("subjectPrivateKey").octstr())}));e.EncryptedPrivateKey=h;var c=i.define("DSAPrivateKey",(function(){this.seq().obj(this.key("version").int(),this.key("p").int(),this.key("q").int(),this.key("g").int(),this.key("pub_key").int(),this.key("priv_key").int())}));e.DSAPrivateKey=c,e.DSAparam=i.define("DSAparam",(function(){this.int()}));var l=i.define("ECPrivateKey",(function(){this.seq().obj(this.key("version").int(),this.key("privateKey").octstr(),this.key("parameters").optional().explicit(0).use(d),this.key("publicKey").optional().explicit(1).bitstr())}));e.ECPrivateKey=l;var d=i.define("ECParameters",(function(){this.choice({namedCurve:this.objid()})}));e.signature=i.define("signature",(function(){this.seq().obj(this.key("r").int(),this.key("s").int())}))},1934:(t,e,r)=>{"use strict";var i=r(9809),n=i.define("Time",(function(){this.choice({utcTime:this.utctime(),generalTime:this.gentime()})})),s=i.define("AttributeTypeValue",(function(){this.seq().obj(this.key("type").objid(),this.key("value").any())})),o=i.define("AlgorithmIdentifier",(function(){this.seq().obj(this.key("algorithm").objid(),this.key("parameters").optional(),this.key("curve").objid().optional())})),a=i.define("SubjectPublicKeyInfo",(function(){this.seq().obj(this.key("algorithm").use(o),this.key("subjectPublicKey").bitstr())})),u=i.define("RelativeDistinguishedName",(function(){this.setof(s)})),h=i.define("RDNSequence",(function(){this.seqof(u)})),c=i.define("Name",(function(){this.choice({rdnSequence:this.use(h)})})),l=i.define("Validity",(function(){this.seq().obj(this.key("notBefore").use(n),this.key("notAfter").use(n))})),d=i.define("Extension",(function(){this.seq().obj(this.key("extnID").objid(),this.key("critical").bool().def(!1),this.key("extnValue").octstr())})),f=i.define("TBSCertificate",(function(){this.seq().obj(this.key("version").explicit(0).int().optional(),this.key("serialNumber").int(),this.key("signature").use(o),this.key("issuer").use(c),this.key("validity").use(l),this.key("subject").use(c),this.key("subjectPublicKeyInfo").use(a),this.key("issuerUniqueID").implicit(1).bitstr().optional(),this.key("subjectUniqueID").implicit(2).bitstr().optional(),this.key("extensions").explicit(3).seqof(d).optional())})),p=i.define("X509Certificate",(function(){this.seq().obj(this.key("tbsCertificate").use(f),this.key("signatureAlgorithm").use(o),this.key("signatureValue").bitstr())}));t.exports=p},7631:(t,e,r)=>{var i=/Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r+/=]+)[\n\r]+/m,n=/^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m,s=/^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r+/=]+)-----END \1-----$/m,o=r(3048),a=r(4696),u=r(9509).Buffer;t.exports=function(t,e){var r,h=t.toString(),c=h.match(i);if(c){var l="aes"+c[1],d=u.from(c[2],"hex"),f=u.from(c[3].replace(/[\r\n]/g,""),"base64"),p=o(e,d.slice(0,8),parseInt(c[1],10)).key,g=[],m=a.createDecipheriv(l,p,d);g.push(m.update(f)),g.push(m.final()),r=u.concat(g)}else{var y=h.match(s);r=u.from(y[2].replace(/[\r\n]/g,""),"base64")}return{tag:h.match(n)[1],data:r}}},980:(t,e,r)=>{var i=r(2818),n=r(2562),s=r(7631),o=r(4696),a=r(5632),u=r(9509).Buffer;function h(t){var e;"object"!=typeof t||u.isBuffer(t)||(e=t.passphrase,t=t.key),"string"==typeof t&&(t=u.from(t));var r,h,c=s(t,e),l=c.tag,d=c.data;switch(l){case"CERTIFICATE":h=i.certificate.decode(d,"der").tbsCertificate.subjectPublicKeyInfo;case"PUBLIC KEY":switch(h||(h=i.PublicKey.decode(d,"der")),r=h.algorithm.algorithm.join(".")){case"1.2.840.113549.1.1.1":return i.RSAPublicKey.decode(h.subjectPublicKey.data,"der");case"1.2.840.10045.2.1":return h.subjectPrivateKey=h.subjectPublicKey,{type:"ec",data:h};case"1.2.840.10040.4.1":return h.algorithm.params.pub_key=i.DSAparam.decode(h.subjectPublicKey.data,"der"),{type:"dsa",data:h.algorithm.params};default:throw new Error("unknown key id "+r)}case"ENCRYPTED PRIVATE KEY":d=function(t,e){var r=t.algorithm.decrypt.kde.kdeparams.salt,i=parseInt(t.algorithm.decrypt.kde.kdeparams.iters.toString(),10),s=n[t.algorithm.decrypt.cipher.algo.join(".")],h=t.algorithm.decrypt.cipher.iv,c=t.subjectPrivateKey,l=parseInt(s.split("-")[1],10)/8,d=a.pbkdf2Sync(e,r,i,l,"sha1"),f=o.createDecipheriv(s,d,h),p=[];return p.push(f.update(c)),p.push(f.final()),u.concat(p)}(d=i.EncryptedPrivateKey.decode(d,"der"),e);case"PRIVATE KEY":switch(r=(h=i.PrivateKey.decode(d,"der")).algorithm.algorithm.join(".")){case"1.2.840.113549.1.1.1":return i.RSAPrivateKey.decode(h.subjectPrivateKey,"der");case"1.2.840.10045.2.1":return{curve:h.algorithm.curve,privateKey:i.ECPrivateKey.decode(h.subjectPrivateKey,"der").privateKey};case"1.2.840.10040.4.1":return h.algorithm.params.priv_key=i.DSAparam.decode(h.subjectPrivateKey,"der"),{type:"dsa",params:h.algorithm.params};default:throw new Error("unknown key id "+r)}case"RSA PUBLIC KEY":return i.RSAPublicKey.decode(d,"der");case"RSA PRIVATE KEY":return i.RSAPrivateKey.decode(d,"der");case"DSA PRIVATE KEY":return{type:"dsa",params:i.DSAPrivateKey.decode(d,"der")};case"EC PRIVATE KEY":return{curve:(d=i.ECPrivateKey.decode(d,"der")).parameters.value,privateKey:d.privateKey};default:throw new Error("unknown key type "+l)}}t.exports=h,h.signature=i.signature},6470:(t,e,r)=>{"use strict";var i=r(4155);function n(t){if("string"!=typeof t)throw new TypeError("Path must be a string. Received "+JSON.stringify(t))}function s(t,e){for(var r,i="",n=0,s=-1,o=0,a=0;a<=t.length;++a){if(a<t.length)r=t.charCodeAt(a);else{if(47===r)break;r=47}if(47===r){if(s===a-1||1===o);else if(s!==a-1&&2===o){if(i.length<2||2!==n||46!==i.charCodeAt(i.length-1)||46!==i.charCodeAt(i.length-2))if(i.length>2){var u=i.lastIndexOf("/");if(u!==i.length-1){-1===u?(i="",n=0):n=(i=i.slice(0,u)).length-1-i.lastIndexOf("/"),s=a,o=0;continue}}else if(2===i.length||1===i.length){i="",n=0,s=a,o=0;continue}e&&(i.length>0?i+="/..":i="..",n=2)}else i.length>0?i+="/"+t.slice(s+1,a):i=t.slice(s+1,a),n=a-s-1;s=a,o=0}else 46===r&&-1!==o?++o:o=-1}return i}var o={resolve:function(){for(var t,e="",r=!1,o=arguments.length-1;o>=-1&&!r;o--){var a;o>=0?a=arguments[o]:(void 0===t&&(t=i.cwd()),a=t),n(a),0!==a.length&&(e=a+"/"+e,r=47===a.charCodeAt(0))}return e=s(e,!r),r?e.length>0?"/"+e:"/":e.length>0?e:"."},normalize:function(t){if(n(t),0===t.length)return".";var e=47===t.charCodeAt(0),r=47===t.charCodeAt(t.length-1);return 0!==(t=s(t,!e)).length||e||(t="."),t.length>0&&r&&(t+="/"),e?"/"+t:t},isAbsolute:function(t){return n(t),t.length>0&&47===t.charCodeAt(0)},join:function(){if(0===arguments.length)return".";for(var t,e=0;e<arguments.length;++e){var r=arguments[e];n(r),r.length>0&&(void 0===t?t=r:t+="/"+r)}return void 0===t?".":o.normalize(t)},relative:function(t,e){if(n(t),n(e),t===e)return"";if((t=o.resolve(t))===(e=o.resolve(e)))return"";for(var r=1;r<t.length&&47===t.charCodeAt(r);++r);for(var i=t.length,s=i-r,a=1;a<e.length&&47===e.charCodeAt(a);++a);for(var u=e.length-a,h=s<u?s:u,c=-1,l=0;l<=h;++l){if(l===h){if(u>h){if(47===e.charCodeAt(a+l))return e.slice(a+l+1);if(0===l)return e.slice(a+l)}else s>h&&(47===t.charCodeAt(r+l)?c=l:0===l&&(c=0));break}var d=t.charCodeAt(r+l);if(d!==e.charCodeAt(a+l))break;47===d&&(c=l)}var f="";for(l=r+c+1;l<=i;++l)l!==i&&47!==t.charCodeAt(l)||(0===f.length?f+="..":f+="/..");return f.length>0?f+e.slice(a+c):(a+=c,47===e.charCodeAt(a)&&++a,e.slice(a))},_makeLong:function(t){return t},dirname:function(t){if(n(t),0===t.length)return".";for(var e=t.charCodeAt(0),r=47===e,i=-1,s=!0,o=t.length-1;o>=1;--o)if(47===(e=t.charCodeAt(o))){if(!s){i=o;break}}else s=!1;return-1===i?r?"/":".":r&&1===i?"//":t.slice(0,i)},basename:function(t,e){if(void 0!==e&&"string"!=typeof e)throw new TypeError('"ext" argument must be a string');n(t);var r,i=0,s=-1,o=!0;if(void 0!==e&&e.length>0&&e.length<=t.length){if(e.length===t.length&&e===t)return"";var a=e.length-1,u=-1;for(r=t.length-1;r>=0;--r){var h=t.charCodeAt(r);if(47===h){if(!o){i=r+1;break}}else-1===u&&(o=!1,u=r+1),a>=0&&(h===e.charCodeAt(a)?-1==--a&&(s=r):(a=-1,s=u))}return i===s?s=u:-1===s&&(s=t.length),t.slice(i,s)}for(r=t.length-1;r>=0;--r)if(47===t.charCodeAt(r)){if(!o){i=r+1;break}}else-1===s&&(o=!1,s=r+1);return-1===s?"":t.slice(i,s)},extname:function(t){n(t);for(var e=-1,r=0,i=-1,s=!0,o=0,a=t.length-1;a>=0;--a){var u=t.charCodeAt(a);if(47!==u)-1===i&&(s=!1,i=a+1),46===u?-1===e?e=a:1!==o&&(o=1):-1!==e&&(o=-1);else if(!s){r=a+1;break}}return-1===e||-1===i||0===o||1===o&&e===i-1&&e===r+1?"":t.slice(e,i)},format:function(t){if(null===t||"object"!=typeof t)throw new TypeError('The "pathObject" argument must be of type Object. Received type '+typeof t);return function(t,e){var r=e.dir||e.root,i=e.base||(e.name||"")+(e.ext||"");return r?r===e.root?r+i:r+"/"+i:i}(0,t)},parse:function(t){n(t);var e={root:"",dir:"",base:"",ext:"",name:""};if(0===t.length)return e;var r,i=t.charCodeAt(0),s=47===i;s?(e.root="/",r=1):r=0;for(var o=-1,a=0,u=-1,h=!0,c=t.length-1,l=0;c>=r;--c)if(47!==(i=t.charCodeAt(c)))-1===u&&(h=!1,u=c+1),46===i?-1===o?o=c:1!==l&&(l=1):-1!==o&&(l=-1);else if(!h){a=c+1;break}return-1===o||-1===u||0===l||1===l&&o===u-1&&o===a+1?-1!==u&&(e.base=e.name=0===a&&s?t.slice(1,u):t.slice(a,u)):(0===a&&s?(e.name=t.slice(1,o),e.base=t.slice(1,u)):(e.name=t.slice(a,o),e.base=t.slice(a,u)),e.ext=t.slice(o,u)),a>0?e.dir=t.slice(0,a-1):s&&(e.dir="/"),e},sep:"/",delimiter:":",win32:null,posix:null};o.posix=o,t.exports=o},5632:(t,e,r)=>{e.pbkdf2=r(8638),e.pbkdf2Sync=r(1257)},8638:(t,e,r)=>{var i,n,s=r(9509).Buffer,o=r(7357),a=r(2368),u=r(1257),h=r(7777),c=r.g.crypto&&r.g.crypto.subtle,l={sha:"SHA-1","sha-1":"SHA-1",sha1:"SHA-1",sha256:"SHA-256","sha-256":"SHA-256",sha384:"SHA-384","sha-384":"SHA-384","sha-512":"SHA-512",sha512:"SHA-512"},d=[];function f(){return n||(n=r.g.process&&r.g.process.nextTick?r.g.process.nextTick:r.g.queueMicrotask?r.g.queueMicrotask:r.g.setImmediate?r.g.setImmediate:r.g.setTimeout)}function p(t,e,r,i,n){return c.importKey("raw",t,{name:"PBKDF2"},!1,["deriveBits"]).then((function(t){return c.deriveBits({name:"PBKDF2",salt:e,iterations:r,hash:{name:n}},t,i<<3)})).then((function(t){return s.from(t)}))}t.exports=function(t,e,n,g,m,y){"function"==typeof m&&(y=m,m=void 0);var v=l[(m=m||"sha1").toLowerCase()];if(v&&"function"==typeof r.g.Promise){if(o(n,g),t=h(t,a,"Password"),e=h(e,a,"Salt"),"function"!=typeof y)throw new Error("No callback provided to pbkdf2");!function(t,e){t.then((function(t){f()((function(){e(null,t)}))}),(function(t){f()((function(){e(t)}))}))}(function(t){if(r.g.process&&!r.g.process.browser)return Promise.resolve(!1);if(!c||!c.importKey||!c.deriveBits)return Promise.resolve(!1);if(void 0!==d[t])return d[t];var e=p(i=i||s.alloc(8),i,10,128,t).then((function(){return!0})).catch((function(){return!1}));return d[t]=e,e}(v).then((function(r){return r?p(t,e,n,g,v):u(t,e,n,g,m)})),y)}else f()((function(){var r;try{r=u(t,e,n,g,m)}catch(t){return y(t)}y(null,r)}))}},2368:(t,e,r)=>{var i,n=r(4155);i=r.g.process&&r.g.process.browser?"utf-8":r.g.process&&r.g.process.version?parseInt(n.version.split(".")[0].slice(1),10)>=6?"utf-8":"binary":"utf-8",t.exports=i},7357:t=>{var e=Math.pow(2,30)-1;t.exports=function(t,r){if("number"!=typeof t)throw new TypeError("Iterations not a number");if(t<0)throw new TypeError("Bad iterations");if("number"!=typeof r)throw new TypeError("Key length not a number");if(r<0||r>e||r!=r)throw new TypeError("Bad key length")}},1257:(t,e,r)=>{var i=r(8028),n=r(9785),s=r(9072),o=r(9509).Buffer,a=r(7357),u=r(2368),h=r(7777),c=o.alloc(128),l={md5:16,sha1:20,sha224:28,sha256:32,sha384:48,sha512:64,rmd160:20,ripemd160:20};function d(t,e,r){var a=function(t){return"rmd160"===t||"ripemd160"===t?function(t){return(new n).update(t).digest()}:"md5"===t?i:function(e){return s(t).update(e).digest()}}(t),u="sha512"===t||"sha384"===t?128:64;e.length>u?e=a(e):e.length<u&&(e=o.concat([e,c],u));for(var h=o.allocUnsafe(u+l[t]),d=o.allocUnsafe(u+l[t]),f=0;f<u;f++)h[f]=54^e[f],d[f]=92^e[f];var p=o.allocUnsafe(u+r+4);h.copy(p,0,0,u),this.ipad1=p,this.ipad2=h,this.opad=d,this.alg=t,this.blocksize=u,this.hash=a,this.size=l[t]}d.prototype.run=function(t,e){return t.copy(e,this.blocksize),this.hash(e).copy(this.opad,this.blocksize),this.hash(this.opad)},t.exports=function(t,e,r,i,n){a(r,i);var s=new d(n=n||"sha1",t=h(t,u,"Password"),(e=h(e,u,"Salt")).length),c=o.allocUnsafe(i),f=o.allocUnsafe(e.length+4);e.copy(f,0,0,e.length);for(var p=0,g=l[n],m=Math.ceil(i/g),y=1;y<=m;y++){f.writeUInt32BE(y,e.length);for(var v=s.run(f,s.ipad1),b=v,w=1;w<r;w++){b=s.run(b,s.ipad2);for(var E=0;E<g;E++)v[E]^=b[E]}v.copy(c,p),p+=g}return c}},7777:(t,e,r)=>{var i=r(9509).Buffer;t.exports=function(t,e,r){if(i.isBuffer(t))return t;if("string"==typeof t)return i.from(t,e);if(ArrayBuffer.isView(t))return i.from(t.buffer);throw new TypeError(r+" must be a string, a Buffer, a typed array or a DataView")}},4155:t=>{var e,r,i=t.exports={};function n(){throw new Error("setTimeout has not been defined")}function s(){throw new Error("clearTimeout has not been defined")}function o(t){if(e===setTimeout)return setTimeout(t,0);if((e===n||!e)&&setTimeout)return e=setTimeout,setTimeout(t,0);try{return e(t,0)}catch(r){try{return e.call(null,t,0)}catch(r){return e.call(this,t,0)}}}!function(){try{e="function"==typeof setTimeout?setTimeout:n}catch(t){e=n}try{r="function"==typeof clearTimeout?clearTimeout:s}catch(t){r=s}}();var a,u=[],h=!1,c=-1;function l(){h&&a&&(h=!1,a.length?u=a.concat(u):c=-1,u.length&&d())}function d(){if(!h){var t=o(l);h=!0;for(var e=u.length;e;){for(a=u,u=[];++c<e;)a&&a[c].run();c=-1,e=u.length}a=null,h=!1,function(t){if(r===clearTimeout)return clearTimeout(t);if((r===s||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(t);try{return r(t)}catch(e){try{return r.call(null,t)}catch(e){return r.call(this,t)}}}(t)}}function f(t,e){this.fun=t,this.array=e}function p(){}i.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)e[r-1]=arguments[r];u.push(new f(t,e)),1!==u.length||h||o(d)},f.prototype.run=function(){this.fun.apply(null,this.array)},i.title="browser",i.browser=!0,i.env={},i.argv=[],i.version="",i.versions={},i.on=p,i.addListener=p,i.once=p,i.off=p,i.removeListener=p,i.removeAllListeners=p,i.emit=p,i.prependListener=p,i.prependOnceListener=p,i.listeners=function(t){return[]},i.binding=function(t){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(t){throw new Error("process.chdir is not supported")},i.umask=function(){return 0}},1761:t=>{"use strict";function e(t){this.requestsPerSecond=t.requestsPerSecond,this.promiseImplementation=t.promiseImplementation||Promise,this.lastStartTime=0,this.queued=[]}e.prototype.add=function(t,e){var r=this,i=e||{};return new r.promiseImplementation((function(e,n){r.queued.push({resolve:e,reject:n,promise:t,weight:i.weight||1,signal:i.signal}),r.dequeue()}))},e.prototype.addAll=function(t,e){var r=t.map(function(t){return this.add(t,e)}.bind(this));return Promise.all(r)},e.prototype.dequeue=function(){if(this.queued.length>0){var t=new Date,e=this.queued[0].weight,r=1e3/this.requestsPerSecond*e,i=t-this.lastStartTime;i>=r?this._execute():setTimeout(function(){this.dequeue()}.bind(this),r-i)}},e.prototype._execute=function(){this.lastStartTime=new Date;var t=this.queued.shift();t.signal&&t.signal.aborted?t.reject(new DOMException("","AbortError")):t.promise().then((function(e){t.resolve(e)})).catch((function(e){t.reject(e)}))},t.exports=e},7900:(t,e,r)=>{e.publicEncrypt=r(6559),e.privateDecrypt=r(6138),e.privateEncrypt=function(t,r){return e.publicEncrypt(t,r,!0)},e.publicDecrypt=function(t,r){return e.privateDecrypt(t,r,!0)}},9199:(t,e,r)=>{var i=r(3482),n=r(9509).Buffer;function s(t){var e=n.allocUnsafe(4);return e.writeUInt32BE(t,0),e}t.exports=function(t,e){for(var r,o=n.alloc(0),a=0;o.length<e;)r=s(a++),o=n.concat([o,i("sha1").update(t).update(r).digest()]);return o.slice(0,e)}},2144:function(t,e,r){!function(t,e){"use strict";function i(t,e){if(!t)throw new Error(e||"Assertion failed")}function n(t,e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}function s(t,e,r){if(s.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==e&&"be"!==e||(r=e,e=10),this._init(t||0,e||10,r||"be"))}var o;"object"==typeof t?t.exports=s:e.BN=s,s.BN=s,s.wordSize=26;try{o="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:r(7108).Buffer}catch(t){}function a(t,e){var r=t.charCodeAt(e);return r>=65&&r<=70?r-55:r>=97&&r<=102?r-87:r-48&15}function u(t,e,r){var i=a(t,r);return r-1>=e&&(i|=a(t,r-1)<<4),i}function h(t,e,r,i){for(var n=0,s=Math.min(t.length,r),o=e;o<s;o++){var a=t.charCodeAt(o)-48;n*=i,n+=a>=49?a-49+10:a>=17?a-17+10:a}return n}s.isBN=function(t){return t instanceof s||null!==t&&"object"==typeof t&&t.constructor.wordSize===s.wordSize&&Array.isArray(t.words)},s.max=function(t,e){return t.cmp(e)>0?t:e},s.min=function(t,e){return t.cmp(e)<0?t:e},s.prototype._init=function(t,e,r){if("number"==typeof t)return this._initNumber(t,e,r);if("object"==typeof t)return this._initArray(t,e,r);"hex"===e&&(e=16),i(e===(0|e)&&e>=2&&e<=36);var n=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&(n++,this.negative=1),n<t.length&&(16===e?this._parseHex(t,n,r):(this._parseBase(t,e,n),"le"===r&&this._initArray(this.toArray(),e,r)))},s.prototype._initNumber=function(t,e,r){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(i(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===r&&this._initArray(this.toArray(),e,r)},s.prototype._initArray=function(t,e,r){if(i("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var s,o,a=0;if("be"===r)for(n=t.length-1,s=0;n>=0;n-=3)o=t[n]|t[n-1]<<8|t[n-2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);else if("le"===r)for(n=0,s=0;n<t.length;n+=3)o=t[n]|t[n+1]<<8|t[n+2]<<16,this.words[s]|=o<<a&67108863,this.words[s+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,s++);return this.strip()},s.prototype._parseHex=function(t,e,r){this.length=Math.ceil((t.length-e)/6),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var n,s=0,o=0;if("be"===r)for(i=t.length-1;i>=e;i-=2)n=u(t,e,i)<<s,this.words[o]|=67108863&n,s>=18?(s-=18,o+=1,this.words[o]|=n>>>26):s+=8;else for(i=(t.length-e)%2==0?e+1:e;i<t.length;i+=2)n=u(t,e,i)<<s,this.words[o]|=67108863&n,s>=18?(s-=18,o+=1,this.words[o]|=n>>>26):s+=8;this.strip()},s.prototype._parseBase=function(t,e,r){this.words=[0],this.length=1;for(var i=0,n=1;n<=67108863;n*=e)i++;i--,n=n/e|0;for(var s=t.length-r,o=s%i,a=Math.min(s,s-o)+r,u=0,c=r;c<a;c+=i)u=h(t,c,c+i,e),this.imuln(n),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u);if(0!==o){var l=1;for(u=h(t,c,t.length,e),c=0;c<o;c++)l*=e;this.imuln(l),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u)}this.strip()},s.prototype.copy=function(t){t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];t.length=this.length,t.negative=this.negative,t.red=this.red},s.prototype.clone=function(){var t=new s(null);return this.copy(t),t},s.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},s.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},s.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},s.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var c=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],l=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],d=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function f(t,e,r){r.negative=e.negative^t.negative;var i=t.length+e.length|0;r.length=i,i=i-1|0;var n=0|t.words[0],s=0|e.words[0],o=n*s,a=67108863&o,u=o/67108864|0;r.words[0]=a;for(var h=1;h<i;h++){for(var c=u>>>26,l=67108863&u,d=Math.min(h,e.length-1),f=Math.max(0,h-t.length+1);f<=d;f++){var p=h-f|0;c+=(o=(n=0|t.words[p])*(s=0|e.words[f])+l)/67108864|0,l=67108863&o}r.words[h]=0|l,u=0|c}return 0!==u?r.words[h]=0|u:r.length--,r.strip()}s.prototype.toString=function(t,e){var r;if(e=0|e||1,16===(t=t||10)||"hex"===t){r="";for(var n=0,s=0,o=0;o<this.length;o++){var a=this.words[o],u=(16777215&(a<<n|s)).toString(16);r=0!=(s=a>>>24-n&16777215)||o!==this.length-1?c[6-u.length]+u+r:u+r,(n+=2)>=26&&(n-=26,o--)}for(0!==s&&(r=s.toString(16)+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}if(t===(0|t)&&t>=2&&t<=36){var h=l[t],f=d[t];r="";var p=this.clone();for(p.negative=0;!p.isZero();){var g=p.modn(f).toString(t);r=(p=p.idivn(f)).isZero()?g+r:c[h-g.length]+g+r}for(this.isZero()&&(r="0"+r);r.length%e!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}i(!1,"Base should be between 2 and 36")},s.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&i(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},s.prototype.toJSON=function(){return this.toString(16)},s.prototype.toBuffer=function(t,e){return i(void 0!==o),this.toArrayLike(o,t,e)},s.prototype.toArray=function(t,e){return this.toArrayLike(Array,t,e)},s.prototype.toArrayLike=function(t,e,r){var n=this.byteLength(),s=r||Math.max(1,n);i(n<=s,"byte array longer than desired length"),i(s>0,"Requested array length <= 0"),this.strip();var o,a,u="le"===e,h=new t(s),c=this.clone();if(u){for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[a]=o;for(;a<s;a++)h[a]=0}else{for(a=0;a<s-n;a++)h[a]=0;for(a=0;!c.isZero();a++)o=c.andln(255),c.iushrn(8),h[s-a-1]=o}return h},Math.clz32?s.prototype._countBits=function(t){return 32-Math.clz32(t)}:s.prototype._countBits=function(t){var e=t,r=0;return e>=4096&&(r+=13,e>>>=13),e>=64&&(r+=7,e>>>=7),e>=8&&(r+=4,e>>>=4),e>=2&&(r+=2,e>>>=2),r+e},s.prototype._zeroBits=function(t){if(0===t)return 26;var e=t,r=0;return 0==(8191&e)&&(r+=13,e>>>=13),0==(127&e)&&(r+=7,e>>>=7),0==(15&e)&&(r+=4,e>>>=4),0==(3&e)&&(r+=2,e>>>=2),0==(1&e)&&r++,r},s.prototype.bitLength=function(){var t=this.words[this.length-1],e=this._countBits(t);return 26*(this.length-1)+e},s.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,e=0;e<this.length;e++){var r=this._zeroBits(this.words[e]);if(t+=r,26!==r)break}return t},s.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},s.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},s.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},s.prototype.isNeg=function(){return 0!==this.negative},s.prototype.neg=function(){return this.clone().ineg()},s.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},s.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]|t.words[e];return this.strip()},s.prototype.ior=function(t){return i(0==(this.negative|t.negative)),this.iuor(t)},s.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},s.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},s.prototype.iuand=function(t){var e;e=this.length>t.length?t:this;for(var r=0;r<e.length;r++)this.words[r]=this.words[r]&t.words[r];return this.length=e.length,this.strip()},s.prototype.iand=function(t){return i(0==(this.negative|t.negative)),this.iuand(t)},s.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},s.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},s.prototype.iuxor=function(t){var e,r;this.length>t.length?(e=this,r=t):(e=t,r=this);for(var i=0;i<r.length;i++)this.words[i]=e.words[i]^r.words[i];if(this!==e)for(;i<e.length;i++)this.words[i]=e.words[i];return this.length=e.length,this.strip()},s.prototype.ixor=function(t){return i(0==(this.negative|t.negative)),this.iuxor(t)},s.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},s.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},s.prototype.inotn=function(t){i("number"==typeof t&&t>=0);var e=0|Math.ceil(t/26),r=t%26;this._expand(e),r>0&&e--;for(var n=0;n<e;n++)this.words[n]=67108863&~this.words[n];return r>0&&(this.words[n]=~this.words[n]&67108863>>26-r),this.strip()},s.prototype.notn=function(t){return this.clone().inotn(t)},s.prototype.setn=function(t,e){i("number"==typeof t&&t>=0);var r=t/26|0,n=t%26;return this._expand(r+1),this.words[r]=e?this.words[r]|1<<n:this.words[r]&~(1<<n),this.strip()},s.prototype.iadd=function(t){var e,r,i;if(0!==this.negative&&0===t.negative)return this.negative=0,e=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,e=this.isub(t),t.negative=1,e._normSign();this.length>t.length?(r=this,i=t):(r=t,i=this);for(var n=0,s=0;s<i.length;s++)e=(0|r.words[s])+(0|i.words[s])+n,this.words[s]=67108863&e,n=e>>>26;for(;0!==n&&s<r.length;s++)e=(0|r.words[s])+n,this.words[s]=67108863&e,n=e>>>26;if(this.length=r.length,0!==n)this.words[this.length]=n,this.length++;else if(r!==this)for(;s<r.length;s++)this.words[s]=r.words[s];return this},s.prototype.add=function(t){var e;return 0!==t.negative&&0===this.negative?(t.negative=0,e=this.sub(t),t.negative^=1,e):0===t.negative&&0!==this.negative?(this.negative=0,e=t.sub(this),this.negative=1,e):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},s.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var e=this.iadd(t);return t.negative=1,e._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var r,i,n=this.cmp(t);if(0===n)return this.negative=0,this.length=1,this.words[0]=0,this;n>0?(r=this,i=t):(r=t,i=this);for(var s=0,o=0;o<i.length;o++)s=(e=(0|r.words[o])-(0|i.words[o])+s)>>26,this.words[o]=67108863&e;for(;0!==s&&o<r.length;o++)s=(e=(0|r.words[o])+s)>>26,this.words[o]=67108863&e;if(0===s&&o<r.length&&r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this.length=Math.max(this.length,o),r!==this&&(this.negative=1),this.strip()},s.prototype.sub=function(t){return this.clone().isub(t)};var p=function(t,e,r){var i,n,s,o=t.words,a=e.words,u=r.words,h=0,c=0|o[0],l=8191&c,d=c>>>13,f=0|o[1],p=8191&f,g=f>>>13,m=0|o[2],y=8191&m,v=m>>>13,b=0|o[3],w=8191&b,E=b>>>13,S=0|o[4],N=8191&S,M=S>>>13,x=0|o[5],I=8191&x,A=x>>>13,P=0|o[6],T=8191&P,R=P>>>13,k=0|o[7],B=8191&k,O=k>>>13,C=0|o[8],L=8191&C,j=C>>>13,Z=0|o[9],D=8191&Z,F=Z>>>13,z=0|a[0],H=8191&z,W=z>>>13,K=0|a[1],q=8191&K,U=K>>>13,V=0|a[2],X=8191&V,G=V>>>13,Y=0|a[3],Q=8191&Y,J=Y>>>13,_=0|a[4],$=8191&_,tt=_>>>13,et=0|a[5],rt=8191&et,it=et>>>13,nt=0|a[6],st=8191&nt,ot=nt>>>13,at=0|a[7],ut=8191&at,ht=at>>>13,ct=0|a[8],lt=8191&ct,dt=ct>>>13,ft=0|a[9],pt=8191&ft,gt=ft>>>13;r.negative=t.negative^e.negative,r.length=19;var mt=(h+(i=Math.imul(l,H))|0)+((8191&(n=(n=Math.imul(l,W))+Math.imul(d,H)|0))<<13)|0;h=((s=Math.imul(d,W))+(n>>>13)|0)+(mt>>>26)|0,mt&=67108863,i=Math.imul(p,H),n=(n=Math.imul(p,W))+Math.imul(g,H)|0,s=Math.imul(g,W);var yt=(h+(i=i+Math.imul(l,q)|0)|0)+((8191&(n=(n=n+Math.imul(l,U)|0)+Math.imul(d,q)|0))<<13)|0;h=((s=s+Math.imul(d,U)|0)+(n>>>13)|0)+(yt>>>26)|0,yt&=67108863,i=Math.imul(y,H),n=(n=Math.imul(y,W))+Math.imul(v,H)|0,s=Math.imul(v,W),i=i+Math.imul(p,q)|0,n=(n=n+Math.imul(p,U)|0)+Math.imul(g,q)|0,s=s+Math.imul(g,U)|0;var vt=(h+(i=i+Math.imul(l,X)|0)|0)+((8191&(n=(n=n+Math.imul(l,G)|0)+Math.imul(d,X)|0))<<13)|0;h=((s=s+Math.imul(d,G)|0)+(n>>>13)|0)+(vt>>>26)|0,vt&=67108863,i=Math.imul(w,H),n=(n=Math.imul(w,W))+Math.imul(E,H)|0,s=Math.imul(E,W),i=i+Math.imul(y,q)|0,n=(n=n+Math.imul(y,U)|0)+Math.imul(v,q)|0,s=s+Math.imul(v,U)|0,i=i+Math.imul(p,X)|0,n=(n=n+Math.imul(p,G)|0)+Math.imul(g,X)|0,s=s+Math.imul(g,G)|0;var bt=(h+(i=i+Math.imul(l,Q)|0)|0)+((8191&(n=(n=n+Math.imul(l,J)|0)+Math.imul(d,Q)|0))<<13)|0;h=((s=s+Math.imul(d,J)|0)+(n>>>13)|0)+(bt>>>26)|0,bt&=67108863,i=Math.imul(N,H),n=(n=Math.imul(N,W))+Math.imul(M,H)|0,s=Math.imul(M,W),i=i+Math.imul(w,q)|0,n=(n=n+Math.imul(w,U)|0)+Math.imul(E,q)|0,s=s+Math.imul(E,U)|0,i=i+Math.imul(y,X)|0,n=(n=n+Math.imul(y,G)|0)+Math.imul(v,X)|0,s=s+Math.imul(v,G)|0,i=i+Math.imul(p,Q)|0,n=(n=n+Math.imul(p,J)|0)+Math.imul(g,Q)|0,s=s+Math.imul(g,J)|0;var wt=(h+(i=i+Math.imul(l,$)|0)|0)+((8191&(n=(n=n+Math.imul(l,tt)|0)+Math.imul(d,$)|0))<<13)|0;h=((s=s+Math.imul(d,tt)|0)+(n>>>13)|0)+(wt>>>26)|0,wt&=67108863,i=Math.imul(I,H),n=(n=Math.imul(I,W))+Math.imul(A,H)|0,s=Math.imul(A,W),i=i+Math.imul(N,q)|0,n=(n=n+Math.imul(N,U)|0)+Math.imul(M,q)|0,s=s+Math.imul(M,U)|0,i=i+Math.imul(w,X)|0,n=(n=n+Math.imul(w,G)|0)+Math.imul(E,X)|0,s=s+Math.imul(E,G)|0,i=i+Math.imul(y,Q)|0,n=(n=n+Math.imul(y,J)|0)+Math.imul(v,Q)|0,s=s+Math.imul(v,J)|0,i=i+Math.imul(p,$)|0,n=(n=n+Math.imul(p,tt)|0)+Math.imul(g,$)|0,s=s+Math.imul(g,tt)|0;var Et=(h+(i=i+Math.imul(l,rt)|0)|0)+((8191&(n=(n=n+Math.imul(l,it)|0)+Math.imul(d,rt)|0))<<13)|0;h=((s=s+Math.imul(d,it)|0)+(n>>>13)|0)+(Et>>>26)|0,Et&=67108863,i=Math.imul(T,H),n=(n=Math.imul(T,W))+Math.imul(R,H)|0,s=Math.imul(R,W),i=i+Math.imul(I,q)|0,n=(n=n+Math.imul(I,U)|0)+Math.imul(A,q)|0,s=s+Math.imul(A,U)|0,i=i+Math.imul(N,X)|0,n=(n=n+Math.imul(N,G)|0)+Math.imul(M,X)|0,s=s+Math.imul(M,G)|0,i=i+Math.imul(w,Q)|0,n=(n=n+Math.imul(w,J)|0)+Math.imul(E,Q)|0,s=s+Math.imul(E,J)|0,i=i+Math.imul(y,$)|0,n=(n=n+Math.imul(y,tt)|0)+Math.imul(v,$)|0,s=s+Math.imul(v,tt)|0,i=i+Math.imul(p,rt)|0,n=(n=n+Math.imul(p,it)|0)+Math.imul(g,rt)|0,s=s+Math.imul(g,it)|0;var St=(h+(i=i+Math.imul(l,st)|0)|0)+((8191&(n=(n=n+Math.imul(l,ot)|0)+Math.imul(d,st)|0))<<13)|0;h=((s=s+Math.imul(d,ot)|0)+(n>>>13)|0)+(St>>>26)|0,St&=67108863,i=Math.imul(B,H),n=(n=Math.imul(B,W))+Math.imul(O,H)|0,s=Math.imul(O,W),i=i+Math.imul(T,q)|0,n=(n=n+Math.imul(T,U)|0)+Math.imul(R,q)|0,s=s+Math.imul(R,U)|0,i=i+Math.imul(I,X)|0,n=(n=n+Math.imul(I,G)|0)+Math.imul(A,X)|0,s=s+Math.imul(A,G)|0,i=i+Math.imul(N,Q)|0,n=(n=n+Math.imul(N,J)|0)+Math.imul(M,Q)|0,s=s+Math.imul(M,J)|0,i=i+Math.imul(w,$)|0,n=(n=n+Math.imul(w,tt)|0)+Math.imul(E,$)|0,s=s+Math.imul(E,tt)|0,i=i+Math.imul(y,rt)|0,n=(n=n+Math.imul(y,it)|0)+Math.imul(v,rt)|0,s=s+Math.imul(v,it)|0,i=i+Math.imul(p,st)|0,n=(n=n+Math.imul(p,ot)|0)+Math.imul(g,st)|0,s=s+Math.imul(g,ot)|0;var Nt=(h+(i=i+Math.imul(l,ut)|0)|0)+((8191&(n=(n=n+Math.imul(l,ht)|0)+Math.imul(d,ut)|0))<<13)|0;h=((s=s+Math.imul(d,ht)|0)+(n>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,i=Math.imul(L,H),n=(n=Math.imul(L,W))+Math.imul(j,H)|0,s=Math.imul(j,W),i=i+Math.imul(B,q)|0,n=(n=n+Math.imul(B,U)|0)+Math.imul(O,q)|0,s=s+Math.imul(O,U)|0,i=i+Math.imul(T,X)|0,n=(n=n+Math.imul(T,G)|0)+Math.imul(R,X)|0,s=s+Math.imul(R,G)|0,i=i+Math.imul(I,Q)|0,n=(n=n+Math.imul(I,J)|0)+Math.imul(A,Q)|0,s=s+Math.imul(A,J)|0,i=i+Math.imul(N,$)|0,n=(n=n+Math.imul(N,tt)|0)+Math.imul(M,$)|0,s=s+Math.imul(M,tt)|0,i=i+Math.imul(w,rt)|0,n=(n=n+Math.imul(w,it)|0)+Math.imul(E,rt)|0,s=s+Math.imul(E,it)|0,i=i+Math.imul(y,st)|0,n=(n=n+Math.imul(y,ot)|0)+Math.imul(v,st)|0,s=s+Math.imul(v,ot)|0,i=i+Math.imul(p,ut)|0,n=(n=n+Math.imul(p,ht)|0)+Math.imul(g,ut)|0,s=s+Math.imul(g,ht)|0;var Mt=(h+(i=i+Math.imul(l,lt)|0)|0)+((8191&(n=(n=n+Math.imul(l,dt)|0)+Math.imul(d,lt)|0))<<13)|0;h=((s=s+Math.imul(d,dt)|0)+(n>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,i=Math.imul(D,H),n=(n=Math.imul(D,W))+Math.imul(F,H)|0,s=Math.imul(F,W),i=i+Math.imul(L,q)|0,n=(n=n+Math.imul(L,U)|0)+Math.imul(j,q)|0,s=s+Math.imul(j,U)|0,i=i+Math.imul(B,X)|0,n=(n=n+Math.imul(B,G)|0)+Math.imul(O,X)|0,s=s+Math.imul(O,G)|0,i=i+Math.imul(T,Q)|0,n=(n=n+Math.imul(T,J)|0)+Math.imul(R,Q)|0,s=s+Math.imul(R,J)|0,i=i+Math.imul(I,$)|0,n=(n=n+Math.imul(I,tt)|0)+Math.imul(A,$)|0,s=s+Math.imul(A,tt)|0,i=i+Math.imul(N,rt)|0,n=(n=n+Math.imul(N,it)|0)+Math.imul(M,rt)|0,s=s+Math.imul(M,it)|0,i=i+Math.imul(w,st)|0,n=(n=n+Math.imul(w,ot)|0)+Math.imul(E,st)|0,s=s+Math.imul(E,ot)|0,i=i+Math.imul(y,ut)|0,n=(n=n+Math.imul(y,ht)|0)+Math.imul(v,ut)|0,s=s+Math.imul(v,ht)|0,i=i+Math.imul(p,lt)|0,n=(n=n+Math.imul(p,dt)|0)+Math.imul(g,lt)|0,s=s+Math.imul(g,dt)|0;var xt=(h+(i=i+Math.imul(l,pt)|0)|0)+((8191&(n=(n=n+Math.imul(l,gt)|0)+Math.imul(d,pt)|0))<<13)|0;h=((s=s+Math.imul(d,gt)|0)+(n>>>13)|0)+(xt>>>26)|0,xt&=67108863,i=Math.imul(D,q),n=(n=Math.imul(D,U))+Math.imul(F,q)|0,s=Math.imul(F,U),i=i+Math.imul(L,X)|0,n=(n=n+Math.imul(L,G)|0)+Math.imul(j,X)|0,s=s+Math.imul(j,G)|0,i=i+Math.imul(B,Q)|0,n=(n=n+Math.imul(B,J)|0)+Math.imul(O,Q)|0,s=s+Math.imul(O,J)|0,i=i+Math.imul(T,$)|0,n=(n=n+Math.imul(T,tt)|0)+Math.imul(R,$)|0,s=s+Math.imul(R,tt)|0,i=i+Math.imul(I,rt)|0,n=(n=n+Math.imul(I,it)|0)+Math.imul(A,rt)|0,s=s+Math.imul(A,it)|0,i=i+Math.imul(N,st)|0,n=(n=n+Math.imul(N,ot)|0)+Math.imul(M,st)|0,s=s+Math.imul(M,ot)|0,i=i+Math.imul(w,ut)|0,n=(n=n+Math.imul(w,ht)|0)+Math.imul(E,ut)|0,s=s+Math.imul(E,ht)|0,i=i+Math.imul(y,lt)|0,n=(n=n+Math.imul(y,dt)|0)+Math.imul(v,lt)|0,s=s+Math.imul(v,dt)|0;var It=(h+(i=i+Math.imul(p,pt)|0)|0)+((8191&(n=(n=n+Math.imul(p,gt)|0)+Math.imul(g,pt)|0))<<13)|0;h=((s=s+Math.imul(g,gt)|0)+(n>>>13)|0)+(It>>>26)|0,It&=67108863,i=Math.imul(D,X),n=(n=Math.imul(D,G))+Math.imul(F,X)|0,s=Math.imul(F,G),i=i+Math.imul(L,Q)|0,n=(n=n+Math.imul(L,J)|0)+Math.imul(j,Q)|0,s=s+Math.imul(j,J)|0,i=i+Math.imul(B,$)|0,n=(n=n+Math.imul(B,tt)|0)+Math.imul(O,$)|0,s=s+Math.imul(O,tt)|0,i=i+Math.imul(T,rt)|0,n=(n=n+Math.imul(T,it)|0)+Math.imul(R,rt)|0,s=s+Math.imul(R,it)|0,i=i+Math.imul(I,st)|0,n=(n=n+Math.imul(I,ot)|0)+Math.imul(A,st)|0,s=s+Math.imul(A,ot)|0,i=i+Math.imul(N,ut)|0,n=(n=n+Math.imul(N,ht)|0)+Math.imul(M,ut)|0,s=s+Math.imul(M,ht)|0,i=i+Math.imul(w,lt)|0,n=(n=n+Math.imul(w,dt)|0)+Math.imul(E,lt)|0,s=s+Math.imul(E,dt)|0;var At=(h+(i=i+Math.imul(y,pt)|0)|0)+((8191&(n=(n=n+Math.imul(y,gt)|0)+Math.imul(v,pt)|0))<<13)|0;h=((s=s+Math.imul(v,gt)|0)+(n>>>13)|0)+(At>>>26)|0,At&=67108863,i=Math.imul(D,Q),n=(n=Math.imul(D,J))+Math.imul(F,Q)|0,s=Math.imul(F,J),i=i+Math.imul(L,$)|0,n=(n=n+Math.imul(L,tt)|0)+Math.imul(j,$)|0,s=s+Math.imul(j,tt)|0,i=i+Math.imul(B,rt)|0,n=(n=n+Math.imul(B,it)|0)+Math.imul(O,rt)|0,s=s+Math.imul(O,it)|0,i=i+Math.imul(T,st)|0,n=(n=n+Math.imul(T,ot)|0)+Math.imul(R,st)|0,s=s+Math.imul(R,ot)|0,i=i+Math.imul(I,ut)|0,n=(n=n+Math.imul(I,ht)|0)+Math.imul(A,ut)|0,s=s+Math.imul(A,ht)|0,i=i+Math.imul(N,lt)|0,n=(n=n+Math.imul(N,dt)|0)+Math.imul(M,lt)|0,s=s+Math.imul(M,dt)|0;var Pt=(h+(i=i+Math.imul(w,pt)|0)|0)+((8191&(n=(n=n+Math.imul(w,gt)|0)+Math.imul(E,pt)|0))<<13)|0;h=((s=s+Math.imul(E,gt)|0)+(n>>>13)|0)+(Pt>>>26)|0,Pt&=67108863,i=Math.imul(D,$),n=(n=Math.imul(D,tt))+Math.imul(F,$)|0,s=Math.imul(F,tt),i=i+Math.imul(L,rt)|0,n=(n=n+Math.imul(L,it)|0)+Math.imul(j,rt)|0,s=s+Math.imul(j,it)|0,i=i+Math.imul(B,st)|0,n=(n=n+Math.imul(B,ot)|0)+Math.imul(O,st)|0,s=s+Math.imul(O,ot)|0,i=i+Math.imul(T,ut)|0,n=(n=n+Math.imul(T,ht)|0)+Math.imul(R,ut)|0,s=s+Math.imul(R,ht)|0,i=i+Math.imul(I,lt)|0,n=(n=n+Math.imul(I,dt)|0)+Math.imul(A,lt)|0,s=s+Math.imul(A,dt)|0;var Tt=(h+(i=i+Math.imul(N,pt)|0)|0)+((8191&(n=(n=n+Math.imul(N,gt)|0)+Math.imul(M,pt)|0))<<13)|0;h=((s=s+Math.imul(M,gt)|0)+(n>>>13)|0)+(Tt>>>26)|0,Tt&=67108863,i=Math.imul(D,rt),n=(n=Math.imul(D,it))+Math.imul(F,rt)|0,s=Math.imul(F,it),i=i+Math.imul(L,st)|0,n=(n=n+Math.imul(L,ot)|0)+Math.imul(j,st)|0,s=s+Math.imul(j,ot)|0,i=i+Math.imul(B,ut)|0,n=(n=n+Math.imul(B,ht)|0)+Math.imul(O,ut)|0,s=s+Math.imul(O,ht)|0,i=i+Math.imul(T,lt)|0,n=(n=n+Math.imul(T,dt)|0)+Math.imul(R,lt)|0,s=s+Math.imul(R,dt)|0;var Rt=(h+(i=i+Math.imul(I,pt)|0)|0)+((8191&(n=(n=n+Math.imul(I,gt)|0)+Math.imul(A,pt)|0))<<13)|0;h=((s=s+Math.imul(A,gt)|0)+(n>>>13)|0)+(Rt>>>26)|0,Rt&=67108863,i=Math.imul(D,st),n=(n=Math.imul(D,ot))+Math.imul(F,st)|0,s=Math.imul(F,ot),i=i+Math.imul(L,ut)|0,n=(n=n+Math.imul(L,ht)|0)+Math.imul(j,ut)|0,s=s+Math.imul(j,ht)|0,i=i+Math.imul(B,lt)|0,n=(n=n+Math.imul(B,dt)|0)+Math.imul(O,lt)|0,s=s+Math.imul(O,dt)|0;var kt=(h+(i=i+Math.imul(T,pt)|0)|0)+((8191&(n=(n=n+Math.imul(T,gt)|0)+Math.imul(R,pt)|0))<<13)|0;h=((s=s+Math.imul(R,gt)|0)+(n>>>13)|0)+(kt>>>26)|0,kt&=67108863,i=Math.imul(D,ut),n=(n=Math.imul(D,ht))+Math.imul(F,ut)|0,s=Math.imul(F,ht),i=i+Math.imul(L,lt)|0,n=(n=n+Math.imul(L,dt)|0)+Math.imul(j,lt)|0,s=s+Math.imul(j,dt)|0;var Bt=(h+(i=i+Math.imul(B,pt)|0)|0)+((8191&(n=(n=n+Math.imul(B,gt)|0)+Math.imul(O,pt)|0))<<13)|0;h=((s=s+Math.imul(O,gt)|0)+(n>>>13)|0)+(Bt>>>26)|0,Bt&=67108863,i=Math.imul(D,lt),n=(n=Math.imul(D,dt))+Math.imul(F,lt)|0,s=Math.imul(F,dt);var Ot=(h+(i=i+Math.imul(L,pt)|0)|0)+((8191&(n=(n=n+Math.imul(L,gt)|0)+Math.imul(j,pt)|0))<<13)|0;h=((s=s+Math.imul(j,gt)|0)+(n>>>13)|0)+(Ot>>>26)|0,Ot&=67108863;var Ct=(h+(i=Math.imul(D,pt))|0)+((8191&(n=(n=Math.imul(D,gt))+Math.imul(F,pt)|0))<<13)|0;return h=((s=Math.imul(F,gt))+(n>>>13)|0)+(Ct>>>26)|0,Ct&=67108863,u[0]=mt,u[1]=yt,u[2]=vt,u[3]=bt,u[4]=wt,u[5]=Et,u[6]=St,u[7]=Nt,u[8]=Mt,u[9]=xt,u[10]=It,u[11]=At,u[12]=Pt,u[13]=Tt,u[14]=Rt,u[15]=kt,u[16]=Bt,u[17]=Ot,u[18]=Ct,0!==h&&(u[19]=h,r.length++),r};function g(t,e,r){return(new m).mulp(t,e,r)}function m(t,e){this.x=t,this.y=e}Math.imul||(p=f),s.prototype.mulTo=function(t,e){var r,i=this.length+t.length;return r=10===this.length&&10===t.length?p(this,t,e):i<63?f(this,t,e):i<1024?function(t,e,r){r.negative=e.negative^t.negative,r.length=t.length+e.length;for(var i=0,n=0,s=0;s<r.length-1;s++){var o=n;n=0;for(var a=67108863&i,u=Math.min(s,e.length-1),h=Math.max(0,s-t.length+1);h<=u;h++){var c=s-h,l=(0|t.words[c])*(0|e.words[h]),d=67108863&l;a=67108863&(d=d+a|0),n+=(o=(o=o+(l/67108864|0)|0)+(d>>>26)|0)>>>26,o&=67108863}r.words[s]=a,i=o,o=n}return 0!==i?r.words[s]=i:r.length--,r.strip()}(this,t,e):g(this,t,e),r},m.prototype.makeRBT=function(t){for(var e=new Array(t),r=s.prototype._countBits(t)-1,i=0;i<t;i++)e[i]=this.revBin(i,r,t);return e},m.prototype.revBin=function(t,e,r){if(0===t||t===r-1)return t;for(var i=0,n=0;n<e;n++)i|=(1&t)<<e-n-1,t>>=1;return i},m.prototype.permute=function(t,e,r,i,n,s){for(var o=0;o<s;o++)i[o]=e[t[o]],n[o]=r[t[o]]},m.prototype.transform=function(t,e,r,i,n,s){this.permute(s,t,e,r,i,n);for(var o=1;o<n;o<<=1)for(var a=o<<1,u=Math.cos(2*Math.PI/a),h=Math.sin(2*Math.PI/a),c=0;c<n;c+=a)for(var l=u,d=h,f=0;f<o;f++){var p=r[c+f],g=i[c+f],m=r[c+f+o],y=i[c+f+o],v=l*m-d*y;y=l*y+d*m,m=v,r[c+f]=p+m,i[c+f]=g+y,r[c+f+o]=p-m,i[c+f+o]=g-y,f!==a&&(v=u*l-h*d,d=u*d+h*l,l=v)}},m.prototype.guessLen13b=function(t,e){var r=1|Math.max(e,t),i=1&r,n=0;for(r=r/2|0;r;r>>>=1)n++;return 1<<n+1+i},m.prototype.conjugate=function(t,e,r){if(!(r<=1))for(var i=0;i<r/2;i++){var n=t[i];t[i]=t[r-i-1],t[r-i-1]=n,n=e[i],e[i]=-e[r-i-1],e[r-i-1]=-n}},m.prototype.normalize13b=function(t,e){for(var r=0,i=0;i<e/2;i++){var n=8192*Math.round(t[2*i+1]/e)+Math.round(t[2*i]/e)+r;t[i]=67108863&n,r=n<67108864?0:n/67108864|0}return t},m.prototype.convert13b=function(t,e,r,n){for(var s=0,o=0;o<e;o++)s+=0|t[o],r[2*o]=8191&s,s>>>=13,r[2*o+1]=8191&s,s>>>=13;for(o=2*e;o<n;++o)r[o]=0;i(0===s),i(0==(-8192&s))},m.prototype.stub=function(t){for(var e=new Array(t),r=0;r<t;r++)e[r]=0;return e},m.prototype.mulp=function(t,e,r){var i=2*this.guessLen13b(t.length,e.length),n=this.makeRBT(i),s=this.stub(i),o=new Array(i),a=new Array(i),u=new Array(i),h=new Array(i),c=new Array(i),l=new Array(i),d=r.words;d.length=i,this.convert13b(t.words,t.length,o,i),this.convert13b(e.words,e.length,h,i),this.transform(o,s,a,u,i,n),this.transform(h,s,c,l,i,n);for(var f=0;f<i;f++){var p=a[f]*c[f]-u[f]*l[f];u[f]=a[f]*l[f]+u[f]*c[f],a[f]=p}return this.conjugate(a,u,i),this.transform(a,u,d,s,i,n),this.conjugate(d,s,i),this.normalize13b(d,i),r.negative=t.negative^e.negative,r.length=t.length+e.length,r.strip()},s.prototype.mul=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),this.mulTo(t,e)},s.prototype.mulf=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),g(this,t,e)},s.prototype.imul=function(t){return this.clone().mulTo(t,this)},s.prototype.imuln=function(t){i("number"==typeof t),i(t<67108864);for(var e=0,r=0;r<this.length;r++){var n=(0|this.words[r])*t,s=(67108863&n)+(67108863&e);e>>=26,e+=n/67108864|0,e+=s>>>26,this.words[r]=67108863&s}return 0!==e&&(this.words[r]=e,this.length++),this},s.prototype.muln=function(t){return this.clone().imuln(t)},s.prototype.sqr=function(){return this.mul(this)},s.prototype.isqr=function(){return this.imul(this.clone())},s.prototype.pow=function(t){var e=function(t){for(var e=new Array(t.bitLength()),r=0;r<e.length;r++){var i=r/26|0,n=r%26;e[r]=(t.words[i]&1<<n)>>>n}return e}(t);if(0===e.length)return new s(1);for(var r=this,i=0;i<e.length&&0===e[i];i++,r=r.sqr());if(++i<e.length)for(var n=r.sqr();i<e.length;i++,n=n.sqr())0!==e[i]&&(r=r.mul(n));return r},s.prototype.iushln=function(t){i("number"==typeof t&&t>=0);var e,r=t%26,n=(t-r)/26,s=67108863>>>26-r<<26-r;if(0!==r){var o=0;for(e=0;e<this.length;e++){var a=this.words[e]&s,u=(0|this.words[e])-a<<r;this.words[e]=u|o,o=a>>>26-r}o&&(this.words[e]=o,this.length++)}if(0!==n){for(e=this.length-1;e>=0;e--)this.words[e+n]=this.words[e];for(e=0;e<n;e++)this.words[e]=0;this.length+=n}return this.strip()},s.prototype.ishln=function(t){return i(0===this.negative),this.iushln(t)},s.prototype.iushrn=function(t,e,r){var n;i("number"==typeof t&&t>=0),n=e?(e-e%26)/26:0;var s=t%26,o=Math.min((t-s)/26,this.length),a=67108863^67108863>>>s<<s,u=r;if(n-=o,n=Math.max(0,n),u){for(var h=0;h<o;h++)u.words[h]=this.words[h];u.length=o}if(0===o);else if(this.length>o)for(this.length-=o,h=0;h<this.length;h++)this.words[h]=this.words[h+o];else this.words[0]=0,this.length=1;var c=0;for(h=this.length-1;h>=0&&(0!==c||h>=n);h--){var l=0|this.words[h];this.words[h]=c<<26-s|l>>>s,c=l&a}return u&&0!==c&&(u.words[u.length++]=c),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},s.prototype.ishrn=function(t,e,r){return i(0===this.negative),this.iushrn(t,e,r)},s.prototype.shln=function(t){return this.clone().ishln(t)},s.prototype.ushln=function(t){return this.clone().iushln(t)},s.prototype.shrn=function(t){return this.clone().ishrn(t)},s.prototype.ushrn=function(t){return this.clone().iushrn(t)},s.prototype.testn=function(t){i("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26,n=1<<e;return!(this.length<=r||!(this.words[r]&n))},s.prototype.imaskn=function(t){i("number"==typeof t&&t>=0);var e=t%26,r=(t-e)/26;if(i(0===this.negative,"imaskn works only with positive numbers"),this.length<=r)return this;if(0!==e&&r++,this.length=Math.min(r,this.length),0!==e){var n=67108863^67108863>>>e<<e;this.words[this.length-1]&=n}return this.strip()},s.prototype.maskn=function(t){return this.clone().imaskn(t)},s.prototype.iaddn=function(t){return i("number"==typeof t),i(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},s.prototype._iaddn=function(t){this.words[0]+=t;for(var e=0;e<this.length&&this.words[e]>=67108864;e++)this.words[e]-=67108864,e===this.length-1?this.words[e+1]=1:this.words[e+1]++;return this.length=Math.max(this.length,e+1),this},s.prototype.isubn=function(t){if(i("number"==typeof t),i(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var e=0;e<this.length&&this.words[e]<0;e++)this.words[e]+=67108864,this.words[e+1]-=1;return this.strip()},s.prototype.addn=function(t){return this.clone().iaddn(t)},s.prototype.subn=function(t){return this.clone().isubn(t)},s.prototype.iabs=function(){return this.negative=0,this},s.prototype.abs=function(){return this.clone().iabs()},s.prototype._ishlnsubmul=function(t,e,r){var n,s,o=t.length+r;this._expand(o);var a=0;for(n=0;n<t.length;n++){s=(0|this.words[n+r])+a;var u=(0|t.words[n])*e;a=((s-=67108863&u)>>26)-(u/67108864|0),this.words[n+r]=67108863&s}for(;n<this.length-r;n++)a=(s=(0|this.words[n+r])+a)>>26,this.words[n+r]=67108863&s;if(0===a)return this.strip();for(i(-1===a),a=0,n=0;n<this.length;n++)a=(s=-(0|this.words[n])+a)>>26,this.words[n]=67108863&s;return this.negative=1,this.strip()},s.prototype._wordDiv=function(t,e){var r=(this.length,t.length),i=this.clone(),n=t,o=0|n.words[n.length-1];0!=(r=26-this._countBits(o))&&(n=n.ushln(r),i.iushln(r),o=0|n.words[n.length-1]);var a,u=i.length-n.length;if("mod"!==e){(a=new s(null)).length=u+1,a.words=new Array(a.length);for(var h=0;h<a.length;h++)a.words[h]=0}var c=i.clone()._ishlnsubmul(n,1,u);0===c.negative&&(i=c,a&&(a.words[u]=1));for(var l=u-1;l>=0;l--){var d=67108864*(0|i.words[n.length+l])+(0|i.words[n.length+l-1]);for(d=Math.min(d/o|0,67108863),i._ishlnsubmul(n,d,l);0!==i.negative;)d--,i.negative=0,i._ishlnsubmul(n,1,l),i.isZero()||(i.negative^=1);a&&(a.words[l]=d)}return a&&a.strip(),i.strip(),"div"!==e&&0!==r&&i.iushrn(r),{div:a||null,mod:i}},s.prototype.divmod=function(t,e,r){return i(!t.isZero()),this.isZero()?{div:new s(0),mod:new s(0)}:0!==this.negative&&0===t.negative?(a=this.neg().divmod(t,e),"mod"!==e&&(n=a.div.neg()),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.iadd(t)),{div:n,mod:o}):0===this.negative&&0!==t.negative?(a=this.divmod(t.neg(),e),"mod"!==e&&(n=a.div.neg()),{div:n,mod:a.mod}):0!=(this.negative&t.negative)?(a=this.neg().divmod(t.neg(),e),"div"!==e&&(o=a.mod.neg(),r&&0!==o.negative&&o.isub(t)),{div:a.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new s(0),mod:this}:1===t.length?"div"===e?{div:this.divn(t.words[0]),mod:null}:"mod"===e?{div:null,mod:new s(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new s(this.modn(t.words[0]))}:this._wordDiv(t,e);var n,o,a},s.prototype.div=function(t){return this.divmod(t,"div",!1).div},s.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},s.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},s.prototype.divRound=function(t){var e=this.divmod(t);if(e.mod.isZero())return e.div;var r=0!==e.div.negative?e.mod.isub(t):e.mod,i=t.ushrn(1),n=t.andln(1),s=r.cmp(i);return s<0||1===n&&0===s?e.div:0!==e.div.negative?e.div.isubn(1):e.div.iaddn(1)},s.prototype.modn=function(t){i(t<=67108863);for(var e=(1<<26)%t,r=0,n=this.length-1;n>=0;n--)r=(e*r+(0|this.words[n]))%t;return r},s.prototype.idivn=function(t){i(t<=67108863);for(var e=0,r=this.length-1;r>=0;r--){var n=(0|this.words[r])+67108864*e;this.words[r]=n/t|0,e=n%t}return this.strip()},s.prototype.divn=function(t){return this.clone().idivn(t)},s.prototype.egcd=function(t){i(0===t.negative),i(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var n=new s(1),o=new s(0),a=new s(0),u=new s(1),h=0;e.isEven()&&r.isEven();)e.iushrn(1),r.iushrn(1),++h;for(var c=r.clone(),l=e.clone();!e.isZero();){for(var d=0,f=1;0==(e.words[0]&f)&&d<26;++d,f<<=1);if(d>0)for(e.iushrn(d);d-- >0;)(n.isOdd()||o.isOdd())&&(n.iadd(c),o.isub(l)),n.iushrn(1),o.iushrn(1);for(var p=0,g=1;0==(r.words[0]&g)&&p<26;++p,g<<=1);if(p>0)for(r.iushrn(p);p-- >0;)(a.isOdd()||u.isOdd())&&(a.iadd(c),u.isub(l)),a.iushrn(1),u.iushrn(1);e.cmp(r)>=0?(e.isub(r),n.isub(a),o.isub(u)):(r.isub(e),a.isub(n),u.isub(o))}return{a,b:u,gcd:r.iushln(h)}},s.prototype._invmp=function(t){i(0===t.negative),i(!t.isZero());var e=this,r=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var n,o=new s(1),a=new s(0),u=r.clone();e.cmpn(1)>0&&r.cmpn(1)>0;){for(var h=0,c=1;0==(e.words[0]&c)&&h<26;++h,c<<=1);if(h>0)for(e.iushrn(h);h-- >0;)o.isOdd()&&o.iadd(u),o.iushrn(1);for(var l=0,d=1;0==(r.words[0]&d)&&l<26;++l,d<<=1);if(l>0)for(r.iushrn(l);l-- >0;)a.isOdd()&&a.iadd(u),a.iushrn(1);e.cmp(r)>=0?(e.isub(r),o.isub(a)):(r.isub(e),a.isub(o))}return(n=0===e.cmpn(1)?o:a).cmpn(0)<0&&n.iadd(t),n},s.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var e=this.clone(),r=t.clone();e.negative=0,r.negative=0;for(var i=0;e.isEven()&&r.isEven();i++)e.iushrn(1),r.iushrn(1);for(;;){for(;e.isEven();)e.iushrn(1);for(;r.isEven();)r.iushrn(1);var n=e.cmp(r);if(n<0){var s=e;e=r,r=s}else if(0===n||0===r.cmpn(1))break;e.isub(r)}return r.iushln(i)},s.prototype.invm=function(t){return this.egcd(t).a.umod(t)},s.prototype.isEven=function(){return 0==(1&this.words[0])},s.prototype.isOdd=function(){return 1==(1&this.words[0])},s.prototype.andln=function(t){return this.words[0]&t},s.prototype.bincn=function(t){i("number"==typeof t);var e=t%26,r=(t-e)/26,n=1<<e;if(this.length<=r)return this._expand(r+1),this.words[r]|=n,this;for(var s=n,o=r;0!==s&&o<this.length;o++){var a=0|this.words[o];s=(a+=s)>>>26,a&=67108863,this.words[o]=a}return 0!==s&&(this.words[o]=s,this.length++),this},s.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},s.prototype.cmpn=function(t){var e,r=t<0;if(0!==this.negative&&!r)return-1;if(0===this.negative&&r)return 1;if(this.strip(),this.length>1)e=1;else{r&&(t=-t),i(t<=67108863,"Number is too big");var n=0|this.words[0];e=n===t?0:n<t?-1:1}return 0!==this.negative?0|-e:e},s.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var e=this.ucmp(t);return 0!==this.negative?0|-e:e},s.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var e=0,r=this.length-1;r>=0;r--){var i=0|this.words[r],n=0|t.words[r];if(i!==n){i<n?e=-1:i>n&&(e=1);break}}return e},s.prototype.gtn=function(t){return 1===this.cmpn(t)},s.prototype.gt=function(t){return 1===this.cmp(t)},s.prototype.gten=function(t){return this.cmpn(t)>=0},s.prototype.gte=function(t){return this.cmp(t)>=0},s.prototype.ltn=function(t){return-1===this.cmpn(t)},s.prototype.lt=function(t){return-1===this.cmp(t)},s.prototype.lten=function(t){return this.cmpn(t)<=0},s.prototype.lte=function(t){return this.cmp(t)<=0},s.prototype.eqn=function(t){return 0===this.cmpn(t)},s.prototype.eq=function(t){return 0===this.cmp(t)},s.red=function(t){return new N(t)},s.prototype.toRed=function(t){return i(!this.red,"Already a number in reduction context"),i(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},s.prototype.fromRed=function(){return i(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},s.prototype._forceRed=function(t){return this.red=t,this},s.prototype.forceRed=function(t){return i(!this.red,"Already a number in reduction context"),this._forceRed(t)},s.prototype.redAdd=function(t){return i(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},s.prototype.redIAdd=function(t){return i(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},s.prototype.redSub=function(t){return i(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},s.prototype.redISub=function(t){return i(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},s.prototype.redShl=function(t){return i(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},s.prototype.redMul=function(t){return i(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},s.prototype.redIMul=function(t){return i(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},s.prototype.redSqr=function(){return i(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},s.prototype.redISqr=function(){return i(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},s.prototype.redSqrt=function(){return i(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},s.prototype.redInvm=function(){return i(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},s.prototype.redNeg=function(){return i(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},s.prototype.redPow=function(t){return i(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var y={k256:null,p224:null,p192:null,p25519:null};function v(t,e){this.name=t,this.p=new s(e,16),this.n=this.p.bitLength(),this.k=new s(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function b(){v.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function w(){v.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function E(){v.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function S(){v.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function N(t){if("string"==typeof t){var e=s._prime(t);this.m=e.p,this.prime=e}else i(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function M(t){N.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new s(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}v.prototype._tmp=function(){var t=new s(null);return t.words=new Array(Math.ceil(this.n/13)),t},v.prototype.ireduce=function(t){var e,r=t;do{this.split(r,this.tmp),e=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(e>this.n);var i=e<this.n?-1:r.ucmp(this.p);return 0===i?(r.words[0]=0,r.length=1):i>0?r.isub(this.p):void 0!==r.strip?r.strip():r._strip(),r},v.prototype.split=function(t,e){t.iushrn(this.n,0,e)},v.prototype.imulK=function(t){return t.imul(this.k)},n(b,v),b.prototype.split=function(t,e){for(var r=4194303,i=Math.min(t.length,9),n=0;n<i;n++)e.words[n]=t.words[n];if(e.length=i,t.length<=9)return t.words[0]=0,void(t.length=1);var s=t.words[9];for(e.words[e.length++]=s&r,n=10;n<t.length;n++){var o=0|t.words[n];t.words[n-10]=(o&r)<<4|s>>>22,s=o}s>>>=22,t.words[n-10]=s,0===s&&t.length>10?t.length-=10:t.length-=9},b.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var e=0,r=0;r<t.length;r++){var i=0|t.words[r];e+=977*i,t.words[r]=67108863&e,e=64*i+(e/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},n(w,v),n(E,v),n(S,v),S.prototype.imulK=function(t){for(var e=0,r=0;r<t.length;r++){var i=19*(0|t.words[r])+e,n=67108863&i;i>>>=26,t.words[r]=n,e=i}return 0!==e&&(t.words[t.length++]=e),t},s._prime=function(t){if(y[t])return y[t];var e;if("k256"===t)e=new b;else if("p224"===t)e=new w;else if("p192"===t)e=new E;else{if("p25519"!==t)throw new Error("Unknown prime "+t);e=new S}return y[t]=e,e},N.prototype._verify1=function(t){i(0===t.negative,"red works only with positives"),i(t.red,"red works only with red numbers")},N.prototype._verify2=function(t,e){i(0==(t.negative|e.negative),"red works only with positives"),i(t.red&&t.red===e.red,"red works only with red numbers")},N.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},N.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},N.prototype.add=function(t,e){this._verify2(t,e);var r=t.add(e);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},N.prototype.iadd=function(t,e){this._verify2(t,e);var r=t.iadd(e);return r.cmp(this.m)>=0&&r.isub(this.m),r},N.prototype.sub=function(t,e){this._verify2(t,e);var r=t.sub(e);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},N.prototype.isub=function(t,e){this._verify2(t,e);var r=t.isub(e);return r.cmpn(0)<0&&r.iadd(this.m),r},N.prototype.shl=function(t,e){return this._verify1(t),this.imod(t.ushln(e))},N.prototype.imul=function(t,e){return this._verify2(t,e),this.imod(t.imul(e))},N.prototype.mul=function(t,e){return this._verify2(t,e),this.imod(t.mul(e))},N.prototype.isqr=function(t){return this.imul(t,t.clone())},N.prototype.sqr=function(t){return this.mul(t,t)},N.prototype.sqrt=function(t){if(t.isZero())return t.clone();var e=this.m.andln(3);if(i(e%2==1),3===e){var r=this.m.add(new s(1)).iushrn(2);return this.pow(t,r)}for(var n=this.m.subn(1),o=0;!n.isZero()&&0===n.andln(1);)o++,n.iushrn(1);i(!n.isZero());var a=new s(1).toRed(this),u=a.redNeg(),h=this.m.subn(1).iushrn(1),c=this.m.bitLength();for(c=new s(2*c*c).toRed(this);0!==this.pow(c,h).cmp(u);)c.redIAdd(u);for(var l=this.pow(c,n),d=this.pow(t,n.addn(1).iushrn(1)),f=this.pow(t,n),p=o;0!==f.cmp(a);){for(var g=f,m=0;0!==g.cmp(a);m++)g=g.redSqr();i(m<p);var y=this.pow(l,new s(1).iushln(p-m-1));d=d.redMul(y),l=y.redSqr(),f=f.redMul(l),p=m}return d},N.prototype.invm=function(t){var e=t._invmp(this.m);return 0!==e.negative?(e.negative=0,this.imod(e).redNeg()):this.imod(e)},N.prototype.pow=function(t,e){if(e.isZero())return new s(1).toRed(this);if(0===e.cmpn(1))return t.clone();var r=new Array(16);r[0]=new s(1).toRed(this),r[1]=t;for(var i=2;i<r.length;i++)r[i]=this.mul(r[i-1],t);var n=r[0],o=0,a=0,u=e.bitLength()%26;for(0===u&&(u=26),i=e.length-1;i>=0;i--){for(var h=e.words[i],c=u-1;c>=0;c--){var l=h>>c&1;n!==r[0]&&(n=this.sqr(n)),0!==l||0!==o?(o<<=1,o|=l,(4==++a||0===i&&0===c)&&(n=this.mul(n,r[o]),a=0,o=0)):a=0}u=26}return n},N.prototype.convertTo=function(t){var e=t.umod(this.m);return e===t?e.clone():e},N.prototype.convertFrom=function(t){var e=t.clone();return e.red=null,e},s.mont=function(t){return new M(t)},n(M,N),M.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},M.prototype.convertFrom=function(t){var e=this.imod(t.mul(this.rinv));return e.red=null,e},M.prototype.imul=function(t,e){if(t.isZero()||e.isZero())return t.words[0]=0,t.length=1,t;var r=t.imul(e),i=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=r.isub(i).iushrn(this.shift),s=n;return n.cmp(this.m)>=0?s=n.isub(this.m):n.cmpn(0)<0&&(s=n.iadd(this.m)),s._forceRed(this)},M.prototype.mul=function(t,e){if(t.isZero()||e.isZero())return new s(0)._forceRed(this);var r=t.mul(e),i=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=r.isub(i).iushrn(this.shift),o=n;return n.cmp(this.m)>=0?o=n.isub(this.m):n.cmpn(0)<0&&(o=n.iadd(this.m)),o._forceRed(this)},M.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=r.nmd(t),this)},6138:(t,e,r)=>{var i=r(980),n=r(9199),s=r(7859),o=r(2144),a=r(3663),u=r(3482),h=r(4818),c=r(9509).Buffer;t.exports=function(t,e,r){var l;l=t.padding?t.padding:r?1:4;var d,f=i(t),p=f.modulus.byteLength();if(e.length>p||new o(e).cmp(f.modulus)>=0)throw new Error("decryption error");d=r?h(new o(e),f):a(e,f);var g=c.alloc(p-d.length);if(d=c.concat([g,d],p),4===l)return function(t,e){var r=t.modulus.byteLength(),i=u("sha1").update(c.alloc(0)).digest(),o=i.length;if(0!==e[0])throw new Error("decryption error");var a=e.slice(1,o+1),h=e.slice(o+1),l=s(a,n(h,o)),d=s(h,n(l,r-o-1));if(function(t,e){t=c.from(t),e=c.from(e);var r=0,i=t.length;t.length!==e.length&&(r++,i=Math.min(t.length,e.length));for(var n=-1;++n<i;)r+=t[n]^e[n];return r}(i,d.slice(0,o)))throw new Error("decryption error");for(var f=o;0===d[f];)f++;if(1!==d[f++])throw new Error("decryption error");return d.slice(f)}(f,d);if(1===l)return function(t,e,r){for(var i=e.slice(0,2),n=2,s=0;0!==e[n++];)if(n>=e.length){s++;break}var o=e.slice(2,n-1);if(("0002"!==i.toString("hex")&&!r||"0001"!==i.toString("hex")&&r)&&s++,o.length<8&&s++,s)throw new Error("decryption error");return e.slice(n)}(0,d,r);if(3===l)return d;throw new Error("unknown padding")}},6559:(t,e,r)=>{var i=r(980),n=r(1798),s=r(3482),o=r(9199),a=r(7859),u=r(2144),h=r(4818),c=r(3663),l=r(9509).Buffer;t.exports=function(t,e,r){var d;d=t.padding?t.padding:r?1:4;var f,p=i(t);if(4===d)f=function(t,e){var r=t.modulus.byteLength(),i=e.length,h=s("sha1").update(l.alloc(0)).digest(),c=h.length,d=2*c;if(i>r-d-2)throw new Error("message too long");var f=l.alloc(r-i-d-2),p=r-c-1,g=n(c),m=a(l.concat([h,f,l.alloc(1,1),e],p),o(g,p)),y=a(g,o(m,c));return new u(l.concat([l.alloc(1),y,m],r))}(p,e);else if(1===d)f=function(t,e,r){var i,s=e.length,o=t.modulus.byteLength();if(s>o-11)throw new Error("message too long");return i=r?l.alloc(o-s-3,255):function(t){for(var e,r=l.allocUnsafe(t),i=0,s=n(2*t),o=0;i<t;)o===s.length&&(s=n(2*t),o=0),(e=s[o++])&&(r[i++]=e);return r}(o-s-3),new u(l.concat([l.from([0,r?1:2]),i,l.alloc(1),e],o))}(p,e,r);else{if(3!==d)throw new Error("unknown padding");if((f=new u(e)).cmp(p.modulus)>=0)throw new Error("data too long for modulus")}return r?c(f,p):h(f,p)}},4818:(t,e,r)=>{var i=r(2144),n=r(9509).Buffer;t.exports=function(t,e){return n.from(t.toRed(i.mont(e.modulus)).redPow(new i(e.publicExponent)).fromRed().toArray())}},7859:t=>{t.exports=function(t,e){for(var r=t.length,i=-1;++i<r;)t[i]^=e[i];return t}},1798:(t,e,r)=>{"use strict";var i=r(4155),n=65536,s=r(9509).Buffer,o=r.g.crypto||r.g.msCrypto;o&&o.getRandomValues?t.exports=function(t,e){if(t>4294967295)throw new RangeError("requested too many random bytes");var r=s.allocUnsafe(t);if(t>0)if(t>n)for(var a=0;a<t;a+=n)o.getRandomValues(r.slice(a,a+n));else o.getRandomValues(r);return"function"==typeof e?i.nextTick((function(){e(null,r)})):r}:t.exports=function(){throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11")}},7963:(t,e,r)=>{"use strict";var i=r(4155);function n(){throw new Error("secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11")}var s=r(9509),o=r(1798),a=s.Buffer,u=s.kMaxLength,h=r.g.crypto||r.g.msCrypto,c=Math.pow(2,32)-1;function l(t,e){if("number"!=typeof t||t!=t)throw new TypeError("offset must be a number");if(t>c||t<0)throw new TypeError("offset must be a uint32");if(t>u||t>e)throw new RangeError("offset out of range")}function d(t,e,r){if("number"!=typeof t||t!=t)throw new TypeError("size must be a number");if(t>c||t<0)throw new TypeError("size must be a uint32");if(t+e>r||t>u)throw new RangeError("buffer too small")}function f(t,e,r,n){if(i.browser){var s=t.buffer,a=new Uint8Array(s,e,r);return h.getRandomValues(a),n?void i.nextTick((function(){n(null,t)})):t}if(!n)return o(r).copy(t,e),t;o(r,(function(r,i){if(r)return n(r);i.copy(t,e),n(null,t)}))}h&&h.getRandomValues||!i.browser?(e.randomFill=function(t,e,i,n){if(!(a.isBuffer(t)||t instanceof r.g.Uint8Array))throw new TypeError('"buf" argument must be a Buffer or Uint8Array');if("function"==typeof e)n=e,e=0,i=t.length;else if("function"==typeof i)n=i,i=t.length-e;else if("function"!=typeof n)throw new TypeError('"cb" argument must be a function');return l(e,t.length),d(i,e,t.length),f(t,e,i,n)},e.randomFillSync=function(t,e,i){if(void 0===e&&(e=0),!(a.isBuffer(t)||t instanceof r.g.Uint8Array))throw new TypeError('"buf" argument must be a Buffer or Uint8Array');return l(e,t.length),void 0===i&&(i=t.length-e),d(i,e,t.length),f(t,e,i)}):(e.randomFill=n,e.randomFillSync=n)},4281:t=>{"use strict";var e={};function r(t,r,i){i||(i=Error);var n=function(t){var e,i;function n(e,i,n){return t.call(this,function(t,e,i){return"string"==typeof r?r:r(t,e,i)}(e,i,n))||this}return i=t,(e=n).prototype=Object.create(i.prototype),e.prototype.constructor=e,e.__proto__=i,n}(i);n.prototype.name=i.name,n.prototype.code=t,e[t]=n}function i(t,e){if(Array.isArray(t)){var r=t.length;return t=t.map((function(t){return String(t)})),r>2?"one of ".concat(e," ").concat(t.slice(0,r-1).join(", "),", or ")+t[r-1]:2===r?"one of ".concat(e," ").concat(t[0]," or ").concat(t[1]):"of ".concat(e," ").concat(t[0])}return"of ".concat(e," ").concat(String(t))}r("ERR_INVALID_OPT_VALUE",(function(t,e){return'The value "'+e+'" is invalid for option "'+t+'"'}),TypeError),r("ERR_INVALID_ARG_TYPE",(function(t,e,r){var n,s,o,a,u;if("string"==typeof e&&(s="not ",e.substr(0,4)===s)?(n="must not be",e=e.replace(/^not /,"")):n="must be",function(t,e,r){return(void 0===r||r>t.length)&&(r=t.length),t.substring(r-9,r)===e}(t," argument"))o="The ".concat(t," ").concat(n," ").concat(i(e,"type"));else{var h=("number"!=typeof u&&(u=0),u+1>(a=t).length||-1===a.indexOf(".",u)?"argument":"property");o='The "'.concat(t,'" ').concat(h," ").concat(n," ").concat(i(e,"type"))}return o+". Received type ".concat(typeof r)}),TypeError),r("ERR_STREAM_PUSH_AFTER_EOF","stream.push() after EOF"),r("ERR_METHOD_NOT_IMPLEMENTED",(function(t){return"The "+t+" method is not implemented"})),r("ERR_STREAM_PREMATURE_CLOSE","Premature close"),r("ERR_STREAM_DESTROYED",(function(t){return"Cannot call "+t+" after a stream was destroyed"})),r("ERR_MULTIPLE_CALLBACK","Callback called multiple times"),r("ERR_STREAM_CANNOT_PIPE","Cannot pipe, not readable"),r("ERR_STREAM_WRITE_AFTER_END","write after end"),r("ERR_STREAM_NULL_VALUES","May not write null values to stream",TypeError),r("ERR_UNKNOWN_ENCODING",(function(t){return"Unknown encoding: "+t}),TypeError),r("ERR_STREAM_UNSHIFT_AFTER_END_EVENT","stream.unshift() after end event"),t.exports.q=e},6753:(t,e,r)=>{"use strict";var i=r(4155),n=Object.keys||function(t){var e=[];for(var r in t)e.push(r);return e};t.exports=c;var s=r(9481),o=r(4229);r(5717)(c,s);for(var a=n(o.prototype),u=0;u<a.length;u++){var h=a[u];c.prototype[h]||(c.prototype[h]=o.prototype[h])}function c(t){if(!(this instanceof c))return new c(t);s.call(this,t),o.call(this,t),this.allowHalfOpen=!0,t&&(!1===t.readable&&(this.readable=!1),!1===t.writable&&(this.writable=!1),!1===t.allowHalfOpen&&(this.allowHalfOpen=!1,this.once("end",l)))}function l(){this._writableState.ended||i.nextTick(d,this)}function d(t){t.end()}Object.defineProperty(c.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),Object.defineProperty(c.prototype,"writableBuffer",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(c.prototype,"writableLength",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(c.prototype,"destroyed",{enumerable:!1,get:function(){return void 0!==this._readableState&&void 0!==this._writableState&&this._readableState.destroyed&&this._writableState.destroyed},set:function(t){void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed=t,this._writableState.destroyed=t)}})},2725:(t,e,r)=>{"use strict";t.exports=n;var i=r(4605);function n(t){if(!(this instanceof n))return new n(t);i.call(this,t)}r(5717)(n,i),n.prototype._transform=function(t,e,r){r(null,t)}},9481:(t,e,r)=>{"use strict";var i,n=r(4155);t.exports=x,x.ReadableState=M,r(7187).EventEmitter;var s,o=function(t,e){return t.listeners(e).length},a=r(2503),u=r(8764).Buffer,h=(void 0!==r.g?r.g:"undefined"!=typeof window?window:"undefined"!=typeof self?self:{}).Uint8Array||function(){},c=r(4616);s=c&&c.debuglog?c.debuglog("stream"):function(){};var l,d,f,p=r(7327),g=r(860),m=r(2457).getHighWaterMark,y=r(4281).q,v=y.ERR_INVALID_ARG_TYPE,b=y.ERR_STREAM_PUSH_AFTER_EOF,w=y.ERR_METHOD_NOT_IMPLEMENTED,E=y.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;r(5717)(x,a);var S=g.errorOrDestroy,N=["error","close","destroy","pause","resume"];function M(t,e,n){i=i||r(6753),t=t||{},"boolean"!=typeof n&&(n=e instanceof i),this.objectMode=!!t.objectMode,n&&(this.objectMode=this.objectMode||!!t.readableObjectMode),this.highWaterMark=m(this,t,"readableHighWaterMark",n),this.buffer=new p,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.paused=!0,this.emitClose=!1!==t.emitClose,this.autoDestroy=!!t.autoDestroy,this.destroyed=!1,this.defaultEncoding=t.defaultEncoding||"utf8",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,t.encoding&&(l||(l=r(2553).s),this.decoder=new l(t.encoding),this.encoding=t.encoding)}function x(t){if(i=i||r(6753),!(this instanceof x))return new x(t);var e=this instanceof i;this._readableState=new M(t,this,e),this.readable=!0,t&&("function"==typeof t.read&&(this._read=t.read),"function"==typeof t.destroy&&(this._destroy=t.destroy)),a.call(this)}function I(t,e,r,i,n){s("readableAddChunk",e);var o,a=t._readableState;if(null===e)a.reading=!1,function(t,e){if(s("onEofChunk"),!e.ended){if(e.decoder){var r=e.decoder.end();r&&r.length&&(e.buffer.push(r),e.length+=e.objectMode?1:r.length)}e.ended=!0,e.sync?R(t):(e.needReadable=!1,e.emittedReadable||(e.emittedReadable=!0,k(t)))}}(t,a);else if(n||(o=function(t,e){var r,i;return i=e,u.isBuffer(i)||i instanceof h||"string"==typeof e||void 0===e||t.objectMode||(r=new v("chunk",["string","Buffer","Uint8Array"],e)),r}(a,e)),o)S(t,o);else if(a.objectMode||e&&e.length>0)if("string"==typeof e||a.objectMode||Object.getPrototypeOf(e)===u.prototype||(e=function(t){return u.from(t)}(e)),i)a.endEmitted?S(t,new E):A(t,a,e,!0);else if(a.ended)S(t,new b);else{if(a.destroyed)return!1;a.reading=!1,a.decoder&&!r?(e=a.decoder.write(e),a.objectMode||0!==e.length?A(t,a,e,!1):B(t,a)):A(t,a,e,!1)}else i||(a.reading=!1,B(t,a));return!a.ended&&(a.length<a.highWaterMark||0===a.length)}function A(t,e,r,i){e.flowing&&0===e.length&&!e.sync?(e.awaitDrain=0,t.emit("data",r)):(e.length+=e.objectMode?1:r.length,i?e.buffer.unshift(r):e.buffer.push(r),e.needReadable&&R(t)),B(t,e)}Object.defineProperty(x.prototype,"destroyed",{enumerable:!1,get:function(){return void 0!==this._readableState&&this._readableState.destroyed},set:function(t){this._readableState&&(this._readableState.destroyed=t)}}),x.prototype.destroy=g.destroy,x.prototype._undestroy=g.undestroy,x.prototype._destroy=function(t,e){e(t)},x.prototype.push=function(t,e){var r,i=this._readableState;return i.objectMode?r=!0:"string"==typeof t&&((e=e||i.defaultEncoding)!==i.encoding&&(t=u.from(t,e),e=""),r=!0),I(this,t,e,!1,r)},x.prototype.unshift=function(t){return I(this,t,null,!0,!1)},x.prototype.isPaused=function(){return!1===this._readableState.flowing},x.prototype.setEncoding=function(t){l||(l=r(2553).s);var e=new l(t);this._readableState.decoder=e,this._readableState.encoding=this._readableState.decoder.encoding;for(var i=this._readableState.buffer.head,n="";null!==i;)n+=e.write(i.data),i=i.next;return this._readableState.buffer.clear(),""!==n&&this._readableState.buffer.push(n),this._readableState.length=n.length,this};var P=1073741824;function T(t,e){return t<=0||0===e.length&&e.ended?0:e.objectMode?1:t!=t?e.flowing&&e.length?e.buffer.head.data.length:e.length:(t>e.highWaterMark&&(e.highWaterMark=function(t){return t>=P?t=P:(t--,t|=t>>>1,t|=t>>>2,t|=t>>>4,t|=t>>>8,t|=t>>>16,t++),t}(t)),t<=e.length?t:e.ended?e.length:(e.needReadable=!0,0))}function R(t){var e=t._readableState;s("emitReadable",e.needReadable,e.emittedReadable),e.needReadable=!1,e.emittedReadable||(s("emitReadable",e.flowing),e.emittedReadable=!0,n.nextTick(k,t))}function k(t){var e=t._readableState;s("emitReadable_",e.destroyed,e.length,e.ended),e.destroyed||!e.length&&!e.ended||(t.emit("readable"),e.emittedReadable=!1),e.needReadable=!e.flowing&&!e.ended&&e.length<=e.highWaterMark,Z(t)}function B(t,e){e.readingMore||(e.readingMore=!0,n.nextTick(O,t,e))}function O(t,e){for(;!e.reading&&!e.ended&&(e.length<e.highWaterMark||e.flowing&&0===e.length);){var r=e.length;if(s("maybeReadMore read 0"),t.read(0),r===e.length)break}e.readingMore=!1}function C(t){var e=t._readableState;e.readableListening=t.listenerCount("readable")>0,e.resumeScheduled&&!e.paused?e.flowing=!0:t.listenerCount("data")>0&&t.resume()}function L(t){s("readable nexttick read 0"),t.read(0)}function j(t,e){s("resume",e.reading),e.reading||t.read(0),e.resumeScheduled=!1,t.emit("resume"),Z(t),e.flowing&&!e.reading&&t.read(0)}function Z(t){var e=t._readableState;for(s("flow",e.flowing);e.flowing&&null!==t.read(););}function D(t,e){return 0===e.length?null:(e.objectMode?r=e.buffer.shift():!t||t>=e.length?(r=e.decoder?e.buffer.join(""):1===e.buffer.length?e.buffer.first():e.buffer.concat(e.length),e.buffer.clear()):r=e.buffer.consume(t,e.decoder),r);var r}function F(t){var e=t._readableState;s("endReadable",e.endEmitted),e.endEmitted||(e.ended=!0,n.nextTick(z,e,t))}function z(t,e){if(s("endReadableNT",t.endEmitted,t.length),!t.endEmitted&&0===t.length&&(t.endEmitted=!0,e.readable=!1,e.emit("end"),t.autoDestroy)){var r=e._writableState;(!r||r.autoDestroy&&r.finished)&&e.destroy()}}function H(t,e){for(var r=0,i=t.length;r<i;r++)if(t[r]===e)return r;return-1}x.prototype.read=function(t){s("read",t),t=parseInt(t,10);var e=this._readableState,r=t;if(0!==t&&(e.emittedReadable=!1),0===t&&e.needReadable&&((0!==e.highWaterMark?e.length>=e.highWaterMark:e.length>0)||e.ended))return s("read: emitReadable",e.length,e.ended),0===e.length&&e.ended?F(this):R(this),null;if(0===(t=T(t,e))&&e.ended)return 0===e.length&&F(this),null;var i,n=e.needReadable;return s("need readable",n),(0===e.length||e.length-t<e.highWaterMark)&&s("length less than watermark",n=!0),e.ended||e.reading?s("reading or ended",n=!1):n&&(s("do read"),e.reading=!0,e.sync=!0,0===e.length&&(e.needReadable=!0),this._read(e.highWaterMark),e.sync=!1,e.reading||(t=T(r,e))),null===(i=t>0?D(t,e):null)?(e.needReadable=e.length<=e.highWaterMark,t=0):(e.length-=t,e.awaitDrain=0),0===e.length&&(e.ended||(e.needReadable=!0),r!==t&&e.ended&&F(this)),null!==i&&this.emit("data",i),i},x.prototype._read=function(t){S(this,new w("_read()"))},x.prototype.pipe=function(t,e){var r=this,i=this._readableState;switch(i.pipesCount){case 0:i.pipes=t;break;case 1:i.pipes=[i.pipes,t];break;default:i.pipes.push(t)}i.pipesCount+=1,s("pipe count=%d opts=%j",i.pipesCount,e);var a=e&&!1===e.end||t===n.stdout||t===n.stderr?g:u;function u(){s("onend"),t.end()}i.endEmitted?n.nextTick(a):r.once("end",a),t.on("unpipe",(function e(n,o){s("onunpipe"),n===r&&o&&!1===o.hasUnpiped&&(o.hasUnpiped=!0,s("cleanup"),t.removeListener("close",f),t.removeListener("finish",p),t.removeListener("drain",h),t.removeListener("error",d),t.removeListener("unpipe",e),r.removeListener("end",u),r.removeListener("end",g),r.removeListener("data",l),c=!0,!i.awaitDrain||t._writableState&&!t._writableState.needDrain||h())}));var h=function(t){return function(){var e=t._readableState;s("pipeOnDrain",e.awaitDrain),e.awaitDrain&&e.awaitDrain--,0===e.awaitDrain&&o(t,"data")&&(e.flowing=!0,Z(t))}}(r);t.on("drain",h);var c=!1;function l(e){s("ondata");var n=t.write(e);s("dest.write",n),!1===n&&((1===i.pipesCount&&i.pipes===t||i.pipesCount>1&&-1!==H(i.pipes,t))&&!c&&(s("false write response, pause",i.awaitDrain),i.awaitDrain++),r.pause())}function d(e){s("onerror",e),g(),t.removeListener("error",d),0===o(t,"error")&&S(t,e)}function f(){t.removeListener("finish",p),g()}function p(){s("onfinish"),t.removeListener("close",f),g()}function g(){s("unpipe"),r.unpipe(t)}return r.on("data",l),function(t,e,r){if("function"==typeof t.prependListener)return t.prependListener(e,r);t._events&&t._events[e]?Array.isArray(t._events[e])?t._events[e].unshift(r):t._events[e]=[r,t._events[e]]:t.on(e,r)}(t,"error",d),t.once("close",f),t.once("finish",p),t.emit("pipe",r),i.flowing||(s("pipe resume"),r.resume()),t},x.prototype.unpipe=function(t){var e=this._readableState,r={hasUnpiped:!1};if(0===e.pipesCount)return this;if(1===e.pipesCount)return t&&t!==e.pipes||(t||(t=e.pipes),e.pipes=null,e.pipesCount=0,e.flowing=!1,t&&t.emit("unpipe",this,r)),this;if(!t){var i=e.pipes,n=e.pipesCount;e.pipes=null,e.pipesCount=0,e.flowing=!1;for(var s=0;s<n;s++)i[s].emit("unpipe",this,{hasUnpiped:!1});return this}var o=H(e.pipes,t);return-1===o||(e.pipes.splice(o,1),e.pipesCount-=1,1===e.pipesCount&&(e.pipes=e.pipes[0]),t.emit("unpipe",this,r)),this},x.prototype.on=function(t,e){var r=a.prototype.on.call(this,t,e),i=this._readableState;return"data"===t?(i.readableListening=this.listenerCount("readable")>0,!1!==i.flowing&&this.resume()):"readable"===t&&(i.endEmitted||i.readableListening||(i.readableListening=i.needReadable=!0,i.flowing=!1,i.emittedReadable=!1,s("on readable",i.length,i.reading),i.length?R(this):i.reading||n.nextTick(L,this))),r},x.prototype.addListener=x.prototype.on,x.prototype.removeListener=function(t,e){var r=a.prototype.removeListener.call(this,t,e);return"readable"===t&&n.nextTick(C,this),r},x.prototype.removeAllListeners=function(t){var e=a.prototype.removeAllListeners.apply(this,arguments);return"readable"!==t&&void 0!==t||n.nextTick(C,this),e},x.prototype.resume=function(){var t=this._readableState;return t.flowing||(s("resume"),t.flowing=!t.readableListening,function(t,e){e.resumeScheduled||(e.resumeScheduled=!0,n.nextTick(j,t,e))}(this,t)),t.paused=!1,this},x.prototype.pause=function(){return s("call pause flowing=%j",this._readableState.flowing),!1!==this._readableState.flowing&&(s("pause"),this._readableState.flowing=!1,this.emit("pause")),this._readableState.paused=!0,this},x.prototype.wrap=function(t){var e=this,r=this._readableState,i=!1;for(var n in t.on("end",(function(){if(s("wrapped end"),r.decoder&&!r.ended){var t=r.decoder.end();t&&t.length&&e.push(t)}e.push(null)})),t.on("data",(function(n){s("wrapped data"),r.decoder&&(n=r.decoder.write(n)),r.objectMode&&null==n||(r.objectMode||n&&n.length)&&(e.push(n)||(i=!0,t.pause()))})),t)void 0===this[n]&&"function"==typeof t[n]&&(this[n]=function(e){return function(){return t[e].apply(t,arguments)}}(n));for(var o=0;o<N.length;o++)t.on(N[o],this.emit.bind(this,N[o]));return this._read=function(e){s("wrapped _read",e),i&&(i=!1,t.resume())},this},"function"==typeof Symbol&&(x.prototype[Symbol.asyncIterator]=function(){return void 0===d&&(d=r(5850)),d(this)}),Object.defineProperty(x.prototype,"readableHighWaterMark",{enumerable:!1,get:function(){return this._readableState.highWaterMark}}),Object.defineProperty(x.prototype,"readableBuffer",{enumerable:!1,get:function(){return this._readableState&&this._readableState.buffer}}),Object.defineProperty(x.prototype,"readableFlowing",{enumerable:!1,get:function(){return this._readableState.flowing},set:function(t){this._readableState&&(this._readableState.flowing=t)}}),x._fromList=D,Object.defineProperty(x.prototype,"readableLength",{enumerable:!1,get:function(){return this._readableState.length}}),"function"==typeof Symbol&&(x.from=function(t,e){return void 0===f&&(f=r(5167)),f(x,t,e)})},4605:(t,e,r)=>{"use strict";t.exports=c;var i=r(4281).q,n=i.ERR_METHOD_NOT_IMPLEMENTED,s=i.ERR_MULTIPLE_CALLBACK,o=i.ERR_TRANSFORM_ALREADY_TRANSFORMING,a=i.ERR_TRANSFORM_WITH_LENGTH_0,u=r(6753);function h(t,e){var r=this._transformState;r.transforming=!1;var i=r.writecb;if(null===i)return this.emit("error",new s);r.writechunk=null,r.writecb=null,null!=e&&this.push(e),i(t);var n=this._readableState;n.reading=!1,(n.needReadable||n.length<n.highWaterMark)&&this._read(n.highWaterMark)}function c(t){if(!(this instanceof c))return new c(t);u.call(this,t),this._transformState={afterTransform:h.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,t&&("function"==typeof t.transform&&(this._transform=t.transform),"function"==typeof t.flush&&(this._flush=t.flush)),this.on("prefinish",l)}function l(){var t=this;"function"!=typeof this._flush||this._readableState.destroyed?d(this,null,null):this._flush((function(e,r){d(t,e,r)}))}function d(t,e,r){if(e)return t.emit("error",e);if(null!=r&&t.push(r),t._writableState.length)throw new a;if(t._transformState.transforming)throw new o;return t.push(null)}r(5717)(c,u),c.prototype.push=function(t,e){return this._transformState.needTransform=!1,u.prototype.push.call(this,t,e)},c.prototype._transform=function(t,e,r){r(new n("_transform()"))},c.prototype._write=function(t,e,r){var i=this._transformState;if(i.writecb=r,i.writechunk=t,i.writeencoding=e,!i.transforming){var n=this._readableState;(i.needTransform||n.needReadable||n.length<n.highWaterMark)&&this._read(n.highWaterMark)}},c.prototype._read=function(t){var e=this._transformState;null===e.writechunk||e.transforming?e.needTransform=!0:(e.transforming=!0,this._transform(e.writechunk,e.writeencoding,e.afterTransform))},c.prototype._destroy=function(t,e){u.prototype._destroy.call(this,t,(function(t){e(t)}))}},4229:(t,e,r)=>{"use strict";var i,n=r(4155);function s(t){var e=this;this.next=null,this.entry=null,this.finish=function(){!function(t,e,r){var i=t.entry;for(t.entry=null;i;){var n=i.callback;e.pendingcb--,n(undefined),i=i.next}e.corkedRequestsFree.next=t}(e,t)}}t.exports=x,x.WritableState=M;var o,a={deprecate:r(4927)},u=r(2503),h=r(8764).Buffer,c=(void 0!==r.g?r.g:"undefined"!=typeof window?window:"undefined"!=typeof self?self:{}).Uint8Array||function(){},l=r(860),d=r(2457).getHighWaterMark,f=r(4281).q,p=f.ERR_INVALID_ARG_TYPE,g=f.ERR_METHOD_NOT_IMPLEMENTED,m=f.ERR_MULTIPLE_CALLBACK,y=f.ERR_STREAM_CANNOT_PIPE,v=f.ERR_STREAM_DESTROYED,b=f.ERR_STREAM_NULL_VALUES,w=f.ERR_STREAM_WRITE_AFTER_END,E=f.ERR_UNKNOWN_ENCODING,S=l.errorOrDestroy;function N(){}function M(t,e,o){i=i||r(6753),t=t||{},"boolean"!=typeof o&&(o=e instanceof i),this.objectMode=!!t.objectMode,o&&(this.objectMode=this.objectMode||!!t.writableObjectMode),this.highWaterMark=d(this,t,"writableHighWaterMark",o),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var a=!1===t.decodeStrings;this.decodeStrings=!a,this.defaultEncoding=t.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(t){!function(t,e){var r=t._writableState,i=r.sync,s=r.writecb;if("function"!=typeof s)throw new m;if(function(t){t.writing=!1,t.writecb=null,t.length-=t.writelen,t.writelen=0}(r),e)!function(t,e,r,i,s){--e.pendingcb,r?(n.nextTick(s,i),n.nextTick(k,t,e),t._writableState.errorEmitted=!0,S(t,i)):(s(i),t._writableState.errorEmitted=!0,S(t,i),k(t,e))}(t,r,i,e,s);else{var o=T(r)||t.destroyed;o||r.corked||r.bufferProcessing||!r.bufferedRequest||P(t,r),i?n.nextTick(A,t,r,o,s):A(t,r,o,s)}}(e,t)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.emitClose=!1!==t.emitClose,this.autoDestroy=!!t.autoDestroy,this.bufferedRequestCount=0,this.corkedRequestsFree=new s(this)}function x(t){var e=this instanceof(i=i||r(6753));if(!e&&!o.call(x,this))return new x(t);this._writableState=new M(t,this,e),this.writable=!0,t&&("function"==typeof t.write&&(this._write=t.write),"function"==typeof t.writev&&(this._writev=t.writev),"function"==typeof t.destroy&&(this._destroy=t.destroy),"function"==typeof t.final&&(this._final=t.final)),u.call(this)}function I(t,e,r,i,n,s,o){e.writelen=i,e.writecb=o,e.writing=!0,e.sync=!0,e.destroyed?e.onwrite(new v("write")):r?t._writev(n,e.onwrite):t._write(n,s,e.onwrite),e.sync=!1}function A(t,e,r,i){r||function(t,e){0===e.length&&e.needDrain&&(e.needDrain=!1,t.emit("drain"))}(t,e),e.pendingcb--,i(),k(t,e)}function P(t,e){e.bufferProcessing=!0;var r=e.bufferedRequest;if(t._writev&&r&&r.next){var i=e.bufferedRequestCount,n=new Array(i),o=e.corkedRequestsFree;o.entry=r;for(var a=0,u=!0;r;)n[a]=r,r.isBuf||(u=!1),r=r.next,a+=1;n.allBuffers=u,I(t,e,!0,e.length,n,"",o.finish),e.pendingcb++,e.lastBufferedRequest=null,o.next?(e.corkedRequestsFree=o.next,o.next=null):e.corkedRequestsFree=new s(e),e.bufferedRequestCount=0}else{for(;r;){var h=r.chunk,c=r.encoding,l=r.callback;if(I(t,e,!1,e.objectMode?1:h.length,h,c,l),r=r.next,e.bufferedRequestCount--,e.writing)break}null===r&&(e.lastBufferedRequest=null)}e.bufferedRequest=r,e.bufferProcessing=!1}function T(t){return t.ending&&0===t.length&&null===t.bufferedRequest&&!t.finished&&!t.writing}function R(t,e){t._final((function(r){e.pendingcb--,r&&S(t,r),e.prefinished=!0,t.emit("prefinish"),k(t,e)}))}function k(t,e){var r=T(e);if(r&&(function(t,e){e.prefinished||e.finalCalled||("function"!=typeof t._final||e.destroyed?(e.prefinished=!0,t.emit("prefinish")):(e.pendingcb++,e.finalCalled=!0,n.nextTick(R,t,e)))}(t,e),0===e.pendingcb&&(e.finished=!0,t.emit("finish"),e.autoDestroy))){var i=t._readableState;(!i||i.autoDestroy&&i.endEmitted)&&t.destroy()}return r}r(5717)(x,u),M.prototype.getBuffer=function(){for(var t=this.bufferedRequest,e=[];t;)e.push(t),t=t.next;return e},function(){try{Object.defineProperty(M.prototype,"buffer",{get:a.deprecate((function(){return this.getBuffer()}),"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.","DEP0003")})}catch(t){}}(),"function"==typeof Symbol&&Symbol.hasInstance&&"function"==typeof Function.prototype[Symbol.hasInstance]?(o=Function.prototype[Symbol.hasInstance],Object.defineProperty(x,Symbol.hasInstance,{value:function(t){return!!o.call(this,t)||this===x&&t&&t._writableState instanceof M}})):o=function(t){return t instanceof this},x.prototype.pipe=function(){S(this,new y)},x.prototype.write=function(t,e,r){var i,s=this._writableState,o=!1,a=!s.objectMode&&(i=t,h.isBuffer(i)||i instanceof c);return a&&!h.isBuffer(t)&&(t=function(t){return h.from(t)}(t)),"function"==typeof e&&(r=e,e=null),a?e="buffer":e||(e=s.defaultEncoding),"function"!=typeof r&&(r=N),s.ending?function(t,e){var r=new w;S(t,r),n.nextTick(e,r)}(this,r):(a||function(t,e,r,i){var s;return null===r?s=new b:"string"==typeof r||e.objectMode||(s=new p("chunk",["string","Buffer"],r)),!s||(S(t,s),n.nextTick(i,s),!1)}(this,s,t,r))&&(s.pendingcb++,o=function(t,e,r,i,n,s){if(!r){var o=function(t,e,r){return t.objectMode||!1===t.decodeStrings||"string"!=typeof e||(e=h.from(e,r)),e}(e,i,n);i!==o&&(r=!0,n="buffer",i=o)}var a=e.objectMode?1:i.length;e.length+=a;var u=e.length<e.highWaterMark;if(u||(e.needDrain=!0),e.writing||e.corked){var c=e.lastBufferedRequest;e.lastBufferedRequest={chunk:i,encoding:n,isBuf:r,callback:s,next:null},c?c.next=e.lastBufferedRequest:e.bufferedRequest=e.lastBufferedRequest,e.bufferedRequestCount+=1}else I(t,e,!1,a,i,n,s);return u}(this,s,a,t,e,r)),o},x.prototype.cork=function(){this._writableState.corked++},x.prototype.uncork=function(){var t=this._writableState;t.corked&&(t.corked--,t.writing||t.corked||t.bufferProcessing||!t.bufferedRequest||P(this,t))},x.prototype.setDefaultEncoding=function(t){if("string"==typeof t&&(t=t.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((t+"").toLowerCase())>-1))throw new E(t);return this._writableState.defaultEncoding=t,this},Object.defineProperty(x.prototype,"writableBuffer",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(x.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),x.prototype._write=function(t,e,r){r(new g("_write()"))},x.prototype._writev=null,x.prototype.end=function(t,e,r){var i=this._writableState;return"function"==typeof t?(r=t,t=null,e=null):"function"==typeof e&&(r=e,e=null),null!=t&&this.write(t,e),i.corked&&(i.corked=1,this.uncork()),i.ending||function(t,e,r){e.ending=!0,k(t,e),r&&(e.finished?n.nextTick(r):t.once("finish",r)),e.ended=!0,t.writable=!1}(this,i,r),this},Object.defineProperty(x.prototype,"writableLength",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(x.prototype,"destroyed",{enumerable:!1,get:function(){return void 0!==this._writableState&&this._writableState.destroyed},set:function(t){this._writableState&&(this._writableState.destroyed=t)}}),x.prototype.destroy=l.destroy,x.prototype._undestroy=l.undestroy,x.prototype._destroy=function(t,e){e(t)}},5850:(t,e,r)=>{"use strict";var i,n=r(4155);function s(t,e,r){return(e=function(t){var e=function(t,e){if("object"!=typeof t||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var i=r.call(t,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==typeof e?e:String(e)}(e))in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}var o=r(8610),a=Symbol("lastResolve"),u=Symbol("lastReject"),h=Symbol("error"),c=Symbol("ended"),l=Symbol("lastPromise"),d=Symbol("handlePromise"),f=Symbol("stream");function p(t,e){return{value:t,done:e}}function g(t){var e=t[a];if(null!==e){var r=t[f].read();null!==r&&(t[l]=null,t[a]=null,t[u]=null,e(p(r,!1)))}}function m(t){n.nextTick(g,t)}var y=Object.getPrototypeOf((function(){})),v=Object.setPrototypeOf((s(i={get stream(){return this[f]},next:function(){var t=this,e=this[h];if(null!==e)return Promise.reject(e);if(this[c])return Promise.resolve(p(void 0,!0));if(this[f].destroyed)return new Promise((function(e,r){n.nextTick((function(){t[h]?r(t[h]):e(p(void 0,!0))}))}));var r,i=this[l];if(i)r=new Promise(function(t,e){return function(r,i){t.then((function(){e[c]?r(p(void 0,!0)):e[d](r,i)}),i)}}(i,this));else{var s=this[f].read();if(null!==s)return Promise.resolve(p(s,!1));r=new Promise(this[d])}return this[l]=r,r}},Symbol.asyncIterator,(function(){return this})),s(i,"return",(function(){var t=this;return new Promise((function(e,r){t[f].destroy(null,(function(t){t?r(t):e(p(void 0,!0))}))}))})),i),y);t.exports=function(t){var e,r=Object.create(v,(s(e={},f,{value:t,writable:!0}),s(e,a,{value:null,writable:!0}),s(e,u,{value:null,writable:!0}),s(e,h,{value:null,writable:!0}),s(e,c,{value:t._readableState.endEmitted,writable:!0}),s(e,d,{value:function(t,e){var i=r[f].read();i?(r[l]=null,r[a]=null,r[u]=null,t(p(i,!1))):(r[a]=t,r[u]=e)},writable:!0}),e));return r[l]=null,o(t,(function(t){if(t&&"ERR_STREAM_PREMATURE_CLOSE"!==t.code){var e=r[u];return null!==e&&(r[l]=null,r[a]=null,r[u]=null,e(t)),void(r[h]=t)}var i=r[a];null!==i&&(r[l]=null,r[a]=null,r[u]=null,i(p(void 0,!0))),r[c]=!0})),t.on("readable",m.bind(null,r)),r}},7327:(t,e,r)=>{"use strict";function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,i)}return r}function n(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){s(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function s(t,e,r){return(e=a(e))in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){for(var r=0;r<e.length;r++){var i=e[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,a(i.key),i)}}function a(t){var e=function(t,e){if("object"!=typeof t||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var i=r.call(t,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==typeof e?e:String(e)}var u=r(8764).Buffer,h=r(2361).inspect,c=h&&h.custom||"inspect";t.exports=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.head=null,this.tail=null,this.length=0}var e,r;return e=t,(r=[{key:"push",value:function(t){var e={data:t,next:null};this.length>0?this.tail.next=e:this.head=e,this.tail=e,++this.length}},{key:"unshift",value:function(t){var e={data:t,next:this.head};0===this.length&&(this.tail=e),this.head=e,++this.length}},{key:"shift",value:function(){if(0!==this.length){var t=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,t}}},{key:"clear",value:function(){this.head=this.tail=null,this.length=0}},{key:"join",value:function(t){if(0===this.length)return"";for(var e=this.head,r=""+e.data;e=e.next;)r+=t+e.data;return r}},{key:"concat",value:function(t){if(0===this.length)return u.alloc(0);for(var e,r,i,n=u.allocUnsafe(t>>>0),s=this.head,o=0;s;)e=s.data,r=n,i=o,u.prototype.copy.call(e,r,i),o+=s.data.length,s=s.next;return n}},{key:"consume",value:function(t,e){var r;return t<this.head.data.length?(r=this.head.data.slice(0,t),this.head.data=this.head.data.slice(t)):r=t===this.head.data.length?this.shift():e?this._getString(t):this._getBuffer(t),r}},{key:"first",value:function(){return this.head.data}},{key:"_getString",value:function(t){var e=this.head,r=1,i=e.data;for(t-=i.length;e=e.next;){var n=e.data,s=t>n.length?n.length:t;if(s===n.length?i+=n:i+=n.slice(0,t),0==(t-=s)){s===n.length?(++r,e.next?this.head=e.next:this.head=this.tail=null):(this.head=e,e.data=n.slice(s));break}++r}return this.length-=r,i}},{key:"_getBuffer",value:function(t){var e=u.allocUnsafe(t),r=this.head,i=1;for(r.data.copy(e),t-=r.data.length;r=r.next;){var n=r.data,s=t>n.length?n.length:t;if(n.copy(e,e.length-t,0,s),0==(t-=s)){s===n.length?(++i,r.next?this.head=r.next:this.head=this.tail=null):(this.head=r,r.data=n.slice(s));break}++i}return this.length-=i,e}},{key:c,value:function(t,e){return h(this,n(n({},e),{},{depth:0,customInspect:!1}))}}])&&o(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}()},860:(t,e,r)=>{"use strict";var i=r(4155);function n(t,e){o(t,e),s(t)}function s(t){t._writableState&&!t._writableState.emitClose||t._readableState&&!t._readableState.emitClose||t.emit("close")}function o(t,e){t.emit("error",e)}t.exports={destroy:function(t,e){var r=this,a=this._readableState&&this._readableState.destroyed,u=this._writableState&&this._writableState.destroyed;return a||u?(e?e(t):t&&(this._writableState?this._writableState.errorEmitted||(this._writableState.errorEmitted=!0,i.nextTick(o,this,t)):i.nextTick(o,this,t)),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(t||null,(function(t){!e&&t?r._writableState?r._writableState.errorEmitted?i.nextTick(s,r):(r._writableState.errorEmitted=!0,i.nextTick(n,r,t)):i.nextTick(n,r,t):e?(i.nextTick(s,r),e(t)):i.nextTick(s,r)})),this)},undestroy:function(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finalCalled=!1,this._writableState.prefinished=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)},errorOrDestroy:function(t,e){var r=t._readableState,i=t._writableState;r&&r.autoDestroy||i&&i.autoDestroy?t.destroy(e):t.emit("error",e)}}},8610:(t,e,r)=>{"use strict";var i=r(4281).q.ERR_STREAM_PREMATURE_CLOSE;function n(){}t.exports=function t(e,r,s){if("function"==typeof r)return t(e,null,r);r||(r={}),s=function(t){var e=!1;return function(){if(!e){e=!0;for(var r=arguments.length,i=new Array(r),n=0;n<r;n++)i[n]=arguments[n];t.apply(this,i)}}}(s||n);var o=r.readable||!1!==r.readable&&e.readable,a=r.writable||!1!==r.writable&&e.writable,u=function(){e.writable||c()},h=e._writableState&&e._writableState.finished,c=function(){a=!1,h=!0,o||s.call(e)},l=e._readableState&&e._readableState.endEmitted,d=function(){o=!1,l=!0,a||s.call(e)},f=function(t){s.call(e,t)},p=function(){var t;return o&&!l?(e._readableState&&e._readableState.ended||(t=new i),s.call(e,t)):a&&!h?(e._writableState&&e._writableState.ended||(t=new i),s.call(e,t)):void 0},g=function(){e.req.on("finish",c)};return function(t){return t.setHeader&&"function"==typeof t.abort}(e)?(e.on("complete",c),e.on("abort",p),e.req?g():e.on("request",g)):a&&!e._writableState&&(e.on("end",u),e.on("close",u)),e.on("end",d),e.on("finish",c),!1!==r.error&&e.on("error",f),e.on("close",p),function(){e.removeListener("complete",c),e.removeListener("abort",p),e.removeListener("request",g),e.req&&e.req.removeListener("finish",c),e.removeListener("end",u),e.removeListener("close",u),e.removeListener("finish",c),e.removeListener("end",d),e.removeListener("error",f),e.removeListener("close",p)}}},5167:t=>{t.exports=function(){throw new Error("Readable.from is not available in the browser")}},9946:(t,e,r)=>{"use strict";var i,n=r(4281).q,s=n.ERR_MISSING_ARGS,o=n.ERR_STREAM_DESTROYED;function a(t){if(t)throw t}function u(t){t()}function h(t,e){return t.pipe(e)}t.exports=function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];var c,l=function(t){return t.length?"function"!=typeof t[t.length-1]?a:t.pop():a}(e);if(Array.isArray(e[0])&&(e=e[0]),e.length<2)throw new s("streams");var d=e.map((function(t,n){var s=n<e.length-1;return function(t,e,n,s){s=function(t){var e=!1;return function(){e||(e=!0,t.apply(void 0,arguments))}}(s);var a=!1;t.on("close",(function(){a=!0})),void 0===i&&(i=r(8610)),i(t,{readable:e,writable:n},(function(t){if(t)return s(t);a=!0,s()}));var u=!1;return function(e){if(!a&&!u)return u=!0,function(t){return t.setHeader&&"function"==typeof t.abort}(t)?t.abort():"function"==typeof t.destroy?t.destroy():void s(e||new o("pipe"))}}(t,s,n>0,(function(t){c||(c=t),t&&d.forEach(u),s||(d.forEach(u),l(c))}))}));return e.reduce(h)}},2457:(t,e,r)=>{"use strict";var i=r(4281).q.ERR_INVALID_OPT_VALUE;t.exports={getHighWaterMark:function(t,e,r,n){var s=function(t,e,r){return null!=t.highWaterMark?t.highWaterMark:e?t[r]:null}(e,n,r);if(null!=s){if(!isFinite(s)||Math.floor(s)!==s||s<0)throw new i(n?r:"highWaterMark",s);return Math.floor(s)}return t.objectMode?16:16384}}},2503:(t,e,r)=>{t.exports=r(7187).EventEmitter},8473:(t,e,r)=>{(e=t.exports=r(9481)).Stream=e,e.Readable=e,e.Writable=r(4229),e.Duplex=r(6753),e.Transform=r(4605),e.PassThrough=r(2725),e.finished=r(8610),e.pipeline=r(9946)},9785:(t,e,r)=>{"use strict";var i=r(8764).Buffer,n=r(5717),s=r(3349),o=new Array(16),a=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],u=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],h=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],c=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11],l=[0,1518500249,1859775393,2400959708,2840853838],d=[1352829926,1548603684,1836072691,2053994217,0];function f(){s.call(this,64),this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520}function p(t,e){return t<<e|t>>>32-e}function g(t,e,r,i,n,s,o,a){return p(t+(e^r^i)+s+o|0,a)+n|0}function m(t,e,r,i,n,s,o,a){return p(t+(e&r|~e&i)+s+o|0,a)+n|0}function y(t,e,r,i,n,s,o,a){return p(t+((e|~r)^i)+s+o|0,a)+n|0}function v(t,e,r,i,n,s,o,a){return p(t+(e&i|r&~i)+s+o|0,a)+n|0}function b(t,e,r,i,n,s,o,a){return p(t+(e^(r|~i))+s+o|0,a)+n|0}n(f,s),f.prototype._update=function(){for(var t=o,e=0;e<16;++e)t[e]=this._block.readInt32LE(4*e);for(var r=0|this._a,i=0|this._b,n=0|this._c,s=0|this._d,f=0|this._e,w=0|this._a,E=0|this._b,S=0|this._c,N=0|this._d,M=0|this._e,x=0;x<80;x+=1){var I,A;x<16?(I=g(r,i,n,s,f,t[a[x]],l[0],h[x]),A=b(w,E,S,N,M,t[u[x]],d[0],c[x])):x<32?(I=m(r,i,n,s,f,t[a[x]],l[1],h[x]),A=v(w,E,S,N,M,t[u[x]],d[1],c[x])):x<48?(I=y(r,i,n,s,f,t[a[x]],l[2],h[x]),A=y(w,E,S,N,M,t[u[x]],d[2],c[x])):x<64?(I=v(r,i,n,s,f,t[a[x]],l[3],h[x]),A=m(w,E,S,N,M,t[u[x]],d[3],c[x])):(I=b(r,i,n,s,f,t[a[x]],l[4],h[x]),A=g(w,E,S,N,M,t[u[x]],d[4],c[x])),r=f,f=s,s=p(n,10),n=i,i=I,w=M,M=N,N=p(S,10),S=E,E=A}var P=this._b+n+N|0;this._b=this._c+s+M|0,this._c=this._d+f+w|0,this._d=this._e+r+E|0,this._e=this._a+i+S|0,this._a=P},f.prototype._digest=function(){this._block[this._blockOffset++]=128,this._blockOffset>56&&(this._block.fill(0,this._blockOffset,64),this._update(),this._blockOffset=0),this._block.fill(0,this._blockOffset,56),this._block.writeUInt32LE(this._length[0],56),this._block.writeUInt32LE(this._length[1],60),this._update();var t=i.alloc?i.alloc(20):new i(20);return t.writeInt32LE(this._a,0),t.writeInt32LE(this._b,4),t.writeInt32LE(this._c,8),t.writeInt32LE(this._d,12),t.writeInt32LE(this._e,16),t},t.exports=f},9509:(t,e,r)=>{var i=r(8764),n=i.Buffer;function s(t,e){for(var r in t)e[r]=t[r]}function o(t,e,r){return n(t,e,r)}n.from&&n.alloc&&n.allocUnsafe&&n.allocUnsafeSlow?t.exports=i:(s(i,e),e.Buffer=o),o.prototype=Object.create(n.prototype),s(n,o),o.from=function(t,e,r){if("number"==typeof t)throw new TypeError("Argument must not be a number");return n(t,e,r)},o.alloc=function(t,e,r){if("number"!=typeof t)throw new TypeError("Argument must be a number");var i=n(t);return void 0!==e?"string"==typeof r?i.fill(e,r):i.fill(e):i.fill(0),i},o.allocUnsafe=function(t){if("number"!=typeof t)throw new TypeError("Argument must be a number");return n(t)},o.allocUnsafeSlow=function(t){if("number"!=typeof t)throw new TypeError("Argument must be a number");return i.SlowBuffer(t)}},2399:(t,e,r)=>{"use strict";var i,n=r(4155),s=r(8764),o=s.Buffer,a={};for(i in s)s.hasOwnProperty(i)&&"SlowBuffer"!==i&&"Buffer"!==i&&(a[i]=s[i]);var u=a.Buffer={};for(i in o)o.hasOwnProperty(i)&&"allocUnsafe"!==i&&"allocUnsafeSlow"!==i&&(u[i]=o[i]);if(a.Buffer.prototype=o.prototype,u.from&&u.from!==Uint8Array.from||(u.from=function(t,e,r){if("number"==typeof t)throw new TypeError('The "value" argument must not be of type number. Received type '+typeof t);if(t&&void 0===t.length)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t);return o(t,e,r)}),u.alloc||(u.alloc=function(t,e,r){if("number"!=typeof t)throw new TypeError('The "size" argument must be of type number. Received type '+typeof t);if(t<0||t>=2*(1<<30))throw new RangeError('The value "'+t+'" is invalid for option "size"');var i=o(t);return e&&0!==e.length?"string"==typeof r?i.fill(e,r):i.fill(e):i.fill(0),i}),!a.kStringMaxLength)try{a.kStringMaxLength=n.binding("buffer").kStringMaxLength}catch(t){}a.constants||(a.constants={MAX_LENGTH:a.kMaxLength},a.kStringMaxLength&&(a.constants.MAX_STRING_LENGTH=a.kStringMaxLength)),t.exports=a},4189:(t,e,r)=>{var i=r(9509).Buffer;function n(t,e){this._block=i.alloc(t),this._finalSize=e,this._blockSize=t,this._len=0}n.prototype.update=function(t,e){"string"==typeof t&&(e=e||"utf8",t=i.from(t,e));for(var r=this._block,n=this._blockSize,s=t.length,o=this._len,a=0;a<s;){for(var u=o%n,h=Math.min(s-a,n-u),c=0;c<h;c++)r[u+c]=t[a+c];a+=h,(o+=h)%n==0&&this._update(r)}return this._len+=s,this},n.prototype.digest=function(t){var e=this._len%this._blockSize;this._block[e]=128,this._block.fill(0,e+1),e>=this._finalSize&&(this._update(this._block),this._block.fill(0));var r=8*this._len;if(r<=4294967295)this._block.writeUInt32BE(r,this._blockSize-4);else{var i=(4294967295&r)>>>0,n=(r-i)/4294967296;this._block.writeUInt32BE(n,this._blockSize-8),this._block.writeUInt32BE(i,this._blockSize-4)}this._update(this._block);var s=this._hash();return t?s.toString(t):s},n.prototype._update=function(){throw new Error("_update must be implemented by subclass")},t.exports=n},9072:(t,e,r)=>{var i=t.exports=function(t){t=t.toLowerCase();var e=i[t];if(!e)throw new Error(t+" is not supported (we accept pull requests)");return new e};i.sha=r(4448),i.sha1=r(8336),i.sha224=r(8432),i.sha256=r(7499),i.sha384=r(1686),i.sha512=r(7816)},4448:(t,e,r)=>{var i=r(5717),n=r(4189),s=r(9509).Buffer,o=[1518500249,1859775393,-1894007588,-899497514],a=new Array(80);function u(){this.init(),this._w=a,n.call(this,64,56)}function h(t){return t<<30|t>>>2}function c(t,e,r,i){return 0===t?e&r|~e&i:2===t?e&r|e&i|r&i:e^r^i}i(u,n),u.prototype.init=function(){return this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520,this},u.prototype._update=function(t){for(var e,r=this._w,i=0|this._a,n=0|this._b,s=0|this._c,a=0|this._d,u=0|this._e,l=0;l<16;++l)r[l]=t.readInt32BE(4*l);for(;l<80;++l)r[l]=r[l-3]^r[l-8]^r[l-14]^r[l-16];for(var d=0;d<80;++d){var f=~~(d/20),p=0|((e=i)<<5|e>>>27)+c(f,n,s,a)+u+r[d]+o[f];u=a,a=s,s=h(n),n=i,i=p}this._a=i+this._a|0,this._b=n+this._b|0,this._c=s+this._c|0,this._d=a+this._d|0,this._e=u+this._e|0},u.prototype._hash=function(){var t=s.allocUnsafe(20);return t.writeInt32BE(0|this._a,0),t.writeInt32BE(0|this._b,4),t.writeInt32BE(0|this._c,8),t.writeInt32BE(0|this._d,12),t.writeInt32BE(0|this._e,16),t},t.exports=u},8336:(t,e,r)=>{var i=r(5717),n=r(4189),s=r(9509).Buffer,o=[1518500249,1859775393,-1894007588,-899497514],a=new Array(80);function u(){this.init(),this._w=a,n.call(this,64,56)}function h(t){return t<<5|t>>>27}function c(t){return t<<30|t>>>2}function l(t,e,r,i){return 0===t?e&r|~e&i:2===t?e&r|e&i|r&i:e^r^i}i(u,n),u.prototype.init=function(){return this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520,this},u.prototype._update=function(t){for(var e,r=this._w,i=0|this._a,n=0|this._b,s=0|this._c,a=0|this._d,u=0|this._e,d=0;d<16;++d)r[d]=t.readInt32BE(4*d);for(;d<80;++d)r[d]=(e=r[d-3]^r[d-8]^r[d-14]^r[d-16])<<1|e>>>31;for(var f=0;f<80;++f){var p=~~(f/20),g=h(i)+l(p,n,s,a)+u+r[f]+o[p]|0;u=a,a=s,s=c(n),n=i,i=g}this._a=i+this._a|0,this._b=n+this._b|0,this._c=s+this._c|0,this._d=a+this._d|0,this._e=u+this._e|0},u.prototype._hash=function(){var t=s.allocUnsafe(20);return t.writeInt32BE(0|this._a,0),t.writeInt32BE(0|this._b,4),t.writeInt32BE(0|this._c,8),t.writeInt32BE(0|this._d,12),t.writeInt32BE(0|this._e,16),t},t.exports=u},8432:(t,e,r)=>{var i=r(5717),n=r(7499),s=r(4189),o=r(9509).Buffer,a=new Array(64);function u(){this.init(),this._w=a,s.call(this,64,56)}i(u,n),u.prototype.init=function(){return this._a=3238371032,this._b=914150663,this._c=812702999,this._d=4144912697,this._e=4290775857,this._f=1750603025,this._g=1694076839,this._h=3204075428,this},u.prototype._hash=function(){var t=o.allocUnsafe(28);return t.writeInt32BE(this._a,0),t.writeInt32BE(this._b,4),t.writeInt32BE(this._c,8),t.writeInt32BE(this._d,12),t.writeInt32BE(this._e,16),t.writeInt32BE(this._f,20),t.writeInt32BE(this._g,24),t},t.exports=u},7499:(t,e,r)=>{var i=r(5717),n=r(4189),s=r(9509).Buffer,o=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],a=new Array(64);function u(){this.init(),this._w=a,n.call(this,64,56)}function h(t,e,r){return r^t&(e^r)}function c(t,e,r){return t&e|r&(t|e)}function l(t){return(t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10)}function d(t){return(t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7)}function f(t){return(t>>>7|t<<25)^(t>>>18|t<<14)^t>>>3}i(u,n),u.prototype.init=function(){return this._a=1779033703,this._b=3144134277,this._c=1013904242,this._d=2773480762,this._e=1359893119,this._f=2600822924,this._g=528734635,this._h=1541459225,this},u.prototype._update=function(t){for(var e,r=this._w,i=0|this._a,n=0|this._b,s=0|this._c,a=0|this._d,u=0|this._e,p=0|this._f,g=0|this._g,m=0|this._h,y=0;y<16;++y)r[y]=t.readInt32BE(4*y);for(;y<64;++y)r[y]=0|(((e=r[y-2])>>>17|e<<15)^(e>>>19|e<<13)^e>>>10)+r[y-7]+f(r[y-15])+r[y-16];for(var v=0;v<64;++v){var b=m+d(u)+h(u,p,g)+o[v]+r[v]|0,w=l(i)+c(i,n,s)|0;m=g,g=p,p=u,u=a+b|0,a=s,s=n,n=i,i=b+w|0}this._a=i+this._a|0,this._b=n+this._b|0,this._c=s+this._c|0,this._d=a+this._d|0,this._e=u+this._e|0,this._f=p+this._f|0,this._g=g+this._g|0,this._h=m+this._h|0},u.prototype._hash=function(){var t=s.allocUnsafe(32);return t.writeInt32BE(this._a,0),t.writeInt32BE(this._b,4),t.writeInt32BE(this._c,8),t.writeInt32BE(this._d,12),t.writeInt32BE(this._e,16),t.writeInt32BE(this._f,20),t.writeInt32BE(this._g,24),t.writeInt32BE(this._h,28),t},t.exports=u},1686:(t,e,r)=>{var i=r(5717),n=r(7816),s=r(4189),o=r(9509).Buffer,a=new Array(160);function u(){this.init(),this._w=a,s.call(this,128,112)}i(u,n),u.prototype.init=function(){return this._ah=3418070365,this._bh=1654270250,this._ch=2438529370,this._dh=355462360,this._eh=1731405415,this._fh=2394180231,this._gh=3675008525,this._hh=1203062813,this._al=3238371032,this._bl=914150663,this._cl=812702999,this._dl=4144912697,this._el=4290775857,this._fl=1750603025,this._gl=1694076839,this._hl=3204075428,this},u.prototype._hash=function(){var t=o.allocUnsafe(48);function e(e,r,i){t.writeInt32BE(e,i),t.writeInt32BE(r,i+4)}return e(this._ah,this._al,0),e(this._bh,this._bl,8),e(this._ch,this._cl,16),e(this._dh,this._dl,24),e(this._eh,this._el,32),e(this._fh,this._fl,40),t},t.exports=u},7816:(t,e,r)=>{var i=r(5717),n=r(4189),s=r(9509).Buffer,o=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591],a=new Array(160);function u(){this.init(),this._w=a,n.call(this,128,112)}function h(t,e,r){return r^t&(e^r)}function c(t,e,r){return t&e|r&(t|e)}function l(t,e){return(t>>>28|e<<4)^(e>>>2|t<<30)^(e>>>7|t<<25)}function d(t,e){return(t>>>14|e<<18)^(t>>>18|e<<14)^(e>>>9|t<<23)}function f(t,e){return(t>>>1|e<<31)^(t>>>8|e<<24)^t>>>7}function p(t,e){return(t>>>1|e<<31)^(t>>>8|e<<24)^(t>>>7|e<<25)}function g(t,e){return(t>>>19|e<<13)^(e>>>29|t<<3)^t>>>6}function m(t,e){return(t>>>19|e<<13)^(e>>>29|t<<3)^(t>>>6|e<<26)}function y(t,e){return t>>>0<e>>>0?1:0}i(u,n),u.prototype.init=function(){return this._ah=1779033703,this._bh=3144134277,this._ch=1013904242,this._dh=2773480762,this._eh=1359893119,this._fh=2600822924,this._gh=528734635,this._hh=1541459225,this._al=4089235720,this._bl=2227873595,this._cl=4271175723,this._dl=1595750129,this._el=2917565137,this._fl=725511199,this._gl=4215389547,this._hl=327033209,this},u.prototype._update=function(t){for(var e=this._w,r=0|this._ah,i=0|this._bh,n=0|this._ch,s=0|this._dh,a=0|this._eh,u=0|this._fh,v=0|this._gh,b=0|this._hh,w=0|this._al,E=0|this._bl,S=0|this._cl,N=0|this._dl,M=0|this._el,x=0|this._fl,I=0|this._gl,A=0|this._hl,P=0;P<32;P+=2)e[P]=t.readInt32BE(4*P),e[P+1]=t.readInt32BE(4*P+4);for(;P<160;P+=2){var T=e[P-30],R=e[P-30+1],k=f(T,R),B=p(R,T),O=g(T=e[P-4],R=e[P-4+1]),C=m(R,T),L=e[P-14],j=e[P-14+1],Z=e[P-32],D=e[P-32+1],F=B+j|0,z=k+L+y(F,B)|0;z=(z=z+O+y(F=F+C|0,C)|0)+Z+y(F=F+D|0,D)|0,e[P]=z,e[P+1]=F}for(var H=0;H<160;H+=2){z=e[H],F=e[H+1];var W=c(r,i,n),K=c(w,E,S),q=l(r,w),U=l(w,r),V=d(a,M),X=d(M,a),G=o[H],Y=o[H+1],Q=h(a,u,v),J=h(M,x,I),_=A+X|0,$=b+V+y(_,A)|0;$=($=($=$+Q+y(_=_+J|0,J)|0)+G+y(_=_+Y|0,Y)|0)+z+y(_=_+F|0,F)|0;var tt=U+K|0,et=q+W+y(tt,U)|0;b=v,A=I,v=u,I=x,u=a,x=M,a=s+$+y(M=N+_|0,N)|0,s=n,N=S,n=i,S=E,i=r,E=w,r=$+et+y(w=_+tt|0,_)|0}this._al=this._al+w|0,this._bl=this._bl+E|0,this._cl=this._cl+S|0,this._dl=this._dl+N|0,this._el=this._el+M|0,this._fl=this._fl+x|0,this._gl=this._gl+I|0,this._hl=this._hl+A|0,this._ah=this._ah+r+y(this._al,w)|0,this._bh=this._bh+i+y(this._bl,E)|0,this._ch=this._ch+n+y(this._cl,S)|0,this._dh=this._dh+s+y(this._dl,N)|0,this._eh=this._eh+a+y(this._el,M)|0,this._fh=this._fh+u+y(this._fl,x)|0,this._gh=this._gh+v+y(this._gl,I)|0,this._hh=this._hh+b+y(this._hl,A)|0},u.prototype._hash=function(){var t=s.allocUnsafe(64);function e(e,r,i){t.writeInt32BE(e,i),t.writeInt32BE(r,i+4)}return e(this._ah,this._al,0),e(this._bh,this._bl,8),e(this._ch,this._cl,16),e(this._dh,this._dl,24),e(this._eh,this._el,32),e(this._fh,this._fl,40),e(this._gh,this._gl,48),e(this._hh,this._hl,56),t},t.exports=u},7478:(t,e,r)=>{"use strict";var i=r(210),n=r(1924),s=r(631),o=i("%TypeError%"),a=i("%WeakMap%",!0),u=i("%Map%",!0),h=n("WeakMap.prototype.get",!0),c=n("WeakMap.prototype.set",!0),l=n("WeakMap.prototype.has",!0),d=n("Map.prototype.get",!0),f=n("Map.prototype.set",!0),p=n("Map.prototype.has",!0),g=function(t,e){for(var r,i=t;null!==(r=i.next);i=r)if(r.key===e)return i.next=r.next,r.next=t.next,t.next=r,r};t.exports=function(){var t,e,r,i={assert:function(t){if(!i.has(t))throw new o("Side channel does not contain "+s(t))},get:function(i){if(a&&i&&("object"==typeof i||"function"==typeof i)){if(t)return h(t,i)}else if(u){if(e)return d(e,i)}else if(r)return function(t,e){var r=g(t,e);return r&&r.value}(r,i)},has:function(i){if(a&&i&&("object"==typeof i||"function"==typeof i)){if(t)return l(t,i)}else if(u){if(e)return p(e,i)}else if(r)return function(t,e){return!!g(t,e)}(r,i);return!1},set:function(i,n){a&&i&&("object"==typeof i||"function"==typeof i)?(t||(t=new a),c(t,i,n)):u?(e||(e=new u),f(e,i,n)):(r||(r={key:{},next:null}),function(t,e,r){var i=g(t,e);i?i.value=r:t.next={key:e,next:t.next,value:r}}(r,i,n))}};return i}},2830:(t,e,r)=>{t.exports=n;var i=r(7187).EventEmitter;function n(){i.call(this)}r(5717)(n,i),n.Readable=r(9481),n.Writable=r(4229),n.Duplex=r(6753),n.Transform=r(4605),n.PassThrough=r(2725),n.finished=r(8610),n.pipeline=r(9946),n.Stream=n,n.prototype.pipe=function(t,e){var r=this;function n(e){t.writable&&!1===t.write(e)&&r.pause&&r.pause()}function s(){r.readable&&r.resume&&r.resume()}r.on("data",n),t.on("drain",s),t._isStdio||e&&!1===e.end||(r.on("end",a),r.on("close",u));var o=!1;function a(){o||(o=!0,t.end())}function u(){o||(o=!0,"function"==typeof t.destroy&&t.destroy())}function h(t){if(c(),0===i.listenerCount(this,"error"))throw t}function c(){r.removeListener("data",n),t.removeListener("drain",s),r.removeListener("end",a),r.removeListener("close",u),r.removeListener("error",h),t.removeListener("error",h),r.removeListener("end",c),r.removeListener("close",c),t.removeListener("close",c)}return r.on("error",h),t.on("error",h),r.on("end",c),r.on("close",c),t.on("close",c),t.emit("pipe",r),t}},8501:(t,e,r)=>{var i=r(1989),n=r(5676),s=r(7529),o=r(584),a=r(8575),u=e;u.request=function(t,e){t="string"==typeof t?a.parse(t):s(t);var n=-1===r.g.location.protocol.search(/^https?:$/)?"http:":"",o=t.protocol||n,u=t.hostname||t.host,h=t.port,c=t.path||"/";u&&-1!==u.indexOf(":")&&(u="["+u+"]"),t.url=(u?o+"//"+u:"")+(h?":"+h:"")+c,t.method=(t.method||"GET").toUpperCase(),t.headers=t.headers||{};var l=new i(t);return e&&l.on("response",e),l},u.get=function(t,e){var r=u.request(t,e);return r.end(),r},u.ClientRequest=i,u.IncomingMessage=n.IncomingMessage,u.Agent=function(){},u.Agent.defaultMaxSockets=4,u.globalAgent=new u.Agent,u.STATUS_CODES=o,u.METHODS=["CHECKOUT","CONNECT","COPY","DELETE","GET","HEAD","LOCK","M-SEARCH","MERGE","MKACTIVITY","MKCOL","MOVE","NOTIFY","OPTIONS","PATCH","POST","PROPFIND","PROPPATCH","PURGE","PUT","REPORT","SEARCH","SUBSCRIBE","TRACE","UNLOCK","UNSUBSCRIBE"]},8725:(t,e,r)=>{var i;function n(){if(void 0!==i)return i;if(r.g.XMLHttpRequest){i=new r.g.XMLHttpRequest;try{i.open("GET",r.g.XDomainRequest?"/":"https://example.com")}catch(t){i=null}}else i=null;return i}function s(t){var e=n();if(!e)return!1;try{return e.responseType=t,e.responseType===t}catch(t){}return!1}function o(t){return"function"==typeof t}e.fetch=o(r.g.fetch)&&o(r.g.ReadableStream),e.writableStream=o(r.g.WritableStream),e.abortController=o(r.g.AbortController),e.arraybuffer=e.fetch||s("arraybuffer"),e.msstream=!e.fetch&&s("ms-stream"),e.mozchunkedarraybuffer=!e.fetch&&s("moz-chunked-arraybuffer"),e.overrideMimeType=e.fetch||!!n()&&o(n().overrideMimeType),i=null},1989:(t,e,r)=>{var i=r(8764).Buffer,n=r(4155),s=r(8725),o=r(5717),a=r(5676),u=r(8473),h=a.IncomingMessage,c=a.readyStates,l=t.exports=function(t){var e,r=this;u.Writable.call(r),r._opts=t,r._body=[],r._headers={},t.auth&&r.setHeader("Authorization","Basic "+i.from(t.auth).toString("base64")),Object.keys(t.headers).forEach((function(e){r.setHeader(e,t.headers[e])}));var n=!0;if("disable-fetch"===t.mode||"requestTimeout"in t&&!s.abortController)n=!1,e=!0;else if("prefer-streaming"===t.mode)e=!1;else if("allow-wrong-content-type"===t.mode)e=!s.overrideMimeType;else{if(t.mode&&"default"!==t.mode&&"prefer-fast"!==t.mode)throw new Error("Invalid value for opts.mode");e=!0}r._mode=function(t,e){return s.fetch&&e?"fetch":s.mozchunkedarraybuffer?"moz-chunked-arraybuffer":s.msstream?"ms-stream":s.arraybuffer&&t?"arraybuffer":"text"}(e,n),r._fetchTimer=null,r._socketTimeout=null,r._socketTimer=null,r.on("finish",(function(){r._onFinish()}))};o(l,u.Writable),l.prototype.setHeader=function(t,e){var r=t.toLowerCase();-1===d.indexOf(r)&&(this._headers[r]={name:t,value:e})},l.prototype.getHeader=function(t){var e=this._headers[t.toLowerCase()];return e?e.value:null},l.prototype.removeHeader=function(t){delete this._headers[t.toLowerCase()]},l.prototype._onFinish=function(){var t=this;if(!t._destroyed){var e=t._opts;"timeout"in e&&0!==e.timeout&&t.setTimeout(e.timeout);var i=t._headers,o=null;"GET"!==e.method&&"HEAD"!==e.method&&(o=new Blob(t._body,{type:(i["content-type"]||{}).value||""}));var a=[];if(Object.keys(i).forEach((function(t){var e=i[t].name,r=i[t].value;Array.isArray(r)?r.forEach((function(t){a.push([e,t])})):a.push([e,r])})),"fetch"===t._mode){var u=null;if(s.abortController){var h=new AbortController;u=h.signal,t._fetchAbortController=h,"requestTimeout"in e&&0!==e.requestTimeout&&(t._fetchTimer=r.g.setTimeout((function(){t.emit("requestTimeout"),t._fetchAbortController&&t._fetchAbortController.abort()}),e.requestTimeout))}r.g.fetch(t._opts.url,{method:t._opts.method,headers:a,body:o||void 0,mode:"cors",credentials:e.withCredentials?"include":"same-origin",signal:u}).then((function(e){t._fetchResponse=e,t._resetTimers(!1),t._connect()}),(function(e){t._resetTimers(!0),t._destroyed||t.emit("error",e)}))}else{var l=t._xhr=new r.g.XMLHttpRequest;try{l.open(t._opts.method,t._opts.url,!0)}catch(e){return void n.nextTick((function(){t.emit("error",e)}))}"responseType"in l&&(l.responseType=t._mode),"withCredentials"in l&&(l.withCredentials=!!e.withCredentials),"text"===t._mode&&"overrideMimeType"in l&&l.overrideMimeType("text/plain; charset=x-user-defined"),"requestTimeout"in e&&(l.timeout=e.requestTimeout,l.ontimeout=function(){t.emit("requestTimeout")}),a.forEach((function(t){l.setRequestHeader(t[0],t[1])})),t._response=null,l.onreadystatechange=function(){switch(l.readyState){case c.LOADING:case c.DONE:t._onXHRProgress()}},"moz-chunked-arraybuffer"===t._mode&&(l.onprogress=function(){t._onXHRProgress()}),l.onerror=function(){t._destroyed||(t._resetTimers(!0),t.emit("error",new Error("XHR error")))};try{l.send(o)}catch(e){return void n.nextTick((function(){t.emit("error",e)}))}}}},l.prototype._onXHRProgress=function(){var t=this;t._resetTimers(!1),function(t){try{var e=t.status;return null!==e&&0!==e}catch(t){return!1}}(t._xhr)&&!t._destroyed&&(t._response||t._connect(),t._response._onXHRProgress(t._resetTimers.bind(t)))},l.prototype._connect=function(){var t=this;t._destroyed||(t._response=new h(t._xhr,t._fetchResponse,t._mode,t._resetTimers.bind(t)),t._response.on("error",(function(e){t.emit("error",e)})),t.emit("response",t._response))},l.prototype._write=function(t,e,r){this._body.push(t),r()},l.prototype._resetTimers=function(t){var e=this;r.g.clearTimeout(e._socketTimer),e._socketTimer=null,t?(r.g.clearTimeout(e._fetchTimer),e._fetchTimer=null):e._socketTimeout&&(e._socketTimer=r.g.setTimeout((function(){e.emit("timeout")}),e._socketTimeout))},l.prototype.abort=l.prototype.destroy=function(t){var e=this;e._destroyed=!0,e._resetTimers(!0),e._response&&(e._response._destroyed=!0),e._xhr?e._xhr.abort():e._fetchAbortController&&e._fetchAbortController.abort(),t&&e.emit("error",t)},l.prototype.end=function(t,e,r){"function"==typeof t&&(r=t,t=void 0),u.Writable.prototype.end.call(this,t,e,r)},l.prototype.setTimeout=function(t,e){var r=this;e&&r.once("timeout",e),r._socketTimeout=t,r._resetTimers(!1)},l.prototype.flushHeaders=function(){},l.prototype.setNoDelay=function(){},l.prototype.setSocketKeepAlive=function(){};var d=["accept-charset","accept-encoding","access-control-request-headers","access-control-request-method","connection","content-length","cookie","cookie2","date","dnt","expect","host","keep-alive","origin","referer","te","trailer","transfer-encoding","upgrade","via"]},5676:(t,e,r)=>{var i=r(4155),n=r(8764).Buffer,s=r(8725),o=r(5717),a=r(8473),u=e.readyStates={UNSENT:0,OPENED:1,HEADERS_RECEIVED:2,LOADING:3,DONE:4},h=e.IncomingMessage=function(t,e,r,o){var u=this;if(a.Readable.call(u),u._mode=r,u.headers={},u.rawHeaders=[],u.trailers={},u.rawTrailers=[],u.on("end",(function(){i.nextTick((function(){u.emit("close")}))})),"fetch"===r){if(u._fetchResponse=e,u.url=e.url,u.statusCode=e.status,u.statusMessage=e.statusText,e.headers.forEach((function(t,e){u.headers[e.toLowerCase()]=t,u.rawHeaders.push(e,t)})),s.writableStream){var h=new WritableStream({write:function(t){return o(!1),new Promise((function(e,r){u._destroyed?r():u.push(n.from(t))?e():u._resumeFetch=e}))},close:function(){o(!0),u._destroyed||u.push(null)},abort:function(t){o(!0),u._destroyed||u.emit("error",t)}});try{return void e.body.pipeTo(h).catch((function(t){o(!0),u._destroyed||u.emit("error",t)}))}catch(t){}}var c=e.body.getReader();!function t(){c.read().then((function(e){u._destroyed||(o(e.done),e.done?u.push(null):(u.push(n.from(e.value)),t()))})).catch((function(t){o(!0),u._destroyed||u.emit("error",t)}))}()}else if(u._xhr=t,u._pos=0,u.url=t.responseURL,u.statusCode=t.status,u.statusMessage=t.statusText,t.getAllResponseHeaders().split(/\r?\n/).forEach((function(t){var e=t.match(/^([^:]+):\s*(.*)/);if(e){var r=e[1].toLowerCase();"set-cookie"===r?(void 0===u.headers[r]&&(u.headers[r]=[]),u.headers[r].push(e[2])):void 0!==u.headers[r]?u.headers[r]+=", "+e[2]:u.headers[r]=e[2],u.rawHeaders.push(e[1],e[2])}})),u._charset="x-user-defined",!s.overrideMimeType){var l=u.rawHeaders["mime-type"];if(l){var d=l.match(/;\s*charset=([^;])(;|$)/);d&&(u._charset=d[1].toLowerCase())}u._charset||(u._charset="utf-8")}};o(h,a.Readable),h.prototype._read=function(){var t=this._resumeFetch;t&&(this._resumeFetch=null,t())},h.prototype._onXHRProgress=function(t){var e=this,i=e._xhr,s=null;switch(e._mode){case"text":if((s=i.responseText).length>e._pos){var o=s.substr(e._pos);if("x-user-defined"===e._charset){for(var a=n.alloc(o.length),h=0;h<o.length;h++)a[h]=255&o.charCodeAt(h);e.push(a)}else e.push(o,e._charset);e._pos=s.length}break;case"arraybuffer":if(i.readyState!==u.DONE||!i.response)break;s=i.response,e.push(n.from(new Uint8Array(s)));break;case"moz-chunked-arraybuffer":if(s=i.response,i.readyState!==u.LOADING||!s)break;e.push(n.from(new Uint8Array(s)));break;case"ms-stream":if(s=i.response,i.readyState!==u.LOADING)break;var c=new r.g.MSStreamReader;c.onprogress=function(){c.result.byteLength>e._pos&&(e.push(n.from(new Uint8Array(c.result.slice(e._pos)))),e._pos=c.result.byteLength)},c.onload=function(){t(!0),e.push(null)},c.readAsArrayBuffer(s)}e._xhr.readyState===u.DONE&&"ms-stream"!==e._mode&&(t(!0),e.push(null))}},2553:(t,e,r)=>{"use strict";var i=r(9509).Buffer,n=i.isEncoding||function(t){switch((t=""+t)&&t.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function s(t){var e;switch(this.encoding=function(t){var e=function(t){if(!t)return"utf8";for(var e;;)switch(t){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return t;default:if(e)return;t=(""+t).toLowerCase(),e=!0}}(t);if("string"!=typeof e&&(i.isEncoding===n||!n(t)))throw new Error("Unknown encoding: "+t);return e||t}(t),this.encoding){case"utf16le":this.text=u,this.end=h,e=4;break;case"utf8":this.fillLast=a,e=4;break;case"base64":this.text=c,this.end=l,e=3;break;default:return this.write=d,void(this.end=f)}this.lastNeed=0,this.lastTotal=0,this.lastChar=i.allocUnsafe(e)}function o(t){return t<=127?0:t>>5==6?2:t>>4==14?3:t>>3==30?4:t>>6==2?-1:-2}function a(t){var e=this.lastTotal-this.lastNeed,r=function(t,e,r){if(128!=(192&e[0]))return t.lastNeed=0,"�";if(t.lastNeed>1&&e.length>1){if(128!=(192&e[1]))return t.lastNeed=1,"�";if(t.lastNeed>2&&e.length>2&&128!=(192&e[2]))return t.lastNeed=2,"�"}}(this,t);return void 0!==r?r:this.lastNeed<=t.length?(t.copy(this.lastChar,e,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):(t.copy(this.lastChar,e,0,t.length),void(this.lastNeed-=t.length))}function u(t,e){if((t.length-e)%2==0){var r=t.toString("utf16le",e);if(r){var i=r.charCodeAt(r.length-1);if(i>=55296&&i<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=t[t.length-2],this.lastChar[1]=t[t.length-1],r.slice(0,-1)}return r}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=t[t.length-1],t.toString("utf16le",e,t.length-1)}function h(t){var e=t&&t.length?this.write(t):"";if(this.lastNeed){var r=this.lastTotal-this.lastNeed;return e+this.lastChar.toString("utf16le",0,r)}return e}function c(t,e){var r=(t.length-e)%3;return 0===r?t.toString("base64",e):(this.lastNeed=3-r,this.lastTotal=3,1===r?this.lastChar[0]=t[t.length-1]:(this.lastChar[0]=t[t.length-2],this.lastChar[1]=t[t.length-1]),t.toString("base64",e,t.length-r))}function l(t){var e=t&&t.length?this.write(t):"";return this.lastNeed?e+this.lastChar.toString("base64",0,3-this.lastNeed):e}function d(t){return t.toString(this.encoding)}function f(t){return t&&t.length?this.write(t):""}e.s=s,s.prototype.write=function(t){if(0===t.length)return"";var e,r;if(this.lastNeed){if(void 0===(e=this.fillLast(t)))return"";r=this.lastNeed,this.lastNeed=0}else r=0;return r<t.length?e?e+this.text(t,r):this.text(t,r):e||""},s.prototype.end=function(t){var e=t&&t.length?this.write(t):"";return this.lastNeed?e+"�":e},s.prototype.text=function(t,e){var r=function(t,e,r){var i=e.length-1;if(i<r)return 0;var n=o(e[i]);return n>=0?(n>0&&(t.lastNeed=n-1),n):--i<r||-2===n?0:(n=o(e[i]))>=0?(n>0&&(t.lastNeed=n-2),n):--i<r||-2===n?0:(n=o(e[i]))>=0?(n>0&&(2===n?n=0:t.lastNeed=n-3),n):0}(this,t,e);if(!this.lastNeed)return t.toString("utf8",e);this.lastTotal=r;var i=t.length-(r-this.lastNeed);return t.copy(this.lastChar,0,i),t.toString("utf8",e,i)},s.prototype.fillLast=function(t){if(this.lastNeed<=t.length)return t.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);t.copy(this.lastChar,this.lastTotal-this.lastNeed,0,t.length),this.lastNeed-=t.length}},9032:(t,e,r)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=r(7582);i.__exportStar(r(7040),e),i.__exportStar(r(4577),e)},4577:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.printBinary=void 0,e.printBinary=(t="",e)=>{const r=e[0],i=e[1];let n="";return r&&(n+="\n"+t+"← "+r(t+"  ")),i&&(n+="\n"+t+"→ "+i(t+"  ")),n}},7040:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.printTree=void 0,e.printTree=(t="",e)=>{let r="",i=e.length-1;for(;i>=0&&!e[i];i--);for(let n=0;n<=i;n++){const s=e[n];if(!s)continue;const o=n===i,a=s(t+(o?" ":"│")+"  ");r+="\n"+t+(a?o?"└─":"├─":"│")+(a?" "+a:"")}return r}},2973:(t,e,r)=>{"use strict";r.r(e),r.d(e,{ConnectionType:()=>f,Filter:()=>n,GenUtils:()=>i.Z,HttpClient:()=>o.Z,LibraryUtils:()=>a.Z,MoneroAccount:()=>K.Z,MoneroAccountTag:()=>q.Z,MoneroAddressBookEntry:()=>U.Z,MoneroAltChain:()=>g.Z,MoneroBan:()=>m.Z,MoneroBlock:()=>v.Z,MoneroBlockHeader:()=>y.Z,MoneroBlockTemplate:()=>b.Z,MoneroCheck:()=>V.Z,MoneroCheckReserve:()=>X.Z,MoneroCheckTx:()=>G.Z,MoneroConnectionManager:()=>wt,MoneroConnectionManagerListener:()=>Et.Z,MoneroConnectionSpan:()=>w.Z,MoneroDaemon:()=>St.Z,MoneroDaemonConfig:()=>E.Z,MoneroDaemonInfo:()=>S.Z,MoneroDaemonListener:()=>N.Z,MoneroDaemonRpc:()=>Mt.Z,MoneroDaemonSyncInfo:()=>M.Z,MoneroDaemonUpdateCheckResult:()=>x.Z,MoneroDaemonUpdateDownloadResult:()=>I.Z,MoneroDestination:()=>Y.Z,MoneroError:()=>s.Z,MoneroFeeEstimate:()=>A.Z,MoneroHardForkInfo:()=>P.Z,MoneroIncomingTransfer:()=>ut.Z,MoneroIntegratedAddress:()=>Q.Z,MoneroKeyImage:()=>T.Z,MoneroKeyImageImportResult:()=>J.Z,MoneroKeyImageSpentStatus:()=>R,MoneroMessageSignatureResult:()=>yt.Z,MoneroMessageSignatureType:()=>mt.Z,MoneroMinerTxSum:()=>B.Z,MoneroMiningStatus:()=>O.Z,MoneroMultisigInfo:()=>_.Z,MoneroMultisigInitResult:()=>$.Z,MoneroMultisigSignResult:()=>tt.Z,MoneroNetworkType:()=>C.Z,MoneroOutgoingTransfer:()=>ht.Z,MoneroOutput:()=>L.Z,MoneroOutputHistogramEntry:()=>j.Z,MoneroOutputQuery:()=>rt.Z,MoneroOutputWallet:()=>et.Z,MoneroPeer:()=>H.Z,MoneroPruneResult:()=>W.Z,MoneroRpcConnection:()=>u.Z,MoneroRpcError:()=>h.Z,MoneroSubaddress:()=>st.Z,MoneroSubmitTxResult:()=>Z.Z,MoneroSyncResult:()=>ot.Z,MoneroTransfer:()=>at.Z,MoneroTransferQuery:()=>ct.Z,MoneroTx:()=>D.Z,MoneroTxConfig:()=>nt.Z,MoneroTxPoolStats:()=>F.Z,MoneroTxPriority:()=>it,MoneroTxQuery:()=>ft.Z,MoneroTxSet:()=>lt.Z,MoneroTxWallet:()=>dt.Z,MoneroUtils:()=>At.Z,MoneroVersion:()=>z.Z,MoneroWallet:()=>Nt.Z,MoneroWalletConfig:()=>gt.Z,MoneroWalletFull:()=>Ot.Z,MoneroWalletKeys:()=>Bt.a,MoneroWalletListener:()=>pt.Z,MoneroWalletRpc:()=>Rt,SslOptions:()=>c,TaskLooper:()=>d.Z,ThreadPool:()=>vt.Z,connectToDaemonRpc:()=>Lt,connectToWalletRpc:()=>jt,createWalletFull:()=>Zt,createWalletKeys:()=>Ft,default:()=>zt,getVersion:()=>Ct,openWalletFull:()=>Dt});var i=r(6048);class n{meetsCriteria(t){throw new Error("Subclass must implement")}static apply(t,e){return e.filter((e=>!t||t.meetsCriteria(e)))}}var s=r(2477),o=r(6384),a=r(9390),u=r(1779),h=r(4608);class c{constructor(t){Object.assign(this,t)}getPrivateKeyPath(){return this.privateKeyPath}setPrivateKeyPath(t){return this.privateKeyPath=t,this}getCertificatePath(){return this.certificatePath}setCertificatePath(t){return this.certificatePath=t,this}getCertificateAuthorityFile(){return this.certificateAuthorityFile}setCertificateAuthorityFile(t){return this.certificateAuthorityFile=t,this}getAllowedFingerprints(){return this.allowedFingerprints}setAllowedFingerprints(t){return this.allowedFingerprints=t,this}getAllowAnyCert(){return this.allowAnyCert}setAllowAnyCert(t){return this.allowAnyCert=t,this}}var l,d=r(5158);!function(t){t[t.INVALID=0]="INVALID",t[t.IPV4=1]="IPV4",t[t.IPV6=2]="IPV6",t[t.TOR=3]="TOR",t[t.I2P=4]="I2P"}(l||(l={}));const f=l;var p,g=r(9609),m=r(4019),y=r(7353),v=r(1487),b=r(1622),w=r(5806),E=r(4292),S=r(2668),N=r(9457),M=r(9147),x=r(1469),I=r(3645),A=r(3961),P=r(9566),T=r(2795);!function(t){t[t.NOT_SPENT=0]="NOT_SPENT",t[t.CONFIRMED=1]="CONFIRMED",t[t.TX_POOL=2]="TX_POOL"}(p||(p={}));const R=p;var k,B=r(5914),O=r(590),C=r(8403),L=r(4314),j=r(1552),Z=r(5854),D=r(2318),F=r(4633),z=r(8112),H=r(6311),W=r(868),K=r(7946),q=r(9613),U=r(2582),V=r(791),X=r(4659),G=r(1976),Y=r(540),Q=r(2990),J=r(818),_=r(8715),$=r(1787),tt=r(4609),et=r(7514),rt=r(9761);!function(t){t[t.DEFAULT=0]="DEFAULT",t[t.UNIMPORTANT=1]="UNIMPORTANT",t[t.NORMAL=2]="NORMAL",t[t.ELEVATED=3]="ELEVATED"}(k||(k={}));const it=k;var nt=r(2245),st=r(2122),ot=r(8792),at=r(5445),ut=r(9467),ht=r(3497),ct=r(4744),lt=r(9702),dt=r(603),ft=r(4569),pt=r(6537),gt=r(8788),mt=r(5471),yt=r(6326),vt=r(1084);class bt{constructor(t=!0){this.proxyToWorker=!1!==t,this.timeoutMs=bt.DEFAULT_TIMEOUT,this.autoSwitch=bt.DEFAULT_AUTO_SWITCH,this.connections=[],this.responseTimes=new Map,this.listeners=[]}addListener(t){return this.listeners.push(t),this}removeListener(t){if(!i.Z.remove(this.listeners,t))throw new s.Z("Monero connection manager does not contain listener to remove");return this}removeListeners(){return this.listeners.splice(0,this.listeners.length),this}getListeners(){return this.listeners}async addConnection(t){let e=t instanceof u.Z?t:new u.Z(t);for(let t of this.connections)if(t.getUri()===e.getUri())throw new s.Z("Connection URI already exists");return void 0!==this.proxyToWorker&&e.setProxyToWorker(this.proxyToWorker),this.connections.push(e),this}async removeConnection(t){let e=this.getConnectionByUri(t);if(!e)throw new s.Z("No connection exists with URI: "+t);return i.Z.remove(this.connections,e),this.responseTimes.delete(e.getUri()),e===this.currentConnection&&(this.currentConnection=void 0,await this.onConnectionChanged(this.currentConnection)),this}async setConnection(t){if(t&&"string"==typeof t){let e=this.getConnectionByUri(t);return this.setConnection(void 0===e?new u.Z(t):e)}let e=t;if(this.currentConnection===e)return this;if(!e)return this.currentConnection=void 0,await this.onConnectionChanged(void 0),this;if(e instanceof u.Z||(e=new u.Z(e)),!e.getUri())throw new s.Z("Connection is missing URI");let r=this.getConnectionByUri(e.getUri());return r&&i.Z.remove(this.connections,r),await this.addConnection(e),this.currentConnection=e,await this.onConnectionChanged(this.currentConnection),this}getConnection(){return this.currentConnection}hasConnection(t){return void 0!==this.getConnectionByUri(t)}getConnectionByUri(t){for(let e of this.connections)if(e.getUri()===t)return e}getConnections(){let t=i.Z.copyArray(this.connections);return t.sort(this.compareConnections.bind(this)),t}isConnected(){return!!this.currentConnection&&this.currentConnection.isConnected()}startPolling(t,e,r,i,n){switch(null==t&&(t=bt.DEFAULT_POLL_PERIOD),void 0!==e&&this.setAutoSwitch(e),void 0!==r&&this.setTimeout(r),void 0===i&&(i=bt.PollType.PRIORITIZED),this.stopPolling(),i){case bt.PollType.CURRENT:this.startPollingConnection(t);break;case bt.PollType.ALL:this.startPollingConnections(t);break;case bt.PollType.PRIORITIZED:default:this.startPollingPrioritizedConnections(t,n)}return this}stopPolling(){return this.poller&&this.poller.stop(),this.poller=void 0,this}async checkConnection(){let t=!1,e=this.getConnection();if(e&&(await e.checkConnection(this.timeoutMs)&&(t=!0),void 0!==await this.processResponses([e])))return this;if(this.autoSwitch&&!this.isConnected()){let t=await this.getBestAvailableConnection([e]);if(t)return await this.setConnection(t),this}return t&&await this.onConnectionChanged(e),this}async checkConnections(){return await this.checkConnectionsAux(this.getConnections()),this}checkConnectionPromises(){let t=[],e=new vt.Z(this.connections.length);for(let r of this.getConnections())t.push(e.submit((async()=>{try{await r.checkConnection(this.timeoutMs)&&r===this.currentConnection&&await this.onConnectionChanged(r)}catch(t){}})));return Promise.all(t),t}async getBestAvailableConnection(t){for(let e of this.getConnectionsInAscendingPriority())try{let r=this,n=[];for(let s of e)t&&i.Z.arrayContains(t,s)||n.push(new Promise((async function(t,e){await s.checkConnection(r.timeoutMs),s.isConnected()?t(s):e()})));let s=await Promise.any(n);if(s)return s}catch(t){if(!(t instanceof AggregateError))throw new s.Z(t)}}setAutoSwitch(t){return this.autoSwitch=t,this}getAutoSwitch(){return this.autoSwitch}setTimeout(t){return this.timeoutMs=t,this}getTimeout(){return this.timeoutMs}async getPeerConnections(){throw new s.Z("Not implemented")}async disconnect(){return await this.setConnection(void 0),this}async clear(){return this.connections.splice(0,this.connections.length),this.currentConnection&&(this.currentConnection=void 0,await this.onConnectionChanged(void 0)),this}reset(){return this.removeListeners(),this.stopPolling(),this.clear(),this.timeoutMs=bt.DEFAULT_TIMEOUT,this.autoSwitch=bt.DEFAULT_AUTO_SWITCH,this}async onConnectionChanged(t){let e=[];for(let r of this.listeners)e.push(r.onConnectionChanged(t));return Promise.all(e)}getConnectionsInAscendingPriority(){let t=new Map;for(let e of this.connections)t.has(e.getPriority())||t.set(e.getPriority(),[]),t.get(e.getPriority()).push(e);let e=new Map([...t].sort(((t,e)=>parseInt(t[0])-parseInt(e[0])))),r=[];for(let t of e.values())r.push(t);return t.has(0)&&r.push(r.splice(0,1)[0]),r}compareConnections(t,e){return t===this.currentConnection?-1:e===this.currentConnection?1:t.getIsOnline()===e.getIsOnline()?t.getPriority()===e.getPriority()?t.getUri().localeCompare(e.getUri()):-1*this.comparePriorities(t.getPriority(),e.getPriority()):t.getIsOnline()?-1:e.getIsOnline()?1:void 0===t.getIsOnline()?-1:1}comparePriorities(t,e){return t==e?0:0==t?-1:0==e?1:e-t}startPollingConnection(t){return this.poller=new d.Z((async()=>{try{await this.checkConnection()}catch(t){console.log(t)}})),this.poller.start(t),this}startPollingConnections(t){return this.poller=new d.Z((async()=>{try{await this.checkConnections()}catch(t){console.log(t)}})),this.poller.start(t),this}startPollingPrioritizedConnections(t,e){return this.poller=new d.Z((async()=>{try{await this.checkPrioritizedConnections(e)}catch(t){console.log(t)}})),this.poller.start(t),this}async checkPrioritizedConnections(t){for(let e of this.getConnectionsInAscendingPriority())if(await this.checkConnectionsAux(e,t))return}async checkConnectionsAux(t,e){try{let r=this,n=[],s=!1;for(let o of t)e&&i.Z.arrayContains(e,o)||n.push(new Promise((async function(t,e){try{await o.checkConnection(r.timeoutMs)&&o===r.getConnection()&&await r.onConnectionChanged(o),o.isConnected()&&!s&&(s=!0,!r.isConnected()&&r.autoSwitch&&await r.setConnection(o)),t(void 0)}catch(t){e(t)}})));return await Promise.all(n),await this.processResponses(t),s}catch(t){throw new s.Z(t)}}async processResponses(t){for(let e of t)this.responseTimes.has(e.getUri())||this.responseTimes.set(e.getUri(),[]);return this.responseTimes.forEach(((e,r)=>{e.unshift(i.Z.arrayContains(t,r)?r.getResponseTime():void 0),e.length>bt.MIN_BETTER_RESPONSES&&e.pop()})),await this.updateBestConnectionInPriority()}async updateBestConnectionInPriority(){if(this.autoSwitch)for(let t of this.getConnectionsInAscendingPriority()){let e=await this.getBestConnectionFromPrioritizedResponses(t);if(e)return await this.setConnection(e),e}}async getBestConnectionFromPrioritizedResponses(t){let e;for(let r of t)!0===r.isConnected()&&(!e||r.getResponseTime()<e.getResponseTime())&&(e=r);if(!e)return;let r=await this.getConnection();if(!r||!0!==r.isConnected())return e;if(0!==this.comparePriorities(e.getPriority(),r.getPriority()))return e;if(!this.responseTimes.has(r.getUri()))return r;for(let e of t){if(e===r)continue;if(!this.responseTimes.has(e.getUri())||this.responseTimes.get(e.getUri()).length<bt.MIN_BETTER_RESPONSES)continue;let t=!0;for(let i=0;i<bt.MIN_BETTER_RESPONSES;i++)if(void 0===this.responseTimes.get(e.getUri())[i]||this.responseTimes.get(r.getUri())[i]||this.responseTimes.get(e.getUri())[i]>this.responseTimes.get(r.getUri())[i]){t=!1;break}t&&(r=e)}return r}}bt.DEFAULT_TIMEOUT=5e3,bt.DEFAULT_POLL_PERIOD=2e4,bt.DEFAULT_AUTO_SWITCH=!0,bt.MIN_BETTER_RESPONSES=3,bt.PollType={PRIORITIZED:0,CURRENT:1,ALL:2};const wt=bt;var Et=r(1401),St=r(3147),Nt=r(929),Mt=r(4485),xt=r(9282),It=r.n(xt),At=r(3547),Pt=r(4155);class Tt extends Nt.Z{constructor(t){super(),this.config=t,this.addressCache={},this.syncPeriodInMs=Tt.DEFAULT_SYNC_PERIOD_IN_MS}getProcess(){return this.process}async stopProcess(t=!1){if(void 0===this.process)throw new s.Z("MoneroWalletRpc instance not created from new process");let e=i.Z.copyArray(this.getListeners());for(let t of e)await this.removeListener(t);return i.Z.killProcess(this.process,t?"SIGKILL":void 0)}getRpcConnection(){return this.config.getServer()}async openWallet(t,e){let r=new gt.Z("string"==typeof t?{path:t,password:e||""}:t);if(!r.getPath())throw new s.Z("Must provide name of wallet to open");if(await this.config.getServer().sendJsonRequest("open_wallet",{filename:r.getPath(),password:r.getPassword()}),await this.clear(),this.path=r.getPath(),null!=r.getConnectionManager()){if(r.getServer())throw new s.Z("Wallet can be opened with a server or connection manager but not both");await this.setConnectionManager(r.getConnectionManager())}else null!=r.getServer()&&await this.setDaemonConnection(r.getServer());return this}async createWallet(t){if(void 0===t)throw new s.Z("Must provide config to create wallet");const e=new gt.Z(t);if(void 0!==e.getSeed()&&(void 0!==e.getPrimaryAddress()||void 0!==e.getPrivateViewKey()||void 0!==e.getPrivateSpendKey()))throw new s.Z("Wallet can be initialized with a seed or keys but not both");if(void 0!==e.getNetworkType())throw new s.Z("Cannot provide networkType when creating RPC wallet because server's network type is already set");if(void 0!==e.getAccountLookahead()||void 0!==e.getSubaddressLookahead())throw new s.Z("monero-wallet-rpc does not support creating wallets with subaddress lookahead over rpc");if(void 0===e.getPassword()&&e.setPassword(""),e.getConnectionManager()){if(e.getServer())throw new s.Z("Wallet can be created with a server or connection manager but not both");e.setServer(t.getConnectionManager().getConnection())}return void 0!==e.getSeed()?await this.createWalletFromSeed(e):void 0!==e.getPrivateSpendKey()||void 0!==e.getPrimaryAddress()?await this.createWalletFromKeys(e):await this.createWalletRandom(e),e.getConnectionManager()?await this.setConnectionManager(e.getConnectionManager()):e.getServer()&&await this.setDaemonConnection(e.getServer()),this}async createWalletRandom(t){if(void 0!==t.getSeedOffset())throw new s.Z("Cannot provide seedOffset when creating random wallet");if(void 0!==t.getRestoreHeight())throw new s.Z("Cannot provide restoreHeight when creating random wallet");if(!1===t.getSaveCurrent())throw new s.Z("Current wallet is saved automatically when creating random wallet");if(!t.getPath())throw new s.Z("Name is not initialized");t.getLanguage()||t.setLanguage(Nt.Z.DEFAULT_LANGUAGE);let e={filename:t.getPath(),password:t.getPassword(),language:t.getLanguage()};try{await this.config.getServer().sendJsonRequest("create_wallet",e)}catch(e){this.handleCreateWalletError(t.getPath(),e)}return await this.clear(),this.path=t.getPath(),this}async createWalletFromSeed(t){try{await this.config.getServer().sendJsonRequest("restore_deterministic_wallet",{filename:t.getPath(),password:t.getPassword(),seed:t.getSeed(),seed_offset:t.getSeedOffset(),enable_multisig_experimental:t.getIsMultisig(),restore_height:t.getRestoreHeight(),language:t.getLanguage(),autosave_current:t.getSaveCurrent()})}catch(e){this.handleCreateWalletError(t.getPath(),e)}return await this.clear(),this.path=t.getPath(),this}async createWalletFromKeys(t){if(void 0!==t.getSeedOffset())throw new s.Z("Cannot provide seedOffset when creating wallet from keys");void 0===t.getRestoreHeight()&&t.setRestoreHeight(0),void 0===t.getLanguage()&&t.setLanguage(Nt.Z.DEFAULT_LANGUAGE);try{await this.config.getServer().sendJsonRequest("generate_from_keys",{filename:t.getPath(),password:t.getPassword(),address:t.getPrimaryAddress(),viewkey:t.getPrivateViewKey(),spendkey:t.getPrivateSpendKey(),restore_height:t.getRestoreHeight(),autosave_current:t.getSaveCurrent()})}catch(e){this.handleCreateWalletError(t.getPath(),e)}return await this.clear(),this.path=t.getPath(),this}handleCreateWalletError(t,e){if("Cannot create wallet. Already exists."===e.message)throw new h.Z("Wallet already exists: "+t,e.getCode(),e.getRpcMethod(),e.getRpcParams());if("Electrum-style word list failed verification"===e.message)throw new h.Z("Invalid mnemonic",e.getCode(),e.getRpcMethod(),e.getRpcParams());throw e}async isViewOnly(){try{return await this.config.getServer().sendJsonRequest("query_key",{key_type:"mnemonic"}),!1}catch(t){if(-29===t.getCode())return!0;if(-1===t.getCode())return!1;throw t}}async setDaemonConnection(t,e,r){let i=t?t instanceof u.Z?t:new u.Z(t):void 0;r||(r=new c);let n={};n.address=i?i.getUri():"bad_uri",n.username=i?i.getUsername():"",n.password=i?i.getPassword():"",n.trusted=e,n.ssl_support="autodetect",n.ssl_private_key_path=r.getPrivateKeyPath(),n.ssl_certificate_path=r.getCertificatePath(),n.ssl_ca_file=r.getCertificateAuthorityFile(),n.ssl_allowed_fingerprints=r.getAllowedFingerprints(),n.ssl_allow_any_cert=r.getAllowAnyCert(),await this.config.getServer().sendJsonRequest("set_daemon",n),this.daemonConnection=i}async getDaemonConnection(){return this.daemonConnection}async getBalances(t,e){if(void 0===t){It().equal(e,void 0,"Must provide account index with subaddress index");let t=BigInt(0),r=BigInt(0);for(let e of await this.getAccounts())t+=e.getBalance(),r+=e.getUnlockedBalance();return[t,r]}{let r={account_index:t,address_indices:void 0===e?void 0:[e]},i=await this.config.getServer().sendJsonRequest("get_balance",r);return void 0===e?[BigInt(i.result.balance),BigInt(i.result.unlocked_balance)]:[BigInt(i.result.per_subaddress[0].balance),BigInt(i.result.per_subaddress[0].unlocked_balance)]}}async addListener(t){await super.addListener(t),this.refreshListening()}async removeListener(t){await super.removeListener(t),this.refreshListening()}async isConnectedToDaemon(){try{throw await this.checkReserveProof(await this.getPrimaryAddress(),"",""),new s.Z("check reserve expected to fail")}catch(t){return t.message.indexOf("Failed to connect to daemon")<0}}async getVersion(){let t=await this.config.getServer().sendJsonRequest("get_version");return new z.Z(t.result.version,t.result.release)}async getPath(){return this.path}async getSeed(){return(await this.config.getServer().sendJsonRequest("query_key",{key_type:"mnemonic"})).result.key}async getSeedLanguage(){if(void 0!==await this.getSeed())throw new s.Z("MoneroWalletRpc.getSeedLanguage() not supported")}async getSeedLanguages(){return(await this.config.getServer().sendJsonRequest("get_languages")).result.languages}async getPrivateViewKey(){return(await this.config.getServer().sendJsonRequest("query_key",{key_type:"view_key"})).result.key}async getPrivateSpendKey(){return(await this.config.getServer().sendJsonRequest("query_key",{key_type:"spend_key"})).result.key}async getAddress(t,e){let r=this.addressCache[t];return r?r[e]||(await this.getSubaddresses(t,void 0,!0),this.addressCache[t][e]):(await this.getSubaddresses(t,void 0,!0),this.getAddress(t,e))}async getAddressIndex(t){let e;try{e=await this.config.getServer().sendJsonRequest("get_address_index",{address:t})}catch(t){if(-2===t.getCode())throw new s.Z(t.message);throw t}let r=new st.Z({address:t});return r.setAccountIndex(e.result.index.major),r.setIndex(e.result.index.minor),r}async getIntegratedAddress(t,e){try{let r=(await this.config.getServer().sendJsonRequest("make_integrated_address",{standard_address:t,payment_id:e})).result.integrated_address;return await this.decodeIntegratedAddress(r)}catch(t){if(t.message.includes("Invalid payment ID"))throw new s.Z("Invalid payment ID: "+e);throw t}}async decodeIntegratedAddress(t){let e=await this.config.getServer().sendJsonRequest("split_integrated_address",{integrated_address:t});return(new Q.Z).setStandardAddress(e.result.standard_address).setPaymentId(e.result.payment_id).setIntegratedAddress(t)}async getHeight(){return(await this.config.getServer().sendJsonRequest("get_height")).result.height}async getDaemonHeight(){throw new s.Z("monero-wallet-rpc does not support getting the chain height")}async getHeightByDate(t,e,r){throw new s.Z("monero-wallet-rpc does not support getting a height by date")}async sync(t,e){It()(!(t instanceof pt.Z),"Monero Wallet RPC does not support reporting sync progress");try{let t=await this.config.getServer().sendJsonRequest("refresh",{start_height:e});return await this.poll(),new ot.Z(t.result.blocks_fetched,t.result.received_money)}catch(t){if("no connection to daemon"===t.message)throw new s.Z("Wallet is not connected to daemon");throw t}}async startSyncing(t){let e=Math.round((void 0===t?Tt.DEFAULT_SYNC_PERIOD_IN_MS:t)/1e3);await this.config.getServer().sendJsonRequest("auto_refresh",{enable:!0,period:e}),this.syncPeriodInMs=1e3*e,void 0!==this.walletPoller&&this.walletPoller.setPeriodInMs(this.syncPeriodInMs),await this.poll()}getSyncPeriodInMs(){return this.syncPeriodInMs}async stopSyncing(){return this.config.getServer().sendJsonRequest("auto_refresh",{enable:!1})}async scanTxs(t){if(!t||!t.length)throw new s.Z("No tx hashes given to scan");await this.config.getServer().sendJsonRequest("scan_tx",{txids:t}),await this.poll()}async rescanSpent(){await this.config.getServer().sendJsonRequest("rescan_spent",void 0)}async rescanBlockchain(){await this.config.getServer().sendJsonRequest("rescan_blockchain",void 0)}async getBalance(t,e){return(await this.getBalances(t,e))[0]}async getUnlockedBalance(t,e){return(await this.getBalances(t,e))[1]}async getAccounts(t,e,r){let i=await this.config.getServer().sendJsonRequest("get_accounts",{tag:e}),n=[];for(let e of i.result.subaddress_accounts){let r=Tt.convertRpcAccount(e);t&&r.setSubaddresses(await this.getSubaddresses(r.getIndex(),void 0,!0)),n.push(r)}if(t&&!r){for(let t of n)for(let e of t.getSubaddresses())e.setBalance(BigInt(0)),e.setUnlockedBalance(BigInt(0)),e.setNumUnspentOutputs(0),e.setNumBlocksToUnlock(0);if(i=await this.config.getServer().sendJsonRequest("get_balance",{all_accounts:!0}),i.result.per_subaddress)for(let t of i.result.per_subaddress){let e=Tt.convertRpcSubaddress(t),r=n[e.getAccountIndex()];It().equal(e.getAccountIndex(),r.getIndex(),"RPC accounts are out of order");let i=r.getSubaddresses()[e.getIndex()];It().equal(e.getIndex(),i.getIndex(),"RPC subaddresses are out of order"),void 0!==e.getBalance()&&i.setBalance(e.getBalance()),void 0!==e.getUnlockedBalance()&&i.setUnlockedBalance(e.getUnlockedBalance()),void 0!==e.getNumUnspentOutputs()&&i.setNumUnspentOutputs(e.getNumUnspentOutputs())}}return n}async getAccount(t,e,r){It()(t>=0);for(let i of await this.getAccounts())if(i.getIndex()===t)return e&&i.setSubaddresses(await this.getSubaddresses(t,void 0,r)),i;throw new Error("Account with index "+t+" does not exist")}async createAccount(t){t=t||void 0;let e=await this.config.getServer().sendJsonRequest("create_account",{label:t});return new K.Z({index:e.result.account_index,primaryAddress:e.result.address,label:t,balance:BigInt(0),unlockedBalance:BigInt(0)})}async getSubaddresses(t,e,r){let n={};n.account_index=t,e&&(n.address_index=i.Z.listify(e));let s=await this.config.getServer().sendJsonRequest("get_address",n),o=[];for(let e of s.result.addresses){let r=Tt.convertRpcSubaddress(e);r.setAccountIndex(t),o.push(r)}if(!r){for(let t of o)t.setBalance(BigInt(0)),t.setUnlockedBalance(BigInt(0)),t.setNumUnspentOutputs(0),t.setNumBlocksToUnlock(0);if(s=await this.config.getServer().sendJsonRequest("get_balance",n),s.result.per_subaddress)for(let t of s.result.per_subaddress){let e=Tt.convertRpcSubaddress(t);for(let t of o)t.getIndex()===e.getIndex()&&(void 0!==e.getBalance()&&t.setBalance(e.getBalance()),void 0!==e.getUnlockedBalance()&&t.setUnlockedBalance(e.getUnlockedBalance()),void 0!==e.getNumUnspentOutputs()&&t.setNumUnspentOutputs(e.getNumUnspentOutputs()),void 0!==e.getNumBlocksToUnlock()&&t.setNumBlocksToUnlock(e.getNumBlocksToUnlock()))}}let a=this.addressCache[t];a||(a={},this.addressCache[t]=a);for(let t of o)a[t.getIndex()]=t.getAddress();return o}async getSubaddress(t,e,r){return It()(t>=0),It()(e>=0),(await this.getSubaddresses(t,[e],r))[0]}async createSubaddress(t,e){let r=await this.config.getServer().sendJsonRequest("create_address",{account_index:t,label:e}),i=new st.Z;return i.setAccountIndex(t),i.setIndex(r.result.address_index),i.setAddress(r.result.address),i.setLabel(e||void 0),i.setBalance(BigInt(0)),i.setUnlockedBalance(BigInt(0)),i.setNumUnspentOutputs(0),i.setIsUsed(!1),i.setNumBlocksToUnlock(0),i}async setSubaddressLabel(t,e,r){await this.config.getServer().sendJsonRequest("label_address",{index:{major:t,minor:e},label:r})}async getTxs(t){const e=Nt.Z.normalizeTxQuery(t);let r=e.getTransferQuery(),i=e.getInputQuery(),n=e.getOutputQuery();e.setTransferQuery(void 0),e.setInputQuery(void 0),e.setOutputQuery(void 0);let s=await this.getTransfersAux((new ct.Z).setTxQuery(Tt.decontextualize(e.copy()))),o=[],a=new Set;for(let t of s)a.has(t.getTx())||(o.push(t.getTx()),a.add(t.getTx()));let u={},h={};for(let t of o)Tt.mergeTx(t,u,h);if(e.getIncludeOutputs()||n){let t=(n?n.copy():new rt.Z).setTxQuery(Tt.decontextualize(e.copy())),r=await this.getOutputsAux(t),i=[];for(let t of r)i.includes(t.getTx())||(Tt.mergeTx(t.getTx(),u,h),i.push(t.getTx()))}e.setTransferQuery(r),e.setInputQuery(i),e.setOutputQuery(n);let c=[];for(let t of o)e.meetsCriteria(t)?c.push(t):void 0!==t.getBlock()&&t.getBlock().getTxs().splice(t.getBlock().getTxs().indexOf(t),1);o=c;for(let t of o)if(t.getIsConfirmed()&&void 0===t.getBlock()||!t.getIsConfirmed()&&void 0!==t.getBlock())return console.error("Inconsistency detected building txs from multiple rpc calls, re-fetching txs"),this.getTxs(e);if(e.getHashes()&&e.getHashes().length>0){let t=new Map;for(let e of o)t.set(e.getHash(),e);let r=[];for(let i of e.getHashes())t.get(i)&&r.push(t.get(i));o=r}return o}async getTransfers(t){const e=Nt.Z.normalizeTransferQuery(t);if(!Tt.isContextual(e))return this.getTransfersAux(e);let r=[];for(let t of await this.getTxs(e.getTxQuery()))for(let i of t.filterTransfers(e))r.push(i);return r}async getOutputs(t){const e=Nt.Z.normalizeOutputQuery(t);if(!Tt.isContextual(e))return this.getOutputsAux(e);let r=[];for(let t of await this.getTxs(e.getTxQuery()))for(let i of t.filterOutputs(e))r.push(i);return r}async exportOutputs(t=!1){return(await this.config.getServer().sendJsonRequest("export_outputs",{all:t})).result.outputs_data_hex}async importOutputs(t){return(await this.config.getServer().sendJsonRequest("import_outputs",{outputs_data_hex:t})).result.num_imported}async exportKeyImages(t=!1){return await this.rpcExportKeyImages(t)}async importKeyImages(t){let e=t.map((t=>({key_image:t.getHex(),signature:t.getSignature()}))),r=await this.config.getServer().sendJsonRequest("import_key_images",{signed_key_images:e}),i=new J.Z;return i.setHeight(r.result.height),i.setSpentAmount(BigInt(r.result.spent)),i.setUnspentAmount(BigInt(r.result.unspent)),i}async getNewKeyImagesFromLastImport(){return await this.rpcExportKeyImages(!1)}async freezeOutput(t){return this.config.getServer().sendJsonRequest("freeze",{key_image:t})}async thawOutput(t){return this.config.getServer().sendJsonRequest("thaw",{key_image:t})}async isOutputFrozen(t){return!0===(await this.config.getServer().sendJsonRequest("frozen",{key_image:t})).result.frozen}async createTxs(t){const e=Nt.Z.normalizeCreateTxsConfig(t);if(void 0===e.getCanSplit()&&e.setCanSplit(!0),!0===e.getRelay()&&await this.isMultisig())throw new s.Z("Cannot relay multisig transaction until co-signed");let r=e.getAccountIndex();if(void 0===r)throw new s.Z("Must provide the account index to send from");let i,n,o=void 0===e.getSubaddressIndices()?void 0:e.getSubaddressIndices().slice(0),a={destinations:[]};for(let t of e.getDestinations())It()(t.getAddress(),"Destination address is not defined"),It()(t.getAmount(),"Destination amount is not defined"),a.destinations.push({address:t.getAddress(),amount:t.getAmount().toString()});if(e.getSubtractFeeFrom()&&(a.subtract_fee_from_outputs=e.getSubtractFeeFrom()),a.account_index=r,a.subaddr_indices=o,a.payment_id=e.getPaymentId(),a.do_not_relay=!0!==e.getRelay(),It()(void 0===e.getPriority()||e.getPriority()>=0&&e.getPriority()<=3),a.priority=e.getPriority(),a.get_tx_hex=!0,a.get_tx_metadata=!0,e.getCanSplit()?a.get_tx_keys=!0:a.get_tx_key=!0,e.getCanSplit()&&e.getSubtractFeeFrom()&&e.getSubtractFeeFrom().length>0)throw new s.Z("subtractfeefrom transfers cannot be split over multiple transactions yet");try{i=(await this.config.getServer().sendJsonRequest(e.getCanSplit()?"transfer_split":"transfer",a)).result}catch(t){if(t.message.indexOf("WALLET_RPC_ERROR_CODE_WRONG_ADDRESS")>-1)throw new s.Z("Invalid destination address");throw t}let u=e.getCanSplit()?void 0!==i.fee_list?i.fee_list.length:0:void 0!==i.fee?1:0;u>0&&(n=[]);let h=1===u;for(let t=0;t<u;t++){let t=new dt.Z;Tt.initSentTxWallet(e,t,h),t.getOutgoingTransfer().setAccountIndex(r),void 0!==o&&1===o.length&&t.getOutgoingTransfer().setSubaddressIndices(o),n.push(t)}return e.getRelay()&&await this.poll(),e.getCanSplit()?Tt.convertRpcSentTxsToTxSet(i,n,e).getTxs():Tt.convertRpcTxToTxSet(i,void 0===n?void 0:n[0],!0,e).getTxs()}async sweepOutput(t){t=Nt.Z.normalizeSweepOutputConfig(t);let e={};e.address=t.getDestinations()[0].getAddress(),e.account_index=t.getAccountIndex(),e.subaddr_indices=t.getSubaddressIndices(),e.key_image=t.getKeyImage(),e.do_not_relay=!0!==t.getRelay(),It()(void 0===t.getPriority()||t.getPriority()>=0&&t.getPriority()<=3),e.priority=t.getPriority(),e.payment_id=t.getPaymentId(),e.get_tx_key=!0,e.get_tx_hex=!0,e.get_tx_metadata=!0;let r=(await this.config.getServer().sendJsonRequest("sweep_single",e)).result;t.getRelay()&&await this.poll();let i=Tt.initSentTxWallet(t,void 0,!0);return Tt.convertRpcTxToTxSet(r,i,!0,t),i.getOutgoingTransfer().getDestinations()[0].setAmount(i.getOutgoingTransfer().getAmount()),i}async sweepUnlocked(t){const e=Nt.Z.normalizeSweepUnlockedConfig(t);let r=new Map;if(void 0!==e.getAccountIndex())if(void 0!==e.getSubaddressIndices())r.set(e.getAccountIndex(),e.getSubaddressIndices());else{let t=[];r.set(e.getAccountIndex(),t);for(let r of await this.getSubaddresses(e.getAccountIndex()))r.getUnlockedBalance()>0n&&t.push(r.getIndex())}else{let t=await this.getAccounts(!0);for(let e of t)if(e.getUnlockedBalance()>0n){let t=[];r.set(e.getIndex(),t);for(let r of e.getSubaddresses())r.getUnlockedBalance()>0n&&t.push(r.getIndex())}}let i=[];for(let t of r.keys()){let n=e.copy();if(n.setAccountIndex(t),n.setSweepEachSubaddress(!1),!0!==n.getSweepEachSubaddress()){n.setSubaddressIndices(r.get(t));for(let t of await this.rpcSweepAccount(n))i.push(t)}else for(let e of r.get(t)){n.setSubaddressIndices([e]);for(let t of await this.rpcSweepAccount(n))i.push(t)}}return e.getRelay()&&await this.poll(),i}async sweepDust(t){void 0===t&&(t=!1);let e=await this.config.getServer().sendJsonRequest("sweep_dust",{do_not_relay:!t});t&&await this.poll();let r=e.result,i=Tt.convertRpcSentTxsToTxSet(r);if(void 0===i.getTxs())return[];for(let e of i.getTxs())e.setIsRelayed(!t),e.setInTxPool(e.getIsRelayed());return i.getTxs()}async relayTxs(t){It()(Array.isArray(t),"Must provide an array of txs or their metadata to relay");let e=[];for(let r of t){let t=r instanceof dt.Z?r.getMetadata():r,i=await this.config.getServer().sendJsonRequest("relay_tx",{hex:t});e.push(i.result.tx_hash)}return await this.poll(),e}async describeTxSet(t){let e=await this.config.getServer().sendJsonRequest("describe_transfer",{unsigned_txset:t.getUnsignedTxHex(),multisig_txset:t.getMultisigTxHex()});return Tt.convertRpcDescribeTransfer(e.result)}async signTxs(t){let e=await this.config.getServer().sendJsonRequest("sign_transfer",{unsigned_txset:t,export_raw:!1});return await this.poll(),Tt.convertRpcSentTxsToTxSet(e.result)}async submitTxs(t){let e=await this.config.getServer().sendJsonRequest("submit_transfer",{tx_data_hex:t});return await this.poll(),e.result.tx_hash_list}async signMessage(t,e=mt.Z.SIGN_WITH_SPEND_KEY,r=0,i=0){return(await this.config.getServer().sendJsonRequest("sign",{data:t,signature_type:e===mt.Z.SIGN_WITH_SPEND_KEY?"spend":"view",account_index:r,address_index:i})).result.signature}async verifyMessage(t,e,r){try{let i=(await this.config.getServer().sendJsonRequest("verify",{data:t,address:e,signature:r})).result;return new yt.Z(i.good?{isGood:i.good,isOld:i.old,signatureType:"view"===i.signature_type?mt.Z.SIGN_WITH_VIEW_KEY:mt.Z.SIGN_WITH_SPEND_KEY,version:i.version}:{isGood:!1})}catch(t){if(-2===t.getCode())return new yt.Z({isGood:!1});throw t}}async getTxKey(t){try{return(await this.config.getServer().sendJsonRequest("get_tx_key",{txid:t})).result.tx_key}catch(t){throw t instanceof h.Z&&-8===t.getCode()&&t.message.includes("TX ID has invalid format")&&(t=new h.Z("TX hash has invalid format",t.getCode(),t.getRpcMethod(),t.getRpcParams())),t}}async checkTxKey(t,e,r){try{let i=await this.config.getServer().sendJsonRequest("check_tx_key",{txid:t,tx_key:e,address:r}),n=new G.Z;return n.setIsGood(!0),n.setNumConfirmations(i.result.confirmations),n.setInTxPool(i.result.in_pool),n.setReceivedAmount(BigInt(i.result.received)),n}catch(t){throw t instanceof h.Z&&-8===t.getCode()&&t.message.includes("TX ID has invalid format")&&(t=new h.Z("TX hash has invalid format",t.getCode(),t.getRpcMethod(),t.getRpcParams())),t}}async getTxProof(t,e,r){try{return(await this.config.getServer().sendJsonRequest("get_tx_proof",{txid:t,address:e,message:r})).result.signature}catch(t){throw t instanceof h.Z&&-8===t.getCode()&&t.message.includes("TX ID has invalid format")&&(t=new h.Z("TX hash has invalid format",t.getCode(),t.getRpcMethod(),t.getRpcParams())),t}}async checkTxProof(t,e,r,i){try{let n=await this.config.getServer().sendJsonRequest("check_tx_proof",{txid:t,address:e,message:r,signature:i}),s=n.result.good,o=new G.Z;return o.setIsGood(s),s&&(o.setNumConfirmations(n.result.confirmations),o.setInTxPool(n.result.in_pool),o.setReceivedAmount(BigInt(n.result.received))),o}catch(t){throw t instanceof h.Z&&-1===t.getCode()&&"basic_string"===t.message&&(t=new h.Z("Must provide signature to check tx proof",-1)),t instanceof h.Z&&-8===t.getCode()&&t.message.includes("TX ID has invalid format")&&(t=new h.Z("TX hash has invalid format",t.getCode(),t.getRpcMethod(),t.getRpcParams())),t}}async getSpendProof(t,e){try{return(await this.config.getServer().sendJsonRequest("get_spend_proof",{txid:t,message:e})).result.signature}catch(t){throw t instanceof h.Z&&-8===t.getCode()&&t.message.includes("TX ID has invalid format")&&(t=new h.Z("TX hash has invalid format",t.getCode(),t.getRpcMethod(),t.getRpcParams())),t}}async checkSpendProof(t,e,r){try{return(await this.config.getServer().sendJsonRequest("check_spend_proof",{txid:t,message:e,signature:r})).result.good}catch(t){throw t instanceof h.Z&&-8===t.getCode()&&t.message.includes("TX ID has invalid format")&&(t=new h.Z("TX hash has invalid format",t.getCode(),t.getRpcMethod(),t.getRpcParams())),t}}async getReserveProofWallet(t){return(await this.config.getServer().sendJsonRequest("get_reserve_proof",{all:!0,message:t})).result.signature}async getReserveProofAccount(t,e,r){return(await this.config.getServer().sendJsonRequest("get_reserve_proof",{account_index:t,amount:e.toString(),message:r})).result.signature}async checkReserveProof(t,e,r){let i=await this.config.getServer().sendJsonRequest("check_reserve_proof",{address:t,message:e,signature:r}),n=i.result.good,s=new X.Z;return s.setIsGood(n),n&&(s.setUnconfirmedSpentAmount(BigInt(i.result.spent)),s.setTotalAmount(BigInt(i.result.total))),s}async getTxNotes(t){return(await this.config.getServer().sendJsonRequest("get_tx_notes",{txids:t})).result.notes}async setTxNotes(t,e){await this.config.getServer().sendJsonRequest("set_tx_notes",{txids:t,notes:e})}async getAddressBookEntries(t){let e=await this.config.getServer().sendJsonRequest("get_address_book",{entries:t});if(!e.result.entries)return[];let r=[];for(let t of e.result.entries)r.push((new U.Z).setIndex(t.index).setAddress(t.address).setDescription(t.description).setPaymentId(t.payment_id));return r}async addAddressBookEntry(t,e){return(await this.config.getServer().sendJsonRequest("add_address_book",{address:t,description:e})).result.index}async editAddressBookEntry(t,e,r,i,n){await this.config.getServer().sendJsonRequest("edit_address_book",{index:t,set_address:e,address:r,set_description:i,description:n})}async deleteAddressBookEntry(t){await this.config.getServer().sendJsonRequest("delete_address_book",{index:t})}async tagAccounts(t,e){await this.config.getServer().sendJsonRequest("tag_accounts",{tag:t,accounts:e})}async untagAccounts(t){await this.config.getServer().sendJsonRequest("untag_accounts",{accounts:t})}async getAccountTags(){let t=[],e=await this.config.getServer().sendJsonRequest("get_account_tags");if(e.result.account_tags)for(let r of e.result.account_tags)t.push(new q.Z({tag:r.tag?r.tag:void 0,label:r.label?r.label:void 0,accountIndices:r.accounts}));return t}async setAccountTagLabel(t,e){await this.config.getServer().sendJsonRequest("set_account_tag_description",{tag:t,description:e})}async getPaymentUri(t){return t=Nt.Z.normalizeCreateTxsConfig(t),(await this.config.getServer().sendJsonRequest("make_uri",{address:t.getDestinations()[0].getAddress(),amount:t.getDestinations()[0].getAmount()?t.getDestinations()[0].getAmount().toString():void 0,payment_id:t.getPaymentId(),recipient_name:t.getRecipientName(),tx_description:t.getNote()})).result.uri}async parsePaymentUri(t){It()(t,"Must provide URI to parse");let e=await this.config.getServer().sendJsonRequest("parse_uri",{uri:t}),r=new nt.Z({address:e.result.uri.address,amount:BigInt(e.result.uri.amount)});return r.setPaymentId(e.result.uri.payment_id),r.setRecipientName(e.result.uri.recipient_name),r.setNote(e.result.uri.tx_description),""===r.getDestinations()[0].getAddress()&&r.getDestinations()[0].setAddress(void 0),""===r.getPaymentId()&&r.setPaymentId(void 0),""===r.getRecipientName()&&r.setRecipientName(void 0),""===r.getNote()&&r.setNote(void 0),r}async getAttribute(t){try{let e=await this.config.getServer().sendJsonRequest("get_attribute",{key:t});return""===e.result.value?void 0:e.result.value}catch(t){if(t instanceof h.Z&&-45===t.getCode())return;throw t}}async setAttribute(t,e){await this.config.getServer().sendJsonRequest("set_attribute",{key:t,value:e})}async startMining(t,e,r){await this.config.getServer().sendJsonRequest("start_mining",{threads_count:t,do_background_mining:e,ignore_battery:r})}async stopMining(){await this.config.getServer().sendJsonRequest("stop_mining")}async isMultisigImportNeeded(){return!0===(await this.config.getServer().sendJsonRequest("get_balance")).result.multisig_import_needed}async getMultisigInfo(){let t=(await this.config.getServer().sendJsonRequest("is_multisig")).result,e=new _.Z;return e.setIsMultisig(t.multisig),e.setIsReady(t.ready),e.setThreshold(t.threshold),e.setNumParticipants(t.total),e}async prepareMultisig(){let t=await this.config.getServer().sendJsonRequest("prepare_multisig",{enable_multisig_experimental:!0});return this.addressCache={},t.result.multisig_info}async makeMultisig(t,e,r){let i=await this.config.getServer().sendJsonRequest("make_multisig",{multisig_info:t,threshold:e,password:r});return this.addressCache={},i.result.multisig_info}async exchangeMultisigKeys(t,e){let r=await this.config.getServer().sendJsonRequest("exchange_multisig_keys",{multisig_info:t,password:e});this.addressCache={};let i=new $.Z;return i.setAddress(r.result.address),i.setMultisigHex(r.result.multisig_info),0===i.getAddress().length&&i.setAddress(void 0),0===i.getMultisigHex().length&&i.setMultisigHex(void 0),i}async exportMultisigHex(){return(await this.config.getServer().sendJsonRequest("export_multisig_info")).result.info}async importMultisigHex(t){if(!i.Z.isArray(t))throw new s.Z("Must provide string[] to importMultisigHex()");return(await this.config.getServer().sendJsonRequest("import_multisig_info",{info:t})).result.n_outputs}async signMultisigTxHex(t){let e=(await this.config.getServer().sendJsonRequest("sign_multisig",{tx_data_hex:t})).result,r=new tt.Z;return r.setSignedMultisigTxHex(e.tx_data_hex),r.setTxHashes(e.tx_hash_list),r}async submitMultisigTxHex(t){return(await this.config.getServer().sendJsonRequest("submit_multisig",{tx_data_hex:t})).result.tx_hash_list}async changePassword(t,e){return this.config.getServer().sendJsonRequest("change_wallet_password",{old_password:t||"",new_password:e||""})}async save(){await this.config.getServer().sendJsonRequest("store")}async close(t=!1){await super.close(t),void 0===t&&(t=!1),await this.clear(),await this.config.getServer().sendJsonRequest("close_wallet",{autosave_current:t})}async isClosed(){try{await this.getPrimaryAddress()}catch(t){return t instanceof h.Z&&-13===t.getCode()&&t.message.indexOf("No wallet file")>-1}return!1}async stop(){await this.clear(),await this.config.getServer().sendJsonRequest("stop_wallet")}async getNumBlocksToUnlock(){return super.getNumBlocksToUnlock()}async getTx(t){return super.getTx(t)}async getIncomingTransfers(t){return super.getIncomingTransfers(t)}async getOutgoingTransfers(t){return super.getOutgoingTransfers(t)}async createTx(t){return super.createTx(t)}async relayTx(t){return super.relayTx(t)}async getTxNote(t){return super.getTxNote(t)}async setTxNote(t,e){return super.setTxNote(t,e)}static async connectToWalletRpc(t,e,r){let i=Tt.normalizeConfig(t,e,r);return i.cmd?Tt.startWalletRpcProcess(i):new Tt(i)}static async startWalletRpcProcess(t){It()(i.Z.isArray(t.cmd),"Must provide string array with command line parameters");const e=(await Promise.resolve().then(r.t.bind(r,3448,23))).spawn(t.cmd[0],t.cmd.slice(1),{env:{...Pt.env,LANG:"en_US.UTF-8"}});let n;e.stdout.setEncoding("utf8"),e.stderr.setEncoding("utf8");let o="";try{return await new Promise((function(r,i){e.stdout.on("data",(async function(i){let s=i.toString();a.Z.log(2,s),o+=s+"\n";let u=s.indexOf("Binding on ");if(u>=0){let e=s.substring(u+11,s.lastIndexOf(" ")),r=s.replace(/\u001b\[.*?m/g,"").trim(),i=r.substring(r.lastIndexOf(":")+1),o=t.cmd.indexOf("--rpc-ssl"),a=o>=0&&"enabled"==t.cmd[o+1].toLowerCase();n=(a?"https":"http")+"://"+e+":"+i}if(s.indexOf("Starting wallet RPC server")>=0){let i=t.cmd.indexOf("--rpc-login"),s=i>=0?t.cmd[i+1]:void 0,o=void 0===s?void 0:s.substring(0,s.indexOf(":")),a=void 0===s?void 0:s.substring(s.indexOf(":")+1);(t=t.copy().setServer({uri:n,username:o,password:a,rejectUnauthorized:t.getServer()?t.getServer().getRejectUnauthorized():void 0})).cmd=void 0;let u=await Tt.connectToWalletRpc(t);u.process=e,this.isResolved=!0,r(u)}})),e.stderr.on("data",(function(t){a.Z.getLogLevel()>=2&&console.error(t)})),e.on("exit",(function(t){this.isResolved||i(new s.Z("monero-wallet-rpc process terminated with exit code "+t+(o?":\n\n"+o:"")))})),e.on("error",(function(e){e.message.indexOf("ENOENT")>=0&&i(new s.Z("monero-wallet-rpc does not exist at path '"+t.cmd[0]+"'")),this.isResolved||i(e)})),e.on("uncaughtException",(function(t,e){console.error("Uncaught exception in monero-wallet-rpc process: "+t.message),console.error(e),this.isResolved||i(t)}))}))}catch(t){throw new s.Z(t.message)}}async clear(){this.refreshListening(),delete this.addressCache,this.addressCache={},this.path=void 0}async getAccountIndices(t){let e=new Map;for(let r of await this.getAccounts())e.set(r.getIndex(),t?await this.getSubaddressIndices(r.getIndex()):void 0);return e}async getSubaddressIndices(t){let e=[],r=await this.config.getServer().sendJsonRequest("get_address",{account_index:t});for(let t of r.result.addresses)e.push(t.address_index);return e}async getTransfersAux(t){let e=t.getTxQuery(),r=!1!==e.getIsConfirmed()&&!0!==e.getInTxPool()&&!0!==e.getIsFailed()&&!1!==e.getIsRelayed(),i=!0!==e.getIsConfirmed()&&!1!==e.getInTxPool()&&!0!==e.getIsFailed()&&void 0===e.getHeight()&&void 0===e.getMaxHeight()&&!1!==e.getIsLocked(),n=!1!==t.getIsIncoming()&&!0!==t.getIsOutgoing()&&!0!==t.getHasDestinations(),o=!1!==t.getIsOutgoing()&&!0!==t.getIsIncoming();if(!0===e.getInTxPool()&&!i)throw new s.Z("Cannot fetch pool transactions because it contradicts configuration");let a={};if(a.in=n&&r,a.out=o&&r,a.pool=n&&i,a.pending=o&&i,a.failed=!1!==e.getIsFailed()&&!0!==e.getIsConfirmed()&&1!=e.getInTxPool(),void 0!==e.getMinHeight()&&(e.getMinHeight()>0?a.min_height=e.getMinHeight()-1:a.min_height=e.getMinHeight()),void 0!==e.getMaxHeight()&&(a.max_height=e.getMaxHeight()),a.filter_by_height=void 0!==e.getMinHeight()||void 0!==e.getMaxHeight(),void 0===t.getAccountIndex())It()(void 0===t.getSubaddressIndex()&&void 0===t.getSubaddressIndices(),"Query specifies a subaddress index but not an account index"),a.all_accounts=!0;else{a.account_index=t.getAccountIndex();let e=new Set;void 0!==t.getSubaddressIndex()&&e.add(t.getSubaddressIndex()),void 0!==t.getSubaddressIndices()&&t.getSubaddressIndices().map((t=>e.add(t))),e.size&&(a.subaddr_indices=Array.from(e))}let u={},h={},c=await this.config.getServer().sendJsonRequest("get_transfers",a);for(let t of Object.keys(c.result))for(let e of c.result[t]){let t=Tt.convertRpcTxWithTransfer(e);if(t.getIsConfirmed()&&It()(t.getBlock().getTxs().indexOf(t)>-1),void 0!==t.getOutgoingTransfer()&&t.getIsRelayed()&&!t.getIsFailed()&&t.getOutgoingTransfer().getDestinations()&&0n===t.getOutgoingAmount()){let e=t.getOutgoingTransfer(),r=BigInt(0);for(let t of e.getDestinations())r+=t.getAmount();t.getOutgoingTransfer().setAmount(r)}Tt.mergeTx(t,u,h)}let l=Object.values(u);l.sort(Tt.compareTxsByHeight);let d=[];for(let e of l){void 0===e.getIsIncoming()&&e.setIsIncoming(!1),void 0===e.getIsOutgoing()&&e.setIsOutgoing(!1),void 0!==e.getIncomingTransfers()&&e.getIncomingTransfers().sort(Tt.compareIncomingTransfers);for(let r of e.filterTransfers(t))d.push(r);void 0!==e.getBlock()&&void 0===e.getOutgoingTransfer()&&void 0===e.getIncomingTransfers()&&e.getBlock().getTxs().splice(e.getBlock().getTxs().indexOf(e),1)}return d}async getOutputsAux(t){let e=new Map;if(void 0!==t.getAccountIndex()){let r=new Set;void 0!==t.getSubaddressIndex()&&r.add(t.getSubaddressIndex()),void 0!==t.getSubaddressIndices()&&t.getSubaddressIndices().map((t=>r.add(t))),e.set(t.getAccountIndex(),r.size?Array.from(r):void 0)}else It().equal(t.getSubaddressIndex(),void 0,"Query specifies a subaddress index but not an account index"),It()(void 0===t.getSubaddressIndices()||0===t.getSubaddressIndices().length,"Query specifies subaddress indices but not an account index"),e=await this.getAccountIndices();let r={},i={},n={};n.transfer_type=!0===t.getIsSpent()?"unavailable":!1===t.getIsSpent()?"available":"all",n.verbose=!0;for(let t of e.keys()){n.account_index=t,n.subaddr_indices=e.get(t);let s=await this.config.getServer().sendJsonRequest("incoming_transfers",n);if(void 0!==s.result.transfers)for(let t of s.result.transfers){let e=Tt.convertRpcTxWalletWithOutput(t);Tt.mergeTx(e,r,i)}}let s=Object.values(r);s.sort(Tt.compareTxsByHeight);let o=[];for(let e of s){void 0!==e.getOutputs()&&e.getOutputs().sort(Tt.compareOutputs);for(let r of e.filterOutputs(t))o.push(r);void 0===e.getOutputs()&&void 0!==e.getBlock()&&e.getBlock().getTxs().splice(e.getBlock().getTxs().indexOf(e),1)}return o}async rpcExportKeyImages(t){let e=await this.config.getServer().sendJsonRequest("export_key_images",{all:t});return e.result.signed_key_images?e.result.signed_key_images.map((t=>new T.Z(t.key_image,t.signature))):[]}async rpcSweepAccount(t){if(void 0===t)throw new s.Z("Must provide sweep config");if(void 0===t.getAccountIndex())throw new s.Z("Must provide an account index to sweep from");if(void 0===t.getDestinations()||1!=t.getDestinations().length)throw new s.Z("Must provide exactly one destination to sweep to");if(void 0===t.getDestinations()[0].getAddress())throw new s.Z("Must provide destination address to sweep to");if(void 0!==t.getDestinations()[0].getAmount())throw new s.Z("Cannot specify amount in sweep config");if(void 0!==t.getKeyImage())throw new s.Z("Key image defined; use sweepOutput() to sweep an output by its key image");if(void 0!==t.getSubaddressIndices()&&0===t.getSubaddressIndices().length)throw new s.Z("Empty list given for subaddresses indices to sweep");if(t.getSweepEachSubaddress())throw new s.Z("Cannot sweep each subaddress with RPC `sweep_all`");if(void 0!==t.getSubtractFeeFrom()&&t.getSubtractFeeFrom().length>0)throw new s.Z("Sweeping output does not support subtracting fees from destinations");if(void 0===t.getSubaddressIndices()){t.setSubaddressIndices([]);for(let e of await this.getSubaddresses(t.getAccountIndex()))t.getSubaddressIndices().push(e.getIndex())}if(0===t.getSubaddressIndices().length)throw new s.Z("No subaddresses to sweep from");let e={},r=!0===t.getRelay();e.account_index=t.getAccountIndex(),e.subaddr_indices=t.getSubaddressIndices(),e.address=t.getDestinations()[0].getAddress(),It()(void 0===t.getPriority()||t.getPriority()>=0&&t.getPriority()<=3),e.priority=t.getPriority(),e.payment_id=t.getPaymentId(),e.do_not_relay=!r,e.below_amount=t.getBelowAmount(),e.get_tx_keys=!0,e.get_tx_hex=!0,e.get_tx_metadata=!0;let i=(await this.config.getServer().sendJsonRequest("sweep_all",e)).result,n=Tt.convertRpcSentTxsToTxSet(i,void 0,t);for(let e of n.getTxs()){e.setIsLocked(!0),e.setIsConfirmed(!1),e.setNumConfirmations(0),e.setRelay(r),e.setInTxPool(r),e.setIsRelayed(r),e.setIsMinerTx(!1),e.setIsFailed(!1);let i=e.getOutgoingTransfer();i.setAccountIndex(t.getAccountIndex()),1===t.getSubaddressIndices().length&&i.setSubaddressIndices(t.getSubaddressIndices());let n=new Y.Z(t.getDestinations()[0].getAddress(),BigInt(i.getAmount()));i.setDestinations([n]),e.setOutgoingTransfer(i),e.setPaymentId(t.getPaymentId()),void 0===e.getUnlockTime()&&e.setUnlockTime(0n),e.getRelay()&&(void 0===e.getLastRelayedTimestamp()&&e.setLastRelayedTimestamp(+(new Date).getTime()),void 0===e.getIsDoubleSpendSeen()&&e.setIsDoubleSpendSeen(!1))}return n.getTxs()}refreshListening(){null==this.walletPoller&&this.listeners.length&&(this.walletPoller=new kt(this)),void 0!==this.walletPoller&&this.walletPoller.setIsPolling(this.listeners.length>0)}async poll(){void 0!==this.walletPoller&&this.walletPoller.isPolling&&await this.walletPoller.poll()}static normalizeConfig(t,e,r){let n;return n="string"==typeof t||t.uri?new gt.Z({server:new u.Z(t,e,r)}):i.Z.isArray(t)?new gt.Z({cmd:t}):new gt.Z(t),void 0===n.proxyToWorker&&(n.proxyToWorker=!0),n}static decontextualize(t){return t.setIsIncoming(void 0),t.setIsOutgoing(void 0),t.setTransferQuery(void 0),t.setInputQuery(void 0),t.setOutputQuery(void 0),t}static isContextual(t){if(!t)return!1;if(!t.getTxQuery())return!1;if(void 0!==t.getTxQuery().getIsIncoming())return!0;if(void 0!==t.getTxQuery().getIsOutgoing())return!0;if(t instanceof ct.Z){if(void 0!==t.getTxQuery().getOutputQuery())return!0}else{if(!(t instanceof rt.Z))throw new s.Z("query must be tx or transfer query");if(void 0!==t.getTxQuery().getTransferQuery())return!0}return!1}static convertRpcAccount(t){let e=new K.Z;for(let r of Object.keys(t)){let i=t[r];"account_index"===r?e.setIndex(i):"balance"===r?e.setBalance(BigInt(i)):"unlocked_balance"===r?e.setUnlockedBalance(BigInt(i)):"base_address"===r?e.setPrimaryAddress(i):"tag"===r?e.setTag(i):"label"===r||console.log("WARNING: ignoring unexpected account field: "+r+": "+i)}return""===e.getTag()&&e.setTag(void 0),e}static convertRpcSubaddress(t){let e=new st.Z;for(let r of Object.keys(t)){let i=t[r];"account_index"===r?e.setAccountIndex(i):"address_index"===r?e.setIndex(i):"address"===r?e.setAddress(i):"balance"===r?e.setBalance(BigInt(i)):"unlocked_balance"===r?e.setUnlockedBalance(BigInt(i)):"num_unspent_outputs"===r?e.setNumUnspentOutputs(i):"label"===r?i&&e.setLabel(i):"used"===r?e.setIsUsed(i):"blocks_to_unlock"===r?e.setNumBlocksToUnlock(i):"time_to_unlock"==r||console.log("WARNING: ignoring unexpected subaddress field: "+r+": "+i)}return e}static initSentTxWallet(t,e,r){e||(e=new dt.Z);let i=!0===t.getRelay();e.setIsOutgoing(!0),e.setIsConfirmed(!1),e.setNumConfirmations(0),e.setInTxPool(i),e.setRelay(i),e.setIsRelayed(i),e.setIsMinerTx(!1),e.setIsFailed(!1),e.setIsLocked(!0),e.setRingSize(At.Z.RING_SIZE);let n=new ht.Z;if(n.setTx(e),t.getSubaddressIndices()&&1===t.getSubaddressIndices().length&&n.setSubaddressIndices(t.getSubaddressIndices().slice(0)),r){let e=[];for(let r of t.getDestinations())e.push(r.copy());n.setDestinations(e)}return e.setOutgoingTransfer(n),e.setPaymentId(t.getPaymentId()),void 0===e.getUnlockTime()&&e.setUnlockTime(0n),t.getRelay()&&(void 0===e.getLastRelayedTimestamp()&&e.setLastRelayedTimestamp(+(new Date).getTime()),void 0===e.getIsDoubleSpendSeen()&&e.setIsDoubleSpendSeen(!1)),e}static convertRpcTxSet(t){let e=new lt.Z;return e.setMultisigTxHex(t.multisig_txset),e.setUnsignedTxHex(t.unsigned_txset),e.setSignedTxHex(t.signed_txset),void 0!==e.getMultisigTxHex()&&0===e.getMultisigTxHex().length&&e.setMultisigTxHex(void 0),void 0!==e.getUnsignedTxHex()&&0===e.getUnsignedTxHex().length&&e.setUnsignedTxHex(void 0),void 0!==e.getSignedTxHex()&&0===e.getSignedTxHex().length&&e.setSignedTxHex(void 0),e}static convertRpcSentTxsToTxSet(t,e,r){let n=Tt.convertRpcTxSet(t),s=t.fee_list?t.fee_list.length:t.tx_hash_list?t.tx_hash_list.length:0;if(0===s)return It().equal(e,void 0),n;if(e)n.setTxs(e);else{e=[];for(let t=0;t<s;t++)e.push(new dt.Z)}for(let t of e)t.setTxSet(n),t.setIsOutgoing(!0);n.setTxs(e);for(let n of Object.keys(t)){let s=t[n];if("tx_hash_list"===n)for(let t=0;t<s.length;t++)e[t].setHash(s[t]);else if("tx_key_list"===n)for(let t=0;t<s.length;t++)e[t].setKey(s[t]);else if("tx_blob_list"===n)for(let t=0;t<s.length;t++)e[t].setFullHex(s[t]);else if("tx_metadata_list"===n)for(let t=0;t<s.length;t++)e[t].setMetadata(s[t]);else if("fee_list"===n)for(let t=0;t<s.length;t++)e[t].setFee(BigInt(s[t]));else if("weight_list"===n)for(let t=0;t<s.length;t++)e[t].setWeight(s[t]);else if("amount_list"===n)for(let t=0;t<s.length;t++)null==e[t].getOutgoingTransfer()&&e[t].setOutgoingTransfer((new ht.Z).setTx(e[t])),e[t].getOutgoingTransfer().setAmount(BigInt(s[t]));else if("multisig_txset"===n||"unsigned_txset"===n||"signed_txset"===n);else if("spent_key_images_list"===n){let t=s;for(let r=0;r<t.length;r++){i.Z.assertTrue(void 0===e[r].getInputs()),e[r].setInputs([]);for(let i of t[r].key_images)e[r].getInputs().push((new et.Z).setKeyImage((new T.Z).setHex(i)).setTx(e[r]))}}else if("amounts_by_dest_list"===n){let t=s,i=0;for(let n=0;n<t.length;n++){let s=t[n].amounts;void 0===e[n].getOutgoingTransfer()&&e[n].setOutgoingTransfer((new ht.Z).setTx(e[n])),e[n].getOutgoingTransfer().setDestinations([]);for(let t of s)1===r.getDestinations().length?e[n].getOutgoingTransfer().getDestinations().push(new Y.Z(r.getDestinations()[0].getAddress(),BigInt(t))):e[n].getOutgoingTransfer().getDestinations().push(new Y.Z(r.getDestinations()[i++].getAddress(),BigInt(t)))}}else console.log("WARNING: ignoring unexpected transaction field: "+n+": "+s)}return n}static convertRpcTxToTxSet(t,e,r,i){let n=Tt.convertRpcTxSet(t);return n.setTxs([Tt.convertRpcTxWithTransfer(t,e,r,i).setTxSet(n)]),n}static convertRpcTxWithTransfer(t,e,r,n){let o,a;e||(e=new dt.Z),void 0!==t.type?r=Tt.decodeRpcType(t.type,e):It().equal(typeof r,"boolean","Must indicate if tx is outgoing (true) xor incoming (false) since unknown");for(let u of Object.keys(t)){let h=t[u];if("txid"===u)e.setHash(h);else if("tx_hash"===u)e.setHash(h);else if("fee"===u)e.setFee(BigInt(h));else if("note"===u)h&&e.setNote(h);else if("tx_key"===u)e.setKey(h);else if("type"===u);else if("tx_size"===u)e.setSize(h);else if("unlock_time"===u)e.setUnlockTime(h);else if("weight"===u)e.setWeight(h);else if("locked"===u)e.setIsLocked(h);else if("tx_blob"===u)e.setFullHex(h);else if("tx_metadata"===u)e.setMetadata(h);else if("double_spend_seen"===u)e.setIsDoubleSpendSeen(h);else if("block_height"===u||"height"===u)e.getIsConfirmed()&&(o||(o=new y.Z),o.setHeight(h));else if("timestamp"===u)e.getIsConfirmed()&&(o||(o=new y.Z),o.setTimestamp(h));else if("confirmations"===u)e.setNumConfirmations(h);else if("suggested_confirmations_threshold"===u)void 0===a&&(a=(r?new ht.Z:new ut.Z).setTx(e)),r||a.setNumSuggestedConfirmations(h);else if("amount"===u)void 0===a&&(a=(r?new ht.Z:new ut.Z).setTx(e)),a.setAmount(BigInt(h));else if("amounts"===u);else if("address"===u)r||(a||(a=(new ut.Z).setTx(e)),a.setAddress(h));else if("payment_id"===u)""!==h&&dt.Z.DEFAULT_PAYMENT_ID!==h&&e.setPaymentId(h);else if("subaddr_index"===u)It()(t.subaddr_indices);else if("subaddr_indices"===u){a||(a=(r?new ht.Z:new ut.Z).setTx(e));let t=h;if(a.setAccountIndex(t[0].major),r){let e=[];for(let r of t)e.push(r.minor);a.setSubaddressIndices(e)}else It().equal(t.length,1),a.setSubaddressIndex(t[0].minor)}else if("destinations"===u||"recipients"==u){It()(r);let t=[];for(let e of h){let r=new Y.Z;t.push(r);for(let t of Object.keys(e))if("address"===t)r.setAddress(e[t]);else{if("amount"!==t)throw new s.Z("Unrecognized transaction destination field: "+t);r.setAmount(BigInt(e[t]))}}void 0===a&&(a=new ht.Z({tx:e})),a.setDestinations(t)}else if("multisig_txset"===u&&void 0!==h);else if("unsigned_txset"===u&&void 0!==h);else if("amount_in"===u)e.setInputSum(BigInt(h));else if("amount_out"===u)e.setOutputSum(BigInt(h));else if("change_address"===u)e.setChangeAddress(""===h?void 0:h);else if("change_amount"===u)e.setChangeAmount(BigInt(h));else if("dummy_outputs"===u)e.setNumDummyOutputs(h);else if("extra"===u)e.setExtraHex(h);else if("ring_size"===u)e.setRingSize(h);else if("spent_key_images"===u){let t=h.key_images;i.Z.assertTrue(void 0===e.getInputs()),e.setInputs([]);for(let r of t)e.getInputs().push((new et.Z).setKeyImage((new T.Z).setHex(r)).setTx(e))}else if("amounts_by_dest"===u){i.Z.assertTrue(r);let t=h.amounts;It().equal(n.getDestinations().length,t.length),void 0===a&&(a=(new ht.Z).setTx(e)),a.setDestinations([]);for(let e=0;e<n.getDestinations().length;e++)a.getDestinations().push(new Y.Z(n.getDestinations()[e].getAddress(),BigInt(t[e])))}else console.log("WARNING: ignoring unexpected transaction field with transfer: "+u+": "+h)}return o&&e.setBlock(new v.Z(o).setTxs([e])),a&&(void 0===e.getIsConfirmed()&&e.setIsConfirmed(!1),a.getTx().getIsConfirmed()||e.setNumConfirmations(0),r?(e.setIsOutgoing(!0),e.getOutgoingTransfer()?(a.getDestinations()&&e.getOutgoingTransfer().setDestinations(void 0),e.getOutgoingTransfer().merge(a)):e.setOutgoingTransfer(a)):(e.setIsIncoming(!0),e.setIncomingTransfers([a]))),e}static convertRpcTxWalletWithOutput(t){let e=new dt.Z;e.setIsConfirmed(!0),e.setIsRelayed(!0),e.setIsFailed(!1);let r=new et.Z({tx:e});for(let i of Object.keys(t)){let n=t[i];"amount"===i?r.setAmount(BigInt(n)):"spent"===i?r.setIsSpent(n):"key_image"===i?""!==n&&r.setKeyImage(new T.Z(n)):"global_index"===i?r.setIndex(n):"tx_hash"===i?e.setHash(n):"unlocked"===i?e.setIsLocked(!n):"frozen"===i?r.setIsFrozen(n):"pubkey"===i?r.setStealthPublicKey(n):"subaddr_index"===i?(r.setAccountIndex(n.major),r.setSubaddressIndex(n.minor)):"block_height"===i?e.setBlock((new v.Z).setHeight(n).setTxs([e])):console.log("WARNING: ignoring unexpected transaction field: "+i+": "+n)}return e.setOutputs([r]),e}static convertRpcDescribeTransfer(t){let e=new lt.Z;for(let r of Object.keys(t)){let i=t[r];if("desc"===r){e.setTxs([]);for(let t of i){let r=Tt.convertRpcTxWithTransfer(t,void 0,!0);r.setTxSet(e),e.getTxs().push(r)}}else"summary"===r||console.log("WARNING: ignoring unexpected descdribe transfer field: "+r+": "+i)}return e}static decodeRpcType(t,e){let r;if("in"===t)r=!1,e.setIsConfirmed(!0),e.setInTxPool(!1),e.setIsRelayed(!0),e.setRelay(!0),e.setIsFailed(!1),e.setIsMinerTx(!1);else if("out"===t)r=!0,e.setIsConfirmed(!0),e.setInTxPool(!1),e.setIsRelayed(!0),e.setRelay(!0),e.setIsFailed(!1),e.setIsMinerTx(!1);else if("pool"===t)r=!1,e.setIsConfirmed(!1),e.setInTxPool(!0),e.setIsRelayed(!0),e.setRelay(!0),e.setIsFailed(!1),e.setIsMinerTx(!1);else if("pending"===t)r=!0,e.setIsConfirmed(!1),e.setInTxPool(!0),e.setIsRelayed(!0),e.setRelay(!0),e.setIsFailed(!1),e.setIsMinerTx(!1);else if("block"===t)r=!1,e.setIsConfirmed(!0),e.setInTxPool(!1),e.setIsRelayed(!0),e.setRelay(!0),e.setIsFailed(!1),e.setIsMinerTx(!0);else{if("failed"!==t)throw new s.Z("Unrecognized transfer type: "+t);r=!0,e.setIsConfirmed(!1),e.setInTxPool(!1),e.setIsRelayed(!0),e.setRelay(!0),e.setIsFailed(!0),e.setIsMinerTx(!1)}return r}static mergeTx(t,e,r){It()(void 0!==t.getHash());let i=e[t.getHash()];if(void 0===i?e[t.getHash()]=t:i.merge(t),void 0!==t.getHeight()){let e=r[t.getHeight()];void 0===e?r[t.getHeight()]=t.getBlock():e.merge(t.getBlock())}}static compareTxsByHeight(t,e){if(void 0===t.getHeight()&&void 0===e.getHeight())return 0;if(void 0===t.getHeight())return 1;if(void 0===e.getHeight())return-1;let r=t.getHeight()-e.getHeight();return 0!==r?r:t.getBlock().getTxs().indexOf(t)-e.getBlock().getTxs().indexOf(e)}static compareIncomingTransfers(t,e){return t.getAccountIndex()<e.getAccountIndex()?-1:t.getAccountIndex()===e.getAccountIndex()?t.getSubaddressIndex()-e.getSubaddressIndex():1}static compareOutputs(t,e){let r=Tt.compareTxsByHeight(t.getTx(),e.getTx());if(0!==r)return r;let i=t.getAccountIndex()-e.getAccountIndex();return 0!==i?i:(i=t.getSubaddressIndex()-e.getSubaddressIndex(),0!==i?i:(i=t.getIndex()-e.getIndex(),0!==i?i:t.getKeyImage().getHex().localeCompare(e.getKeyImage().getHex())))}}Tt.DEFAULT_SYNC_PERIOD_IN_MS=2e4;const Rt=Tt;class kt{constructor(t){let e=this;this.wallet=t,this.looper=new d.Z((async function(){await e.poll()})),this.prevLockedTxs=[],this.prevUnconfirmedNotifications=new Set,this.prevConfirmedNotifications=new Set,this.threadPool=new vt.Z(1),this.numPolling=0}setIsPolling(t){this.isPolling=t,t?this.looper.start(this.wallet.getSyncPeriodInMs()):this.looper.stop()}setPeriodInMs(t){this.looper.setPeriodInMs(t)}async poll(){if(this.numPolling>1)return;this.numPolling++;let t=this;return this.threadPool.submit((async function(){try{if(await t.wallet.isClosed())return void t.numPolling--;if(void 0===t.prevBalances)return t.prevHeight=await t.wallet.getHeight(),t.prevLockedTxs=await t.wallet.getTxs((new ft.Z).setIsLocked(!0)),t.prevBalances=await t.wallet.getBalances(),void t.numPolling--;let e=await t.wallet.getHeight();if(t.prevHeight!==e){for(let r=t.prevHeight;r<e;r++)await t.onNewBlock(r);t.prevHeight=e}let r=Math.max(0,e-70),i=await t.wallet.getTxs((new ft.Z).setIsLocked(!0).setMinHeight(r).setIncludeOutputs(!0)),n=[];for(let e of t.prevLockedTxs)void 0===t.getTx(i,e.getHash())&&n.push(e.getHash());t.prevLockedTxs=i;let s=0===n.length?[]:await t.wallet.getTxs((new ft.Z).setIsLocked(!1).setMinHeight(r).setHashes(n).setIncludeOutputs(!0));for(let e of i){let r=e.getIsConfirmed()?t.prevConfirmedNotifications:t.prevUnconfirmedNotifications,i=!r.has(e.getHash());r.add(e.getHash()),i&&await t.notifyOutputs(e)}for(let e of s)t.prevUnconfirmedNotifications.delete(e.getHash()),t.prevConfirmedNotifications.delete(e.getHash()),await t.notifyOutputs(e);await t.checkForChangedBalances(),t.numPolling--}catch(e){t.numPolling--,console.error("Failed to background poll wallet '"+await t.wallet.getPath()+"': "+e.message)}}))}async onNewBlock(t){await this.wallet.announceNewBlock(t)}async notifyOutputs(t){if(void 0!==t.getOutgoingTransfer()){It()(void 0===t.getInputs());let e=(new et.Z).setAmount(t.getOutgoingTransfer().getAmount()+t.getFee()).setAccountIndex(t.getOutgoingTransfer().getAccountIndex()).setSubaddressIndex(1===t.getOutgoingTransfer().getSubaddressIndices().length?t.getOutgoingTransfer().getSubaddressIndices()[0]:void 0).setTx(t);t.setInputs([e]),await this.wallet.announceOutputSpent(e)}if(void 0!==t.getIncomingTransfers())if(void 0!==t.getOutputs()&&t.getOutputs().length>0)for(let e of t.getOutputs())await this.wallet.announceOutputReceived(e);else{let e=[];for(let r of t.getIncomingTransfers())e.push((new et.Z).setAccountIndex(r.getAccountIndex()).setSubaddressIndex(r.getSubaddressIndex()).setAmount(r.getAmount()).setTx(t));t.setOutputs(e);for(let e of t.getOutputs())await this.wallet.announceOutputReceived(e)}}getTx(t,e){for(let r of t)if(e===r.getHash())return r}async checkForChangedBalances(){let t=await this.wallet.getBalances();return(t[0]!==this.prevBalances[0]||t[1]!==this.prevBalances[1])&&(this.prevBalances=t,await this.wallet.announceBalancesChanged(t[0],t[1]),!0)}}var Bt=r(5522),Ot=r(1902);function Ct(){return At.Z.getVersion()}function Lt(t,e,r){return Mt.Z.connectToDaemonRpc(t,e,r)}function jt(t,e,r){return Rt.connectToWalletRpc(t,e,r)}function Zt(t){return Ot.Z.createWallet(new gt.Z(t))}function Dt(t){return Ot.Z.openWallet(new gt.Z(t))}function Ft(t){return Bt.a.createWallet(new gt.Z(t))}const zt={GenUtils:i.Z,Filter:n,MoneroError:s.Z,HttpClient:o.Z,LibraryUtils:a.Z,MoneroRpcConnection:u.Z,MoneroRpcError:h.Z,SslOptions:c,TaskLooper:d.Z,ConnectionType:f,MoneroAltChain:g.Z,MoneroBan:m.Z,MoneroBlockHeader:y.Z,MoneroBlock:v.Z,MoneroBlockTemplate:b.Z,MoneroConnectionSpan:w.Z,MoneroDaemonConfig:E.Z,MoneroDaemonInfo:S.Z,MoneroDaemonListener:N.Z,MoneroDaemonSyncInfo:M.Z,MoneroDaemonUpdateCheckResult:x.Z,MoneroDaemonUpdateDownloadResult:I.Z,MoneroFeeEstimate:A.Z,MoneroHardForkInfo:P.Z,MoneroKeyImage:T.Z,MoneroKeyImageSpentStatus:R,MoneroMinerTxSum:B.Z,MoneroMiningStatus:O.Z,MoneroNetworkType:C.Z,MoneroOutput:L.Z,MoneroOutputHistogramEntry:j.Z,MoneroSubmitTxResult:Z.Z,MoneroTx:D.Z,MoneroTxPoolStats:F.Z,MoneroVersion:z.Z,MoneroPeer:H.Z,MoneroPruneResult:W.Z,MoneroAccount:K.Z,MoneroAccountTag:q.Z,MoneroAddressBookEntry:U.Z,MoneroCheck:V.Z,MoneroCheckReserve:X.Z,MoneroCheckTx:G.Z,MoneroDestination:Y.Z,MoneroIntegratedAddress:Q.Z,MoneroKeyImageImportResult:J.Z,MoneroMultisigInfo:_.Z,MoneroMultisigInitResult:$.Z,MoneroMultisigSignResult:tt.Z,MoneroOutputWallet:et.Z,MoneroOutputQuery:rt.Z,MoneroTxPriority:it,MoneroTxConfig:nt.Z,MoneroSubaddress:st.Z,MoneroSyncResult:ot.Z,MoneroTransfer:at.Z,MoneroIncomingTransfer:ut.Z,MoneroOutgoingTransfer:ht.Z,MoneroTransferQuery:ct.Z,MoneroTxSet:lt.Z,MoneroTxWallet:dt.Z,MoneroTxQuery:ft.Z,MoneroWalletListener:pt.Z,MoneroWalletConfig:gt.Z,MoneroMessageSignatureType:mt.Z,MoneroMessageSignatureResult:yt.Z,MoneroConnectionManagerListener:Et.Z,MoneroConnectionManager:wt,MoneroDaemon:St.Z,MoneroWallet:Nt.Z,MoneroDaemonRpc:Mt.Z,MoneroWalletRpc:Rt,MoneroWalletKeys:Bt.a,MoneroWalletFull:Ot.Z,MoneroUtils:At.Z,ThreadPool:vt.Z,getVersion:Ct,connectToDaemonRpc:Lt,connectToWalletRpc:jt,createWalletFull:Zt,openWalletFull:Dt,createWalletKeys:Ft}},6048:(t,e,r)=>{"use strict";r.d(e,{Z:()=>a});var i=r(9282),n=r.n(i),s=r(1195),o=r.n(s);class a{static isDefined(t){return void 0!==t}static isUndefined(t){return void 0===t}static isInitialized(t){return null!=t}static isUninitialized(t){return!t}static isNumber(t){return!isNaN(parseFloat(t))&&isFinite(t)}static isInt(t){return t===parseInt(""+Number(t))&&!isNaN(t)&&!isNaN(parseInt(t,10))}static isArray(t){return t instanceof Array&&Array.isArray(t)}static isString(t){return"string"==typeof t}static isBoolean(t){return"boolean"==typeof t}static isFunction(t){return"function"==typeof t}static isObject(t,e){return!!t&&"object"==typeof t&&(!e||t instanceof e)}static isUpperCase(t){return t.toUpperCase()===t}static isLowerCase(t){return t.toLowerCase()===t}static assertHex(t,e){a.assertTrue(a.isHex(t),e||"Argument asserted as hex but is not hex")}static isHex(t){return"string"==typeof t&&0!==t.length&&(t.match(/([0-9]|[a-f])/gim)||[]).length===t.length}static isBase32(t){return"string"==typeof t&&(a.assertTrue(t.length>0,"Cannot determine if empty string is base32"),/^[ABCDEFGHIJKLMNOPQRSTUVWXYZ234567]+$/.test(t))}static assertBase58(t,e){a.assertTrue(a.isBase58(t),e||"Argument asserted as base58 but is not base58")}static isBase58(t){return"string"==typeof t&&(a.assertTrue(t.length>0,"Cannot determine if empty string is base58"),/^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+$/.test(t))}static assertBase64(t,e){a.assertTrue(a.isBase64(t),e||"Argument asserted as base64 but is not base64")}static isBase64(t){if("string"!=typeof t)return!1;a.assertTrue(t.length>0,"Cannot determine if empty string is base64");try{return btoa(atob(t))==t}catch(t){return!1}}static fail(t){throw new Error(t||"Failure (no message)")}static assertTrue(t,e){if("boolean"!=typeof t)throw new Error("Argument is not a boolean");if(!t)throw new Error(e||"Boolean asserted as true but was false")}static assertFalse(t,e){if("boolean"!=typeof t)throw new Error("Argument is not a boolean");if(t)throw new Error(e||"Boolean asserted as false but was true")}static assertNull(t,e){if(null!==t)throw new Error(e||"Argument asserted as null but was not null: "+t)}static assertNotNull(t,e){if(null===t)throw new Error(e||"Argument asserted as not null but was null")}static assertDefined(t,e){if(a.isUndefined(t))throw new Error(e||"Argument asserted as defined but was undefined")}static assertUndefined(t,e){if(a.isDefined(t))throw new Error(e||"Argument asserted as undefined but was defined: "+t)}static assertInitialized(t,e){if(a.isUninitialized(t))throw new Error(e||"Argument asserted as initialized but was "+t)}static assertUninitialized(t,e){if(a.isInitialized(t))throw new Error(e||"Argument asserted as uninitialized but was initialized")}static assertEquals(t,e,r){a.assertTrue(a.equals(t,e),r||"Arguments asserted as equal but are not equal: "+t+" vs "+e)}static assertNotEquals(t,e,r){if(t===e)throw new Error(r||"Arguments asserted as not equal but are equal: "+t+" vs "+e)}static assertInt(t,e){if(!a.isInt(t))throw new Error(e||"Argument asserted as an integer but is not an integer")}static assertNumber(t,e){if(!a.isNumber(t))throw new Error(e||"Argument asserted as a number but is not a number")}static assertBoolean(t,e){if(!a.isBoolean(t))throw new Error(e||"Argument asserted as a boolean but is not a boolean")}static assertString(t,e){if(!a.isString(t))throw new Error(e||"Argument asserted as a string but is not a string: "+t)}static assertArray(t,e){if(!a.isArray(t))throw new Error(e||"Argument asserted as an array but is not an array")}static assertFunction(t,e){if(!a.isFunction(t))throw new Error(e||"Argument asserted as a static but is not a static")}static assertObject(t,e,r){if(a.assertInitialized(t,r),e){if(!a.isObject(t,e))throw new Error(r||"Argument asserted as object '"+e.name+"' but was not")}else if(!a.isObject(t))throw new Error(r||"Argument asserted as object but was not")}static inheritsFrom(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t}static invoke(){let t=arguments[0],e=[];for(let t=1;t<arguments.length;t++)e.push(arguments[t]);for(let r=0;r<t.length;r++)a.assertFunction(t[r],"Functions["+r+"] is not a static"),t[r].apply(null,e)}static getPowerSet(t){let e=function(t,r,i,n){if(0!=t)for(let s=0;s<r.length;s++)e(t-1,r.slice(s+1),i.concat([r[s]]),n);else i.length>0&&(n[n.length]=i)},r=[];r.push([]);for(let i=0;i<t.length;i++)e(i,t,[],r);return r.push(t),r}static getPowerSetOfLength(t,e){a.assertInitialized(t),a.assertInitialized(e),a.assertTrue(e>=1);let r=a.getPowerSet(t),i=[];for(let t=0;t<r.length;t++)r[t].length===e&&i.push(r[t]);return i}static getIndices(t){let e=[];for(let r=0;r<t;r++)e.push(r);return e}static toUniqueArray(t){return t.filter((function(t,e,r){return r.indexOf(t)===e}))}static copyArray(t){a.assertArray(t);let e=[];for(let r=0;r<t.length;r++)e.push(t[r]);return e}static remove(t,e){let r=!1;for(let i=t.length-1;i>=0;i--)t[i]===e&&(t.splice(i,1),r=!0,i--);return r}static toLowerCaseArray(t){let e=[];for(let r=0;r<t.length;r++)e.push(t[r].toLowerCase());return e}static listify(t){return a.isArray(t)?t:[t]}static arrayContains(t,e,r=!1){a.assertTrue(a.isArray(t));for(let i=0;i<t.length;i++){if(t[i]===e)return!0;if(!r&&a.equals(t[i],e))return!0}return!1}static strContains(t,e){return t.indexOf(e)>-1}static arraysEqual(t,e){if(t===e)return!0;if(null==t&&null==e)return!0;if(null==t||null==e)return!1;if(void 0===t&&void 0===e)return!0;if(void 0===t||void 0===e)return!1;if(!a.isArray(t))throw new Error("First argument is not an array");if(!a.isArray(e))throw new Error("Second argument is not an array");if(t.length!=e.length)return!1;for(let r=0;r<t.length;++r)if(!a.equals(t[r],e[r]))return!1;return!0}static equals(t,e){return a.isArray(t)&&a.isArray(e)?a.arraysEqual(t,e):a.isObject(t)&&a.isObject(e)?a.objectsEqual(t,e):t===e}static objectsEqual(t,e){let r=Object.keys(t),i=Object.keys(e);for(let n of r){let r=!1;for(let s of i)if(n===s){if(!a.equals(t[n],e[s]))return!1;r=!0;break}if(!r&&void 0!==t[n])return!1}for(let t of i){let i=!1;for(let e of r)if(e===t){i=!0;break}if(!i&&void 0!==e[t])return!1}return!0}static deleteUndefinedKeys(t){for(let e of Object.keys(t))void 0===t[e]&&delete t[e]}static getCombinations(t,e){a.assertInitialized(t),a.assertInitialized(e),a.assertTrue(e>=1);let r=a.getPowerSetOfLength(a.getIndices(t.length),e),i=[];for(let e=0;e<r.length;e++){let n=r[e],s=[];for(let e=0;e<n.length;e++)s.push(t[n[e]]);i.push(s)}return i}static getDownloadableA(t,e){let r=window.document.createElement("a");return r.href=window.URL.createObjectURL(new Blob([e],{type:"text/plain"})),r.download=t,r.target="_blank",r.innerHTML=t,r}static copyProperties(t){return JSON.parse(JSON.stringify(t))}static deleteProperties(t){let e=[];for(let r in t)e.push(r);for(let r=0;r<e.length;r++)delete t[e[r].toString()]}static hasWhitespace(t){return/\s/g.test(t)}static isWhitespace(t){return/\s/.test(t)}static isNewline(t){return"\n"===t||"\r"===t}static countNonWhitespaceCharacters(t){let e=0;for(let r=0;r<t.length;r++)a.isWhitespace(t.charAt(r))||e++;return e}static getWhitespaceTokens(t){return t.match(/\S+/g)}static getLines(t){return t.match(/[^\r\n]+/g)}static getInternalStyleSheet(){for(let t=0;t<document.styleSheets.length;t++){let e=document.styleSheets[t];if(!e.href)return e}return null}static getInternalStyleSheetText(){let t="",e=a.getInternalStyleSheet();if(!e)return null;for(let r=0;r<e.cssRules.length;r++)t+=e.cssRules[r].cssText+"\n";return t}static buildHtmlDocument(t){let e="<!DOCTYPE HTML>";if(e+="<html><head>",t.metas){let r=a.listify(t.metas);for(let t=0;t<r.length;t++){let i=r[t],n=document.createElement("meta");for(let t in i)i.hasOwnProperty(t)&&n.setAttribute(t.toString(),i[t.toString()]);e+=n.outerHTML}}if(e+=t.title?"<title>"+t.title+"</title>":"",e+=t.internalCss?"<style>"+t.internalCss+"</style>":"",t.dependencyPaths){let r=a.listify(t.dependencyPaths);for(let t=0;t<r.length;t++){let i=r[t];if(i.endsWith(".js"))e+="<script src='"+i+"'><\/script>";else if(i.endsWith(".css"))e+="<link rel='stylesheet' type='text/css' href='"+i+"'/>";else{if(!i.endsWith(".png")&&!i.endsWith(".img"))throw new Error("Unrecognized dependency path extension: "+i);e+="<img src='"+i+"'>"}}}return e+="</head><body>",t.div&&(e+=$("<div>").append(t.div.clone()).html()),e+="</body></html>",e}static newWindow(t,e){let r=!1,i=window.open();function n(t,i){r||(r=!0,e&&e(t,i))}a.isInitialized(i)&&a.isInitialized(i.document)?(i.opener=null,i.document.write(a.buildHtmlDocument(t)),i.addEventListener("load",(function(){n(null,i)})),i.document.close()):n(new Error("Could not get window reference"))}static imgToDataUrl(t,e){let r=document.createElement("canvas");return r.height=t.naturalHeight,r.width=t.naturalWidth,r.getContext("2d").drawImage(t,0,0),r.toDataURL(e)}static isImageAccessible(t,e,r){let i=!1,n=new Image;function s(t){i||(i=!0,void 0===t||"error"===t.type?r(!1):r(!0))}n.onload=s,n.onerror=s,n.src=t+"?"+ +new Date,setTimeout((function(){setImmediate((function(){setImmediate((function(){setImmediate((function(){i||(i=!0,r(!1))}))}))}))}),e)}static isZipFile(t){return t.name.endsWith(".zip")||"application/zip"===t.type}static isJsonFile(t){return t.name.endsWith(".json")||"application/json"===t.type}static isTxtFile(t){return t.name.endsWith(".txt")||"text/plain"===t.type}static getImages(t,e){a.isArray(t)||(a.assertTrue(a.isString(t)),t=[t]);let r=[];for(let e=0;e<t.length;e++)r.push(i(t[e]));function i(t){return function(e){let r=new Image;r.onload=function(){e(null,r)},r.onerror=function(){e(new Error("Cannot load image: "+t))},r.src=t}}o().parallel(r,e)}static getIndent(t){let e="";for(let r=0;r<t;r++)e+="  ";return e}static initPolyfills(){"function"!=typeof Object.assign&&Object.defineProperty(Object,"assign",{value:function(t,e){if(null==t)throw new TypeError("Cannot convert undefined or null to object");let r=Object(t);for(let t=1;t<arguments.length;t++){let e=arguments[t];if(null!=e)for(let t in e)Object.prototype.hasOwnProperty.call(e,t)&&(r[t]=e[t])}return r},writable:!0,configurable:!0}),String.prototype.startsWith=function(t,e){return this.substr(e||0,t.length)===t},String.prototype.endsWith=function(t,e){return e<this.length?e|=0:e=this.length,this.substr(e-t.length,t.length)===t}}static getUUID(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(t){let e=16*Math.random()|0;return("x"==t?e:3&e|8).toString(16)}))}static isBrowser(){let t="function"==typeof importScripts,e=new Function("try {return this===window;}catch(e){return false;}")(),r=!!e&&new Function("try {return window.navigator.userAgent.includes('jsdom');}catch(e){return false;}")();return t||e&&!r}static isFirefox(){return this.isBrowser()&&navigator.userAgent.indexOf("Firefox")>0}static getIEVersion(){let t=window.navigator.userAgent,e=t.indexOf("MSIE ");if(e>0)return parseInt(t.substring(e+5,t.indexOf(".",e)),10);if(t.indexOf("Trident/")>0){let e=t.indexOf("rv:");return parseInt(t.substring(e+3,t.indexOf(".",e)),10)}let r=t.indexOf("Edge/");return r>0?parseInt(t.substring(r+5,t.indexOf(".",r)),10):null}static getParameterByName(t,e){e||(e=window.location.href),t=t.replace(/[\[\]]/g,"\\$&");let r=new RegExp("[?&]"+t+"(=([^&#]*)|&|#|$)").exec(e);return r?r[2]?decodeURIComponent(r[2].replace(/\+/g," ")):"":null}static getRandomInt(t,e){return t=Math.ceil(t),e=Math.floor(e),Math.floor(Math.random()*(e-t+1))+t}static getRandomInts(t,e,r){a.assertTrue("number"==typeof r);let i=[];for(let n=0;n<r;n++)i.push(a.getRandomInt(t,e));return i}static getUniqueRandomInts(t,e,r){let i=[];for(a.assertTrue(r>=0),a.assertTrue(e-t+1>=r);i.length<r;){let r=a.getRandomInt(t,e);i.includes(r)||i.push(r)}return i}static shuffle(t){for(var e=t.length-1;e>0;e--){var r=Math.floor(Math.random()*(e+1)),i=t[e];t[e]=t[r],t[r]=i}}static sort(t){t.sort(((t,e)=>t===e?0:t>e?1:-1))}static safeSet(t,e,r,i,n,s){let o=e.call(t),u=a.reconcile(o,i,n,s);o!==u&&r.call(t,u)}static reconcile(t,e,r,i){if(t===e)return t;if("bigint"==typeof t&&"bigint"==typeof e&&t===e)return t;if(void 0===t||void 0===e)return r&&!1===r.resolveDefined?void 0:void 0===t?e:t;if(r&&void 0!==r.resolveTrue&&"boolean"==typeof t&&"boolean"==typeof e)return n().equal(typeof r.resolveTrue,"boolean"),r.resolveTrue;if(r&&void 0!==r.resolveMax){if(n().equal(typeof r.resolveMax,"boolean"),"number"==typeof t&&"number"==typeof e)return r.resolveMax?Math.max(t,e):Math.min(t,e);if("bigint"==typeof t&&"bigint"==typeof e)return r.resolveMax?t:e}return n().deepEqual(t,e,i||"Cannot reconcile values "+t+" and "+e+" with config: "+JSON.stringify(r)),t}static kvLine(t,e,r=0,i=!0,n=!0){return void 0===e&&n?"":a.getIndent(r)+t+": "+e+(i?"\n":"")}static stringifyBigInts(t){return t.replace(/("[^"]*"\s*:\s*)(\d{16,})/g,'$1"$2"')}static printStackTrace(t){try{throw new Error(t)}catch(t){console.error(t.stack)}}static async waitFor(t){return new Promise((function(e){setTimeout(e,t)}))}static async killProcess(t,e){return new Promise(((r,i)=>{t.on("exit",(function(t,e){r(t)})),t.on("error",(function(t){i(t)}));try{t.kill(void 0===e?"SIGINT":e)||r(void 0)}catch(t){i(t)}}))}static normalizeUri(t){if(!t)throw Error("Must provide URI to normalize");return t=t.replace(/\/$/,""),new RegExp("^\\w+://.+").test(t)||(t="http://"+t),t}static abs(t){return t<0?-t:t}static getEnumKeyByValue(t,e){for(let r in t)if(t[r]===e)return r}static async executeWithTimeout(t,e){return new Promise(((r,i)=>{const n=setTimeout((()=>{i("Execution timed out in "+e+" milliseconds")}),e);t.then((t=>{clearTimeout(n),r(t)}),(t=>{clearTimeout(n),i(t)}))}))}}},6384:(t,e,r)=>{"use strict";r.d(e,{Z:()=>Be});var i={};r.r(i),r.d(i,{hasBrowserEnv:()=>Mt,hasStandardBrowserEnv:()=>xt,hasStandardBrowserWebWorkerEnv:()=>At,origin:()=>Pt});var n=r(6048),s=r(9390),o=r(1084),a=r(1761),u=r.n(a),h=r(8501),c=r.n(h),l=r(9267),d=r.n(l);function f(t,e){return function(){return t.apply(e,arguments)}}var p=r(4155);const{toString:g}=Object.prototype,{getPrototypeOf:m}=Object,y=(v=Object.create(null),t=>{const e=g.call(t);return v[e]||(v[e]=e.slice(8,-1).toLowerCase())});var v;const b=t=>(t=t.toLowerCase(),e=>y(e)===t),w=t=>e=>typeof e===t,{isArray:E}=Array,S=w("undefined"),N=b("ArrayBuffer"),M=w("string"),x=w("function"),I=w("number"),A=t=>null!==t&&"object"==typeof t,P=t=>{if("object"!==y(t))return!1;const e=m(t);return!(null!==e&&e!==Object.prototype&&null!==Object.getPrototypeOf(e)||Symbol.toStringTag in t||Symbol.iterator in t)},T=b("Date"),R=b("File"),k=b("Blob"),B=b("FileList"),O=b("URLSearchParams"),[C,L,j,Z]=["ReadableStream","Request","Response","Headers"].map(b);function D(t,e,{allOwnKeys:r=!1}={}){if(null==t)return;let i,n;if("object"!=typeof t&&(t=[t]),E(t))for(i=0,n=t.length;i<n;i++)e.call(null,t[i],i,t);else{const n=r?Object.getOwnPropertyNames(t):Object.keys(t),s=n.length;let o;for(i=0;i<s;i++)o=n[i],e.call(null,t[o],o,t)}}function F(t,e){e=e.toLowerCase();const r=Object.keys(t);let i,n=r.length;for(;n-- >0;)if(i=r[n],e===i.toLowerCase())return i;return null}const z="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:global,H=t=>!S(t)&&t!==z,W=(K="undefined"!=typeof Uint8Array&&m(Uint8Array),t=>K&&t instanceof K);var K;const q=b("HTMLFormElement"),U=(({hasOwnProperty:t})=>(e,r)=>t.call(e,r))(Object.prototype),V=b("RegExp"),X=(t,e)=>{const r=Object.getOwnPropertyDescriptors(t),i={};D(r,((r,n)=>{let s;!1!==(s=e(r,n,t))&&(i[n]=s||r)})),Object.defineProperties(t,i)},G="abcdefghijklmnopqrstuvwxyz",Y="0123456789",Q={DIGIT:Y,ALPHA:G,ALPHA_DIGIT:G+G.toUpperCase()+Y},J=b("AsyncFunction"),_=($="function"==typeof setImmediate,tt=x(z.postMessage),$?setImmediate:tt?(et=`axios@${Math.random()}`,rt=[],z.addEventListener("message",(({source:t,data:e})=>{t===z&&e===et&&rt.length&&rt.shift()()}),!1),t=>{rt.push(t),z.postMessage(et,"*")}):t=>setTimeout(t));var $,tt,et,rt;const it="undefined"!=typeof queueMicrotask?queueMicrotask.bind(z):void 0!==p&&p.nextTick||_,nt={isArray:E,isArrayBuffer:N,isBuffer:function(t){return null!==t&&!S(t)&&null!==t.constructor&&!S(t.constructor)&&x(t.constructor.isBuffer)&&t.constructor.isBuffer(t)},isFormData:t=>{let e;return t&&("function"==typeof FormData&&t instanceof FormData||x(t.append)&&("formdata"===(e=y(t))||"object"===e&&x(t.toString)&&"[object FormData]"===t.toString()))},isArrayBufferView:function(t){let e;return e="undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(t):t&&t.buffer&&N(t.buffer),e},isString:M,isNumber:I,isBoolean:t=>!0===t||!1===t,isObject:A,isPlainObject:P,isReadableStream:C,isRequest:L,isResponse:j,isHeaders:Z,isUndefined:S,isDate:T,isFile:R,isBlob:k,isRegExp:V,isFunction:x,isStream:t=>A(t)&&x(t.pipe),isURLSearchParams:O,isTypedArray:W,isFileList:B,forEach:D,merge:function t(){const{caseless:e}=H(this)&&this||{},r={},i=(i,n)=>{const s=e&&F(r,n)||n;P(r[s])&&P(i)?r[s]=t(r[s],i):P(i)?r[s]=t({},i):E(i)?r[s]=i.slice():r[s]=i};for(let t=0,e=arguments.length;t<e;t++)arguments[t]&&D(arguments[t],i);return r},extend:(t,e,r,{allOwnKeys:i}={})=>(D(e,((e,i)=>{r&&x(e)?t[i]=f(e,r):t[i]=e}),{allOwnKeys:i}),t),trim:t=>t.trim?t.trim():t.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,""),stripBOM:t=>(65279===t.charCodeAt(0)&&(t=t.slice(1)),t),inherits:(t,e,r,i)=>{t.prototype=Object.create(e.prototype,i),t.prototype.constructor=t,Object.defineProperty(t,"super",{value:e.prototype}),r&&Object.assign(t.prototype,r)},toFlatObject:(t,e,r,i)=>{let n,s,o;const a={};if(e=e||{},null==t)return e;do{for(n=Object.getOwnPropertyNames(t),s=n.length;s-- >0;)o=n[s],i&&!i(o,t,e)||a[o]||(e[o]=t[o],a[o]=!0);t=!1!==r&&m(t)}while(t&&(!r||r(t,e))&&t!==Object.prototype);return e},kindOf:y,kindOfTest:b,endsWith:(t,e,r)=>{t=String(t),(void 0===r||r>t.length)&&(r=t.length),r-=e.length;const i=t.indexOf(e,r);return-1!==i&&i===r},toArray:t=>{if(!t)return null;if(E(t))return t;let e=t.length;if(!I(e))return null;const r=new Array(e);for(;e-- >0;)r[e]=t[e];return r},forEachEntry:(t,e)=>{const r=(t&&t[Symbol.iterator]).call(t);let i;for(;(i=r.next())&&!i.done;){const r=i.value;e.call(t,r[0],r[1])}},matchAll:(t,e)=>{let r;const i=[];for(;null!==(r=t.exec(e));)i.push(r);return i},isHTMLForm:q,hasOwnProperty:U,hasOwnProp:U,reduceDescriptors:X,freezeMethods:t=>{X(t,((e,r)=>{if(x(t)&&-1!==["arguments","caller","callee"].indexOf(r))return!1;const i=t[r];x(i)&&(e.enumerable=!1,"writable"in e?e.writable=!1:e.set||(e.set=()=>{throw Error("Can not rewrite read-only method '"+r+"'")}))}))},toObjectSet:(t,e)=>{const r={},i=t=>{t.forEach((t=>{r[t]=!0}))};return E(t)?i(t):i(String(t).split(e)),r},toCamelCase:t=>t.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,(function(t,e,r){return e.toUpperCase()+r})),noop:()=>{},toFiniteNumber:(t,e)=>null!=t&&Number.isFinite(t=+t)?t:e,findKey:F,global:z,isContextDefined:H,ALPHABET:Q,generateString:(t=16,e=Q.ALPHA_DIGIT)=>{let r="";const{length:i}=e;for(;t--;)r+=e[Math.random()*i|0];return r},isSpecCompliantForm:function(t){return!!(t&&x(t.append)&&"FormData"===t[Symbol.toStringTag]&&t[Symbol.iterator])},toJSONObject:t=>{const e=new Array(10),r=(t,i)=>{if(A(t)){if(e.indexOf(t)>=0)return;if(!("toJSON"in t)){e[i]=t;const n=E(t)?[]:{};return D(t,((t,e)=>{const s=r(t,i+1);!S(s)&&(n[e]=s)})),e[i]=void 0,n}}return t};return r(t,0)},isAsyncFn:J,isThenable:t=>t&&(A(t)||x(t))&&x(t.then)&&x(t.catch),setImmediate:_,asap:it};function st(t,e,r,i,n){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack,this.message=t,this.name="AxiosError",e&&(this.code=e),r&&(this.config=r),i&&(this.request=i),n&&(this.response=n)}nt.inherits(st,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:nt.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});const ot=st.prototype,at={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach((t=>{at[t]={value:t}})),Object.defineProperties(st,at),Object.defineProperty(ot,"isAxiosError",{value:!0}),st.from=(t,e,r,i,n,s)=>{const o=Object.create(ot);return nt.toFlatObject(t,o,(function(t){return t!==Error.prototype}),(t=>"isAxiosError"!==t)),st.call(o,t.message,e,r,i,n),o.cause=t,o.name=t.name,s&&Object.assign(o,s),o};const ut=st;var ht=r(8764).Buffer;function ct(t){return nt.isPlainObject(t)||nt.isArray(t)}function lt(t){return nt.endsWith(t,"[]")?t.slice(0,-2):t}function dt(t,e,r){return t?t.concat(e).map((function(t,e){return t=lt(t),!r&&e?"["+t+"]":t})).join(r?".":""):e}const ft=nt.toFlatObject(nt,{},null,(function(t){return/^is[A-Z]/.test(t)})),pt=function(t,e,r){if(!nt.isObject(t))throw new TypeError("target must be an object");e=e||new FormData;const i=(r=nt.toFlatObject(r,{metaTokens:!0,dots:!1,indexes:!1},!1,(function(t,e){return!nt.isUndefined(e[t])}))).metaTokens,n=r.visitor||h,s=r.dots,o=r.indexes,a=(r.Blob||"undefined"!=typeof Blob&&Blob)&&nt.isSpecCompliantForm(e);if(!nt.isFunction(n))throw new TypeError("visitor must be a function");function u(t){if(null===t)return"";if(nt.isDate(t))return t.toISOString();if(!a&&nt.isBlob(t))throw new ut("Blob is not supported. Use a Buffer instead.");return nt.isArrayBuffer(t)||nt.isTypedArray(t)?a&&"function"==typeof Blob?new Blob([t]):ht.from(t):t}function h(t,r,n){let a=t;if(t&&!n&&"object"==typeof t)if(nt.endsWith(r,"{}"))r=i?r:r.slice(0,-2),t=JSON.stringify(t);else if(nt.isArray(t)&&function(t){return nt.isArray(t)&&!t.some(ct)}(t)||(nt.isFileList(t)||nt.endsWith(r,"[]"))&&(a=nt.toArray(t)))return r=lt(r),a.forEach((function(t,i){!nt.isUndefined(t)&&null!==t&&e.append(!0===o?dt([r],i,s):null===o?r:r+"[]",u(t))})),!1;return!!ct(t)||(e.append(dt(n,r,s),u(t)),!1)}const c=[],l=Object.assign(ft,{defaultVisitor:h,convertValue:u,isVisitable:ct});if(!nt.isObject(t))throw new TypeError("data must be an object");return function t(r,i){if(!nt.isUndefined(r)){if(-1!==c.indexOf(r))throw Error("Circular reference detected in "+i.join("."));c.push(r),nt.forEach(r,(function(r,s){!0===(!(nt.isUndefined(r)||null===r)&&n.call(e,r,nt.isString(s)?s.trim():s,i,l))&&t(r,i?i.concat(s):[s])})),c.pop()}}(t),e};function gt(t){const e={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(t).replace(/[!'()~]|%20|%00/g,(function(t){return e[t]}))}function mt(t,e){this._pairs=[],t&&pt(t,this,e)}const yt=mt.prototype;yt.append=function(t,e){this._pairs.push([t,e])},yt.toString=function(t){const e=t?function(e){return t.call(this,e,gt)}:gt;return this._pairs.map((function(t){return e(t[0])+"="+e(t[1])}),"").join("&")};const vt=mt;function bt(t){return encodeURIComponent(t).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function wt(t,e,r){if(!e)return t;const i=r&&r.encode||bt,n=r&&r.serialize;let s;if(s=n?n(e,r):nt.isURLSearchParams(e)?e.toString():new vt(e,r).toString(i),s){const e=t.indexOf("#");-1!==e&&(t=t.slice(0,e)),t+=(-1===t.indexOf("?")?"?":"&")+s}return t}const Et=class{constructor(){this.handlers=[]}use(t,e,r){return this.handlers.push({fulfilled:t,rejected:e,synchronous:!!r&&r.synchronous,runWhen:r?r.runWhen:null}),this.handlers.length-1}eject(t){this.handlers[t]&&(this.handlers[t]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(t){nt.forEach(this.handlers,(function(e){null!==e&&t(e)}))}},St={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},Nt={isBrowser:!0,classes:{URLSearchParams:"undefined"!=typeof URLSearchParams?URLSearchParams:vt,FormData:"undefined"!=typeof FormData?FormData:null,Blob:"undefined"!=typeof Blob?Blob:null},protocols:["http","https","file","blob","url","data"]},Mt="undefined"!=typeof window&&"undefined"!=typeof document,xt=(It="undefined"!=typeof navigator&&navigator.product,Mt&&["ReactNative","NativeScript","NS"].indexOf(It)<0);var It;const At="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&"function"==typeof self.importScripts,Pt=Mt&&window.location.href||"http://localhost",Tt={...i,...Nt},Rt=function(t){function e(t,r,i,n){let s=t[n++];if("__proto__"===s)return!0;const o=Number.isFinite(+s),a=n>=t.length;return s=!s&&nt.isArray(i)?i.length:s,a?(nt.hasOwnProp(i,s)?i[s]=[i[s],r]:i[s]=r,!o):(i[s]&&nt.isObject(i[s])||(i[s]=[]),e(t,r,i[s],n)&&nt.isArray(i[s])&&(i[s]=function(t){const e={},r=Object.keys(t);let i;const n=r.length;let s;for(i=0;i<n;i++)s=r[i],e[s]=t[s];return e}(i[s])),!o)}if(nt.isFormData(t)&&nt.isFunction(t.entries)){const r={};return nt.forEachEntry(t,((t,i)=>{e(function(t){return nt.matchAll(/\w+|\[(\w*)]/g,t).map((t=>"[]"===t[0]?"":t[1]||t[0]))}(t),i,r,0)})),r}return null},kt={transitional:St,adapter:["xhr","http","fetch"],transformRequest:[function(t,e){const r=e.getContentType()||"",i=r.indexOf("application/json")>-1,n=nt.isObject(t);if(n&&nt.isHTMLForm(t)&&(t=new FormData(t)),nt.isFormData(t))return i?JSON.stringify(Rt(t)):t;if(nt.isArrayBuffer(t)||nt.isBuffer(t)||nt.isStream(t)||nt.isFile(t)||nt.isBlob(t)||nt.isReadableStream(t))return t;if(nt.isArrayBufferView(t))return t.buffer;if(nt.isURLSearchParams(t))return e.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),t.toString();let s;if(n){if(r.indexOf("application/x-www-form-urlencoded")>-1)return function(t,e){return pt(t,new Tt.classes.URLSearchParams,Object.assign({visitor:function(t,e,r,i){return Tt.isNode&&nt.isBuffer(t)?(this.append(e,t.toString("base64")),!1):i.defaultVisitor.apply(this,arguments)}},e))}(t,this.formSerializer).toString();if((s=nt.isFileList(t))||r.indexOf("multipart/form-data")>-1){const e=this.env&&this.env.FormData;return pt(s?{"files[]":t}:t,e&&new e,this.formSerializer)}}return n||i?(e.setContentType("application/json",!1),function(t,e,r){if(nt.isString(t))try{return(0,JSON.parse)(t),nt.trim(t)}catch(t){if("SyntaxError"!==t.name)throw t}return(0,JSON.stringify)(t)}(t)):t}],transformResponse:[function(t){const e=this.transitional||kt.transitional,r=e&&e.forcedJSONParsing,i="json"===this.responseType;if(nt.isResponse(t)||nt.isReadableStream(t))return t;if(t&&nt.isString(t)&&(r&&!this.responseType||i)){const r=!(e&&e.silentJSONParsing)&&i;try{return JSON.parse(t)}catch(t){if(r){if("SyntaxError"===t.name)throw ut.from(t,ut.ERR_BAD_RESPONSE,this,null,this.response);throw t}}}return t}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:Tt.classes.FormData,Blob:Tt.classes.Blob},validateStatus:function(t){return t>=200&&t<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};nt.forEach(["delete","get","head","post","put","patch"],(t=>{kt.headers[t]={}}));const Bt=kt,Ot=nt.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),Ct=Symbol("internals");function Lt(t){return t&&String(t).trim().toLowerCase()}function jt(t){return!1===t||null==t?t:nt.isArray(t)?t.map(jt):String(t)}function Zt(t,e,r,i,n){return nt.isFunction(i)?i.call(this,e,r):(n&&(e=r),nt.isString(e)?nt.isString(i)?-1!==e.indexOf(i):nt.isRegExp(i)?i.test(e):void 0:void 0)}class Dt{constructor(t){t&&this.set(t)}set(t,e,r){const i=this;function n(t,e,r){const n=Lt(e);if(!n)throw new Error("header name must be a non-empty string");const s=nt.findKey(i,n);(!s||void 0===i[s]||!0===r||void 0===r&&!1!==i[s])&&(i[s||e]=jt(t))}const s=(t,e)=>nt.forEach(t,((t,r)=>n(t,r,e)));if(nt.isPlainObject(t)||t instanceof this.constructor)s(t,e);else if(nt.isString(t)&&(t=t.trim())&&!/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(t.trim()))s((t=>{const e={};let r,i,n;return t&&t.split("\n").forEach((function(t){n=t.indexOf(":"),r=t.substring(0,n).trim().toLowerCase(),i=t.substring(n+1).trim(),!r||e[r]&&Ot[r]||("set-cookie"===r?e[r]?e[r].push(i):e[r]=[i]:e[r]=e[r]?e[r]+", "+i:i)})),e})(t),e);else if(nt.isHeaders(t))for(const[e,i]of t.entries())n(i,e,r);else null!=t&&n(e,t,r);return this}get(t,e){if(t=Lt(t)){const r=nt.findKey(this,t);if(r){const t=this[r];if(!e)return t;if(!0===e)return function(t){const e=Object.create(null),r=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;let i;for(;i=r.exec(t);)e[i[1]]=i[2];return e}(t);if(nt.isFunction(e))return e.call(this,t,r);if(nt.isRegExp(e))return e.exec(t);throw new TypeError("parser must be boolean|regexp|function")}}}has(t,e){if(t=Lt(t)){const r=nt.findKey(this,t);return!(!r||void 0===this[r]||e&&!Zt(0,this[r],r,e))}return!1}delete(t,e){const r=this;let i=!1;function n(t){if(t=Lt(t)){const n=nt.findKey(r,t);!n||e&&!Zt(0,r[n],n,e)||(delete r[n],i=!0)}}return nt.isArray(t)?t.forEach(n):n(t),i}clear(t){const e=Object.keys(this);let r=e.length,i=!1;for(;r--;){const n=e[r];t&&!Zt(0,this[n],n,t,!0)||(delete this[n],i=!0)}return i}normalize(t){const e=this,r={};return nt.forEach(this,((i,n)=>{const s=nt.findKey(r,n);if(s)return e[s]=jt(i),void delete e[n];const o=t?function(t){return t.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,((t,e,r)=>e.toUpperCase()+r))}(n):String(n).trim();o!==n&&delete e[n],e[o]=jt(i),r[o]=!0})),this}concat(...t){return this.constructor.concat(this,...t)}toJSON(t){const e=Object.create(null);return nt.forEach(this,((r,i)=>{null!=r&&!1!==r&&(e[i]=t&&nt.isArray(r)?r.join(", "):r)})),e}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map((([t,e])=>t+": "+e)).join("\n")}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(t){return t instanceof this?t:new this(t)}static concat(t,...e){const r=new this(t);return e.forEach((t=>r.set(t))),r}static accessor(t){const e=(this[Ct]=this[Ct]={accessors:{}}).accessors,r=this.prototype;function i(t){const i=Lt(t);e[i]||(function(t,e){const r=nt.toCamelCase(" "+e);["get","set","has"].forEach((i=>{Object.defineProperty(t,i+r,{value:function(t,r,n){return this[i].call(this,e,t,r,n)},configurable:!0})}))}(r,t),e[i]=!0)}return nt.isArray(t)?t.forEach(i):i(t),this}}Dt.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]),nt.reduceDescriptors(Dt.prototype,(({value:t},e)=>{let r=e[0].toUpperCase()+e.slice(1);return{get:()=>t,set(t){this[r]=t}}})),nt.freezeMethods(Dt);const Ft=Dt;function zt(t,e){const r=this||Bt,i=e||r,n=Ft.from(i.headers);let s=i.data;return nt.forEach(t,(function(t){s=t.call(r,s,n.normalize(),e?e.status:void 0)})),n.normalize(),s}function Ht(t){return!(!t||!t.__CANCEL__)}function Wt(t,e,r){ut.call(this,null==t?"canceled":t,ut.ERR_CANCELED,e,r),this.name="CanceledError"}nt.inherits(Wt,ut,{__CANCEL__:!0});const Kt=Wt;function qt(t,e,r){const i=r.config.validateStatus;r.status&&i&&!i(r.status)?e(new ut("Request failed with status code "+r.status,[ut.ERR_BAD_REQUEST,ut.ERR_BAD_RESPONSE][Math.floor(r.status/100)-4],r.config,r.request,r)):t(r)}const Ut=(t,e,r=3)=>{let i=0;const n=function(t,e){t=t||10;const r=new Array(t),i=new Array(t);let n,s=0,o=0;return e=void 0!==e?e:1e3,function(a){const u=Date.now(),h=i[o];n||(n=u),r[s]=a,i[s]=u;let c=o,l=0;for(;c!==s;)l+=r[c++],c%=t;if(s=(s+1)%t,s===o&&(o=(o+1)%t),u-n<e)return;const d=h&&u-h;return d?Math.round(1e3*l/d):void 0}}(50,250);return function(t,e){let r,i,n=0,s=1e3/e;const o=(e,s=Date.now())=>{n=s,r=null,i&&(clearTimeout(i),i=null),t.apply(null,e)};return[(...t)=>{const e=Date.now(),a=e-n;a>=s?o(t,e):(r=t,i||(i=setTimeout((()=>{i=null,o(r)}),s-a)))},()=>r&&o(r)]}((r=>{const s=r.loaded,o=r.lengthComputable?r.total:void 0,a=s-i,u=n(a);i=s,t({loaded:s,total:o,progress:o?s/o:void 0,bytes:a,rate:u||void 0,estimated:u&&o&&s<=o?(o-s)/u:void 0,event:r,lengthComputable:null!=o,[e?"download":"upload"]:!0})}),r)},Vt=(t,e)=>{const r=null!=t;return[i=>e[0]({lengthComputable:r,total:t,loaded:i}),e[1]]},Xt=t=>(...e)=>nt.asap((()=>t(...e))),Gt=Tt.hasStandardBrowserEnv?function(){const t=/(msie|trident)/i.test(navigator.userAgent),e=document.createElement("a");let r;function i(r){let i=r;return t&&(e.setAttribute("href",i),i=e.href),e.setAttribute("href",i),{href:e.href,protocol:e.protocol?e.protocol.replace(/:$/,""):"",host:e.host,search:e.search?e.search.replace(/^\?/,""):"",hash:e.hash?e.hash.replace(/^#/,""):"",hostname:e.hostname,port:e.port,pathname:"/"===e.pathname.charAt(0)?e.pathname:"/"+e.pathname}}return r=i(window.location.href),function(t){const e=nt.isString(t)?i(t):t;return e.protocol===r.protocol&&e.host===r.host}}():function(){return!0},Yt=Tt.hasStandardBrowserEnv?{write(t,e,r,i,n,s){const o=[t+"="+encodeURIComponent(e)];nt.isNumber(r)&&o.push("expires="+new Date(r).toGMTString()),nt.isString(i)&&o.push("path="+i),nt.isString(n)&&o.push("domain="+n),!0===s&&o.push("secure"),document.cookie=o.join("; ")},read(t){const e=document.cookie.match(new RegExp("(^|;\\s*)("+t+")=([^;]*)"));return e?decodeURIComponent(e[3]):null},remove(t){this.write(t,"",Date.now()-864e5)}}:{write(){},read:()=>null,remove(){}};function Qt(t,e){return t&&!/^([a-z][a-z\d+\-.]*:)?\/\//i.test(e)?function(t,e){return e?t.replace(/\/?\/$/,"")+"/"+e.replace(/^\/+/,""):t}(t,e):e}const Jt=t=>t instanceof Ft?{...t}:t;function _t(t,e){e=e||{};const r={};function i(t,e,r){return nt.isPlainObject(t)&&nt.isPlainObject(e)?nt.merge.call({caseless:r},t,e):nt.isPlainObject(e)?nt.merge({},e):nt.isArray(e)?e.slice():e}function n(t,e,r){return nt.isUndefined(e)?nt.isUndefined(t)?void 0:i(void 0,t,r):i(t,e,r)}function s(t,e){if(!nt.isUndefined(e))return i(void 0,e)}function o(t,e){return nt.isUndefined(e)?nt.isUndefined(t)?void 0:i(void 0,t):i(void 0,e)}function a(r,n,s){return s in e?i(r,n):s in t?i(void 0,r):void 0}const u={url:s,method:s,data:s,baseURL:o,transformRequest:o,transformResponse:o,paramsSerializer:o,timeout:o,timeoutMessage:o,withCredentials:o,withXSRFToken:o,adapter:o,responseType:o,xsrfCookieName:o,xsrfHeaderName:o,onUploadProgress:o,onDownloadProgress:o,decompress:o,maxContentLength:o,maxBodyLength:o,beforeRedirect:o,transport:o,httpAgent:o,httpsAgent:o,cancelToken:o,socketPath:o,responseEncoding:o,validateStatus:a,headers:(t,e)=>n(Jt(t),Jt(e),!0)};return nt.forEach(Object.keys(Object.assign({},t,e)),(function(i){const s=u[i]||n,o=s(t[i],e[i],i);nt.isUndefined(o)&&s!==a||(r[i]=o)})),r}const $t=t=>{const e=_t({},t);let r,{data:i,withXSRFToken:n,xsrfHeaderName:s,xsrfCookieName:o,headers:a,auth:u}=e;if(e.headers=a=Ft.from(a),e.url=wt(Qt(e.baseURL,e.url),t.params,t.paramsSerializer),u&&a.set("Authorization","Basic "+btoa((u.username||"")+":"+(u.password?unescape(encodeURIComponent(u.password)):""))),nt.isFormData(i))if(Tt.hasStandardBrowserEnv||Tt.hasStandardBrowserWebWorkerEnv)a.setContentType(void 0);else if(!1!==(r=a.getContentType())){const[t,...e]=r?r.split(";").map((t=>t.trim())).filter(Boolean):[];a.setContentType([t||"multipart/form-data",...e].join("; "))}if(Tt.hasStandardBrowserEnv&&(n&&nt.isFunction(n)&&(n=n(e)),n||!1!==n&&Gt(e.url))){const t=s&&o&&Yt.read(o);t&&a.set(s,t)}return e},te="undefined"!=typeof XMLHttpRequest&&function(t){return new Promise((function(e,r){const i=$t(t);let n=i.data;const s=Ft.from(i.headers).normalize();let o,a,u,h,c,{responseType:l,onUploadProgress:d,onDownloadProgress:f}=i;function p(){h&&h(),c&&c(),i.cancelToken&&i.cancelToken.unsubscribe(o),i.signal&&i.signal.removeEventListener("abort",o)}let g=new XMLHttpRequest;function m(){if(!g)return;const i=Ft.from("getAllResponseHeaders"in g&&g.getAllResponseHeaders());qt((function(t){e(t),p()}),(function(t){r(t),p()}),{data:l&&"text"!==l&&"json"!==l?g.response:g.responseText,status:g.status,statusText:g.statusText,headers:i,config:t,request:g}),g=null}g.open(i.method.toUpperCase(),i.url,!0),g.timeout=i.timeout,"onloadend"in g?g.onloadend=m:g.onreadystatechange=function(){g&&4===g.readyState&&(0!==g.status||g.responseURL&&0===g.responseURL.indexOf("file:"))&&setTimeout(m)},g.onabort=function(){g&&(r(new ut("Request aborted",ut.ECONNABORTED,t,g)),g=null)},g.onerror=function(){r(new ut("Network Error",ut.ERR_NETWORK,t,g)),g=null},g.ontimeout=function(){let e=i.timeout?"timeout of "+i.timeout+"ms exceeded":"timeout exceeded";const n=i.transitional||St;i.timeoutErrorMessage&&(e=i.timeoutErrorMessage),r(new ut(e,n.clarifyTimeoutError?ut.ETIMEDOUT:ut.ECONNABORTED,t,g)),g=null},void 0===n&&s.setContentType(null),"setRequestHeader"in g&&nt.forEach(s.toJSON(),(function(t,e){g.setRequestHeader(e,t)})),nt.isUndefined(i.withCredentials)||(g.withCredentials=!!i.withCredentials),l&&"json"!==l&&(g.responseType=i.responseType),f&&([u,c]=Ut(f,!0),g.addEventListener("progress",u)),d&&g.upload&&([a,h]=Ut(d),g.upload.addEventListener("progress",a),g.upload.addEventListener("loadend",h)),(i.cancelToken||i.signal)&&(o=e=>{g&&(r(!e||e.type?new Kt(null,t,g):e),g.abort(),g=null)},i.cancelToken&&i.cancelToken.subscribe(o),i.signal&&(i.signal.aborted?o():i.signal.addEventListener("abort",o)));const y=function(t){const e=/^([-+\w]{1,25})(:?\/\/|:)/.exec(t);return e&&e[1]||""}(i.url);y&&-1===Tt.protocols.indexOf(y)?r(new ut("Unsupported protocol "+y+":",ut.ERR_BAD_REQUEST,t)):g.send(n||null)}))},ee=(t,e)=>{let r,i=new AbortController;const n=function(t){if(!r){r=!0,o();const e=t instanceof Error?t:this.reason;i.abort(e instanceof ut?e:new Kt(e instanceof Error?e.message:e))}};let s=e&&setTimeout((()=>{n(new ut(`timeout ${e} of ms exceeded`,ut.ETIMEDOUT))}),e);const o=()=>{t&&(s&&clearTimeout(s),s=null,t.forEach((t=>{t&&(t.removeEventListener?t.removeEventListener("abort",n):t.unsubscribe(n))})),t=null)};t.forEach((t=>t&&t.addEventListener&&t.addEventListener("abort",n)));const{signal:a}=i;return a.unsubscribe=o,[a,()=>{s&&clearTimeout(s),s=null}]},re=function*(t,e){let r=t.byteLength;if(!e||r<e)return void(yield t);let i,n=0;for(;n<r;)i=n+e,yield t.slice(n,i),n=i},ie=(t,e,r,i,n)=>{const s=async function*(t,e,r){for await(const i of t)yield*re(ArrayBuffer.isView(i)?i:await r(String(i)),e)}(t,e,n);let o,a=0,u=t=>{o||(o=!0,i&&i(t))};return new ReadableStream({async pull(t){try{const{done:e,value:i}=await s.next();if(e)return u(),void t.close();let n=i.byteLength;if(r){let t=a+=n;r(t)}t.enqueue(new Uint8Array(i))}catch(t){throw u(t),t}},cancel:t=>(u(t),s.return())},{highWaterMark:2})},ne="function"==typeof fetch&&"function"==typeof Request&&"function"==typeof Response,se=ne&&"function"==typeof ReadableStream,oe=ne&&("function"==typeof TextEncoder?(ae=new TextEncoder,t=>ae.encode(t)):async t=>new Uint8Array(await new Response(t).arrayBuffer()));var ae;const ue=(t,...e)=>{try{return!!t(...e)}catch(t){return!1}},he=se&&ue((()=>{let t=!1;const e=new Request(Tt.origin,{body:new ReadableStream,method:"POST",get duplex(){return t=!0,"half"}}).headers.has("Content-Type");return t&&!e})),ce=se&&ue((()=>nt.isReadableStream(new Response("").body))),le={stream:ce&&(t=>t.body)};var de;ne&&(de=new Response,["text","arrayBuffer","blob","formData","stream"].forEach((t=>{!le[t]&&(le[t]=nt.isFunction(de[t])?e=>e[t]():(e,r)=>{throw new ut(`Response type '${t}' is not supported`,ut.ERR_NOT_SUPPORT,r)})})));const fe={http:null,xhr:te,fetch:ne&&(async t=>{let{url:e,method:r,data:i,signal:n,cancelToken:s,timeout:o,onDownloadProgress:a,onUploadProgress:u,responseType:h,headers:c,withCredentials:l="same-origin",fetchOptions:d}=$t(t);h=h?(h+"").toLowerCase():"text";let f,p,[g,m]=n||s||o?ee([n,s],o):[];const y=()=>{!f&&setTimeout((()=>{g&&g.unsubscribe()})),f=!0};let v;try{if(u&&he&&"get"!==r&&"head"!==r&&0!==(v=await(async(t,e)=>{const r=nt.toFiniteNumber(t.getContentLength());return null==r?(async t=>null==t?0:nt.isBlob(t)?t.size:nt.isSpecCompliantForm(t)?(await new Request(t).arrayBuffer()).byteLength:nt.isArrayBufferView(t)||nt.isArrayBuffer(t)?t.byteLength:(nt.isURLSearchParams(t)&&(t+=""),nt.isString(t)?(await oe(t)).byteLength:void 0))(e):r})(c,i))){let t,r=new Request(e,{method:"POST",body:i,duplex:"half"});if(nt.isFormData(i)&&(t=r.headers.get("content-type"))&&c.setContentType(t),r.body){const[t,e]=Vt(v,Ut(Xt(u)));i=ie(r.body,65536,t,e,oe)}}nt.isString(l)||(l=l?"include":"omit"),p=new Request(e,{...d,signal:g,method:r.toUpperCase(),headers:c.normalize().toJSON(),body:i,duplex:"half",credentials:l});let n=await fetch(p);const s=ce&&("stream"===h||"response"===h);if(ce&&(a||s)){const t={};["status","statusText","headers"].forEach((e=>{t[e]=n[e]}));const e=nt.toFiniteNumber(n.headers.get("content-length")),[r,i]=a&&Vt(e,Ut(Xt(a),!0))||[];n=new Response(ie(n.body,65536,r,(()=>{i&&i(),s&&y()}),oe),t)}h=h||"text";let o=await le[nt.findKey(le,h)||"text"](n,t);return!s&&y(),m&&m(),await new Promise(((e,r)=>{qt(e,r,{data:o,headers:Ft.from(n.headers),status:n.status,statusText:n.statusText,config:t,request:p})}))}catch(e){if(y(),e&&"TypeError"===e.name&&/fetch/i.test(e.message))throw Object.assign(new ut("Network Error",ut.ERR_NETWORK,t,p),{cause:e.cause||e});throw ut.from(e,e&&e.code,t,p)}})};nt.forEach(fe,((t,e)=>{if(t){try{Object.defineProperty(t,"name",{value:e})}catch(t){}Object.defineProperty(t,"adapterName",{value:e})}}));const pe=t=>`- ${t}`,ge=t=>nt.isFunction(t)||null===t||!1===t,me=t=>{t=nt.isArray(t)?t:[t];const{length:e}=t;let r,i;const n={};for(let s=0;s<e;s++){let e;if(r=t[s],i=r,!ge(r)&&(i=fe[(e=String(r)).toLowerCase()],void 0===i))throw new ut(`Unknown adapter '${e}'`);if(i)break;n[e||"#"+s]=i}if(!i){const t=Object.entries(n).map((([t,e])=>`adapter ${t} `+(!1===e?"is not supported by the environment":"is not available in the build")));let r=e?t.length>1?"since :\n"+t.map(pe).join("\n"):" "+pe(t[0]):"as no adapter specified";throw new ut("There is no suitable adapter to dispatch the request "+r,"ERR_NOT_SUPPORT")}return i};function ye(t){if(t.cancelToken&&t.cancelToken.throwIfRequested(),t.signal&&t.signal.aborted)throw new Kt(null,t)}function ve(t){return ye(t),t.headers=Ft.from(t.headers),t.data=zt.call(t,t.transformRequest),-1!==["post","put","patch"].indexOf(t.method)&&t.headers.setContentType("application/x-www-form-urlencoded",!1),me(t.adapter||Bt.adapter)(t).then((function(e){return ye(t),e.data=zt.call(t,t.transformResponse,e),e.headers=Ft.from(e.headers),e}),(function(e){return Ht(e)||(ye(t),e&&e.response&&(e.response.data=zt.call(t,t.transformResponse,e.response),e.response.headers=Ft.from(e.response.headers))),Promise.reject(e)}))}const be={};["object","boolean","number","function","string","symbol"].forEach(((t,e)=>{be[t]=function(r){return typeof r===t||"a"+(e<1?"n ":" ")+t}}));const we={};be.transitional=function(t,e,r){function i(t,e){return"[Axios v1.7.4] Transitional option '"+t+"'"+e+(r?". "+r:"")}return(r,n,s)=>{if(!1===t)throw new ut(i(n," has been removed"+(e?" in "+e:"")),ut.ERR_DEPRECATED);return e&&!we[n]&&(we[n]=!0,console.warn(i(n," has been deprecated since v"+e+" and will be removed in the near future"))),!t||t(r,n,s)}};const Ee={assertOptions:function(t,e,r){if("object"!=typeof t)throw new ut("options must be an object",ut.ERR_BAD_OPTION_VALUE);const i=Object.keys(t);let n=i.length;for(;n-- >0;){const s=i[n],o=e[s];if(o){const e=t[s],r=void 0===e||o(e,s,t);if(!0!==r)throw new ut("option "+s+" must be "+r,ut.ERR_BAD_OPTION_VALUE)}else if(!0!==r)throw new ut("Unknown option "+s,ut.ERR_BAD_OPTION)}},validators:be},Se=Ee.validators;class Ne{constructor(t){this.defaults=t,this.interceptors={request:new Et,response:new Et}}async request(t,e){try{return await this._request(t,e)}catch(t){if(t instanceof Error){let e;Error.captureStackTrace?Error.captureStackTrace(e={}):e=new Error;const r=e.stack?e.stack.replace(/^.+\n/,""):"";try{t.stack?r&&!String(t.stack).endsWith(r.replace(/^.+\n.+\n/,""))&&(t.stack+="\n"+r):t.stack=r}catch(t){}}throw t}}_request(t,e){"string"==typeof t?(e=e||{}).url=t:e=t||{},e=_t(this.defaults,e);const{transitional:r,paramsSerializer:i,headers:n}=e;void 0!==r&&Ee.assertOptions(r,{silentJSONParsing:Se.transitional(Se.boolean),forcedJSONParsing:Se.transitional(Se.boolean),clarifyTimeoutError:Se.transitional(Se.boolean)},!1),null!=i&&(nt.isFunction(i)?e.paramsSerializer={serialize:i}:Ee.assertOptions(i,{encode:Se.function,serialize:Se.function},!0)),e.method=(e.method||this.defaults.method||"get").toLowerCase();let s=n&&nt.merge(n.common,n[e.method]);n&&nt.forEach(["delete","get","head","post","put","patch","common"],(t=>{delete n[t]})),e.headers=Ft.concat(s,n);const o=[];let a=!0;this.interceptors.request.forEach((function(t){"function"==typeof t.runWhen&&!1===t.runWhen(e)||(a=a&&t.synchronous,o.unshift(t.fulfilled,t.rejected))}));const u=[];let h;this.interceptors.response.forEach((function(t){u.push(t.fulfilled,t.rejected)}));let c,l=0;if(!a){const t=[ve.bind(this),void 0];for(t.unshift.apply(t,o),t.push.apply(t,u),c=t.length,h=Promise.resolve(e);l<c;)h=h.then(t[l++],t[l++]);return h}c=o.length;let d=e;for(l=0;l<c;){const t=o[l++],e=o[l++];try{d=t(d)}catch(t){e.call(this,t);break}}try{h=ve.call(this,d)}catch(t){return Promise.reject(t)}for(l=0,c=u.length;l<c;)h=h.then(u[l++],u[l++]);return h}getUri(t){return wt(Qt((t=_t(this.defaults,t)).baseURL,t.url),t.params,t.paramsSerializer)}}nt.forEach(["delete","get","head","options"],(function(t){Ne.prototype[t]=function(e,r){return this.request(_t(r||{},{method:t,url:e,data:(r||{}).data}))}})),nt.forEach(["post","put","patch"],(function(t){function e(e){return function(r,i,n){return this.request(_t(n||{},{method:t,headers:e?{"Content-Type":"multipart/form-data"}:{},url:r,data:i}))}}Ne.prototype[t]=e(),Ne.prototype[t+"Form"]=e(!0)}));const Me=Ne;class xe{constructor(t){if("function"!=typeof t)throw new TypeError("executor must be a function.");let e;this.promise=new Promise((function(t){e=t}));const r=this;this.promise.then((t=>{if(!r._listeners)return;let e=r._listeners.length;for(;e-- >0;)r._listeners[e](t);r._listeners=null})),this.promise.then=t=>{let e;const i=new Promise((t=>{r.subscribe(t),e=t})).then(t);return i.cancel=function(){r.unsubscribe(e)},i},t((function(t,i,n){r.reason||(r.reason=new Kt(t,i,n),e(r.reason))}))}throwIfRequested(){if(this.reason)throw this.reason}subscribe(t){this.reason?t(this.reason):this._listeners?this._listeners.push(t):this._listeners=[t]}unsubscribe(t){if(!this._listeners)return;const e=this._listeners.indexOf(t);-1!==e&&this._listeners.splice(e,1)}static source(){let t;return{token:new xe((function(e){t=e})),cancel:t}}}const Ie=xe,Ae={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(Ae).forEach((([t,e])=>{Ae[e]=t}));const Pe=Ae,Te=function t(e){const r=new Me(e),i=f(Me.prototype.request,r);return nt.extend(i,Me.prototype,r,{allOwnKeys:!0}),nt.extend(i,r,null,{allOwnKeys:!0}),i.create=function(r){return t(_t(e,r))},i}(Bt);Te.Axios=Me,Te.CanceledError=Kt,Te.CancelToken=Ie,Te.isCancel=Ht,Te.VERSION="1.7.4",Te.toFormData=pt,Te.AxiosError=ut,Te.Cancel=Te.CanceledError,Te.all=function(t){return Promise.all(t)},Te.spread=function(t){return function(e){return t.apply(null,e)}},Te.isAxiosError=function(t){return nt.isObject(t)&&!0===t.isAxiosError},Te.mergeConfig=_t,Te.AxiosHeaders=Ft,Te.formToJSON=t=>Rt(nt.isHTMLForm(t)?new FormData(t):t),Te.getAdapter=me,Te.HttpStatusCode=Pe,Te.default=Te;const Re=Te;class ke{static async request(t){if(t.proxyToWorker)try{return await s.Z.invokeWorker(void 0,"httpRequest",t)}catch(t){if(t.message.length>0&&"{"===t.message.charAt(0)){let e=JSON.parse(t.message);t.message=e.statusMessage,t.statusCode=e.statusCode}throw t}t=Object.assign({},ke.DEFAULT_REQUEST,t);try{t.host=new URL(t.uri).host}catch(e){throw new Error("Invalid request URL: "+t.uri)}if(t.body&&"string"!=typeof t.body&&"object"!=typeof t.body)throw new Error("Request body type is not string or object");ke.TASK_QUEUES[t.host]||(ke.TASK_QUEUES[t.host]=new o.Z(1)),ke.PROMISE_THROTTLES[t.host]||(ke.PROMISE_THROTTLES[t.host]=new(u())({requestsPerSecond:ke.MAX_REQUESTS_PER_SECOND,promiseImplementation:Promise}));let e=void 0===t.timeout?ke.DEFAULT_TIMEOUT:0===t.timeout?ke.MAX_TIMEOUT:t.timeout,r=ke.requestAxios(t);return n.Z.executeWithTimeout(r,e)}static getHttpAgent(){return ke.HTTP_AGENT||(ke.HTTP_AGENT=new(c().Agent)({keepAlive:!0,family:4})),ke.HTTP_AGENT}static getHttpsAgent(){return ke.HTTPS_AGENT||(ke.HTTPS_AGENT=new(d().Agent)({keepAlive:!0,family:4})),ke.HTTPS_AGENT}static async requestAxios(t){if(t.headers)throw new Error("Custom headers not implemented in XHR request");const e=t.method,r=t.uri,i=t.host,n=t.username,s=t.password,o=t.body,a=o instanceof Uint8Array,u=await ke.TASK_QUEUES[i].submit((async function(){return ke.PROMISE_THROTTLES[i].add(function(){return new Promise((function(t,i){ke.axiosDigestAuthRequest(e,r,n,s,o).then((function(e){t(e)})).catch((function(n){n.response?.status&&t(n.response),i(new Error("Request failed without response: "+e+" "+r+" due to underlying error:\n"+n.message+"\n"+n.stack))}))}))}.bind(this))}));let h={};return h.statusCode=u.status,h.statusText=u.statusText,h.headers={...u.headers},h.body=a?new Uint8Array(u.data):u.data,h.body instanceof ArrayBuffer&&(h.body=new Uint8Array(h.body)),h}}ke.MAX_REQUESTS_PER_SECOND=50,ke.DEFAULT_REQUEST={method:"GET",resolveWithFullResponse:!1,rejectUnauthorized:!0},ke.PROMISE_THROTTLES=[],ke.TASK_QUEUES=[],ke.DEFAULT_TIMEOUT=6e4,ke.MAX_TIMEOUT=2147483647,ke.axiosDigestAuthRequest=async function(t,e,i,n,s){if(void 0===o)var o=r(1354);let a=0;return Re.request({url:e,method:t,timeout:this.timeout,headers:{"Content-Type":"application/json"},responseType:s instanceof Uint8Array?"arraybuffer":void 0,httpAgent:e.startsWith("https")?void 0:ke.getHttpAgent(),httpsAgent:e.startsWith("https")?ke.getHttpsAgent():void 0,data:s,transformResponse:t=>t,adapter:["http","xhr","fetch"]}).catch((async r=>{if(401===r.response?.status){let u=r.response.headers["www-authenticate"].replace(/,\sDigest.*/,"");if(!u)throw r;const h=u.replace("Digest ","").replaceAll('"',"").split(",").reduce(((t,e)=>({...t,[e.split("=")[0]]:e.split("=").slice(1).join("=")})),{});++a;const c=function(){let t="";for(let e=0;e<16;e++){const e=Math.round(16*Math.random());t+="abcdef0123456789".slice(e,e+1)}return t}(),l=o.MD5(i+":"+h.realm+":"+n).toString(),d=o.MD5(t+":"+e).toString(),f=o.MD5(l+":"+h.nonce+":"+("00000000"+a).slice(-8)+":"+c+":"+h.qop+":"+d).toString(),p='Digest username="'+i+'", realm="'+h.realm+'", nonce="'+h.nonce+'", uri="'+e+'", response="'+f+'", opaque="'+(h.opaque??null)+'", qop='+h.qop+", nc="+("00000000"+a).slice(-8)+', cnonce="'+c+'"',g=await Re.request({url:e,method:t,timeout:this.timeout,headers:{Authorization:p,"Content-Type":"application/json"},responseType:s instanceof Uint8Array?"arraybuffer":void 0,httpAgent:e.startsWith("https")?void 0:ke.getHttpAgent(),httpsAgent:e.startsWith("https")?ke.getHttpsAgent():void 0,data:s,transformResponse:t=>t,adapter:["http","xhr","fetch"]});return g}throw r})).catch((t=>{throw t}))};const Be=ke},9390:(t,e,r)=>{"use strict";r.d(e,{Z:()=>l});var i=r(9282),n=r.n(i),s=r(6048),o=r(2477),a=r(1084),u=r(6470),h=r.n(u);class c{static log(t,e){n()(t===parseInt(t,10)&&t>=0,"Log level must be an integer >= 0"),c.LOG_LEVEL>=t&&console.log(e)}static async setLogLevel(t){n()(t===parseInt(t,10)&&t>=0,"Log level must be an integer >= 0"),c.LOG_LEVEL=t,c.WASM_MODULE&&c.WASM_MODULE.set_log_level(t),c.WORKER&&await c.invokeWorker(void 0,"setLogLevel",[t])}static getLogLevel(){return c.LOG_LEVEL}static async getWasmMemoryUsed(){let t=0;return c.WORKER&&(t+=await c.invokeWorker(void 0,"getWasmMemoryUsed",[])),c.getWasmModule()&&c.getWasmModule().HEAP8&&(t+=c.getWasmModule().HEAP8.length),t}static getWasmModule(){return c.WASM_MODULE}static async loadWasmModule(){if(c.WASM_MODULE&&c.FULL_LOADED)return c.WASM_MODULE;const t=globalThis.fetch;globalThis.fetch=void 0;let e=await r(7905)();return globalThis.fetch=t,c.WASM_MODULE=e,delete c.WASM_MODULE.then,c.FULL_LOADED=!0,c.initWasmModule(c.WASM_MODULE),e}static setRejectUnauthorizedFn(t,e){c.REJECT_UNAUTHORIZED_FNS||(c.REJECT_UNAUTHORIZED_FNS=[]),void 0===e?delete c.REJECT_UNAUTHORIZED_FNS[t]:c.REJECT_UNAUTHORIZED_FNS[t]=e}static isRejectUnauthorized(t){if(!c.REJECT_UNAUTHORIZED_FNS[t])throw new Error("No function registered with id "+t+" to inform if unauthorized reqs should be rejected");return c.REJECT_UNAUTHORIZED_FNS[t]()}static setWorkerDistPath(t){let e=c.prefixWindowsPath(t||c.WORKER_DIST_PATH_DEFAULT);e!==c.WORKER_DIST_PATH&&delete c.WORKER,c.WORKER_DIST_PATH=e}static setWorkerLoader(t){c.WORKER_LOADER=t}static async getWorker(){if(!c.WORKER){if(c.WORKER_LOADER)c.WORKER=c.WORKER_LOADER();else if(s.Z.isBrowser())c.WORKER=new Worker(c.WORKER_DIST_PATH);else{const t=r(9667);c.WORKER=new t(c.WORKER_DIST_PATH)}c.WORKER_OBJECTS={},c.WORKER.onerror=function(t){console.error("Error posting message to monero.worker.js; is it built and copied to the app's public or build directory?"),console.log(t)},c.WORKER.onmessage=function(t){let e,r=c.WORKER_OBJECTS[t.data[0]].callbacks[t.data[1]];if(void 0===r)throw new Error("No worker callback function defined for key '"+t.data[1]+"'");r instanceof Array&&(e=r[1],r=r[0]),r.apply(e,t.data.slice(2))}}return c.WORKER}static addWorkerCallback(t,e,r){c.WORKER_OBJECTS[t].callbacks[e]=r}static removeWorkerCallback(t,e){delete c.WORKER_OBJECTS[t].callbacks[e]}static removeWorkerObject(t){delete c.WORKER_OBJECTS[t]}static async terminateWorker(){c.WORKER&&(c.WORKER.terminate(),delete c.WORKER,c.WORKER=void 0)}static async invokeWorker(t,e,r){n()(e.length>=2);let i=await c.getWorker(),o=void 0===t;o&&(t=s.Z.getUUID()),c.WORKER_OBJECTS[t]||(c.WORKER_OBJECTS[t]={callbacks:{}});let a=s.Z.getUUID();try{return await new Promise(((n,u)=>{c.WORKER_OBJECTS[t].callbacks[a]=e=>{delete c.WORKER_OBJECTS[t].callbacks[a],o&&delete c.WORKER_OBJECTS[t],e?e.error?u(new Error(JSON.stringify(e.error))):n(e.result):n(void 0)},i.postMessage([t,e,a].concat(void 0===r?[]:s.Z.listify(r)))}))}catch(t){throw c.deserializeError(JSON.parse(t.message))}}static serializeError(t){const e={name:t.name,message:t.message,stack:t.stack};return t instanceof o.Z&&(e.type="MoneroError"),e}static deserializeError(t){const e="MoneroError"===t.type?new o.Z(t.message):new Error(t.message);return e.name=t.name,e.stack=e.stack+"\nWorker error: "+t.stack,e}static async queueTask(t){return c.MUTEX.submit(t)}static async exists(t,e){try{return await t.access(e),!0}catch(t){return!1}}static initWasmModule(t){t.taskQueue=new a.Z(1),t.queueTask=async function(e){return t.taskQueue.submit(e)}}static prefixWindowsPath(t){return/^[A-Z]:/.test(t)&&-1==t.indexOf("file://")&&(t="file://"+t),t}}c.LOG_LEVEL=0,c.MUTEX=new a.Z(1),c.WORKER_DIST_PATH_DEFAULT=s.Z.isBrowser()?"/monero.worker.js":function(){let t=h().normalize("/");const e=h().join("monero-ts","dist");return t.includes(e)||(t=h().join(t,"../../../../dist/src/main/js/common")),c.prefixWindowsPath(h().join(t,"./MoneroWebWorker.js"))}(),c.WORKER_DIST_PATH=c.WORKER_DIST_PATH_DEFAULT,c.WORKER_LOADER=void 0;const l=c},1401:(t,e,r)=>{"use strict";r.d(e,{Z:()=>i});class i{async onConnectionChanged(t){}}},2477:(t,e,r)=>{"use strict";r.d(e,{Z:()=>i});class i extends Error{constructor(t,e){super(t),this.code=e}getCode(){return this.code}toString(){if(void 0===this.message&&void 0===this.getCode())return super.message;let t="";return void 0!==this.getCode()&&(t+=this.getCode()+": "),t+=this.message,t}}},1779:(t,e,r)=>{"use strict";r.d(e,{Z:()=>l});var i=r(6048),n=r(6384),s=r(9390),o=r(2477),a=r(4608),u=r(3547),h=r(1084);class c{constructor(t,e,r){if("string"==typeof t)Object.assign(this,c.DEFAULT_CONFIG),this.uri=t,this.setCredentials(e,r);else{if(void 0!==e||void 0!==r)throw new o.Z("Can provide config object or params but not both");Object.assign(this,c.DEFAULT_CONFIG,t),this.setCredentials(this.username,this.password)}this.uri&&(this.uri=i.Z.normalizeUri(this.uri)),this.checkConnectionMutex=new h.Z(1),this.sendRequestMutex=new h.Z(1)}setCredentials(t,e){if(""===t&&(t=void 0),""===e&&(e=void 0),t||e){if(!t)throw new o.Z("username must be defined because password is defined");if(!e)throw new o.Z("password must be defined because username is defined")}return""===this.username&&(this.username=void 0),""===this.password&&(this.password=void 0),this.username===t&&this.password===e||(this.isOnline=void 0,this.isAuthenticated=void 0),this.username=t,this.password=e,this}getUri(){return this.uri}getUsername(){return this.username?this.username:""}getPassword(){return this.password?this.password:""}getRejectUnauthorized(){return this.rejectUnauthorized}setProxyToWorker(t){return this.proxyToWorker=t,this}getProxyToWorker(){return this.proxyToWorker}setPriority(t){if(!(t>=0))throw new o.Z("Priority must be >= 0");return this.priority=t,this}getPriority(){return this.priority}setTimeout(t){return this.timeoutMs=t,this}getTimeout(){return this.timeoutMs}setAttribute(t,e){return this.attributes||(this.attributes=new Map),this.attributes.put(t,e),this}getAttribute(t){return this.attributes.get(t)}async checkConnection(t){return this.queueCheckConnection((async()=>{await s.Z.loadWasmModule();let e=this.isOnline,r=this.isAuthenticated,i=Date.now();try{if(this.fakeDisconnected)throw new Error("Connection is fake disconnected");let e=[];for(let t=0;t<100;t++)e.push(t);await this.sendBinaryRequest("get_blocks_by_height.bin",{heights:e},t),this.isOnline=!0,this.isAuthenticated=!0}catch(t){this.isOnline=!1,this.isAuthenticated=void 0,this.responseTime=void 0,t instanceof a.Z&&(401===t.getCode()?(this.isOnline=!0,this.isAuthenticated=!1):404===t.getCode()&&(this.isOnline=!0,this.isAuthenticated=!0))}return this.isOnline&&(this.responseTime=Date.now()-i),e!==this.isOnline||r!==this.isAuthenticated}))}isConnected(){return void 0===this.isOnline?void 0:this.isOnline&&!1!==this.isAuthenticated}getIsOnline(){return this.isOnline}getIsAuthenticated(){return this.isAuthenticated}getResponseTime(){return this.responseTime}async sendJsonRequest(t,e,r){return this.queueSendRequest((async()=>{try{let i=JSON.stringify({id:"0",jsonrpc:"2.0",method:t,params:e});s.Z.getLogLevel()>=2&&s.Z.log(2,"Sending json request with method '"+t+"' and body: "+i);let o=(new Date).getTime(),a=await n.Z.request({method:"POST",uri:this.getUri()+"/json_rpc",username:this.getUsername(),password:this.getPassword(),body:i,timeout:void 0===r?this.timeoutMs:r,rejectUnauthorized:this.rejectUnauthorized,proxyToWorker:this.proxyToWorker});if(c.validateHttpResponse(a),"{"!=a.body[0])throw a.body;if(a=JSON.parse(a.body.replace(/("[^"]*"\s*:\s*)(\d{16,})/g,'$1"$2"')),s.Z.getLogLevel()>=3){let e=JSON.stringify(a);s.Z.log(3,"Received response from method='"+t+"', response="+e.substring(0,Math.min(1e3,e.length))+"("+((new Date).getTime()-o)+" ms)")}return this.validateRpcResponse(a,t,e),a}catch(r){throw r instanceof a.Z?r:new a.Z(r,r.statusCode,t,e)}}))}async sendPathRequest(t,e,r){return this.queueSendRequest((async()=>{try{s.Z.getLogLevel()>=2&&s.Z.log(2,"Sending path request with path '"+t+"' and params: "+JSON.stringify(e));let i=(new Date).getTime(),o=await n.Z.request({method:"POST",uri:this.getUri()+"/"+t,username:this.getUsername(),password:this.getPassword(),body:JSON.stringify(e),timeout:void 0===r?this.timeoutMs:r,rejectUnauthorized:this.rejectUnauthorized,proxyToWorker:this.proxyToWorker});if(c.validateHttpResponse(o),"{"!=o.body[0])throw o.body;if(o=JSON.parse(o.body.replace(/("[^"]*"\s*:\s*)(\d{16,})/g,'$1"$2"')),"string"==typeof o&&(o=JSON.parse(o)),s.Z.getLogLevel()>=3){let e=JSON.stringify(o);s.Z.log(3,"Received response from path='"+t+"', response="+e.substring(0,Math.min(1e3,e.length))+"("+((new Date).getTime()-i)+" ms)")}return this.validateRpcResponse(o,t,e),o}catch(r){throw r instanceof a.Z?r:new a.Z(r,r.statusCode,t,e)}}))}async sendBinaryRequest(t,e,r){return this.queueSendRequest((async()=>{let i=await u.Z.jsonToBinary(e);try{s.Z.getLogLevel()>=2&&s.Z.log(2,"Sending binary request with path '"+t+"' and params: "+JSON.stringify(e));let o=await n.Z.request({method:"POST",uri:this.getUri()+"/"+t,username:this.getUsername(),password:this.getPassword(),body:i,timeout:void 0===r?this.timeoutMs:r,rejectUnauthorized:this.rejectUnauthorized,proxyToWorker:this.proxyToWorker});if(c.validateHttpResponse(o),o=o.body,o instanceof Uint8Array||(console.error("resp is not uint8array"),console.error(o)),o.error)throw new a.Z(o.error.message,o.error.code,t,e);return o}catch(r){throw r instanceof a.Z?r:new a.Z(r,r.statusCode,t,e)}}))}getConfig(){return{uri:this.uri,username:this.username,password:this.password,rejectUnauthorized:this.rejectUnauthorized,proxyToWorker:this.proxyToWorker,priority:this.priority,timeoutMs:this.timeoutMs}}toJson(){let t=Object.assign({},this);return t.checkConnectionMutex=void 0,t.sendRequestMutex=void 0,t}toString(){return this.getUri()+" (username="+this.getUsername()+", password="+(this.getPassword()?"***":this.getPassword())+", priority="+this.getPriority()+", timeoutMs="+this.getTimeout()+", isOnline="+this.getIsOnline()+", isAuthenticated="+this.getIsAuthenticated()+")"}setFakeDisconnected(t){this.fakeDisconnected=t}async queueCheckConnection(t){return this.checkConnectionMutex.submit(t)}async queueSendRequest(t){return this.sendRequestMutex.submit(t)}static validateHttpResponse(t){let e=t.statusCode;if(e<200||e>299){let r=t.body;throw new a.Z(e+" "+t.statusText+(r?": "+r:""),e,void 0,void 0)}}validateRpcResponse(t,e,r){if(void 0===t.error)return;let i=t.error.message;throw""===i&&(i="Received error response from RPC request with method '"+e+"' to "+this.getUri()),new a.Z(t.error.message,t.error.code,e,r)}}c.DEFAULT_CONFIG={uri:void 0,username:void 0,password:void 0,rejectUnauthorized:!0,proxyToWorker:!1,priority:0,timeoutMs:void 0};const l=c},4608:(t,e,r)=>{"use strict";r.d(e,{Z:()=>n});var i=r(2477);class n extends i.Z{constructor(t,e,r,i){super(t,e),this.rpcMethod=r,this.rpcParams=i}getRpcMethod(){return this.rpcMethod}getRpcParams(){return this.rpcParams}toString(){let t=super.toString();return(this.rpcMethod||this.rpcParams)&&(t+="\nRequest: '"+this.rpcMethod+"' with params: "+("object"==typeof this.rpcParams?JSON.stringify(this.rpcParams):this.rpcParams)),t}}},3547:(t,e,r)=>{"use strict";r.d(e,{Z:()=>d});var i=r(9282),n=r.n(i),s=r(6048),o=r(9390),a=r(2477),u=r(2990),h=r(8403),c=r(8764).Buffer;class l{static getVersion(){return"0.11.0"}static setProxyToWorker(t){l.PROXY_TO_WORKER=t||!1}static async validateMnemonic(t){n()(t,"Mnemonic phrase is not initialized");let e=t.split(" ");if(e.length!==l.NUM_MNEMONIC_WORDS)throw new a.Z("Mnemonic phrase is "+e.length+" words but must be "+l.NUM_MNEMONIC_WORDS)}static async isValidPrivateViewKey(t){try{return await l.validatePrivateViewKey(t),!0}catch(t){return!1}}static async isValidPublicViewKey(t){try{return await l.validatePublicViewKey(t),!0}catch(t){return!1}}static async isValidPrivateSpendKey(t){try{return await l.validatePrivateSpendKey(t),!0}catch(t){return!1}}static async isValidPublicSpendKey(t){try{return await l.validatePublicSpendKey(t),!0}catch(t){return!1}}static async validatePrivateViewKey(t){if(!l.isHex64(t))throw new a.Z("private view key expected to be 64 hex characters")}static async validatePublicViewKey(t){if(!l.isHex64(t))throw new a.Z("public view key expected to be 64 hex characters")}static async validatePrivateSpendKey(t){if(!l.isHex64(t))throw new a.Z("private spend key expected to be 64 hex characters")}static async validatePublicSpendKey(t){if(!l.isHex64(t))throw new a.Z("public spend key expected to be 64 hex characters")}static async getIntegratedAddress(t,e,r){return l.PROXY_TO_WORKER?new u.Z(await o.Z.invokeWorker(void 0,"moneroUtilsGetIntegratedAddress",Array.from(arguments))):(h.Z.validate(t),n()("string"==typeof e,"Address is not string"),n()(e.length>0,"Address is empty"),n()(s.Z.isBase58(e),"Address is not base 58"),void 0===o.Z.getWasmModule()&&await o.Z.loadWasmModule(),o.Z.getWasmModule().queueTask((async()=>{let i=o.Z.getWasmModule().get_integrated_address_util(t,e,r||"");if("{"!==i.charAt(0))throw new a.Z(i);return new u.Z(JSON.parse(i))})))}static async isValidAddress(t,e){try{return await l.validateAddress(t,e),!0}catch(t){return!1}}static async validateAddress(t,e){return l.PROXY_TO_WORKER?o.Z.invokeWorker(void 0,"moneroUtilsValidateAddress",Array.from(arguments)):(n()("string"==typeof t,"Address is not string"),n()(t.length>0,"Address is empty"),n()(s.Z.isBase58(t),"Address is not base 58"),e=h.Z.from(e),void 0===o.Z.getWasmModule()&&await o.Z.loadWasmModule(),o.Z.getWasmModule().queueTask((async function(){let r=o.Z.getWasmModule().validate_address(t,e);if(r)throw new a.Z(r)})))}static async isValidPaymentId(t){try{return await l.validatePaymentId(t),!0}catch(t){return!1}}static async validatePaymentId(t){n().equal(typeof t,"string"),n()(16===t.length||64===t.length)}static async getLastTxPubKey(t){let e;for(let r=0;r<t.length;r++){let i=t[r];if(0===i||2===i)r+=1+t[r+1];else{if(1!==i)throw new a.Z("Invalid sub-field tag: "+i);e=r+1,r+=33}}return c.from(new Uint8Array(t.slice(e,e+32))).toString("hex")}static paymentIdsEqual(t,e){let r=Math.max(t.length,e.length);for(let i=0;i<r;i++){if(i<t.length&&i<e.length&&t[i]!==e[i])return!1;if(i>=t.length&&"0"!==e[i])return!1;if(i>=e.length&&"0"!==t[i])return!1}return!0}static mergeTx(t,e){for(let r of t)if(r.getHash()===e.getHash())return void r.merge(e);t.push(e)}static async jsonToBinary(t){return l.PROXY_TO_WORKER?o.Z.invokeWorker(void 0,"moneroUtilsJsonToBinary",Array.from(arguments)):(void 0===o.Z.getWasmModule()&&await o.Z.loadWasmModule(),o.Z.getWasmModule().queueTask((async function(){let e=o.Z.getWasmModule().malloc_binary_from_json(JSON.stringify(t)),r=JSON.parse(e);r.ptr=parseInt(r.ptr),r.length=parseInt(r.length);let i=new Uint8Array(r.length);for(let t=0;t<r.length;t++)i[t]=o.Z.getWasmModule().HEAPU8[r.ptr/Uint8Array.BYTES_PER_ELEMENT+t];return o.Z.getWasmModule()._free(r.ptr),i})))}static async binaryToJson(t){return l.PROXY_TO_WORKER?o.Z.invokeWorker(void 0,"moneroUtilsBinaryToJson",Array.from(arguments)):(void 0===o.Z.getWasmModule()&&await o.Z.loadWasmModule(),o.Z.getWasmModule().queueTask((async function(){let e=o.Z.getWasmModule()._malloc(t.length*t.BYTES_PER_ELEMENT),r=new Uint8Array(o.Z.getWasmModule().HEAPU8.buffer,e,t.length*t.BYTES_PER_ELEMENT);if(e!==r.byteOffset)throw new a.Z("Memory ptr !== heap.byteOffset");r.set(new Uint8Array(t.buffer));let i={ptr:e,length:t.length};const n=o.Z.getWasmModule().binary_to_json(JSON.stringify(i));return o.Z.getWasmModule()._free(e),JSON.parse(n)})))}static async binaryBlocksToJson(t){return l.PROXY_TO_WORKER?o.Z.invokeWorker(void 0,"moneroUtilsBinaryBlocksToJson",Array.from(arguments)):(void 0===o.Z.getWasmModule()&&await o.Z.loadWasmModule(),o.Z.getWasmModule().queueTask((async function(){let e=o.Z.getWasmModule()._malloc(t.length*t.BYTES_PER_ELEMENT),r=new Uint8Array(o.Z.getWasmModule().HEAPU8.buffer,e,t.length*t.BYTES_PER_ELEMENT);if(e!==r.byteOffset)throw new a.Z("Memory ptr !== heap.byteOffset");r.set(new Uint8Array(t.buffer));let i={ptr:e,length:t.length};const n=o.Z.getWasmModule().binary_blocks_to_json(JSON.stringify(i));o.Z.getWasmModule()._free(e);let s=JSON.parse(n);return s.blocks=s.blocks.map((t=>JSON.parse(t))),s.txs=s.txs.map((t=>t?t.map((t=>JSON.parse(t.replace(",","{")+"}"))):[])),s})))}static xmrToAtomicUnits(t){"number"==typeof t&&(t=""+t);let e=1,r=t.indexOf(".");return r>-1&&(e=Math.pow(10,t.length-r-1),t=t.slice(0,r)+t.slice(r+1)),BigInt(t)*BigInt(l.AU_PER_XMR)/BigInt(e)}static atomicUnitsToXmr(t){if("string"==typeof t)t=BigInt(t);else if("bigint"!=typeof t)throw new Error("Must provide atomic units as bigint or string to convert to XMR");const e=t/l.AU_PER_XMR,r=t%l.AU_PER_XMR;return Number(e)+Number(r)/Number(l.AU_PER_XMR)}static isHex64(t){return"string"==typeof t&&64===t.length&&s.Z.isHex(t)}static isTimestamp(t){return t>=500000000n}}l.PROXY_TO_WORKER=!1,l.NUM_MNEMONIC_WORDS=25,l.AU_PER_XMR=1000000000000n,l.RING_SIZE=12;const d=l},5158:(t,e,r)=>{"use strict";r.d(e,{Z:()=>i});class i{constructor(t){this._fn=t,this._isStarted=!1,this._isLooping=!1}getTask(){return this._fn}start(t,e){if(t<=0)throw new Error("Looper period must be greater than 0 ms");this.setPeriodInMs(t),this._isStarted||(this._isStarted=!0,this._runLoop(e))}isStarted(){return this._isStarted}stop(){this._isStarted=!1,clearTimeout(this._timeout),this._timeout=void 0}setPeriodInMs(t){if(t<=0)throw new Error("Looper period must be greater than 0 ms");this._periodInMs=t}async _runLoop(t){for(this._isLooping=!0;this._isStarted;){const e=Date.now();await this._fn();let r=this;this._isStarted&&await new Promise((i=>{this._timeout=setTimeout(i,r._periodInMs-(t?Date.now()-e:0))}))}this._isLooping=!1}}},1084:(t,e,r)=>{"use strict";r.d(e,{Z:()=>o});var i=r(6048),n=r(1195),s=r.n(n);class o{constructor(t){if(void 0===t&&(t=1),t<1)throw new Error("Max concurrency must be greater than or equal to 1");this.taskQueue=s().queue(((t,e)=>{t.then?t.then((t=>{e(t)})).catch((t=>{e(void 0,t)})):t().then((t=>{e(t)})).catch((t=>{e(void 0,t)}))}),t),this.drainListeners=[],this.taskQueue.drain=()=>{for(let t of this.drainListeners)t()}}async submit(t){return new Promise(((e,r)=>{this.taskQueue.push(t,((t,i)=>{void 0!==i?r(i):e(t)}))}))}async awaitAll(){if(0!==this.taskQueue.length)return new Promise((t=>{this.drainListeners.push((()=>{i.Z.remove(this.drainListeners,this),t()}))}))}}},3147:(t,e,r)=>{"use strict";r.d(e,{Z:()=>o});var i=r(9282),n=r.n(i),s=r(2477);class o{async addListener(t){throw new s.Z("Subclass must implement")}async removeListener(t){throw new s.Z("Subclass must implement")}getListeners(){throw new s.Z("Subclass must implement")}async isConnected(){throw new s.Z("Subclass must implement")}async getVersion(){throw new s.Z("Subclass must implement")}async isTrusted(){throw new s.Z("Subclass must implement")}async getHeight(){throw new s.Z("Subclass must implement")}async getBlockHash(t){throw new s.Z("Subclass must implement")}async getBlockTemplate(t,e){throw new s.Z("Subclass must implement")}async getLastBlockHeader(){throw new s.Z("Subclass must implement")}async getBlockHeaderByHash(t){throw new s.Z("Subclass must implement")}async getBlockHeaderByHeight(t){throw new s.Z("Subclass must implement")}async getBlockHeadersByRange(t,e){throw new s.Z("Subclass must implement")}async getBlockByHash(t){throw new s.Z("Subclass must implement")}async getBlocksByHash(t,e,r=!1){throw new s.Z("Subclass must implement")}async getBlockByHeight(t){throw new s.Z("Subclass must implement")}async getBlocksByHeight(t){throw new s.Z("Subclass must implement")}async getBlocksByRange(t,e){throw new s.Z("Subclass must implement")}async getBlocksByRangeChunked(t,e,r){throw new s.Z("Subclass must implement")}async getBlockHashes(t,e){throw new s.Z("Subclass must implement")}async getTx(t,e=!1){return(await this.getTxs([t],e))[0]}async getTxs(t,e=!1){throw new s.Z("Subclass must implement")}async getTxHex(t,e=!1){return(await this.getTxHexes([t],e))[0]}async getTxHexes(t,e=!1){throw new s.Z("Subclass must implement")}async getMinerTxSum(t,e){throw new s.Z("Subclass must implement")}async getFeeEstimate(t){throw new s.Z("Subclass must implement")}async submitTxHex(t,e=!1){throw new s.Z("Subclass must implement")}async relayTxByHash(t){n().equal(typeof t,"string","Must provide a transaction hash"),await this.relayTxsByHash([t])}async relayTxsByHash(t){throw new s.Z("Subclass must implement")}async getTxPool(){throw new s.Z("Subclass must implement")}async getTxPoolHashes(){throw new s.Z("Subclass must implement")}async getTxPoolStats(){throw new s.Z("Subclass must implement")}async flushTxPool(t){throw new s.Z("Subclass must implement")}async getKeyImageSpentStatus(t){return(await this.getKeyImageSpentStatuses([t]))[0]}async getKeyImageSpentStatuses(t){throw new s.Z("Subclass must implement")}async getOutputs(t){throw new s.Z("Subclass must implement")}async getOutputHistogram(t,e,r,i,n){throw new s.Z("Subclass must implement")}async getInfo(){throw new s.Z("Subclass must implement")}async getSyncInfo(){throw new s.Z("Subclass must implement")}async getHardForkInfo(){throw new s.Z("Subclass must implement")}async getAltChains(){throw new s.Z("Subclass must implement")}async getAltBlockHashes(){throw new s.Z("Subclass must implement")}async getDownloadLimit(){throw new s.Z("Subclass must implement")}async setDownloadLimit(t){throw new s.Z("Subclass must implement")}async resetDownloadLimit(){throw new s.Z("Subclass must implement")}async getUploadLimit(){throw new s.Z("Subclass must implement")}async setUploadLimit(t){throw new s.Z("Subclass must implement")}async resetUploadLimit(){throw new s.Z("Subclass must implement")}async getPeers(){throw new s.Z("Subclass must implement")}async getKnownPeers(){throw new s.Z("Subclass must implement")}async setOutgoingPeerLimit(t){throw new s.Z("Subclass must implement")}async setIncomingPeerLimit(t){throw new s.Z("Subclass must implement")}async getPeerBans(){throw new s.Z("Subclass must implement")}async setPeerBan(t){return await this.setPeerBans([t])}async setPeerBans(t){throw new s.Z("Subclass must implement")}async startMining(t,e,r,i){throw new s.Z("Subclass must implement")}async stopMining(){throw new s.Z("Subclass must implement")}async getMiningStatus(){throw new s.Z("Subclass must implement")}async submitBlock(t){await this.submitBlocks([t])}async pruneBlockchain(t){throw new s.Z("Subclass must implement")}async submitBlocks(t){throw new s.Z("Subclass must implement")}async checkForUpdate(){throw new s.Z("Subclass must implement")}async downloadUpdate(t){throw new s.Z("Subclass must implement")}async stop(){throw new s.Z("Subclass must implement")}async waitForNextBlockHeader(){throw new s.Z("Subclass must implement")}}},4485:(t,e,r)=>{"use strict";r.d(e,{Z:()=>K});var i=r(9282),n=r.n(i),s=r(6048),o=r(9390),a=r(5158),u=r(9609),h=r(4019),c=r(1487),l=r(7353),d=r(1622),f=r(5806),p=r(3147),g=r(4292),m=r(2668),y=r(9457),v=r(9147),b=r(1469),w=r(3645),E=r(3961),S=r(2477),N=r(9566),M=r(2795),x=r(5914),I=r(590),A=r(8403),P=r(4314),T=r(1552),R=r(6311),k=r(868),B=r(1779),O=r(5854),C=r(2318),L=r(4633),j=r(3547),Z=r(8112),D=r(4155);class F extends p.Z{constructor(t,e){super(),this.config=t,this.proxyDaemon=e,t.proxyToWorker||(this.listeners=[],this.cachedHeaders={})}getProcess(){return this.process}async stopProcess(t=!1){if(void 0===this.process)throw new S.Z("MoneroDaemonRpc instance not created from new process");let e=s.Z.copyArray(await this.getListeners());for(let t of e)await this.removeListener(t);return s.Z.killProcess(this.process,t?"SIGKILL":void 0)}async addListener(t){if(this.config.proxyToWorker)return this.proxyDaemon.addListener(t);n()(t instanceof y.Z,"Listener must be instance of MoneroDaemonListener"),this.listeners.push(t),this.refreshListening()}async removeListener(t){if(this.config.proxyToWorker)return this.proxyDaemon.removeListener(t);n()(t instanceof y.Z,"Listener must be instance of MoneroDaemonListener");let e=this.listeners.indexOf(t);if(!(e>-1))throw new S.Z("Listener is not registered with daemon");this.listeners.splice(e,1),this.refreshListening()}getListeners(){return this.config.proxyToWorker?this.proxyDaemon.getListeners():this.listeners}async getRpcConnection(){return this.config.proxyToWorker?this.proxyDaemon.getRpcConnection():this.config.getServer()}async isConnected(){if(this.config.proxyToWorker)return this.proxyDaemon.isConnected();try{return await this.getVersion(),!0}catch(t){return!1}}async getVersion(){if(this.config.proxyToWorker)return this.proxyDaemon.getVersion();let t=await this.config.getServer().sendJsonRequest("get_version");return F.checkResponseStatus(t.result),new Z.Z(t.result.version,t.result.release)}async isTrusted(){if(this.config.proxyToWorker)return this.proxyDaemon.isTrusted();let t=await this.config.getServer().sendPathRequest("get_height");return F.checkResponseStatus(t),!t.untrusted}async getHeight(){if(this.config.proxyToWorker)return this.proxyDaemon.getHeight();let t=await this.config.getServer().sendJsonRequest("get_block_count");return F.checkResponseStatus(t.result),t.result.count}async getBlockHash(t){return this.config.proxyToWorker?this.proxyDaemon.getBlockHash(t):(await this.config.getServer().sendJsonRequest("on_get_block_hash",[t])).result}async getBlockTemplate(t,e){if(this.config.proxyToWorker)return this.proxyDaemon.getBlockTemplate(t,e);n()(t&&"string"==typeof t,"Must specify wallet address to be mined to");let r=await this.config.getServer().sendJsonRequest("get_block_template",{wallet_address:t,reserve_size:e});return F.checkResponseStatus(r.result),F.convertRpcBlockTemplate(r.result)}async getLastBlockHeader(){if(this.config.proxyToWorker)return this.proxyDaemon.getLastBlockHeader();let t=await this.config.getServer().sendJsonRequest("get_last_block_header");return F.checkResponseStatus(t.result),F.convertRpcBlockHeader(t.result.block_header)}async getBlockHeaderByHash(t){if(this.config.proxyToWorker)return this.proxyDaemon.getBlockHeaderByHash(t);let e=await this.config.getServer().sendJsonRequest("get_block_header_by_hash",{hash:t});return F.checkResponseStatus(e.result),F.convertRpcBlockHeader(e.result.block_header)}async getBlockHeaderByHeight(t){if(this.config.proxyToWorker)return this.proxyDaemon.getBlockHeaderByHeight(t);let e=await this.config.getServer().sendJsonRequest("get_block_header_by_height",{height:t});return F.checkResponseStatus(e.result),F.convertRpcBlockHeader(e.result.block_header)}async getBlockHeadersByRange(t,e){if(this.config.proxyToWorker)return this.proxyDaemon.getBlockHeadersByRange(t,e);let r=await this.config.getServer().sendJsonRequest("get_block_headers_range",{start_height:t,end_height:e});F.checkResponseStatus(r.result);let i=[];for(let t of r.result.headers)i.push(F.convertRpcBlockHeader(t));return i}async getBlockByHash(t){if(this.config.proxyToWorker)return this.proxyDaemon.getBlockByHash(t);let e=await this.config.getServer().sendJsonRequest("get_block",{hash:t});return F.checkResponseStatus(e.result),F.convertRpcBlock(e.result)}async getBlockByHeight(t){if(this.config.proxyToWorker)return this.proxyDaemon.getBlockByHeight(t);let e=await this.config.getServer().sendJsonRequest("get_block",{height:t});return F.checkResponseStatus(e.result),F.convertRpcBlock(e.result)}async getBlocksByHeight(t){if(this.config.proxyToWorker)return this.proxyDaemon.getBlocksByHeight(t);let e=await this.config.getServer().sendBinaryRequest("get_blocks_by_height.bin",{heights:t}),r=await j.Z.binaryBlocksToJson(e);F.checkResponseStatus(r),n().equal(r.txs.length,r.blocks.length);let i=[];for(let e=0;e<r.blocks.length;e++){let n=F.convertRpcBlock(r.blocks[e]);n.setHeight(t[e]),i.push(n);let s=[];for(let t=0;t<r.txs[e].length;t++){let i=new C.Z;s.push(i),i.setHash(r.blocks[e].tx_hashes[t]),i.setIsConfirmed(!0),i.setInTxPool(!1),i.setIsMinerTx(!1),i.setRelay(!0),i.setIsRelayed(!0),i.setIsFailed(!1),i.setIsDoubleSpendSeen(!1),F.convertRpcTx(r.txs[e][t],i)}n.setTxs([]);for(let t of s)t.getBlock()?n.merge(t.getBlock()):n.getTxs().push(t.setBlock(n))}return i}async getBlocksByRange(t,e){if(this.config.proxyToWorker)return this.proxyDaemon.getBlocksByRange(t,e);void 0===t&&(t=0),void 0===e&&(e=await this.getHeight()-1);let r=[];for(let i=t;i<=e;i++)r.push(i);return await this.getBlocksByHeight(r)}async getBlocksByRangeChunked(t,e,r){if(this.config.proxyToWorker)return this.proxyDaemon.getBlocksByRangeChunked(t,e,r);void 0===t&&(t=0),void 0===e&&(e=await this.getHeight()-1);let i=t-1,n=[];for(;i<e;){for(let t of await this.getMaxBlocks(i+1,e,r))n.push(t);i=n[n.length-1].getHeight()}return n}async getTxs(t,e=!1){if(this.config.proxyToWorker)return this.proxyDaemon.getTxs(t,e);n()(Array.isArray(t)&&t.length>0,"Must provide an array of transaction hashes"),n()(void 0===e||"boolean"==typeof e,"Prune must be a boolean or undefined");let r=await this.config.getServer().sendPathRequest("get_transactions",{txs_hashes:t,decode_as_json:!0,prune:e});try{F.checkResponseStatus(r)}catch(t){if(t.message.indexOf("Failed to parse hex representation of transaction hash")>=0)throw new S.Z("Invalid transaction hash");throw t}let i=[];if(r.txs)for(let t=0;t<r.txs.length;t++){let e=new C.Z;e.setIsMinerTx(!1),i.push(F.convertRpcTx(r.txs[t],e))}return i}async getTxHexes(t,e=!1){if(this.config.proxyToWorker)return this.proxyDaemon.getTxHexes(t,e);let r=[];for(let i of await this.getTxs(t,e))r.push(e?i.getPrunedHex():i.getFullHex());return r}async getMinerTxSum(t,e){if(this.config.proxyToWorker)return this.proxyDaemon.getMinerTxSum(t,e);void 0===t?t=0:n()(t>=0,"Height must be an integer >= 0"),void 0===e?e=await this.getHeight():n()(e>=0,"Count must be an integer >= 0");let r=await this.config.getServer().sendJsonRequest("get_coinbase_tx_sum",{height:t,count:e});F.checkResponseStatus(r.result);let i=new x.Z;return i.setEmissionSum(BigInt(r.result.emission_amount)),i.setFeeSum(BigInt(r.result.fee_amount)),i}async getFeeEstimate(t){if(this.config.proxyToWorker)return this.proxyDaemon.getFeeEstimate(t);let e=await this.config.getServer().sendJsonRequest("get_fee_estimate",{grace_blocks:t});F.checkResponseStatus(e.result);let r=new E.Z;if(r.setFee(BigInt(e.result.fee)),r.setQuantizationMask(BigInt(e.result.quantization_mask)),void 0!==e.result.fees){let t=[];for(let r=0;r<e.result.fees.length;r++)t.push(BigInt(e.result.fees[r]));r.setFees(t)}return r}async submitTxHex(t,e){if(this.config.proxyToWorker)return this.proxyDaemon.submitTxHex(t,e);let r=await this.config.getServer().sendPathRequest("send_raw_transaction",{tx_as_hex:t,do_not_relay:e}),i=F.convertRpcSubmitTxResult(r);try{F.checkResponseStatus(r),i.setIsGood(!0)}catch(t){i.setIsGood(!1)}return i}async relayTxsByHash(t){if(this.config.proxyToWorker)return this.proxyDaemon.relayTxsByHash(t);let e=await this.config.getServer().sendJsonRequest("relay_tx",{txids:t});F.checkResponseStatus(e.result)}async getTxPool(){if(this.config.proxyToWorker)return this.proxyDaemon.getTxPool();let t=await this.config.getServer().sendPathRequest("get_transaction_pool");F.checkResponseStatus(t);let e=[];if(t.transactions)for(let r of t.transactions){let t=new C.Z;e.push(t),t.setIsConfirmed(!1),t.setIsMinerTx(!1),t.setInTxPool(!0),t.setNumConfirmations(0),F.convertRpcTx(r,t)}return e}async getTxPoolHashes(){throw new S.Z("Not implemented")}async getTxPoolStats(){if(this.config.proxyToWorker)return this.proxyDaemon.getTxPoolStats();let t=await this.config.getServer().sendPathRequest("get_transaction_pool_stats");return F.checkResponseStatus(t),F.convertRpcTxPoolStats(t.pool_stats)}async flushTxPool(t){if(this.config.proxyToWorker)return this.proxyDaemon.flushTxPool(t);t&&(t=s.Z.listify(t));let e=await this.config.getServer().sendJsonRequest("flush_txpool",{txids:t});F.checkResponseStatus(e.result)}async getKeyImageSpentStatuses(t){if(this.config.proxyToWorker)return this.proxyDaemon.getKeyImageSpentStatuses(t);if(void 0===t||0===t.length)throw new S.Z("Must provide key images to check the status of");let e=await this.config.getServer().sendPathRequest("is_key_image_spent",{key_images:t});return F.checkResponseStatus(e),e.spent_status}async getOutputHistogram(t,e,r,i,n){if(this.config.proxyToWorker)return this.proxyDaemon.getOutputHistogram(t,e,r,i,n);let s=await this.config.getServer().sendJsonRequest("get_output_histogram",{amounts:t,min_count:e,max_count:r,unlocked:i,recent_cutoff:n});F.checkResponseStatus(s.result);let o=[];if(!s.result.histogram)return o;for(let t of s.result.histogram)o.push(F.convertRpcOutputHistogramEntry(t));return o}async getOutputDistribution(t,e,r,i){if(this.config.proxyToWorker)return this.proxyDaemon.getOutputDistribution(t,e,r,i);throw new S.Z("Not implemented (response 'distribution' field is binary)")}async getInfo(){if(this.config.proxyToWorker)return this.proxyDaemon.getInfo();let t=await this.config.getServer().sendJsonRequest("get_info");return F.checkResponseStatus(t.result),F.convertRpcInfo(t.result)}async getSyncInfo(){if(this.config.proxyToWorker)return this.proxyDaemon.getSyncInfo();let t=await this.config.getServer().sendJsonRequest("sync_info");return F.checkResponseStatus(t.result),F.convertRpcSyncInfo(t.result)}async getHardForkInfo(){if(this.config.proxyToWorker)return this.proxyDaemon.getHardForkInfo();let t=await this.config.getServer().sendJsonRequest("hard_fork_info");return F.checkResponseStatus(t.result),F.convertRpcHardForkInfo(t.result)}async getAltChains(){if(this.config.proxyToWorker)return this.proxyDaemon.getAltChains();let t=await this.config.getServer().sendJsonRequest("get_alternate_chains");F.checkResponseStatus(t.result);let e=[];if(!t.result.chains)return e;for(let r of t.result.chains)e.push(F.convertRpcAltChain(r));return e}async getAltBlockHashes(){if(this.config.proxyToWorker)return this.proxyDaemon.getAltBlockHashes();let t=await this.config.getServer().sendPathRequest("get_alt_blocks_hashes");return F.checkResponseStatus(t),t.blks_hashes?t.blks_hashes:[]}async getDownloadLimit(){return this.config.proxyToWorker?this.proxyDaemon.getDownloadLimit():(await this.getBandwidthLimits())[0]}async setDownloadLimit(t){if(this.config.proxyToWorker)return this.proxyDaemon.setDownloadLimit(t);if(-1==t)return await this.resetDownloadLimit();if(!(s.Z.isInt(t)&&t>0))throw new S.Z("Download limit must be an integer greater than 0");return(await this.setBandwidthLimits(t,0))[0]}async resetDownloadLimit(){return this.config.proxyToWorker?this.proxyDaemon.resetDownloadLimit():(await this.setBandwidthLimits(-1,0))[0]}async getUploadLimit(){return this.config.proxyToWorker?this.proxyDaemon.getUploadLimit():(await this.getBandwidthLimits())[1]}async setUploadLimit(t){if(this.config.proxyToWorker)return this.proxyDaemon.setUploadLimit(t);if(-1==t)return await this.resetUploadLimit();if(!(s.Z.isInt(t)&&t>0))throw new S.Z("Upload limit must be an integer greater than 0");return(await this.setBandwidthLimits(0,t))[1]}async resetUploadLimit(){return this.config.proxyToWorker?this.proxyDaemon.resetUploadLimit():(await this.setBandwidthLimits(0,-1))[1]}async getPeers(){if(this.config.proxyToWorker)return this.proxyDaemon.getPeers();let t=await this.config.getServer().sendJsonRequest("get_connections");F.checkResponseStatus(t.result);let e=[];if(!t.result.connections)return e;for(let r of t.result.connections)e.push(F.convertRpcConnection(r));return e}async getKnownPeers(){if(this.config.proxyToWorker)return this.proxyDaemon.getKnownPeers();let t=await this.config.getServer().sendPathRequest("get_peer_list");F.checkResponseStatus(t);let e=[];if(t.gray_list)for(let r of t.gray_list){let t=F.convertRpcPeer(r);t.setIsOnline(!1),e.push(t)}if(t.white_list)for(let r of t.white_list){let t=F.convertRpcPeer(r);t.setIsOnline(!0),e.push(t)}return e}async setOutgoingPeerLimit(t){if(this.config.proxyToWorker)return this.proxyDaemon.setOutgoingPeerLimit(t);if(!(s.Z.isInt(t)&&t>=0))throw new S.Z("Outgoing peer limit must be >= 0");let e=await this.config.getServer().sendPathRequest("out_peers",{out_peers:t});F.checkResponseStatus(e)}async setIncomingPeerLimit(t){if(this.config.proxyToWorker)return this.proxyDaemon.setIncomingPeerLimit(t);if(!(s.Z.isInt(t)&&t>=0))throw new S.Z("Incoming peer limit must be >= 0");let e=await this.config.getServer().sendPathRequest("in_peers",{in_peers:t});F.checkResponseStatus(e)}async getPeerBans(){if(this.config.proxyToWorker)return this.proxyDaemon.getPeerBans();let t=await this.config.getServer().sendJsonRequest("get_bans");F.checkResponseStatus(t.result);let e=[];for(let r of t.result.bans){let t=new h.Z;t.setHost(r.host),t.setIp(r.ip),t.setSeconds(r.seconds),e.push(t)}return e}async setPeerBans(t){if(this.config.proxyToWorker)return this.proxyDaemon.setPeerBans(t);let e=[];for(let r of t)e.push(F.convertToRpcBan(r));let r=await this.config.getServer().sendJsonRequest("set_bans",{bans:e});F.checkResponseStatus(r.result)}async startMining(t,e,r,i){if(this.config.proxyToWorker)return this.proxyDaemon.startMining(t,e,r,i);n()(t,"Must provide address to mine to"),n()(s.Z.isInt(e)&&e>0,"Number of threads must be an integer greater than 0"),n()(void 0===r||"boolean"==typeof r),n()(void 0===i||"boolean"==typeof i);let o=await this.config.getServer().sendPathRequest("start_mining",{miner_address:t,threads_count:e,do_background_mining:r,ignore_battery:i});F.checkResponseStatus(o)}async stopMining(){if(this.config.proxyToWorker)return this.proxyDaemon.stopMining();let t=await this.config.getServer().sendPathRequest("stop_mining");F.checkResponseStatus(t)}async getMiningStatus(){if(this.config.proxyToWorker)return this.proxyDaemon.getMiningStatus();let t=await this.config.getServer().sendPathRequest("mining_status");return F.checkResponseStatus(t),F.convertRpcMiningStatus(t)}async submitBlocks(t){if(this.config.proxyToWorker)return this.proxyDaemon.submitBlocks();n()(Array.isArray(t)&&t.length>0,"Must provide an array of mined block blobs to submit");let e=await this.config.getServer().sendJsonRequest("submit_block",t);F.checkResponseStatus(e.result)}async pruneBlockchain(t){if(this.config.proxyToWorker)return this.proxyDaemon.pruneBlockchain();let e=await this.config.getServer().sendJsonRequest("prune_blockchain",{check:t},0);F.checkResponseStatus(e.result);let r=new k.Z;return r.setIsPruned(e.result.pruned),r.setPruningSeed(e.result.pruning_seed),r}async checkForUpdate(){if(this.config.proxyToWorker)return this.proxyDaemon.checkForUpdate();let t=await this.config.getServer().sendPathRequest("update",{command:"check"});return F.checkResponseStatus(t),F.convertRpcUpdateCheckResult(t)}async downloadUpdate(t){if(this.config.proxyToWorker)return this.proxyDaemon.downloadUpdate(t);let e=await this.config.getServer().sendPathRequest("update",{command:"download",path:t});return F.checkResponseStatus(e),F.convertRpcUpdateDownloadResult(e)}async stop(){if(this.config.proxyToWorker)return this.proxyDaemon.stop();let t=await this.config.getServer().sendPathRequest("stop_daemon");F.checkResponseStatus(t)}async waitForNextBlockHeader(){if(this.config.proxyToWorker)return this.proxyDaemon.waitForNextBlockHeader();let t=this;return new Promise((async function(e){await t.addListener(new class extends y.Z{async onBlockHeader(r){await t.removeListener(this),e(r)}})}))}getPollInterval(){return this.config.pollInterval}async getTx(t,e=!1){return super.getTx(t,e)}async getTxHex(t,e=!1){return super.getTxHex(t,e)}async getKeyImageSpentStatus(t){return super.getKeyImageSpentStatus(t)}async setPeerBan(t){return super.setPeerBan(t)}async submitBlock(t){return super.submitBlock(t)}refreshListening(){null==this.pollListener&&this.listeners.length&&(this.pollListener=new H(this)),void 0!==this.pollListener&&this.pollListener.setIsPolling(this.listeners.length>0)}async getBandwidthLimits(){let t=await this.config.getServer().sendPathRequest("get_limit");return F.checkResponseStatus(t),[t.limit_down,t.limit_up]}async setBandwidthLimits(t,e){void 0===t&&(t=0),void 0===e&&(e=0);let r=await this.config.getServer().sendPathRequest("set_limit",{limit_down:t,limit_up:e});return F.checkResponseStatus(r),[r.limit_down,r.limit_up]}async getMaxBlocks(t,e,r){void 0===t&&(t=0),void 0===e&&(e=await this.getHeight()-1),void 0===r&&(r=F.MAX_REQ_SIZE);let i=0,s=t-1;for(;i<r&&s<e;){let t=await this.getBlockHeaderByHeightCached(s+1,e);if(n()(t.getSize()<=r,"Block exceeds maximum request size: "+t.getSize()),i+t.getSize()>r)break;i+=t.getSize(),s++}return s>=t?await this.getBlocksByRange(t,s):[]}async getBlockHeaderByHeightCached(t,e){let r=this.cachedHeaders[t];if(r)return r;let i=Math.min(e,t+F.NUM_HEADERS_PER_REQ-1),n=await this.getBlockHeadersByRange(t,i);for(let t of n)this.cachedHeaders[t.getHeight()]=t;return this.cachedHeaders[t]}static async connectToDaemonRpc(t,e,r){let i=F.normalizeConfig(t,e,r);return i.cmd?F.startMonerodProcess(i):new F(i,i.proxyToWorker?await z.connect(i):void 0)}static async startMonerodProcess(t){n()(s.Z.isArray(t.cmd),"Must provide string array with command line parameters");let e,i=r(3448).spawn(t.cmd[0],t.cmd.slice(1),{env:{...D.env,LANG:"en_US.UTF-8"}});i.stdout.setEncoding("utf8"),i.stderr.setEncoding("utf8");let a="";try{return await new Promise((function(r,n){i.stdout.on("data",(async function(n){let s=n.toString();o.Z.log(2,s),a+=s+"\n";let u=s.indexOf("Binding on ");if(u>=0){let r=s.substring(u+11,s.lastIndexOf(" ")),i=s.replace(/\u001b\[.*?m/g,"").trim(),n=i.substring(i.lastIndexOf(":")+1),o=t.cmd.indexOf("--rpc-ssl"),a=o>=0&&"enabled"==t.cmd[o+1].toLowerCase();e=(a?"https":"http")+"://"+r+":"+n}if(s.indexOf("core RPC server started ok")>=0){let n=t.cmd.indexOf("--rpc-login"),s=n>=0?t.cmd[n+1]:void 0,o=void 0===s?void 0:s.substring(0,s.indexOf(":")),a=void 0===s?void 0:s.substring(s.indexOf(":")+1);(t=t.copy().setServer({uri:e,username:o,password:a,rejectUnauthorized:t.getServer()?t.getServer().getRejectUnauthorized():void 0})).setProxyToWorker(t.proxyToWorker),t.cmd=void 0;let u=await F.connectToDaemonRpc(t);u.process=i,this.isResolved=!0,r(u)}})),i.stderr.on("data",(function(t){o.Z.getLogLevel()>=2&&console.error(t)})),i.on("exit",(function(t){this.isResolved||n(new Error("monerod process terminated with exit code "+t+(a?":\n\n"+a:"")))})),i.on("error",(function(e){e.message.indexOf("ENOENT")>=0&&n(new Error("monerod does not exist at path '"+t.cmd[0]+"'")),this.isResolved||n(e)})),i.on("uncaughtException",(function(t,e){console.error("Uncaught exception in monerod process: "+t.message),console.error(e),this.isResolved||n(t)}))}))}catch(t){throw new S.Z(t.message)}}static normalizeConfig(t,e,r){let i;return"string"==typeof t?i=new g.Z({server:new B.Z(t,e,r)}):void 0!==t.uri?(i=new g.Z({server:new B.Z(t)}),i.setProxyToWorker(t.proxyToWorker),i.getServer().setProxyToWorker(B.Z.DEFAULT_CONFIG.proxyToWorker)):i=s.Z.isArray(t)?new g.Z({cmd:t}):new g.Z(t),void 0===i.proxyToWorker&&(i.proxyToWorker=!0),void 0===i.pollInterval&&(i.pollInterval=F.DEFAULT_POLL_PERIOD),i}static checkResponseStatus(t){if("OK"!==t.status)throw new S.Z(t.status)}static convertRpcBlockHeader(t){if(!t)return;let e=new l.Z;for(let r of Object.keys(t)){let i=t[r];"block_size"===r?s.Z.safeSet(e,e.getSize,e.setSize,i):"depth"===r?s.Z.safeSet(e,e.getDepth,e.setDepth,i):"difficulty"===r||"cumulative_difficulty"===r||"difficulty_top64"===r||"cumulative_difficulty_top64"===r||("wide_difficulty"===r?e.setDifficulty(s.Z.reconcile(e.getDifficulty(),F.prefixedHexToBI(i))):"wide_cumulative_difficulty"===r?e.setCumulativeDifficulty(s.Z.reconcile(e.getCumulativeDifficulty(),F.prefixedHexToBI(i))):"hash"===r?s.Z.safeSet(e,e.getHash,e.setHash,i):"height"===r?s.Z.safeSet(e,e.getHeight,e.setHeight,i):"major_version"===r?s.Z.safeSet(e,e.getMajorVersion,e.setMajorVersion,i):"minor_version"===r?s.Z.safeSet(e,e.getMinorVersion,e.setMinorVersion,i):"nonce"===r?s.Z.safeSet(e,e.getNonce,e.setNonce,i):"num_txes"===r?s.Z.safeSet(e,e.getNumTxs,e.setNumTxs,i):"orphan_status"===r?s.Z.safeSet(e,e.getOrphanStatus,e.setOrphanStatus,i):"prev_hash"===r||"prev_id"===r?s.Z.safeSet(e,e.getPrevHash,e.setPrevHash,i):"reward"===r?s.Z.safeSet(e,e.getReward,e.setReward,BigInt(i)):"timestamp"===r?s.Z.safeSet(e,e.getTimestamp,e.setTimestamp,i):"block_weight"===r?s.Z.safeSet(e,e.getWeight,e.setWeight,i):"long_term_weight"===r?s.Z.safeSet(e,e.getLongTermWeight,e.setLongTermWeight,i):"pow_hash"===r?s.Z.safeSet(e,e.getPowHash,e.setPowHash,""===i?void 0:i):"tx_hashes"===r||"miner_tx"===r||("miner_tx_hash"===r?e.setMinerTxHash(i):console.log("WARNING: ignoring unexpected block header field: '"+r+"': "+i)))}return e}static convertRpcBlock(t){let e=new c.Z(F.convertRpcBlockHeader(t.block_header?t.block_header:t));e.setHex(t.blob),e.setTxHashes(void 0===t.tx_hashes?[]:t.tx_hashes);let r=t.json?JSON.parse(t.json).miner_tx:t.miner_tx,i=new C.Z;return e.setMinerTx(i),i.setIsConfirmed(!0),i.setInTxPool(!1),i.setIsMinerTx(!0),F.convertRpcTx(r,i),e}static convertRpcTx(t,e){if(void 0===t)return;let r;void 0===e&&(e=new C.Z);for(let i of Object.keys(t)){let n=t[i];"tx_hash"===i||"id_hash"===i?s.Z.safeSet(e,e.getHash,e.setHash,n):"block_timestamp"===i?(r||(r=new l.Z),s.Z.safeSet(r,r.getTimestamp,r.setTimestamp,n)):"block_height"===i?(r||(r=new l.Z),s.Z.safeSet(r,r.getHeight,r.setHeight,n)):"last_relayed_time"===i?s.Z.safeSet(e,e.getLastRelayedTimestamp,e.setLastRelayedTimestamp,n):"receive_time"===i||"received_timestamp"===i?s.Z.safeSet(e,e.getReceivedTimestamp,e.setReceivedTimestamp,n):"confirmations"===i?s.Z.safeSet(e,e.getNumConfirmations,e.setNumConfirmations,n):"in_pool"===i?(s.Z.safeSet(e,e.getIsConfirmed,e.setIsConfirmed,!n),s.Z.safeSet(e,e.getInTxPool,e.setInTxPool,n)):"double_spend_seen"===i?s.Z.safeSet(e,e.getIsDoubleSpendSeen,e.setIsDoubleSpendSeen,n):"version"===i?s.Z.safeSet(e,e.getVersion,e.setVersion,n):"extra"===i?"string"==typeof n?console.log("WARNING: extra field as string not being asigned to int[]: "+i+": "+n):s.Z.safeSet(e,e.getExtra,e.setExtra,new Uint8Array(n)):"vin"===i?1===n.length&&n[0].gen||e.setInputs(n.map((t=>F.convertRpcOutput(t,e)))):"vout"===i?e.setOutputs(n.map((t=>F.convertRpcOutput(t,e)))):"rct_signatures"===i?(s.Z.safeSet(e,e.getRctSignatures,e.setRctSignatures,n),n.txnFee&&s.Z.safeSet(e,e.getFee,e.setFee,BigInt(n.txnFee))):"rctsig_prunable"===i?s.Z.safeSet(e,e.getRctSigPrunable,e.setRctSigPrunable,n):"unlock_time"===i?s.Z.safeSet(e,e.getUnlockTime,e.setUnlockTime,n):"as_json"===i||"tx_json"===i||("as_hex"===i||"tx_blob"===i?s.Z.safeSet(e,e.getFullHex,e.setFullHex,n||void 0):"blob_size"===i?s.Z.safeSet(e,e.getSize,e.setSize,n):"weight"===i?s.Z.safeSet(e,e.getWeight,e.setWeight,n):"fee"===i?s.Z.safeSet(e,e.getFee,e.setFee,BigInt(n)):"relayed"===i?s.Z.safeSet(e,e.getIsRelayed,e.setIsRelayed,n):"output_indices"===i?s.Z.safeSet(e,e.getOutputIndices,e.setOutputIndices,n):"do_not_relay"===i?s.Z.safeSet(e,e.getRelay,e.setRelay,!n):"kept_by_block"===i?s.Z.safeSet(e,e.getIsKeptByBlock,e.setIsKeptByBlock,n):"signatures"===i?s.Z.safeSet(e,e.getSignatures,e.setSignatures,n):"last_failed_height"===i?0===n?s.Z.safeSet(e,e.getIsFailed,e.setIsFailed,!1):(s.Z.safeSet(e,e.getIsFailed,e.setIsFailed,!0),s.Z.safeSet(e,e.getLastFailedHeight,e.setLastFailedHeight,n)):"last_failed_id_hash"===i?n===F.DEFAULT_ID?s.Z.safeSet(e,e.getIsFailed,e.setIsFailed,!1):(s.Z.safeSet(e,e.getIsFailed,e.setIsFailed,!0),s.Z.safeSet(e,e.getLastFailedHash,e.setLastFailedHash,n)):"max_used_block_height"===i?s.Z.safeSet(e,e.getMaxUsedBlockHeight,e.setMaxUsedBlockHeight,n):"max_used_block_id_hash"===i?s.Z.safeSet(e,e.getMaxUsedBlockHash,e.setMaxUsedBlockHash,n):"prunable_hash"===i?s.Z.safeSet(e,e.getPrunableHash,e.setPrunableHash,n||void 0):"prunable_as_hex"===i?s.Z.safeSet(e,e.getPrunableHex,e.setPrunableHex,n||void 0):"pruned_as_hex"===i?s.Z.safeSet(e,e.getPrunedHex,e.setPrunedHex,n||void 0):console.log("WARNING: ignoring unexpected field in rpc tx: "+i+": "+n))}if(r&&e.setBlock(new c.Z(r).setTxs([e])),e.getBlock()&&void 0!==e.getBlock().getHeight()&&e.getBlock().getHeight()===e.getBlock().getTimestamp()&&(e.setBlock(void 0),e.setIsConfirmed(!1)),e.getIsConfirmed()?(s.Z.safeSet(e,e.getIsRelayed,e.setIsRelayed,!0),s.Z.safeSet(e,e.getRelay,e.setRelay,!0),s.Z.safeSet(e,e.getIsFailed,e.setIsFailed,!1)):e.setNumConfirmations(0),void 0===e.getIsFailed()&&e.setIsFailed(!1),e.getOutputIndices()&&e.getOutputs()){n().equal(e.getOutputs().length,e.getOutputIndices().length);for(let t=0;t<e.getOutputs().length;t++)e.getOutputs()[t].setIndex(e.getOutputIndices()[t])}return t.as_json&&F.convertRpcTx(JSON.parse(t.as_json),e),t.tx_json&&F.convertRpcTx(JSON.parse(t.tx_json),e),e.getIsRelayed()||e.setLastRelayedTimestamp(void 0),e}static convertRpcOutput(t,e){let r=new P.Z;r.setTx(e);for(let e of Object.keys(t)){let i=t[e];if("gen"===e)throw new S.Z("Output with 'gen' from daemon rpc is miner tx which we ignore (i.e. each miner input is undefined)");if("key"===e)s.Z.safeSet(r,r.getAmount,r.setAmount,BigInt(i.amount)),s.Z.safeSet(r,r.getKeyImage,r.setKeyImage,new M.Z(i.k_image)),s.Z.safeSet(r,r.getRingOutputIndices,r.setRingOutputIndices,i.key_offsets);else if("amount"===e)s.Z.safeSet(r,r.getAmount,r.setAmount,BigInt(i));else if("target"===e){let t=void 0===i.key?i.tagged_key.key:i.key;s.Z.safeSet(r,r.getStealthPublicKey,r.setStealthPublicKey,t)}else console.log("WARNING: ignoring unexpected field output: "+e+": "+i)}return r}static convertRpcBlockTemplate(t){let e=new d.Z;for(let r of Object.keys(t)){let i=t[r];"blockhashing_blob"===r?e.setBlockTemplateBlob(i):"blocktemplate_blob"===r?e.setBlockHashingBlob(i):"difficulty"===r?e.setDifficulty(BigInt(i)):"expected_reward"===r?e.setExpectedReward(i):"difficulty"===r||"difficulty_top64"===r||("wide_difficulty"===r?e.setDifficulty(s.Z.reconcile(e.getDifficulty(),F.prefixedHexToBI(i))):"height"===r?e.setHeight(i):"prev_hash"===r?e.setPrevHash(i):"reserved_offset"===r?e.setReservedOffset(i):"status"===r||"untrusted"===r||("seed_height"===r?e.setSeedHeight(i):"seed_hash"===r?e.setSeedHash(i):"next_seed_hash"===r?e.setNextSeedHash(i):console.log("WARNING: ignoring unexpected field in block template: "+r+": "+i)))}return""===e.getNextSeedHash()&&e.setNextSeedHash(void 0),e}static convertRpcInfo(t){if(!t)return;let e=new m.Z;for(let r of Object.keys(t)){let i=t[r];"version"===r?e.setVersion(i):"alt_blocks_count"===r?e.setNumAltBlocks(i):"block_size_limit"===r?e.setBlockSizeLimit(i):"block_size_median"===r?e.setBlockSizeMedian(i):"block_weight_limit"===r?e.setBlockWeightLimit(i):"block_weight_median"===r?e.setBlockWeightMedian(i):"bootstrap_daemon_address"===r?i&&e.setBootstrapDaemonAddress(i):"difficulty"===r||"cumulative_difficulty"===r||"difficulty_top64"===r||"cumulative_difficulty_top64"===r||("wide_difficulty"===r?e.setDifficulty(s.Z.reconcile(e.getDifficulty(),F.prefixedHexToBI(i))):"wide_cumulative_difficulty"===r?e.setCumulativeDifficulty(s.Z.reconcile(e.getCumulativeDifficulty(),F.prefixedHexToBI(i))):"free_space"===r?e.setFreeSpace(BigInt(i)):"database_size"===r?e.setDatabaseSize(i):"grey_peerlist_size"===r?e.setNumOfflinePeers(i):"height"===r?e.setHeight(i):"height_without_bootstrap"===r?e.setHeightWithoutBootstrap(i):"incoming_connections_count"===r?e.setNumIncomingConnections(i):"offline"===r?e.setIsOffline(i):"outgoing_connections_count"===r?e.setNumOutgoingConnections(i):"rpc_connections_count"===r?e.setNumRpcConnections(i):"start_time"===r?e.setStartTimestamp(i):"adjusted_time"===r?e.setAdjustedTimestamp(i):"status"===r||("target"===r?e.setTarget(i):"target_height"===r?e.setTargetHeight(i):"top_block_hash"===r?e.setTopBlockHash(i):"tx_count"===r?e.setNumTxs(i):"tx_pool_size"===r?e.setNumTxsPool(i):"untrusted"===r||("was_bootstrap_ever_used"===r?e.setWasBootstrapEverUsed(i):"white_peerlist_size"===r?e.setNumOnlinePeers(i):"update_available"===r?e.setUpdateAvailable(i):"nettype"===r?s.Z.safeSet(e,e.getNetworkType,e.setNetworkType,A.Z.parse(i)):"mainnet"===r?i&&s.Z.safeSet(e,e.getNetworkType,e.setNetworkType,A.Z.MAINNET):"testnet"===r?i&&s.Z.safeSet(e,e.getNetworkType,e.setNetworkType,A.Z.TESTNET):"stagenet"===r?i&&s.Z.safeSet(e,e.getNetworkType,e.setNetworkType,A.Z.STAGENET):"credits"===r?e.setCredits(BigInt(i)):"top_block_hash"===r||"top_hash"===r?e.setTopBlockHash(s.Z.reconcile(e.getTopBlockHash(),""===i?void 0:i)):"busy_syncing"===r?e.setIsBusySyncing(i):"synchronized"===r?e.setIsSynchronized(i):"restricted"===r?e.setIsRestricted(i):console.log("WARNING: Ignoring unexpected info field: "+r+": "+i))))}return e}static convertRpcSyncInfo(t){let e=new v.Z;for(let r of Object.keys(t)){let i=t[r];if("height"===r)e.setHeight(i);else if("peers"===r){e.setPeers([]);let t=i;for(let r of t)e.getPeers().push(F.convertRpcConnection(r.info))}else if("spans"===r){e.setSpans([]);let t=i;for(let r of t)e.getSpans().push(F.convertRpcConnectionSpan(r))}else if("status"===r);else if("target_height"===r)e.setTargetHeight(i);else if("next_needed_pruning_seed"===r)e.setNextNeededPruningSeed(i);else if("overview"===r){let t;try{t=JSON.parse(i),void 0!==t&&t.length>0&&console.error("Ignoring non-empty 'overview' field (not implemented): "+t)}catch(e){console.error("Failed to parse 'overview' field: "+t+": "+e.message)}}else"credits"===r?e.setCredits(BigInt(i)):"top_hash"===r?e.setTopBlockHash(""===i?void 0:i):"untrusted"===r||console.log("WARNING: ignoring unexpected field in sync info: "+r+": "+i)}return e}static convertRpcHardForkInfo(t){let e=new N.Z;for(let r of Object.keys(t)){let i=t[r];"earliest_height"===r?e.setEarliestHeight(i):"enabled"===r?e.setIsEnabled(i):"state"===r?e.setState(i):"status"===r||"untrusted"===r||("threshold"===r?e.setThreshold(i):"version"===r?e.setVersion(i):"votes"===r?e.setNumVotes(i):"voting"===r?e.setVoting(i):"window"===r?e.setWindow(i):"credits"===r?e.setCredits(BigInt(i)):"top_hash"===r?e.setTopBlockHash(""===i?void 0:i):console.log("WARNING: ignoring unexpected field in hard fork info: "+r+": "+i))}return e}static convertRpcConnectionSpan(t){let e=new f.Z;for(let r of Object.keys(t)){let i=t[r];"connection_id"===r?e.setConnectionId(i):"nblocks"===r?e.setNumBlocks(i):"rate"===r?e.setRate(i):"remote_address"===r?""!==i&&e.setRemoteAddress(i):"size"===r?e.setSize(i):"speed"===r?e.setSpeed(i):"start_block_height"===r?e.setStartHeight(i):console.log("WARNING: ignoring unexpected field in daemon connection span: "+r+": "+i)}return e}static convertRpcOutputHistogramEntry(t){let e=new T.Z;for(let r of Object.keys(t)){let i=t[r];"amount"===r?e.setAmount(BigInt(i)):"total_instances"===r?e.setNumInstances(i):"unlocked_instances"===r?e.setNumUnlockedInstances(i):"recent_instances"===r?e.setNumRecentInstances(i):console.log("WARNING: ignoring unexpected field in output histogram: "+r+": "+i)}return e}static convertRpcSubmitTxResult(t){n()(t);let e=new O.Z;for(let r of Object.keys(t)){let i=t[r];"double_spend"===r?e.setIsDoubleSpendSeen(i):"fee_too_low"===r?e.setIsFeeTooLow(i):"invalid_input"===r?e.setHasInvalidInput(i):"invalid_output"===r?e.setHasInvalidOutput(i):"too_few_outputs"===r?e.setHasTooFewOutputs(i):"low_mixin"===r?e.setIsMixinTooLow(i):"not_relayed"===r?e.setIsRelayed(!i):"overspend"===r?e.setIsOverspend(i):"reason"===r?e.setReason(""===i?void 0:i):"too_big"===r?e.setIsTooBig(i):"sanity_check_failed"===r?e.setSanityCheckFailed(i):"credits"===r?e.setCredits(BigInt(i)):"status"===r||"untrusted"===r||("top_hash"===r?e.setTopBlockHash(""===i?void 0:i):"tx_extra_too_big"===r?e.setIsTxExtraTooBig(i):"nonzero_unlock_time"===r?e.setIsNonzeroUnlockTime(i):console.log("WARNING: ignoring unexpected field in submit tx hex result: "+r+": "+i))}return e}static convertRpcTxPoolStats(t){n()(t);let e=new L.Z;for(let r of Object.keys(t)){let i=t[r];if("bytes_max"===r)e.setBytesMax(i);else if("bytes_med"===r)e.setBytesMed(i);else if("bytes_min"===r)e.setBytesMin(i);else if("bytes_total"===r)e.setBytesTotal(i);else if("histo_98pc"===r)e.setHisto98pc(i);else if("num_10m"===r)e.setNum10m(i);else if("num_double_spends"===r)e.setNumDoubleSpends(i);else if("num_failing"===r)e.setNumFailing(i);else if("num_not_relayed"===r)e.setNumNotRelayed(i);else if("oldest"===r)e.setOldestTimestamp(i);else if("txs_total"===r)e.setNumTxs(i);else if("fee_total"===r)e.setFeeTotal(BigInt(i));else if("histo"===r){e.setHisto(new Map);for(let t of i)e.getHisto().set(t.bytes,t.txs)}else console.log("WARNING: ignoring unexpected field in tx pool stats: "+r+": "+i)}return 0===e.getHisto98pc()&&e.setHisto98pc(void 0),0===e.getNumTxs()&&(e.setBytesMin(void 0),e.setBytesMed(void 0),e.setBytesMax(void 0),e.setHisto98pc(void 0),e.setOldestTimestamp(void 0)),e}static convertRpcAltChain(t){n()(t);let e=new u.Z;for(let r of Object.keys(t)){let i=t[r];"block_hash"===r||"difficulty"===r||"difficulty_top64"===r||("wide_difficulty"===r?e.setDifficulty(s.Z.reconcile(e.getDifficulty(),F.prefixedHexToBI(i))):"height"===r?e.setHeight(i):"length"===r?e.setLength(i):"block_hashes"===r?e.setBlockHashes(i):"main_chain_parent_block"===r?e.setMainChainParentBlockHash(i):console.log("WARNING: ignoring unexpected field in alternative chain: "+r+": "+i))}return e}static convertRpcPeer(t){n()(t);let e=new R.Z;for(let r of Object.keys(t)){let i=t[r];"host"===r?e.setHost(i):"id"===r?e.setId(""+i):"ip"===r||("last_seen"===r?e.setLastSeenTimestamp(i):"port"===r?e.setPort(i):"rpc_port"===r?e.setRpcPort(i):"pruning_seed"===r?e.setPruningSeed(i):"rpc_credits_per_hash"===r?e.setRpcCreditsPerHash(BigInt(i)):console.log("WARNING: ignoring unexpected field in rpc peer: "+r+": "+i))}return e}static convertRpcConnection(t){let e=new R.Z;e.setIsOnline(!0);for(let r of Object.keys(t)){let i=t[r];"address"===r?e.setAddress(i):"avg_download"===r?e.setAvgDownload(i):"avg_upload"===r?e.setAvgUpload(i):"connection_id"===r?e.setId(i):"current_download"===r?e.setCurrentDownload(i):"current_upload"===r?e.setCurrentUpload(i):"height"===r?e.setHeight(i):"host"===r?e.setHost(i):"ip"===r||("incoming"===r?e.setIsIncoming(i):"live_time"===r?e.setLiveTime(i):"local_ip"===r?e.setIsLocalIp(i):"localhost"===r?e.setIsLocalHost(i):"peer_id"===r?e.setId(i):"port"===r?e.setPort(parseInt(i)):"rpc_port"===r?e.setRpcPort(i):"recv_count"===r?e.setNumReceives(i):"recv_idle_time"===r?e.setReceiveIdleTime(i):"send_count"===r?e.setNumSends(i):"send_idle_time"===r?e.setSendIdleTime(i):"state"===r?e.setState(i):"support_flags"===r?e.setNumSupportFlags(i):"pruning_seed"===r?e.setPruningSeed(i):"rpc_credits_per_hash"===r?e.setRpcCreditsPerHash(BigInt(i)):"address_type"===r?e.setType(i):console.log("WARNING: ignoring unexpected field in peer: "+r+": "+i))}return e}static convertToRpcBan(t){let e={};return e.host=t.getHost(),e.ip=t.getIp(),e.ban=t.getIsBanned(),e.seconds=t.getSeconds(),e}static convertRpcMiningStatus(t){let e=new I.Z;return e.setIsActive(t.active),e.setSpeed(t.speed),e.setNumThreads(t.threads_count),t.active&&(e.setAddress(t.address),e.setIsBackground(t.is_background_mining_enabled)),e}static convertRpcUpdateCheckResult(t){n()(t);let e=new b.Z;for(let r of Object.keys(t)){let i=t[r];"auto_uri"===r?e.setAutoUri(i):"hash"===r?e.setHash(i):"path"===r||"status"===r||("update"===r?e.setIsUpdateAvailable(i):"user_uri"===r?e.setUserUri(i):"version"===r?e.setVersion(i):"untrusted"===r||console.log("WARNING: ignoring unexpected field in rpc check update result: "+r+": "+i))}return""===e.getAutoUri()&&e.setAutoUri(void 0),""===e.getUserUri()&&e.setUserUri(void 0),""===e.getVersion()&&e.setVersion(void 0),""===e.getHash()&&e.setHash(void 0),e}static convertRpcUpdateDownloadResult(t){let e=new w.Z(F.convertRpcUpdateCheckResult(t));return e.setDownloadPath(t.path),""===e.getDownloadPath()&&e.setDownloadPath(void 0),e}static prefixedHexToBI(t){return n()("0x"===t.substring(0,2)),BigInt(t)}}F.MAX_REQ_SIZE="3000000",F.DEFAULT_ID="0000000000000000000000000000000000000000000000000000000000000000",F.NUM_HEADERS_PER_REQ=750,F.DEFAULT_POLL_PERIOD=2e4;class z{constructor(t,e){this.daemonId=t,this.worker=e,this.wrappedListeners=[]}static async connect(t){let e=s.Z.getUUID();return t=Object.assign({},t.toJson(),{proxyToWorker:!1}),await o.Z.invokeWorker(e,"connectDaemonRpc",[t]),new z(e,await o.Z.getWorker())}async addListener(t){let e=new W(t),r=e.getId();return o.Z.addWorkerCallback(this.daemonId,"onBlockHeader_"+r,[e.onBlockHeader,e]),this.wrappedListeners.push(e),this.invokeWorker("daemonAddListener",[r])}async removeListener(t){for(let e=0;e<this.wrappedListeners.length;e++)if(this.wrappedListeners[e].getListener()===t){let t=this.wrappedListeners[e].getId();return await this.invokeWorker("daemonRemoveListener",[t]),o.Z.removeWorkerCallback(this.daemonId,"onBlockHeader_"+t),void this.wrappedListeners.splice(e,1)}throw new S.Z("Listener is not registered with daemon")}async getListeners(){let t=[];for(let e of this.wrappedListeners)t.push(e.getListener());return t}async getRpcConnection(){let t=await this.invokeWorker("daemonGetRpcConnection");return new B.Z(t)}async isConnected(){return this.invokeWorker("daemonIsConnected")}async getVersion(){let t=await this.invokeWorker("daemonGetVersion");return new Z.Z(t.number,t.isRelease)}async isTrusted(){return this.invokeWorker("daemonIsTrusted")}async getHeight(){return this.invokeWorker("daemonGetHeight")}async getBlockHash(t){return this.invokeWorker("daemonGetBlockHash",Array.from(arguments))}async getBlockTemplate(t,e){return new d.Z(await this.invokeWorker("daemonGetBlockTemplate",Array.from(arguments)))}async getLastBlockHeader(){return new l.Z(await this.invokeWorker("daemonGetLastBlockHeader"))}async getBlockHeaderByHash(t){return new l.Z(await this.invokeWorker("daemonGetBlockHeaderByHash",Array.from(arguments)))}async getBlockHeaderByHeight(t){return new l.Z(await this.invokeWorker("daemonGetBlockHeaderByHeight",Array.from(arguments)))}async getBlockHeadersByRange(t,e){let r=await this.invokeWorker("daemonGetBlockHeadersByRange",Array.from(arguments)),i=[];for(let t of r)i.push(new l.Z(t));return i}async getBlockByHash(t){return new c.Z(await this.invokeWorker("daemonGetBlockByHash",Array.from(arguments)),c.Z.DeserializationType.TX)}async getBlocksByHash(t,e,r){let i=await this.invokeWorker("daemonGetBlocksByHash",Array.from(arguments)),n=[];for(let t of i)n.push(new c.Z(t));return n}async getBlockByHeight(t){return new c.Z(await this.invokeWorker("daemonGetBlockByHeight",Array.from(arguments)),c.Z.DeserializationType.TX)}async getBlocksByHeight(t){let e=await this.invokeWorker("daemonGetBlocksByHeight",Array.from(arguments)),r=[];for(let t of e)r.push(new c.Z(t,c.Z.DeserializationType.TX));return r}async getBlocksByRange(t,e){let r=await this.invokeWorker("daemonGetBlocksByRange",Array.from(arguments)),i=[];for(let t of r)i.push(new c.Z(t,c.Z.DeserializationType.TX));return i}async getBlocksByRangeChunked(t,e,r){let i=await this.invokeWorker("daemonGetBlocksByRangeChunked",Array.from(arguments)),n=[];for(let t of i)n.push(new c.Z(t,c.Z.DeserializationType.TX));return n}async getBlockHashes(t,e){return this.invokeWorker("daemonGetBlockHashes",Array.from(arguments))}async getTxs(t,e=!1){let r=[];for(let t of await this.invokeWorker("daemonGetTxs",Array.from(arguments)))r.push(new c.Z(t,c.Z.DeserializationType.TX));let i=[];for(let t of r)for(let e of t.getTxs())e.getIsConfirmed()||e.setBlock(void 0),i.push(e);return i}async getTxHexes(t,e=!1){return this.invokeWorker("daemonGetTxHexes",Array.from(arguments))}async getMinerTxSum(t,e){return new x.Z(await this.invokeWorker("daemonGetMinerTxSum",Array.from(arguments)))}async getFeeEstimate(t){return new E.Z(await this.invokeWorker("daemonGetFeeEstimate",Array.from(arguments)))}async submitTxHex(t,e){return new O.Z(await this.invokeWorker("daemonSubmitTxHex",Array.from(arguments)))}async relayTxsByHash(t){return this.invokeWorker("daemonRelayTxsByHash",Array.from(arguments))}async getTxPool(){let t=await this.invokeWorker("daemonGetTxPool"),e=new c.Z(t,c.Z.DeserializationType.TX).getTxs();for(let t of e)t.setBlock(void 0);return e||[]}async getTxPoolHashes(){return this.invokeWorker("daemonGetTxPoolHashes",Array.from(arguments))}async getTxPoolBacklog(){throw new S.Z("Not implemented")}async getTxPoolStats(){return new L.Z(await this.invokeWorker("daemonGetTxPoolStats"))}async flushTxPool(t){return this.invokeWorker("daemonFlushTxPool",Array.from(arguments))}async getKeyImageSpentStatuses(t){return this.invokeWorker("daemonGetKeyImageSpentStatuses",Array.from(arguments))}async getOutputs(t){throw new S.Z("Not implemented")}async getOutputHistogram(t,e,r,i,n){let s=[];for(let o of await this.invokeWorker("daemonGetOutputHistogram",[t,e,r,i,n]))s.push(new T.Z(o));return s}async getOutputDistribution(t,e,r,i){throw new S.Z("Not implemented")}async getInfo(){return new m.Z(await this.invokeWorker("daemonGetInfo"))}async getSyncInfo(){return new v.Z(await this.invokeWorker("daemonGetSyncInfo"))}async getHardForkInfo(){return new N.Z(await this.invokeWorker("daemonGetHardForkInfo"))}async getAltChains(){let t=[];for(let e of await this.invokeWorker("daemonGetAltChains"))t.push(new u.Z(e));return t}async getAltBlockHashes(){return this.invokeWorker("daemonGetAltBlockHashes")}async getDownloadLimit(){return this.invokeWorker("daemonGetDownloadLimit")}async setDownloadLimit(t){return this.invokeWorker("daemonSetDownloadLimit",Array.from(arguments))}async resetDownloadLimit(){return this.invokeWorker("daemonResetDownloadLimit")}async getUploadLimit(){return this.invokeWorker("daemonGetUploadLimit")}async setUploadLimit(t){return this.invokeWorker("daemonSetUploadLimit",Array.from(arguments))}async resetUploadLimit(){return this.invokeWorker("daemonResetUploadLimit")}async getPeers(){let t=[];for(let e of await this.invokeWorker("daemonGetPeers"))t.push(new R.Z(e));return t}async getKnownPeers(){let t=[];for(let e of await this.invokeWorker("daemonGetKnownPeers"))t.push(new R.Z(e));return t}async setOutgoingPeerLimit(t){return this.invokeWorker("daemonSetIncomingPeerLimit",Array.from(arguments))}async setIncomingPeerLimit(t){return this.invokeWorker("daemonSetIncomingPeerLimit",Array.from(arguments))}async getPeerBans(){let t=[];for(let e of await this.invokeWorker("daemonGetPeerBans"))t.push(new h.Z(e));return t}async setPeerBans(t){let e=[];for(let r of t)e.push(r.toJson());return this.invokeWorker("daemonSetPeerBans",[e])}async startMining(t,e,r,i){return this.invokeWorker("daemonStartMining",Array.from(arguments))}async stopMining(){await this.invokeWorker("daemonStopMining")}async getMiningStatus(){return new I.Z(await this.invokeWorker("daemonGetMiningStatus"))}async submitBlocks(t){throw new S.Z("Not implemented")}async pruneBlockchain(t){return new k.Z(await this.invokeWorker("daemonPruneBlockchain"))}async checkForUpdate(){throw new S.Z("Not implemented")}async downloadUpdate(t){throw new S.Z("Not implemented")}async stop(){for(;this.wrappedListeners.length;)await this.removeListener(this.wrappedListeners[0].getListener());return this.invokeWorker("daemonStop")}async waitForNextBlockHeader(){return new l.Z(await this.invokeWorker("daemonWaitForNextBlockHeader"))}async invokeWorker(t,e){return o.Z.invokeWorker(this.daemonId,t,e)}}class H{constructor(t){let e=this;this.daemon=t,this.looper=new a.Z((async function(){await e.poll()}))}setIsPolling(t){this.isPolling=t,t?this.looper.start(this.daemon.getPollInterval()):this.looper.stop()}async poll(){try{let t=await this.daemon.getLastBlockHeader();if(!this.lastHeader)return void(this.lastHeader=await this.daemon.getLastBlockHeader());t.getHash()!==this.lastHeader.getHash()&&(this.lastHeader=t,await this.announceBlockHeader(t))}catch(t){console.error("Failed to background poll daemon header"),console.error(t)}}async announceBlockHeader(t){for(let e of await this.daemon.getListeners())try{await e.onBlockHeader(t)}catch(t){console.error("Error calling listener on block header",t)}}}class W{constructor(t){this.id=s.Z.getUUID(),this.listener=t}getId(){return this.id}getListener(){return this.listener}async onBlockHeader(t){this.listener.onBlockHeader(new l.Z(t))}}const K=F},9609:(t,e,r)=>{"use strict";r.d(e,{Z:()=>i});class i{constructor(t){Object.assign(this,t),void 0!==this.difficulty&&"bigint"!=typeof this.difficulty&&(this.difficulty=BigInt(this.difficulty))}toJson(){let t=Object.assign({},this);return void 0!==this.getDifficulty()&&(t.difficulty=this.getDifficulty().toString()),t}getBlockHashes(){return this.blockHashes}setBlockHashes(t){return this.blockHashes=t,this}getDifficulty(){return this.difficulty}setDifficulty(t){return this.difficulty=t,this}getHeight(){return this.height}setHeight(t){return this.height=t,this}getLength(){return this.length}setLength(t){return this.length=t,this}getMainChainParentBlockHash(){return this.mainChainParentBlockHash}setMainChainParentBlockHash(t){return this.mainChainParentBlockHash=t,this}}},4019:(t,e,r)=>{"use strict";r.d(e,{Z:()=>i});class i{constructor(t){Object.assign(this,t)}toJson(){return Object.assign({},this)}getHost(){return this.host}setHost(t){return this.host=t,this}getIp(){return this.ip}setIp(t){return this.ip=t,this}getIsBanned(){return this.isBanned}setIsBanned(t){return this.isBanned=t,this}getSeconds(){return this.seconds}setSeconds(t){return this.seconds=t,this}}},1487:(t,e,r)=>{"use strict";r.d(e,{Z:()=>d});var i,n=r(9282),s=r.n(n),o=r(6048),a=r(7353),u=r(2318),h=r(4569),c=r(603);!function(t){t[t.TX=0]="TX",t[t.TX_WALLET=1]="TX_WALLET",t[t.TX_QUERY=2]="TX_QUERY"}(i||(i={}));class l extends a.Z{constructor(t,e){if(super(t),this.minerTx&&(this.minerTx=this.deserializeTx(this.minerTx,e).setBlock(this)),this.txs){this.txs=this.txs.slice();for(let t=0;t<this.txs.length;t++)this.txs[t]=this.deserializeTx(this.txs[t],e).setBlock(this)}}getHex(){return this.hex}setHex(t){return this.hex=t,this}getMinerTx(){return this.minerTx}setMinerTx(t){return this.minerTx=t,this}getTxs(){return this.txs}setTxs(t){return this.txs=t,this}getTxHashes(){return this.txHashes}setTxHashes(t){return this.txHashes=t,this}copy(){return new l(this)}toJson(){let t=super.toJson();if(void 0!==this.getMinerTx()&&(t.minerTx=this.getMinerTx().toJson()),void 0!==this.getTxs()){t.txs=[];for(let e of this.getTxs())t.txs.push(e.toJson())}return t}merge(t){if(s()(t instanceof l),this===t)return this;if(super.merge(t),this.setHex(o.Z.reconcile(this.getHex(),t.getHex())),this.setTxHashes(o.Z.reconcile(this.getTxHashes(),t.getTxHashes())),void 0===this.getMinerTx()&&this.setMinerTx(t.getMinerTx()),void 0!==t.getMinerTx()&&(t.getMinerTx().setBlock(this),this.getMinerTx().merge(t.getMinerTx())),void 0!==t.getTxs())for(let e of t.getTxs())e.setBlock(this),l.mergeTx(this.getTxs(),e);return this}toString(t=0){let e=super.toString(t)+"\n";if(e+=o.Z.kvLine("Hex",this.getHex(),t),void 0!==this.getTxs()){e+=o.Z.kvLine("Txs","",t);for(let r of this.getTxs())e+=r.toString(t+1)+"\n"}return void 0!==this.getMinerTx()&&(e+=o.Z.kvLine("Miner tx","",t),e+=this.getMinerTx().toString(t+1)+"\n"),e+=o.Z.kvLine("Txs hashes",this.getTxHashes(),t),"\n"===e[e.length-1]?e.slice(0,e.length-1):e}static mergeTx(t,e){for(let r of t)if(r.getHash()===e.getHash())return void r.merge(e);t.push(e)}setHeight(t){return super.setHeight(t),this}setTimestamp(t){return super.setTimestamp(t),this}setSize(t){return super.setSize(t),this}setWeight(t){return super.setWeight(t),this}setLongTermWeight(t){return super.setLongTermWeight(t),this}setDepth(t){return super.setDepth(t),this}setDifficulty(t){return super.setDifficulty(t),this}setCumulativeDifficulty(t){return super.setCumulativeDifficulty(t),this}setMajorVersion(t){return super.setMajorVersion(t),this}setMinorVersion(t){return super.setMinorVersion(t),this}setNonce(t){return super.setNonce(t),this}setMinerTxHash(t){return super.setMinerTxHash(t),this}setNumTxs(t){return super.setNumTxs(t),this}setOrphanStatus(t){return super.setOrphanStatus(t),this}setPrevHash(t){return super.setPrevHash(t),this}setReward(t){return super.setReward(t),this}setPowHash(t){return super.setPowHash(t),this}deserializeTx(t,e){if(void 0===e){if(!(t instanceof u.Z))throw new Error("Must provide DeserializationType if tx is not instanceof MoneroTx");return t.copy()}if(e===l.DeserializationType.TX||void 0===e)return new u.Z(t);if(e===l.DeserializationType.TX_WALLET)return new c.Z(t);if(e===l.DeserializationType.TX_QUERY)return new h.Z(t);throw new Error("Unrecognized tx deserialization type: "+e)}}l.DeserializationType=i;const d=l},7353:(t,e,r)=>{"use strict";r.d(e,{Z:()=>o});var i=r(9282),n=r.n(i),s=r(6048);class o{constructor(t){Object.assign(this,t),void 0!==this.difficulty&&"bigint"!=typeof this.difficulty&&(this.difficulty=BigInt(this.difficulty)),void 0!==this.cumulativeDifficulty&&"bigint"!=typeof this.cumulativeDifficulty&&(this.cumulativeDifficulty=BigInt(this.cumulativeDifficulty)),void 0!==this.reward&&"bigint"!=typeof this.reward&&(this.reward=BigInt(this.reward))}copy(){return new o(this)}toJson(){let t=Object.assign({},this);return void 0!==this.getDifficulty()&&(t.difficulty=this.getDifficulty().toString()),void 0!==this.getCumulativeDifficulty()&&(t.cumulativeDifficulty=this.getCumulativeDifficulty().toString()),void 0!==this.getReward()&&(t.reward=this.getReward().toString()),t}getHash(){return this.hash}setHash(t){return this.hash=t,this}getHeight(){return this.height}setHeight(t){return this.height=t,this}getTimestamp(){return this.timestamp}setTimestamp(t){return this.timestamp=t,this}getSize(){return this.size}setSize(t){return this.size=t,this}getWeight(){return this.weight}setWeight(t){return this.weight=t,this}getLongTermWeight(){return this.longTermWeight}setLongTermWeight(t){return this.longTermWeight=t,this}getDepth(){return this.depth}setDepth(t){return this.depth=t,this}getDifficulty(){return this.difficulty}setDifficulty(t){return this.difficulty=t,this}getCumulativeDifficulty(){return this.cumulativeDifficulty}setCumulativeDifficulty(t){return this.cumulativeDifficulty=t,this}getMajorVersion(){return this.majorVersion}setMajorVersion(t){return this.majorVersion=t,this}getMinorVersion(){return this.minorVersion}setMinorVersion(t){return this.minorVersion=t,this}getNonce(){return this.nonce}setNonce(t){return this.nonce=t,this}getMinerTxHash(){return this.minerTxHash}setMinerTxHash(t){return this.minerTxHash=t,this}getNumTxs(){return this.numTxs}setNumTxs(t){return this.numTxs=t,this}getOrphanStatus(){return this.orphanStatus}setOrphanStatus(t){return this.orphanStatus=t,this}getPrevHash(){return this.prevHash}setPrevHash(t){return this.prevHash=t,this}getReward(){return this.reward}setReward(t){return this.reward=t,this}getPowHash(){return this.powHash}setPowHash(t){return this.powHash=t,this}merge(t){return n()(t instanceof o),this===t||(this.setHash(s.Z.reconcile(this.getHash(),t.getHash())),this.setHeight(s.Z.reconcile(this.getHeight(),t.getHeight(),{resolveMax:!0})),this.setTimestamp(s.Z.reconcile(this.getTimestamp(),t.getTimestamp(),{resolveMax:!0})),this.setSize(s.Z.reconcile(this.getSize(),t.getSize())),this.setWeight(s.Z.reconcile(this.getWeight(),t.getWeight())),this.setDepth(s.Z.reconcile(this.getDepth(),t.getDepth())),this.setDifficulty(s.Z.reconcile(this.getDifficulty(),t.getDifficulty())),this.setCumulativeDifficulty(s.Z.reconcile(this.getCumulativeDifficulty(),t.getCumulativeDifficulty())),this.setMajorVersion(s.Z.reconcile(this.getMajorVersion(),t.getMajorVersion())),this.setMinorVersion(s.Z.reconcile(this.getMinorVersion(),t.getMinorVersion())),this.setNonce(s.Z.reconcile(this.getNonce(),t.getNonce())),this.setMinerTxHash(s.Z.reconcile(this.getMinerTxHash(),t.getMinerTxHash())),this.setNumTxs(s.Z.reconcile(this.getNumTxs(),t.getNumTxs())),this.setOrphanStatus(s.Z.reconcile(this.getOrphanStatus(),t.getOrphanStatus())),this.setPrevHash(s.Z.reconcile(this.getPrevHash(),t.getPrevHash())),this.setReward(s.Z.reconcile(this.getReward(),t.getReward())),this.setPowHash(s.Z.reconcile(this.getPowHash(),t.getPowHash()))),this}toString(t=0){let e="";return e+=s.Z.kvLine("Hash",this.getHash(),t),e+=s.Z.kvLine("Height",this.getHeight(),t),e+=s.Z.kvLine("Timestamp",this.getTimestamp(),t),e+=s.Z.kvLine("Size",this.getSize(),t),e+=s.Z.kvLine("Weight",this.getWeight(),t),e+=s.Z.kvLine("Depth",this.getDepth(),t),e+=s.Z.kvLine("Difficulty",this.getDifficulty(),t),e+=s.Z.kvLine("Cumulative difficulty",this.getCumulativeDifficulty(),t),e+=s.Z.kvLine("Major version",this.getMajorVersion(),t),e+=s.Z.kvLine("Minor version",this.getMinorVersion(),t),e+=s.Z.kvLine("Nonce",this.getNonce(),t),e+=s.Z.kvLine("Miner tx hash",this.getMinerTxHash(),t),e+=s.Z.kvLine("Num txs",this.getNumTxs(),t),e+=s.Z.kvLine("Orphan status",this.getOrphanStatus(),t),e+=s.Z.kvLine("Prev hash",this.getPrevHash(),t),e+=s.Z.kvLine("Reward",this.getReward(),t),e+=s.Z.kvLine("Pow hash",this.getPowHash(),t),"\n"===e[e.length-1]?e.slice(0,e.length-1):e}}},1622:(t,e,r)=>{"use strict";r.d(e,{Z:()=>i});class i{constructor(t){Object.assign(this,t),void 0!==this.expectedReward&&"bigint"!=typeof this.expectedReward&&(this.expectedReward=BigInt(this.expectedReward)),void 0!==this.difficulty&&"bigint"!=typeof this.difficulty&&(this.difficulty=BigInt(this.difficulty))}toJson(){let t=Object.assign({},this);return void 0!==this.getExpectedReward()&&(t.expectedReward=this.getExpectedReward().toString()),void 0!==this.getDifficulty()&&(t.difficulty=this.getDifficulty().toString()),t}getBlockTemplateBlob(){return this.blockTemplateBlob}setBlockTemplateBlob(t){return this.blockTemplateBlob=t,this}getBlockHashingBlob(){return this.blockHashingBlob}setBlockHashingBlob(t){return this.blockHashingBlob=t,this}getDifficulty(){return this.difficulty}setDifficulty(t){return this.difficulty=t,this}getExpectedReward(){return this.expectedReward}setExpectedReward(t){return this.expectedReward=t,this}getHeight(){return this.height}setHeight(t){return this.height=t,this}getPrevHash(){return this.prevId}setPrevHash(t){return this.prevId=t,this}getReservedOffset(){return this.reservedOffset}setReservedOffset(t){return this.reservedOffset=t,this}getSeedHeight(){return this.height}setSeedHeight(t){return this.seedHeight=t,this}getSeedHash(){return this.seedHash}setSeedHash(t){return this.seedHash=t,this}getNextSeedHash(){return this.nextSeedHash}setNextSeedHash(t){return this.nextSeedHash=t,this}}},5806:(t,e,r)=>{"use strict";r.d(e,{Z:()=>i});class i{constructor(t){Object.assign(this,t)}toJson(){return Object.assign({},this)}getConnectionId(){return this.connectionId}setConnectionId(t){return this.connectionId=t,this}getNumBlocks(){return this.numBlocks}setNumBlocks(t){return this.numBlocks=t,this}getRemoteAddress(){return this.remoteAddress}setRemoteAddress(t){return this.remoteAddress=t,this}getRate(){return this.rate}setRate(t){return this.rate=t,this}getSpeed(){return this.speed}setSpeed(t){return this.speed=t,this}getSize(){return this.size}setSize(t){return this.size=t,this}getStartHeight(){return this.startHeight}setStartHeight(t){return this.startHeight=t,this}}},4292:(t,e,r)=>{"use strict";r.d(e,{Z:()=>n});var i=r(1779);class n{constructor(t){Object.assign(this,t),this.server&&this.setServer(this.server),this.setProxyToWorker(this.proxyToWorker)}copy(){return new n(this)}toJson(){let t=Object.assign({},this);return t.server&&(t.server=t.server.toJson()),t}getServer(){return this.server}setServer(t){return!t||t instanceof i.Z||(t=new i.Z(t)),this.server=t,this}getProxyToWorker(){return this.proxyToWorker}setProxyToWorker(t){return this.proxyToWorker=t,this}getCmd(){return this.cmd}setCmd(t){return this.cmd=t,this}getPollInterval(){return this.pollInterval}setPollInterval(t){return this.pollInterval=t,this}}},2668:(t,e,r)=>{"use strict";r.d(e,{Z:()=>i});class i{constructor(t){Object.assign(this,t),void 0!==this.difficulty&&"bigint"!=typeof this.difficulty&&(this.difficulty=BigInt(this.difficulty)),void 0!==this.cumulativeDifficulty&&"bigint"!=typeof this.cumulativeDifficulty&&(this.cumulativeDifficulty=BigInt(this.cumulativeDifficulty)),void 0!==this.credits&&"bigint"!=typeof this.credits&&(this.credits=BigInt(this.credits))}toJson(){let t=Object.assign([],this);return void 0!==t.difficulty&&(t.difficulty=t.difficulty.toString()),void 0!==t.cumulativeDifficulty&&(t.cumulativeDifficulty=t.cumulativeDifficulty.toString()),void 0!==t.credits&&(t.credits=t.credits.toString()),t}getVersion(){return this.version}setVersion(t){return this.version=t,this}getNumAltBlocks(){return this.numAltBlocks}setNumAltBlocks(t){return this.numAltBlocks=t,this}getBlockSizeLimit(){return this.blockSizeLimit}setBlockSizeLimit(t){return this.blockSizeLimit=t,this}getBlockSizeMedian(){return this.blockSizeMedian}setBlockSizeMedian(t){return this.blockSizeMedian=t,this}getBlockWeightLimit(){return this.blockWeightLimit}setBlockWeightLimit(t){return this.blockWeightLimit=t,this}getBlockWeightMedian(){return this.blockWeightMedian}setBlockWeightMedian(t){return this.blockWeightMedian=t,this}getBootstrapDaemonAddress(){return this.bootstrapDaemonAddress}setBootstrapDaemonAddress(t){return this.bootstrapDaemonAddress=t,this}getDifficulty(){return this.difficulty}setDifficulty(t){return this.difficulty=t,this}getCumulativeDifficulty(){return this.cumulativeDifficulty}setCumulativeDifficulty(t){return this.cumulativeDifficulty=t,this}getFreeSpace(){return this.freeSpace}setFreeSpace(t){return this.freeSpace=t,this}getNumOfflinePeers(){return this.numOfflinePeers}setNumOfflinePeers(t){return this.numOfflinePeers=t,this}getNumOnlinePeers(){return this.numOnlinePeers}setNumOnlinePeers(t){return this.numOnlinePeers=t,this}getHeight(){return this.height}setHeight(t){return this.height=t,this}getHeightWithoutBootstrap(){return this.heightWithoutBootstrap}setHeightWithoutBootstrap(t){return this.heightWithoutBootstrap=t,this}getNetworkType(){return this.networkType}setNetworkType(t){return this.networkType=t,this}getIsOffline(){return this.isOffline}setIsOffline(t){return this.isOffline=t,this}getNumIncomingConnections(){return this.numIncomingConnections}setNumIncomingConnections(t){return this.numIncomingConnections=t,this}getNumOutgoingConnections(){return this.numOutgoingConnections}setNumOutgoingConnections(t){return this.numOutgoingConnections=t,this}getNumRpcConnections(){return this.numRpcConnections}setNumRpcConnections(t){return this.numRpcConnections=t,this}getStartTimestamp(){return this.startTimestamp}setStartTimestamp(t){return this.startTimestamp=t,this}getAdjustedTimestamp(){return this.adjustedTimestamp}setAdjustedTimestamp(t){return this.adjustedTimestamp=t,this}getTarget(){return this.target}setTarget(t){return this.target=t,this}getTargetHeight(){return this.targetHeight}setTargetHeight(t){return this.targetHeight=t,this}getTopBlockHash(){return this.topBlockHash}setTopBlockHash(t){return this.topBlockHash=t,this}getNumTxs(){return this.numTxs}setNumTxs(t){return this.numTxs=t,this}getNumTxsPool(){return this.numTxsPool}setNumTxsPool(t){return this.numTxsPool=t,this}getWasBootstrapEverUsed(){return this.wasBootstrapEverUsed}setWasBootstrapEverUsed(t){return this.wasBootstrapEverUsed=t,this}getDatabaseSize(){return this.databaseSize}setDatabaseSize(t){return this.databaseSize=t,this}getUpdateAvailable(){return this.updateAvailable}setUpdateAvailable(t){return this.updateAvailable=t,this}getCredits(){return this.credits}setCredits(t){return this.credits=t,this}getIsBusySyncing(){return this.isBusySyncing}setIsBusySyncing(t){return this.isBusySyncing=t,this}getIsSynchronized(){return this.isSynchronized}setIsSynchronized(t){return this.isSynchronized=t,this}getIsRestricted(){return this.isRestricted}setIsRestricted(t){return this.isRestricted=t,this}}},9457:(t,e,r)=>{"use strict";r.d(e,{Z:()=>i});class i{async onBlockHeader(t){this.lastHeader=t}getLastBlockHeader(){return this.lastHeader}}},9147:(t,e,r)=>{"use strict";r.d(e,{Z:()=>s});var i=r(5806),n=r(6311);class s{constructor(t){if(Object.assign(this,t),void 0!==this.credits&&"bigint"!=typeof this.credits&&(this.credits=BigInt(this.credits)),this.peers)for(let t=0;t<this.peers.length;t++)this.peers[t]=new n.Z(this.peers[t]);if(this.spans)for(let t=0;t<this.spans.length;t++)this.spans[t]=new i.Z(this.spans[t])}toJson(){let t=Object.assign({},this);if(void 0!==t.peers)for(let e=0;e<t.peers.length;e++)t.peers[e]=t.peers[e].toJson();if(void 0!==t.spans)for(let e=0;e<t.spans.length;e++)t.spans[e]=t.spans[e].toJson();return void 0!==t.credits&&(t.credits=t.credits.toString()),t}getHeight(){return this.height}setHeight(t){return this.height=t,this}getPeers(){return this.peers}setPeers(t){return this.peers=t,this}getSpans(){return this.spans}setSpans(t){return this.spans=t,this}getTargetHeight(){return this.targetHeight}setTargetHeight(t){return this.targetHeight=t,this}getNextNeededPruningSeed(){return this.nextNeededPruningSeed}setNextNeededPruningSeed(t){return this.nextNeededPruningSeed=t,this}getOverview(){return this.overview}setOverview(t){return this.overview=t,this}getCredits(){return this.credits}setCredits(t){return this.credits=t,this}getTopBlockHash(){return this.topBlockHash}setTopBlockHash(t){return this.topBlockHash=t,this}}},1469:(t,e,r)=>{"use strict";r.d(e,{Z:()=>i});class i{constructor(t){Object.assign(this,t)}getIsUpdateAvailable(){return this.isUpdateAvailable}setIsUpdateAvailable(t){return this.isUpdateAvailable=t,this}getVersion(){return this.version}setVersion(t){return this.version=t,this}getHash(){return this.hash}setHash(t){return this.hash=t,this}getAutoUri(){return this.autoUri}setAutoUri(t){return this.autoUri=t,this}getUserUri(){return this.userUri}setUserUri(t){return this.userUri=t,this}}},3645:(t,e,r)=>{"use strict";r.d(e,{Z:()=>n});var i=r(1469);class n extends i.Z{constructor(t){super(t)}getDownloadPath(){return this.downloadPath}setDownloadPath(t){return this.downloadPath=t,this}}},3961:(t,e,r)=>{"use strict";r.d(e,{Z:()=>n});var i=r(6048);class n{constructor(t){if(Object.assign(this,t),void 0!==this.fee&&"bigint"!=typeof this.fee&&(this.fee=BigInt(this.fee)),void 0!==this.fees)for(let t=0;t<this.fees.length;t++)"bigint"!=typeof this.fees[t]&&(this.fees[t]=BigInt(this.fees[t]));void 0!==this.quantizationMask&&"bigint"!=typeof this.quantizationMask&&(this.quantizationMask=BigInt(this.quantizationMask))}getFee(){return this.fee}setFee(t){return this.fee=t,this}getFees(){return this.fees}setFees(t){return this.fees=t,this}getQuantizationMask(){return this.quantizationMask}setQuantizationMask(t){return this.quantizationMask=t,this}copy(){return new n(this)}toJson(){let t=Object.assign({},this);if(this.getFee()&&(t.fee=this.getFee().toString()),this.getFees())for(let e=0;e<this.getFees().length;e++)t.fees[e]=this.getFees()[e].toString();return this.getQuantizationMask()&&(t.quantizationMask=this.getQuantizationMask().toString()),t}toString(t=0){let e="",r=this.toJson();return e+=i.Z.kvLine("Fee",r.fee,t),e+=i.Z.kvLine("Fees",r.fees,t),e+=i.Z.kvLine("Quantization mask",r.quantizationMask,t),e.slice(0,e.length-1)}}},9566:(t,e,r)=>{"use strict";r.d(e,{Z:()=>i});class i{constructor(t){Object.assign(this,t),void 0!==this.credits&&"bigint"!=typeof this.credits&&(this.credits=BigInt(this.credits))}toJson(){let t=Object.assign({},this);return void 0!==t.credits&&(t.credits=t.credits.toString()),t}getEarliestHeight(){return this.earliestHeight}setEarliestHeight(t){return this.earliestHeight=t,this}getIsEnabled(){return this.isEnabled}setIsEnabled(t){return this.isEnabled=t,this}getState(){return this.state}setState(t){return this.state=t,this}getThreshold(){return this.threshold}setThreshold(t){return this.threshold=t,this}getVersion(){return this.version}setVersion(t){return this.version=t,this}getNumVotes(){return this.numVotes}setNumVotes(t){return this.numVotes=t,this}getWindow(){return this.window}setWindow(t){return this.window=t,this}getVoting(){return this.voting}setVoting(t){return this.voting=t,this}getCredits(){return this.credits}setCredits(t){return this.credits=t,this}getTopBlockHash(){return this.topBlockHash}setTopBlockHash(t){return this.topBlockHash=t,this}}},2795:(t,e,r)=>{"use strict";r.d(e,{Z:()=>o});var i=r(9282),n=r.n(i),s=r(6048);class o{constructor(t,e){"string"==typeof t?(this.setHex(t),this.setSignature(e)):Object.assign(this,t)}getHex(){return this.hex}setHex(t){return this.hex=t,this}getSignature(){return this.signature}setSignature(t){return this.signature=t,this}copy(){return new o(this)}toJson(){return Object.assign({},this)}merge(t){return n()(t instanceof o),t===this||(this.setHex(s.Z.reconcile(this.getHex(),t.getHex())),this.setSignature(s.Z.reconcile(this.getSignature(),t.getSignature()))),this}toString(t=0){let e="";return e+=s.Z.kvLine("Hex",this.getHex(),t),e+=s.Z.kvLine("Signature",this.getSignature(),t),e.slice(0,e.length-1)}}},5914:(t,e,r)=>{"use strict";r.d(e,{Z:()=>i});class i{constructor(t){Object.assign(this,t),void 0!==this.emissionSum&&"bigint"!=typeof this.emissionSum&&(this.emissionSum=BigInt(this.emissionSum)),void 0!==this.feeSum&&"bigint"!=typeof this.feeSum&&(this.feeSum=BigInt(this.feeSum))}toJson(){let t=Object.assign({},this);return void 0!==this.getEmissionSum()&&(t.emissionSum=this.getEmissionSum().toString()),void 0!==this.getFeeSum()&&(t.feeSum=this.getFeeSum().toString()),t}getEmissionSum(){return this.emissionSum}setEmissionSum(t){return this.emissionSum=t,this}getFeeSum(){return this.feeSum}setFeeSum(t){return this.feeSum=t,this}}},590:(t,e,r)=>{"use strict";r.d(e,{Z:()=>i});class i{constructor(t){Object.assign(this,t)}toJson(){return Object.assign({},this)}getIsActive(){return this.isActive}setIsActive(t){return this.isActive=t,this}getAddress(){return this.address}setAddress(t){return this.address=t,this}getSpeed(){return this.speed}setSpeed(t){return this.speed=t,this}getNumThreads(){return this.numThreads}setNumThreads(t){return this.numThreads=t,this}getIsBackground(){return this.isBackground}setIsBackground(t){return this.isBackground=t,this}}},8403:(t,e,r)=>{"use strict";r.d(e,{Z:()=>s});var i=r(2477);class n{static from(t){return"string"==typeof t?n.parse(t):(n.validate(t),t)}static validate(t){if("string"==typeof t)n.parse(t);else if(0!==t&&1!==t&&2!==t)throw new i.Z("Network type is invalid: "+t)}static isValid(t){try{return n.validate(t),!0}catch(t){return!1}}static parse(t){switch((""+t).toLowerCase()){case"mainnet":return n.MAINNET;case"testnet":return n.TESTNET;case"stagenet":return n.STAGENET;default:throw new i.Z("Invalid network type to parse: '"+t+"'")}}static toString(t){if(0===t)return"mainnet";if(1===t)return"testnet";if(2===t)return"stagenet";throw new i.Z("Invalid network type: "+t)}}n.MAINNET=0,n.TESTNET=1,n.STAGENET=2;const s=n},4314:(t,e,r)=>{"use strict";r.d(e,{Z:()=>a});var i=r(9282),n=r.n(i),s=r(6048),o=r(2795);class a{constructor(t){Object.assign(this,t),void 0!==this.amount&&"bigint"!=typeof this.amount&&(this.amount=BigInt(this.amount)),this.keyImage&&(this.keyImage=this.keyImage instanceof o.Z?this.keyImage.copy():new o.Z(this.keyImage))}getTx(){return this.tx}setTx(t){return this.tx=t,this}getKeyImage(){return this.keyImage}setKeyImage(t){return this.keyImage=void 0===t?void 0:t instanceof o.Z?t:new o.Z(t),this}getAmount(){return this.amount}setAmount(t){return this.amount=t,this}getIndex(){return this.index}setIndex(t){return this.index=t,this}getRingOutputIndices(){return this.ringOutputIndices}setRingOutputIndices(t){return this.ringOutputIndices=t,this}getStealthPublicKey(){return this.stealthPublicKey}setStealthPublicKey(t){return this.stealthPublicKey=t,this}copy(){return new a(this)}toJson(){let t=Object.assign({},this);return void 0!==this.getAmount()&&(t.amount=this.getAmount().toString()),void 0!==this.getKeyImage()&&(t.keyImage=this.getKeyImage()?this.getKeyImage().toJson():void 0),delete t.tx,t}merge(t){return n()(t instanceof a),this===t||(this.getTx()!==t.getTx()?this.getTx().merge(t.getTx()):(void 0===this.getKeyImage()?this.setKeyImage(t.getKeyImage()):void 0!==t.getKeyImage()&&this.getKeyImage().merge(t.getKeyImage()),this.setAmount(s.Z.reconcile(this.getAmount(),t.getAmount())),this.setIndex(s.Z.reconcile(this.getIndex(),t.getIndex())))),this}toString(t=0){let e="";return void 0!==this.getKeyImage()&&(e+=s.Z.kvLine("Key image","",t),e+=this.getKeyImage().toString(t+1)+"\n"),e+=s.Z.kvLine("Amount",this.getAmount(),t),e+=s.Z.kvLine("Index",this.getIndex(),t),e+=s.Z.kvLine("Ring output indices",this.getRingOutputIndices(),t),e+=s.Z.kvLine("Stealth public key",this.getStealthPublicKey(),t),""===e?e:e.slice(0,e.length-1)}}},1552:(t,e,r)=>{"use strict";r.d(e,{Z:()=>i});class i{constructor(t){Object.assign(this,t),void 0!==this.amount&&"bigint"!=typeof this.amount&&(this.amount=BigInt(this.amount))}toJson(){let t=Object.assign({},this);return void 0!==t.amount&&(t.amount=t.amount.toString()),t}getAmount(){return this.amount}setAmount(t){return this.amount=t,this}getNumInstances(){return this.numInstances}setNumInstances(t){return this.numInstances=t,this}getNumUnlockedInstances(){return this.numUnlockedInstances}setNumUnlockedInstances(t){return this.numUnlockedInstances=t,this}getNumRecentInstances(){return this.numRecentInstances}setNumRecentInstances(t){return this.numRecentInstances=t,this}}},6311:(t,e,r)=>{"use strict";r.d(e,{Z:()=>i});class i{constructor(t){Object.assign(this,t),void 0!==this.rpcCreditsPerHash&&"bigint"!=typeof this.rpcCreditsPerHash&&(this.rpcCreditsPerHash=BigInt(this.rpcCreditsPerHash))}toJson(){let t=Object.assign({},this);return void 0!==t.rpcCreditsPerHash&&(t.rpcCreditsPerHash=t.rpcCreditsPerHash.toString()),t}getId(){return this.id}setId(t){return this.id=t,this}getAddress(){return this.address}setAddress(t){return this.address=t,this}getHost(){return this.host}setHost(t){return this.host=t,this}getPort(){return this.port}setPort(t){return this.port=t,this}getIsOnline(){return this.isOnline}setIsOnline(t){return this.isOnline=t,this}getLastSeenTimestamp(){return this.lastSeenTimestamp}setLastSeenTimestamp(t){return this.lastSeenTimestamp=t,this}getPruningSeed(){return this.pruningSeed}setPruningSeed(t){return this.pruningSeed=t,this}getRpcPort(){return this.rpcPort}setRpcPort(t){return this.rpcPort=t,this}getRpcCreditsPerHash(){return this.rpcCreditsPerHash}setRpcCreditsPerHash(t){return this.rpcCreditsPerHash=t,this}getAvgDownload(){return this.avgDownload}setAvgDownload(t){return this.avgDownload=t,this}getAvgUpload(){return this.avgUpload}setAvgUpload(t){return this.avgUpload=t,this}getCurrentDownload(){return this.currentDownload}setCurrentDownload(t){return this.currentDownload=t,this}getCurrentUpload(){return this.currentUpload}setCurrentUpload(t){return this.currentUpload=t,this}getHeight(){return this.height}setHeight(t){return this.height=t,this}getIsIncoming(){return this.isIncoming}setIsIncoming(t){return this.isIncoming=t,this}getLiveTime(){return this.liveTime}setLiveTime(t){return this.liveTime=t,this}getIsLocalIp(){return this.isLocalIp}setIsLocalIp(t){return this.isLocalIp=t,this}getIsLocalHost(){return this.isLocalHost}setIsLocalHost(t){return this.isLocalHost=t,this}getNumReceives(){return this.numReceives}setNumReceives(t){return this.numReceives=t,this}getNumSends(){return this.numSends}setNumSends(t){return this.numSends=t,this}getReceiveIdleTime(){return this.receiveIdleTime}setReceiveIdleTime(t){return this.receiveIdleTime=t,this}getSendIdleTime(){return this.sendIdleTime}setSendIdleTime(t){return this.sendIdleTime=t,this}getState(){return this.state}setState(t){return this.state=t,this}getNumSupportFlags(){return this.numSupportFlags}setNumSupportFlags(t){return this.numSupportFlags=t,this}getType(){return this.type}setType(t){return this.type=t,this}}},868:(t,e,r)=>{"use strict";r.d(e,{Z:()=>i});class i{constructor(t){Object.assign(this,t)}toJson(){let t=Object.assign({},this);return this.getIsPruned()&&(t.isPruned=this.getIsPruned()),this.getPruningSeed()&&(t.pruningSeed=this.getPruningSeed()),t}getIsPruned(){return this.isPruned}setIsPruned(t){return this.isPruned=t,this}getPruningSeed(){return this.pruningSeed}setPruningSeed(t){return this.pruningSeed=t,this}}},5854:(t,e,r)=>{"use strict";r.d(e,{Z:()=>i});class i{constructor(t){Object.assign(this,t),void 0!==this.credits&&"bigint"!=typeof this.credits&&(this.credits=BigInt(this.credits))}toJson(){let t=Object.assign({},this);return void 0!==t.credits&&(t.credits=t.credits.toString()),t}getIsGood(){return this.isGood}setIsGood(t){return this.isGood=t,this}getIsRelayed(){return this.isRelayed}setIsRelayed(t){return this.isRelayed=t,this}getIsDoubleSpendSeen(){return this.isDoubleSpendSeen}setIsDoubleSpendSeen(t){return this.isDoubleSpendSeen=t,this}getIsFeeTooLow(){return this.isFeeTooLow}setIsFeeTooLow(t){return this.isFeeTooLow=t,this}getIsMixinTooLow(){return this.isMixinTooLow}setIsMixinTooLow(t){return this.isMixinTooLow=t,this}getHasInvalidInput(){return this.hasInvalidInput}setHasInvalidInput(t){return this.hasInvalidInput=t,this}getHasInvalidOutput(){return this.hasInvalidOutput}setHasInvalidOutput(t){return this.hasInvalidOutput=t,this}getHasTooFewOutputs(){return this.hasTooFewOutputs}setHasTooFewOutputs(t){return this.hasTooFewOutputs=t,this}getIsOverspend(){return this.isOverspend}setIsOverspend(t){return this.isOverspend=t,this}getReason(){return this.reason}setReason(t){return this.reason=t,this}getIsTooBig(){return this.isTooBig}setIsTooBig(t){return this.isTooBig=t,this}getSanityCheckFailed(){return this.sanityCheckFailed}setSanityCheckFailed(t){return this.sanityCheckFailed=t,this}getCredits(){return this.credits}setCredits(t){return this.credits=t,this}getTopBlockHash(){return this.topBlockHash}setTopBlockHash(t){return this.topBlockHash=t,this}getIsTxExtraTooBig(){return this.isTxExtraTooBig}setIsTxExtraTooBig(t){return this.isTxExtraTooBig=t,this}getIsNonzeroUnlockTime(){return this.isNonzeroUnlockTime}setIsNonzeroUnlockTime(t){return this.isNonzeroUnlockTime=t,this}}},2318:(t,e,r)=>{"use strict";r.d(e,{Z:()=>u});var i=r(9282),n=r.n(i),s=r(6048),o=r(4314);class a{constructor(t){if(Object.assign(this,t),this.block=void 0,void 0!==this.extra&&(this.extra=new Uint8Array(this.extra)),void 0!==this.fee&&"bigint"!=typeof this.fee&&(this.fee=BigInt(this.fee)),void 0!==this.unlockTime&&"bigint"!=typeof this.unlockTime&&(this.unlockTime=BigInt(this.unlockTime)),this.inputs){this.inputs=this.inputs.slice();for(let t=0;t<this.inputs.length;t++)this.inputs[t]=new o.Z(this.inputs[t]).setTx(this)}if(this.outputs){this.outputs=this.outputs.slice();for(let t=0;t<this.outputs.length;t++)this.outputs[t]=new o.Z(this.outputs[t]).setTx(this)}}getBlock(){return this.block}setBlock(t){return this.block=t,this}getHeight(){return void 0===this.getBlock()?void 0:this.getBlock().getHeight()}getHash(){return this.hash}setHash(t){return this.hash=t,this}getVersion(){return this.version}setVersion(t){return this.version=t,this}getIsMinerTx(){return this.isMinerTx}setIsMinerTx(t){return this.isMinerTx=t,this}getPaymentId(){return this.paymentId}setPaymentId(t){return this.paymentId=t,this}getFee(){return this.fee}setFee(t){return this.fee=t,this}getRingSize(){return this.ringSize}setRingSize(t){return this.ringSize=t,this}getRelay(){return this.relay}setRelay(t){return this.relay=t,this}getIsRelayed(){return this.isRelayed}setIsRelayed(t){return this.isRelayed=t,this}getIsConfirmed(){return this.isConfirmed}setIsConfirmed(t){return this.isConfirmed=t,this}getInTxPool(){return this.inTxPool}setInTxPool(t){return this.inTxPool=t,this}getNumConfirmations(){return this.numConfirmations}setNumConfirmations(t){return this.numConfirmations=t,this}getUnlockTime(){return this.unlockTime}setUnlockTime(t){return void 0!==t&&"bigint"!=typeof t&&(t=BigInt(t)),this.unlockTime=t,this}getLastRelayedTimestamp(){return this.lastRelayedTimestamp}setLastRelayedTimestamp(t){return this.lastRelayedTimestamp=t,this}getReceivedTimestamp(){return this.receivedTimestamp}setReceivedTimestamp(t){return this.receivedTimestamp=t,this}getIsDoubleSpendSeen(){return this.isDoubleSpendSeen}setIsDoubleSpendSeen(t){return this.isDoubleSpendSeen=t,this}getKey(){return this.key}setKey(t){return this.key=t,this}getFullHex(){return this.fullHex}setFullHex(t){return this.fullHex=t,this}getPrunedHex(){return this.prunedHex}setPrunedHex(t){return this.prunedHex=t,this}getPrunableHex(){return this.prunableHex}setPrunableHex(t){return this.prunableHex=t,this}getPrunableHash(){return this.prunableHash}setPrunableHash(t){return this.prunableHash=t,this}getSize(){return this.size}setSize(t){return this.size=t,this}getWeight(){return this.weight}setWeight(t){return this.weight=t,this}getInputs(){return this.inputs}setInputs(t){return this.inputs=t,this}getOutputs(){return this.outputs}setOutputs(t){return this.outputs=t,this}getOutputIndices(){return this.outputIndices}setOutputIndices(t){return this.outputIndices=t,this}getMetadata(){return this.metadata}setMetadata(t){return this.metadata=t,this}getExtra(){return this.extra}setExtra(t){return this.extra=t,this}getRctSignatures(){return this.rctSignatures}setRctSignatures(t){return this.rctSignatures=t,this}getRctSigPrunable(){return this.rctSigPrunable}setRctSigPrunable(t){return this.rctSigPrunable=t,this}getIsKeptByBlock(){return this.isKeptByBlock}setIsKeptByBlock(t){return this.isKeptByBlock=t,this}getIsFailed(){return this.isFailed}setIsFailed(t){return this.isFailed=t,this}getLastFailedHeight(){return this.lastFailedHeight}setLastFailedHeight(t){return this.lastFailedHeight=t,this}getLastFailedHash(){return this.lastFailedHash}setLastFailedHash(t){return this.lastFailedHash=t,this}getMaxUsedBlockHeight(){return this.maxUsedBlockHeight}setMaxUsedBlockHeight(t){return this.maxUsedBlockHeight=t,this}getMaxUsedBlockHash(){return this.maxUsedBlockHash}setMaxUsedBlockHash(t){return this.maxUsedBlockHash=t,this}getSignatures(){return this.signatures}setSignatures(t){return this.signatures=t,this}copy(){return new a(this)}toJson(){let t=Object.assign({},this);if(void 0!==this.getFee()&&(t.fee=this.getFee().toString()),void 0!==this.getUnlockTime()&&(t.unlockTime=this.getUnlockTime().toString()),this.getInputs()){t.inputs=[];for(let e of this.getInputs())t.inputs.push(e.toJson())}if(this.getOutputs()){t.outputs=[];for(let e of this.getOutputs())t.outputs.push(e.toJson())}return void 0!==this.getExtra()&&(t.extra=Array.from(this.getExtra(),(t=>t))),delete t.block,t}merge(t){if(n()(t instanceof a),this===t)return this;if(this.getBlock()!==t.getBlock())if(void 0===this.getBlock())this.setBlock(t.getBlock()),this.getBlock().getTxs[this.getBlock().getTxs().indexOf(t)]=this;else if(void 0!==t.getBlock())return this.getBlock().merge(t.getBlock()),this;if(this.setHash(s.Z.reconcile(this.getHash(),t.getHash())),this.setVersion(s.Z.reconcile(this.getVersion(),t.getVersion())),this.setPaymentId(s.Z.reconcile(this.getPaymentId(),t.getPaymentId())),this.setFee(s.Z.reconcile(this.getFee(),t.getFee())),this.setRingSize(s.Z.reconcile(this.getRingSize(),t.getRingSize())),this.setIsConfirmed(s.Z.reconcile(this.getIsConfirmed(),t.getIsConfirmed(),{resolveTrue:!0})),this.setIsMinerTx(s.Z.reconcile(this.getIsMinerTx(),t.getIsMinerTx())),this.setRelay(s.Z.reconcile(this.getRelay(),t.getRelay(),{resolveTrue:!0})),this.setIsRelayed(s.Z.reconcile(this.getIsRelayed(),t.getIsRelayed(),{resolveTrue:!0})),this.setIsDoubleSpendSeen(s.Z.reconcile(this.getIsDoubleSpendSeen(),t.getIsDoubleSpendSeen(),{resolveTrue:!0})),this.setKey(s.Z.reconcile(this.getKey(),t.getKey())),this.setFullHex(s.Z.reconcile(this.getFullHex(),t.getFullHex())),this.setPrunedHex(s.Z.reconcile(this.getPrunedHex(),t.getPrunedHex())),this.setPrunableHex(s.Z.reconcile(this.getPrunableHex(),t.getPrunableHex())),this.setPrunableHash(s.Z.reconcile(this.getPrunableHash(),t.getPrunableHash())),this.setSize(s.Z.reconcile(this.getSize(),t.getSize())),this.setWeight(s.Z.reconcile(this.getWeight(),t.getWeight())),this.setOutputIndices(s.Z.reconcile(this.getOutputIndices(),t.getOutputIndices())),this.setMetadata(s.Z.reconcile(this.getMetadata(),t.getMetadata())),this.setExtra(s.Z.reconcile(this.getExtra(),t.getExtra())),this.setRctSignatures(s.Z.reconcile(this.getRctSignatures(),t.getRctSignatures())),this.setRctSigPrunable(s.Z.reconcile(this.getRctSigPrunable(),t.getRctSigPrunable())),this.setIsKeptByBlock(s.Z.reconcile(this.getIsKeptByBlock(),t.getIsKeptByBlock())),this.setIsFailed(s.Z.reconcile(this.getIsFailed(),t.getIsFailed(),{resolveTrue:!0})),this.setLastFailedHeight(s.Z.reconcile(this.getLastFailedHeight(),t.getLastFailedHeight())),this.setLastFailedHash(s.Z.reconcile(this.getLastFailedHash(),t.getLastFailedHash())),this.setMaxUsedBlockHeight(s.Z.reconcile(this.getMaxUsedBlockHeight(),t.getMaxUsedBlockHeight())),this.setMaxUsedBlockHash(s.Z.reconcile(this.getMaxUsedBlockHash(),t.getMaxUsedBlockHash())),this.setSignatures(s.Z.reconcile(this.getSignatures(),t.getSignatures())),this.setUnlockTime(s.Z.reconcile(this.getUnlockTime(),t.getUnlockTime())),this.setNumConfirmations(s.Z.reconcile(this.getNumConfirmations(),t.getNumConfirmations(),{resolveMax:!0})),t.getInputs())for(let e of t.getInputs()){let t=!1;e.setTx(this),this.getInputs()||this.setInputs([]);for(let r of this.getInputs())if(r.getKeyImage().getHex()===e.getKeyImage().getHex()){r.merge(e),t=!0;break}t||this.getInputs().push(e)}if(t.getOutputs()){for(let e of t.getOutputs())e.setTx(this);if(this.getOutputs())for(let e of t.getOutputs()){let t=!1;e.setTx(this);for(let r of this.getOutputs())if(e.getKeyImage()&&r.getKeyImage().getHex()===e.getKeyImage().getHex()||e.getStealthPublicKey()&&r.getStealthPublicKey()===e.getStealthPublicKey()){r.merge(e),t=!0;break}t||this.getOutputs().push(e)}else this.setOutputs(t.getOutputs())}return this.getIsConfirmed()?(this.setInTxPool(!1),this.setReceivedTimestamp(void 0),this.setLastRelayedTimestamp(void 0)):(this.setInTxPool(s.Z.reconcile(this.getInTxPool(),t.getInTxPool(),{resolveTrue:!0})),this.setReceivedTimestamp(s.Z.reconcile(this.getReceivedTimestamp(),t.getReceivedTimestamp(),{resolveMax:!1})),this.setLastRelayedTimestamp(s.Z.reconcile(this.getLastRelayedTimestamp(),t.getLastRelayedTimestamp(),{resolveMax:!0}))),this}toString(t=0){let e="";if(e+=s.Z.getIndent(t)+"=== TX ===\n",e+=s.Z.kvLine("Tx hash",this.getHash(),t),e+=s.Z.kvLine("Height",this.getHeight(),t),e+=s.Z.kvLine("Version",this.getVersion(),t),e+=s.Z.kvLine("Is miner tx",this.getIsMinerTx(),t),e+=s.Z.kvLine("Payment ID",this.getPaymentId(),t),e+=s.Z.kvLine("Fee",this.getFee(),t),e+=s.Z.kvLine("Ring size",this.getRingSize(),t),e+=s.Z.kvLine("Relay",this.getRelay(),t),e+=s.Z.kvLine("Is relayed",this.getIsRelayed(),t),e+=s.Z.kvLine("Is confirmed",this.getIsConfirmed(),t),e+=s.Z.kvLine("In tx pool",this.getInTxPool(),t),e+=s.Z.kvLine("Num confirmations",this.getNumConfirmations(),t),e+=s.Z.kvLine("Unlock time",this.getUnlockTime(),t),e+=s.Z.kvLine("Last relayed time",this.getLastRelayedTimestamp(),t),e+=s.Z.kvLine("Received time",this.getReceivedTimestamp(),t),e+=s.Z.kvLine("Is double spend",this.getIsDoubleSpendSeen(),t),e+=s.Z.kvLine("Key",this.getKey(),t),e+=s.Z.kvLine("Full hex",this.getFullHex(),t),e+=s.Z.kvLine("Pruned hex",this.getPrunedHex(),t),e+=s.Z.kvLine("Prunable hex",this.getPrunableHex(),t),e+=s.Z.kvLine("Prunable hash",this.getPrunableHash(),t),e+=s.Z.kvLine("Size",this.getSize(),t),e+=s.Z.kvLine("Weight",this.getWeight(),t),e+=s.Z.kvLine("Output indices",this.getOutputIndices(),t),e+=s.Z.kvLine("Metadata",this.getMetadata(),t),e+=s.Z.kvLine("Extra",this.getExtra(),t),e+=s.Z.kvLine("RCT signatures",this.getRctSignatures(),t),e+=s.Z.kvLine("RCT sig prunable",this.getRctSigPrunable(),t),e+=s.Z.kvLine("Kept by block",this.getIsKeptByBlock(),t),e+=s.Z.kvLine("Is failed",this.getIsFailed(),t),e+=s.Z.kvLine("Last failed height",this.getLastFailedHeight(),t),e+=s.Z.kvLine("Last failed hash",this.getLastFailedHash(),t),e+=s.Z.kvLine("Max used block height",this.getMaxUsedBlockHeight(),t),e+=s.Z.kvLine("Max used block hash",this.getMaxUsedBlockHash(),t),e+=s.Z.kvLine("Signatures",this.getSignatures(),t),void 0!==this.getInputs()){e+=s.Z.kvLine("Inputs","",t);for(let r=0;r<this.getInputs().length;r++)e+=s.Z.kvLine(r+1,"",t+1),e+=this.getInputs()[r].toString(t+2),e+="\n"}if(void 0!==this.getOutputs()){e+=s.Z.kvLine("Outputs","",t);for(let r=0;r<this.getOutputs().length;r++)e+=s.Z.kvLine(r+1,"",t+1),e+=this.getOutputs()[r].toString(t+2),e+="\n"}return e.slice(0,e.length-1)}}a.DEFAULT_PAYMENT_ID="0000000000000000";const u=a},4633:(t,e,r)=>{"use strict";r.d(e,{Z:()=>i});class i{constructor(t){Object.assign(this,t),void 0!==this.feeTotal&&"bigint"!=typeof this.feeTotal&&(this.feeTotal=BigInt(this.feeTotal)),void 0===this.histo||this.histo instanceof Map||(this.histo=new Map(JSON.parse(this.histo)))}toJson(){let t=Object.assign({},this);return t.feeTotal&&(t.feeTotal=t.feeTotal.toString()),t.histo&&(t.histo=JSON.stringify([...t.histo])),t}getNumTxs(){return this.numTxs}setNumTxs(t){return this.numTxs=t,this}getNumNotRelayed(){return this.numNotRelayed}setNumNotRelayed(t){return this.numNotRelayed=t,this}getNumFailing(){return this.numFailing}setNumFailing(t){return this.numFailing=t,this}getNumDoubleSpends(){return this.numDoubleSpends}setNumDoubleSpends(t){return this.numDoubleSpends=t,this}getNum10m(){return this.num10m}setNum10m(t){return this.num10m=t,this}getFeeTotal(){return this.feeTotal}setFeeTotal(t){return this.feeTotal=t,this}getBytesMax(){return this.bytesMax}setBytesMax(t){return this.bytesMax=t,this}getBytesMed(){return this.bytesMed}setBytesMed(t){return this.bytesMed=t,this}getBytesMin(){return this.bytesMin}setBytesMin(t){return this.bytesMin=t,this}getBytesTotal(){return this.bytesTotal}setBytesTotal(t){return this.bytesTotal=t,this}getHisto(){return this.histo}setHisto(t){return this.histo=t,this}getHisto98pc(){return this.histo98pc}setHisto98pc(t){return this.histo98pc=t,this}getOldestTimestamp(){return this.oldestTimestamp}setOldestTimestamp(t){return this.oldestTimestamp=t,this}}},8112:(t,e,r)=>{"use strict";r.d(e,{Z:()=>i});class i{constructor(t,e){this.number=t,this.isRelease=e}getNumber(){return this.number}setNumber(t){return this.number=t,this}getIsRelease(){return this.isRelease}setIsRelease(t){return this.isRelease=t,this}copy(){return new i(this.number,this.isRelease)}toJson(){return Object.assign({},this)}}},929:(t,e,r)=>{"use strict";r.d(e,{Z:()=>y});var i=r(9282),n=r.n(i),s=r(1487),o=r(1401),a=r(2477),u=r(5471),h=r(9761),c=r(4744),l=r(2245),d=r(4569),f=r(9702),p=r(3547),g=r(6537);class m{constructor(){this.listeners=[],this._isClosed=!1}async addListener(t){n()(t instanceof g.Z,"Listener must be instance of MoneroWalletListener"),this.listeners.push(t)}async removeListener(t){let e=this.listeners.indexOf(t);if(!(e>-1))throw new a.Z("Listener is not registered with wallet");this.listeners.splice(e,1)}getListeners(){return this.listeners}async isViewOnly(){throw new a.Z("Not supported")}async setDaemonConnection(t){throw new a.Z("Not supported")}async getDaemonConnection(){throw new a.Z("Not supported")}async setConnectionManager(t){if(this.connectionManager&&this.connectionManager.removeListener(this.connectionManagerListener),this.connectionManager=t,!t)return;let e=this;this.connectionManagerListener||(this.connectionManagerListener=new class extends o.Z{async onConnectionChanged(t){await e.setDaemonConnection(t)}}),t.addListener(this.connectionManagerListener),await this.setDaemonConnection(t.getConnection())}async getConnectionManager(){return this.connectionManager}async isConnectedToDaemon(){throw new a.Z("Not supported")}async getVersion(){throw new a.Z("Not supported")}async getPath(){throw new a.Z("Not supported")}async getSeed(){throw new a.Z("Not supported")}async getSeedLanguage(){throw new a.Z("Not supported")}async getPrivateViewKey(){throw new a.Z("Not supported")}async getPrivateSpendKey(){throw new a.Z("Not supported")}async getPublicViewKey(){throw new a.Z("Not supported")}async getPublicSpendKey(){throw new a.Z("Not supported")}async getPrimaryAddress(){return await this.getAddress(0,0)}async getAddress(t,e){throw new a.Z("Not supported")}async getAddressIndex(t){throw new a.Z("Not supported")}async getIntegratedAddress(t,e){throw new a.Z("Not supported")}async decodeIntegratedAddress(t){throw new a.Z("Not supported")}async getHeight(){throw new a.Z("Not supported")}async getDaemonHeight(){throw new a.Z("Not supported")}async getHeightByDate(t,e,r){throw new a.Z("Not supported")}async sync(t,e){throw new a.Z("Not supported")}async startSyncing(t){throw new a.Z("Not supported")}async stopSyncing(){throw new a.Z("Not supported")}async scanTxs(t){throw new a.Z("Not supported")}async rescanSpent(){throw new a.Z("Not supported")}async rescanBlockchain(){throw new a.Z("Not supported")}async getBalance(t,e){throw new a.Z("Not supported")}async getUnlockedBalance(t,e){throw new a.Z("Not supported")}async getNumBlocksToUnlock(){let t=await this.getBalance();if(0n===t)return[void 0,void 0];let e,r,i,n,s=await this.getUnlockedBalance();if(s>0n)i=0;else{e=await this.getTxs({isLocked:!0}),r=await this.getHeight();for(let t of e){if(!t.getIsConfirmed()&&p.Z.isTimestamp(t.getUnlockTime()))continue;let e=Math.max((t.getIsConfirmed()?t.getHeight():r)+10,Number(t.getUnlockTime()))-r;i=void 0===i?e:Math.min(i,e)}}if(t===s)s>0n&&(n=0);else{e||(e=await this.getTxs({isLocked:!0}),r=await this.getHeight());for(let t of e){if(!t.getIsConfirmed()&&p.Z.isTimestamp(t.getUnlockTime()))continue;let e=Math.max((t.getIsConfirmed()?t.getHeight():r)+10,Number(t.getUnlockTime()))-r;n=void 0===n?e:Math.max(n,e)}}return[i,n]}async getAccounts(t,e){throw new a.Z("Not supported")}async getAccount(t,e){throw new a.Z("Not supported")}async createAccount(t){throw new a.Z("Not supported")}async setAccountLabel(t,e){await this.setSubaddressLabel(t,0,e)}async getSubaddresses(t,e){throw new a.Z("Not supported")}async getSubaddress(t,e){return n()(t>=0),n()(e>=0),(await this.getSubaddresses(t,[e]))[0]}async createSubaddress(t,e){throw new a.Z("Not supported")}async setSubaddressLabel(t,e,r){throw new a.Z("Not supported")}async getTx(t){let e=await this.getTxs([t]);return 0===e.length?void 0:e[0]}async getTxs(t){throw new a.Z("Not supported")}async getTransfers(t){throw new a.Z("Not supported")}async getIncomingTransfers(t){const e=m.normalizeTransferQuery(t);if(!1===e.getIsIncoming())throw new a.Z("Transfer query contradicts getting incoming transfers");return e.setIsIncoming(!0),this.getTransfers(e)}async getOutgoingTransfers(t){const e=m.normalizeTransferQuery(t);if(!1===e.getIsOutgoing())throw new a.Z("Transfer query contradicts getting outgoing transfers");return e.setIsOutgoing(!0),this.getTransfers(e)}async getOutputs(t){throw new a.Z("Not supported")}async exportOutputs(t=!1){throw new a.Z("Not supported")}async importOutputs(t){throw new a.Z("Not supported")}async exportKeyImages(t=!1){throw new a.Z("Not supported")}async importKeyImages(t){throw new a.Z("Not supported")}async getNewKeyImagesFromLastImport(){throw new a.Z("Not supported")}async freezeOutput(t){throw new a.Z("Not supported")}async thawOutput(t){throw new a.Z("Not supported")}async isOutputFrozen(t){throw new a.Z("Not supported")}async createTx(t){const e=m.normalizeCreateTxsConfig(t);return void 0!==e.getCanSplit()&&n().equal(e.getCanSplit(),!1,"Cannot split transactions using createTx(); use createTxs()"),e.setCanSplit(!1),(await this.createTxs(e))[0]}async createTxs(t){throw new a.Z("Not supported")}async sweepOutput(t){throw new a.Z("Not supported")}async sweepUnlocked(t){throw new a.Z("Not supported")}async sweepDust(t){throw new a.Z("Not supported")}async relayTx(t){return(await this.relayTxs([t]))[0]}async relayTxs(t){throw new a.Z("Not supported")}async describeUnsignedTxSet(t){return this.describeTxSet((new f.Z).setUnsignedTxHex(t))}async describeMultisigTxSet(t){return this.describeTxSet((new f.Z).setMultisigTxHex(t))}async describeTxSet(t){throw new a.Z("Not supported")}async signTxs(t){throw new a.Z("Not supported")}async submitTxs(t){throw new a.Z("Not supported")}async signMessage(t,e=u.Z.SIGN_WITH_SPEND_KEY,r=0,i=0){throw new a.Z("Not supported")}async verifyMessage(t,e,r){throw new a.Z("Not supported")}async getTxKey(t){throw new a.Z("Not supported")}async checkTxKey(t,e,r){throw new a.Z("Not supported")}async getTxProof(t,e,r){throw new a.Z("Not supported")}async checkTxProof(t,e,r,i){throw new a.Z("Not supported")}async getSpendProof(t,e){throw new a.Z("Not supported")}async checkSpendProof(t,e,r){throw new a.Z("Not supported")}async getReserveProofWallet(t){throw new a.Z("Not supported")}async getReserveProofAccount(t,e,r){throw new a.Z("Not supported")}async checkReserveProof(t,e,r){throw new a.Z("Not supported")}async getTxNote(t){return(await this.getTxNotes([t]))[0]}async getTxNotes(t){throw new a.Z("Not supported")}async setTxNote(t,e){await this.setTxNotes([t],[e])}async setTxNotes(t,e){throw new a.Z("Not supported")}async getAddressBookEntries(t){throw new a.Z("Not supported")}async addAddressBookEntry(t,e){throw new a.Z("Not supported")}async editAddressBookEntry(t,e,r,i,n){throw new a.Z("Not supported")}async deleteAddressBookEntry(t){throw new a.Z("Not supported")}async tagAccounts(t,e){throw new a.Z("Not supported")}async untagAccounts(t){throw new a.Z("Not supported")}async getAccountTags(){throw new a.Z("Not supported")}async setAccountTagLabel(t,e){throw new a.Z("Not supported")}async getPaymentUri(t){throw new a.Z("Not supported")}async parsePaymentUri(t){throw new a.Z("Not supported")}async getAttribute(t){throw new a.Z("Not supported")}async setAttribute(t,e){throw new a.Z("Not supported")}async startMining(t,e,r){throw new a.Z("Not supported")}async stopMining(){throw new a.Z("Not supported")}async isMultisigImportNeeded(){throw new a.Z("Not supported")}async isMultisig(){return(await this.getMultisigInfo()).getIsMultisig()}async getMultisigInfo(){throw new a.Z("Not supported")}async prepareMultisig(){throw new a.Z("Not supported")}async makeMultisig(t,e,r){throw new a.Z("Not supported")}async exchangeMultisigKeys(t,e){throw new a.Z("Not supported")}async exportMultisigHex(){throw new a.Z("Not supported?")}async importMultisigHex(t){throw new a.Z("Not supported")}async signMultisigTxHex(t){throw new a.Z("Not supported")}async submitMultisigTxHex(t){throw new a.Z("Not supported")}async changePassword(t,e){throw new a.Z("Not supported")}async save(){throw new a.Z("Not supported")}async close(t=!1){this.connectionManager&&this.connectionManager.removeListener(this.connectionManagerListener),this.connectionManager=void 0,this.connectionManagerListener=void 0,this.listeners.splice(0,this.listeners.length),this._isClosed=!0}async isClosed(){return this._isClosed}async announceSyncProgress(t,e,r,i,n){for(let s of this.listeners)try{await s.onSyncProgress(t,e,r,i,n)}catch(t){console.error("Error calling listener on sync progress",t)}}async announceNewBlock(t){for(let e of this.listeners)try{await e.onNewBlock(t)}catch(t){console.error("Error calling listener on new block",t)}}async announceBalancesChanged(t,e){for(let r of this.listeners)try{await r.onBalancesChanged(t,e)}catch(t){console.error("Error calling listener on balances changed",t)}}async announceOutputReceived(t){for(let e of this.listeners)try{await e.onOutputReceived(t)}catch(t){console.error("Error calling listener on output received",t)}}async announceOutputSpent(t){for(let e of this.listeners)try{await e.onOutputSpent(t)}catch(t){console.error("Error calling listener on output spent",t)}}static normalizeTxQuery(t){return t instanceof d.Z?t=t.copy():Array.isArray(t)?t=(new d.Z).setHashes(t):(t=Object.assign({},t),t=new d.Z(t)),void 0===t.getBlock()&&t.setBlock((new s.Z).setTxs([t])),t.getInputQuery()&&t.getInputQuery().setTxQuery(t),t.getOutputQuery()&&t.getOutputQuery().setTxQuery(t),t}static normalizeTransferQuery(t){if(void 0!==(t=new c.Z(t)).getTxQuery()){let e=t.getTxQuery().copy();t=e.getTransferQuery()}return void 0===t.getTxQuery()&&t.setTxQuery(new d.Z),t.getTxQuery().setTransferQuery(t),void 0===t.getTxQuery().getBlock()&&t.getTxQuery().setBlock((new s.Z).setTxs([t.getTxQuery()])),t}static normalizeOutputQuery(t){if(void 0!==(t=new h.Z(t)).getTxQuery()){let e=t.getTxQuery().copy();t=e.getOutputQuery()}return void 0===t.getTxQuery()&&t.setTxQuery(new d.Z),t.getTxQuery().setOutputQuery(t),void 0===t.getTxQuery().getBlock()&&t.getTxQuery().setBlock((new s.Z).setTxs([t.getTxQuery()])),t}static normalizeCreateTxsConfig(t){if(void 0===t||!(t instanceof Object))throw new a.Z("Must provide MoneroTxConfig or equivalent JS object");return t=new l.Z(t),n()(t.getDestinations()&&t.getDestinations().length>0,"Must provide destinations"),n().equal(t.getSweepEachSubaddress(),void 0),n().equal(t.getBelowAmount(),void 0),t}static normalizeSweepOutputConfig(t){if(void 0===t||!(t instanceof Object))throw new a.Z("Must provide MoneroTxConfig or equivalent JS object");if(t=new l.Z(t),n().equal(t.getSweepEachSubaddress(),void 0),n().equal(t.getBelowAmount(),void 0),n().equal(t.getCanSplit(),void 0,"Cannot split transactions when sweeping an output"),!t.getDestinations()||1!==t.getDestinations().length||!t.getDestinations()[0].getAddress())throw new a.Z("Must provide exactly one destination address to sweep output to");if(t.getSubtractFeeFrom()&&t.getSubtractFeeFrom().length>0)throw new a.Z("Sweep transactions do not support subtracting fees from destinations");return t}static normalizeSweepUnlockedConfig(t){if(void 0===t||!(t instanceof Object))throw new a.Z("Must provide MoneroTxConfig or equivalent JS object");if(void 0===(t=new l.Z(t)).getDestinations()||1!=t.getDestinations().length)throw new a.Z("Must provide exactly one destination to sweep to");if(void 0===t.getDestinations()[0].getAddress())throw new a.Z("Must provide destination address to sweep to");if(void 0!==t.getDestinations()[0].getAmount())throw new a.Z("Cannot provide amount in sweep config");if(void 0!==t.getKeyImage())throw new a.Z("Key image defined; use sweepOutput() to sweep an output by its key image");if(void 0!==t.getSubaddressIndices()&&0===t.getSubaddressIndices().length&&t.setSubaddressIndices(void 0),void 0===t.getAccountIndex()&&void 0!==t.getSubaddressIndices())throw new a.Z("Must provide account index if subaddress indices are provided");if(t.getSubtractFeeFrom()&&t.getSubtractFeeFrom().length>0)throw new a.Z("Sweep transactions do not support subtracting fees from destinations");return t}}m.DEFAULT_LANGUAGE="English";const y=m},1902:(t,e,r)=>{"use strict";r.d(e,{Z:()=>W});var i=r(9282),n=r.n(i),s=r(6470),o=r.n(s),a=r(6048),u=r(9390),h=r(5158),c=r(7946),l=r(9613),d=r(2582),f=r(1487),p=r(1976),g=r(4659),m=r(4485),y=r(2477),v=r(2990),b=r(2795),w=r(818),E=r(8715),S=r(1787),N=r(4609),M=r(8403),x=r(7514),I=r(1779),A=r(2122),P=r(8792),T=r(2245),R=r(9702),k=r(603),B=r(929),O=r(8788),C=r(5522),L=r(6537),j=r(5471),Z=r(6326),D=r(6551),F=r.n(D),z=r(8764).Buffer;class H extends C.a{constructor(t,e,r,i,n,s,o){super(t,o),o||(this.path=e,this.password=r,this.listeners=[],this.fs=i||(e?H.getFs():void 0),this._isClosed=!1,this.wasmListener=new q(this),this.wasmListenerHandle=0,this.rejectUnauthorized=n,this.rejectUnauthorizedConfigId=s,this.syncPeriodInMs=H.DEFAULT_SYNC_PERIOD_IN_MS,u.Z.setRejectUnauthorizedFn(s,(()=>this.rejectUnauthorized)))}static async walletExists(t,e){if(n()(t,"Must provide a path to look for a wallet"),e||(e=H.getFs()),!e)throw new y.Z("Must provide file system to check if wallet exists");let r=await u.Z.exists(e,t+".keys");return u.Z.log(1,"Wallet exists at "+t+": "+r),r}static async openWallet(t){if(void 0===(t=new O.Z(t)).getProxyToWorker()&&t.setProxyToWorker(!0),void 0!==t.getSeed())throw new y.Z("Cannot specify seed when opening wallet");if(void 0!==t.getSeedOffset())throw new y.Z("Cannot specify seed offset when opening wallet");if(void 0!==t.getPrimaryAddress())throw new y.Z("Cannot specify primary address when opening wallet");if(void 0!==t.getPrivateViewKey())throw new y.Z("Cannot specify private view key when opening wallet");if(void 0!==t.getPrivateSpendKey())throw new y.Z("Cannot specify private spend key when opening wallet");if(void 0!==t.getRestoreHeight())throw new y.Z("Cannot specify restore height when opening wallet");if(void 0!==t.getLanguage())throw new y.Z("Cannot specify language when opening wallet");if(!0===t.getSaveCurrent())throw new y.Z("Cannot save current wallet when opening full wallet");if(void 0===t.getFs()&&t.setFs(H.getFs()),t.getConnectionManager()){if(t.getServer())throw new y.Z("Wallet can be opened with a server or connection manager but not both");t.setServer(t.getConnectionManager().getConnection())}if(!t.getKeysData()){let e=t.getFs();if(!e)throw new y.Z("Must provide file system to read wallet data from");if(!await this.walletExists(t.getPath(),e))throw new y.Z("Wallet does not exist at path: "+t.getPath());t.setKeysData(await e.readFile(t.getPath()+".keys")),t.setCacheData(await u.Z.exists(e,t.getPath())?await e.readFile(t.getPath()):"")}const e=await H.openWalletData(t);return await e.setConnectionManager(t.getConnectionManager()),e}static async createWallet(t){if(void 0===t)throw new y.Z("Must provide config to create wallet");if(void 0!==t.getSeed()&&(void 0!==t.getPrimaryAddress()||void 0!==t.getPrivateViewKey()||void 0!==t.getPrivateSpendKey()))throw new y.Z("Wallet may be initialized with a seed or keys but not both");if(void 0===t.getNetworkType())throw new y.Z("Must provide a networkType: 'mainnet', 'testnet' or 'stagenet'");if(M.Z.validate(t.getNetworkType()),!0===t.getSaveCurrent())throw new y.Z("Cannot save current wallet when creating full WASM wallet");if(void 0===t.getPath()&&t.setPath(""),t.getPath()&&await H.walletExists(t.getPath(),t.getFs()))throw new y.Z("Wallet already exists: "+t.getPath());if(void 0===t.getPassword()&&t.setPassword(""),t.getConnectionManager()){if(t.getServer())throw new y.Z("Wallet can be created with a server or connection manager but not both");t.setServer(t.getConnectionManager().getConnection())}let e;if(void 0===t.getProxyToWorker()&&t.setProxyToWorker(!0),t.getProxyToWorker()){let r=await K.createWallet(t);e=new H(void 0,void 0,void 0,void 0,void 0,void 0,r)}else if(void 0!==t.getSeed()){if(void 0!==t.getLanguage())throw new y.Z("Cannot provide language when creating wallet from seed");e=await H.createWalletFromSeed(t)}else if(void 0!==t.getPrivateSpendKey()||void 0!==t.getPrimaryAddress()){if(void 0!==t.getSeedOffset())throw new y.Z("Cannot provide seedOffset when creating wallet from keys");e=await H.createWalletFromKeys(t)}else{if(void 0!==t.getSeedOffset())throw new y.Z("Cannot provide seedOffset when creating random wallet");if(void 0!==t.getRestoreHeight())throw new y.Z("Cannot provide restoreHeight when creating random wallet");e=await H.createWalletRandom(t)}return await e.setConnectionManager(t.getConnectionManager()),e}static async createWalletFromSeed(t){let e=t.getServer(),r=!e||e.getRejectUnauthorized();void 0===t.getRestoreHeight()&&t.setRestoreHeight(0),void 0===t.getSeedOffset()&&t.setSeedOffset("");let i=await u.Z.loadWasmModule(),n=await i.queueTask((async()=>new Promise(((e,n)=>{let s=a.Z.getUUID();u.Z.setRejectUnauthorizedFn(s,(()=>r)),i.create_full_wallet(JSON.stringify(t.toJson()),s,(async r=>{"string"==typeof r?n(new y.Z(r)):e(new H(r,t.getPath(),t.getPassword(),t.getFs(),t.getServer()?t.getServer().getRejectUnauthorized():void 0,s))}))}))));return t.getPath()&&await n.save(),n}static async createWalletFromKeys(t){M.Z.validate(t.getNetworkType()),void 0===t.getPrimaryAddress()&&t.setPrimaryAddress(""),void 0===t.getPrivateViewKey()&&t.setPrivateViewKey(""),void 0===t.getPrivateSpendKey()&&t.setPrivateSpendKey("");let e=t.getServer(),r=!e||e.getRejectUnauthorized();void 0===t.getRestoreHeight()&&t.setRestoreHeight(0),void 0===t.getLanguage()&&t.setLanguage("English");let i=await u.Z.loadWasmModule(),n=await i.queueTask((async()=>new Promise(((e,n)=>{let s=a.Z.getUUID();u.Z.setRejectUnauthorizedFn(s,(()=>r)),i.create_full_wallet(JSON.stringify(t.toJson()),s,(async r=>{"string"==typeof r?n(new y.Z(r)):e(new H(r,t.getPath(),t.getPassword(),t.getFs(),t.getServer()?t.getServer().getRejectUnauthorized():void 0,s))}))}))));return t.getPath()&&await n.save(),n}static async createWalletRandom(t){void 0===t.getLanguage()&&t.setLanguage("English");let e=t.getServer(),r=!e||e.getRejectUnauthorized(),i=await u.Z.loadWasmModule(),n=await i.queueTask((async()=>new Promise(((e,n)=>{let s=a.Z.getUUID();u.Z.setRejectUnauthorizedFn(s,(()=>r)),i.create_full_wallet(JSON.stringify(t.toJson()),s,(async r=>{"string"==typeof r?n(new y.Z(r)):e(new H(r,t.getPath(),t.getPassword(),t.getFs(),t.getServer()?t.getServer().getRejectUnauthorized():void 0,s))}))}))));return t.getPath()&&await n.save(),n}static async getSeedLanguages(){let t=await u.Z.loadWasmModule();return t.queueTask((async()=>JSON.parse(t.get_keys_wallet_seed_languages()).languages))}static getFs(){return H.FS||(H.FS=F().promises),H.FS}async getDaemonMaxPeerHeight(){return this.getWalletProxy()?this.getWalletProxy().getDaemonMaxPeerHeight():this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((t,e)=>{this.module.get_daemon_max_peer_height(this.cppAddress,(e=>{t(e)}))})))))}async isDaemonSynced(){return this.getWalletProxy()?this.getWalletProxy().isDaemonSynced():this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((t,e)=>{this.module.is_daemon_synced(this.cppAddress,(e=>{t(e)}))})))))}async isSynced(){return this.getWalletProxy()?this.getWalletProxy().isSynced():this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((t,e)=>{this.module.is_synced(this.cppAddress,(e=>{t(e)}))})))))}async getNetworkType(){return this.getWalletProxy()?this.getWalletProxy().getNetworkType():this.module.queueTask((async()=>(this.assertNotClosed(),this.module.get_network_type(this.cppAddress))))}async getRestoreHeight(){return this.getWalletProxy()?this.getWalletProxy().getRestoreHeight():this.module.queueTask((async()=>(this.assertNotClosed(),this.module.get_restore_height(this.cppAddress))))}async setRestoreHeight(t){return this.getWalletProxy()?this.getWalletProxy().setRestoreHeight(t):this.module.queueTask((async()=>{this.assertNotClosed(),this.module.set_restore_height(this.cppAddress,t)}))}async moveTo(t){return this.getWalletProxy()?this.getWalletProxy().moveTo(t):H.moveTo(t,this)}async addListener(t){if(this.getWalletProxy())return this.getWalletProxy().addListener(t);await super.addListener(t),await this.refreshListening()}async removeListener(t){if(this.getWalletProxy())return this.getWalletProxy().removeListener(t);await super.removeListener(t),await this.refreshListening()}getListeners(){return this.getWalletProxy()?this.getWalletProxy().getListeners():super.getListeners()}async setDaemonConnection(t){if(this.getWalletProxy())return this.getWalletProxy().setDaemonConnection(t);let e=t?t instanceof I.Z?t:new I.Z(t):void 0,r=e&&e.getUri()?e.getUri():"",i=e&&e.getUsername()?e.getUsername():"",n=e&&e.getPassword()?e.getPassword():"",s=e?e.getRejectUnauthorized():void 0;return this.rejectUnauthorized=s,this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((t,e)=>{this.module.set_daemon_connection(this.cppAddress,r,i,n,(e=>{t()}))})))))}async getDaemonConnection(){return this.getWalletProxy()?this.getWalletProxy().getDaemonConnection():this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((t,e)=>{let r=this.module.get_daemon_connection(this.cppAddress);if(r){let e=JSON.parse(r);t(new I.Z({uri:e.uri,username:e.username,password:e.password,rejectUnauthorized:this.rejectUnauthorized}))}else t(void 0)})))))}async isConnectedToDaemon(){return this.getWalletProxy()?this.getWalletProxy().isConnectedToDaemon():this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((t,e)=>{this.module.is_connected_to_daemon(this.cppAddress,(e=>{t(e)}))})))))}async getVersion(){if(this.getWalletProxy())return this.getWalletProxy().getVersion();throw new y.Z("Not implemented")}async getPath(){return this.getWalletProxy()?this.getWalletProxy().getPath():this.path}async getIntegratedAddress(t,e){return this.getWalletProxy()?this.getWalletProxy().getIntegratedAddress(t,e):this.module.queueTask((async()=>{this.assertNotClosed();try{let r=this.module.get_integrated_address(this.cppAddress,t||"",e||"");if("{"!==r.charAt(0))throw new y.Z(r);return new v.Z(JSON.parse(r))}catch(t){if(t.message.includes("Invalid payment ID"))throw new y.Z("Invalid payment ID: "+e);throw new y.Z(t.message)}}))}async decodeIntegratedAddress(t){return this.getWalletProxy()?this.getWalletProxy().decodeIntegratedAddress(t):this.module.queueTask((async()=>{this.assertNotClosed();try{let e=this.module.decode_integrated_address(this.cppAddress,t);if("{"!==e.charAt(0))throw new y.Z(e);return new v.Z(JSON.parse(e))}catch(t){throw new y.Z(t.message)}}))}async getHeight(){return this.getWalletProxy()?this.getWalletProxy().getHeight():this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((t,e)=>{this.module.get_height(this.cppAddress,(e=>{t(e)}))})))))}async getDaemonHeight(){if(this.getWalletProxy())return this.getWalletProxy().getDaemonHeight();if(!await this.isConnectedToDaemon())throw new y.Z("Wallet is not connected to daemon");return this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((t,e)=>{this.module.get_daemon_height(this.cppAddress,(e=>{t(e)}))})))))}async getHeightByDate(t,e,r){if(this.getWalletProxy())return this.getWalletProxy().getHeightByDate(t,e,r);if(!await this.isConnectedToDaemon())throw new y.Z("Wallet is not connected to daemon");return this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((i,n)=>{this.module.get_height_by_date(this.cppAddress,t,e,r,(t=>{"string"==typeof t?n(new y.Z(t)):i(t)}))})))))}async sync(t,e,r=!1){if(this.getWalletProxy())return this.getWalletProxy().sync(t,e,r);if(!await this.isConnectedToDaemon())throw new y.Z("Wallet is not connected to daemon");e=void 0===t||t instanceof L.Z?e:t;let i,n,s=t instanceof L.Z?t:void 0;void 0===e&&(e=Math.max(await this.getHeight(),await this.getRestoreHeight())),s&&await this.addListener(s);try{let o=this;function a(){return o.assertNotClosed(),new Promise(((t,r)=>{o.module.sync(o.cppAddress,e,(async e=>{if("{"!==e.charAt(0))r(new y.Z(e));else{let r=JSON.parse(e);t(new P.Z(r.numBlocksFetched,r.receivedMoney))}}))}))}n=await(r?a():this.module.queueTask((async()=>a())))}catch(u){i=u}if(s&&await this.removeListener(s),i)throw i;return n}async startSyncing(t){if(this.getWalletProxy())return this.getWalletProxy().startSyncing(t);if(!await this.isConnectedToDaemon())throw new y.Z("Wallet is not connected to daemon");this.syncPeriodInMs=void 0===t?H.DEFAULT_SYNC_PERIOD_IN_MS:t,this.syncLooper||(this.syncLooper=new h.Z((async()=>await this.backgroundSync()))),this.syncLooper.start(this.syncPeriodInMs)}async stopSyncing(){if(this.getWalletProxy())return this.getWalletProxy().stopSyncing();this.assertNotClosed(),this.syncLooper&&this.syncLooper.stop(),this.module.stop_syncing(this.cppAddress)}async scanTxs(t){return this.getWalletProxy()?this.getWalletProxy().scanTxs(t):this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((e,r)=>{this.module.scan_txs(this.cppAddress,JSON.stringify({txHashes:t}),(t=>{t?r(new y.Z(t)):e()}))})))))}async rescanSpent(){return this.getWalletProxy()?this.getWalletProxy().rescanSpent():this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((t,e)=>{this.module.rescan_spent(this.cppAddress,(()=>t()))})))))}async rescanBlockchain(){return this.getWalletProxy()?this.getWalletProxy().rescanBlockchain():this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((t,e)=>{this.module.rescan_blockchain(this.cppAddress,(()=>t()))})))))}async getBalance(t,e){return this.getWalletProxy()?this.getWalletProxy().getBalance(t,e):this.module.queueTask((async()=>{let r;return this.assertNotClosed(),void 0===t?(n()(void 0===e,"Subaddress index must be undefined if account index is undefined"),r=this.module.get_balance_wallet(this.cppAddress)):r=void 0===e?this.module.get_balance_account(this.cppAddress,t):this.module.get_balance_subaddress(this.cppAddress,t,e),BigInt(JSON.parse(a.Z.stringifyBigInts(r)).balance)}))}async getUnlockedBalance(t,e){return this.getWalletProxy()?this.getWalletProxy().getUnlockedBalance(t,e):this.module.queueTask((async()=>{let r;return this.assertNotClosed(),void 0===t?(n()(void 0===e,"Subaddress index must be undefined if account index is undefined"),r=this.module.get_unlocked_balance_wallet(this.cppAddress)):r=void 0===e?this.module.get_unlocked_balance_account(this.cppAddress,t):this.module.get_unlocked_balance_subaddress(this.cppAddress,t,e),BigInt(JSON.parse(a.Z.stringifyBigInts(r)).unlockedBalance)}))}async getAccounts(t,e){return this.getWalletProxy()?this.getWalletProxy().getAccounts(t,e):this.module.queueTask((async()=>{this.assertNotClosed();let r=this.module.get_accounts(this.cppAddress,!!t,e||""),i=[];for(let t of JSON.parse(a.Z.stringifyBigInts(r)).accounts)i.push(H.sanitizeAccount(new c.Z(t)));return i}))}async getAccount(t,e){return this.getWalletProxy()?this.getWalletProxy().getAccount(t,e):this.module.queueTask((async()=>{this.assertNotClosed();let r=this.module.get_account(this.cppAddress,t,!!e),i=JSON.parse(a.Z.stringifyBigInts(r));return H.sanitizeAccount(new c.Z(i))}))}async createAccount(t){return this.getWalletProxy()?this.getWalletProxy().createAccount(t):(void 0===t&&(t=""),this.module.queueTask((async()=>{this.assertNotClosed();let e=this.module.create_account(this.cppAddress,t),r=JSON.parse(a.Z.stringifyBigInts(e));return H.sanitizeAccount(new c.Z(r))})))}async getSubaddresses(t,e){if(this.getWalletProxy())return this.getWalletProxy().getSubaddresses(t,e);let r={accountIdx:t,subaddressIndices:void 0===e?[]:a.Z.listify(e)};return this.module.queueTask((async()=>{this.assertNotClosed();let t=JSON.parse(a.Z.stringifyBigInts(this.module.get_subaddresses(this.cppAddress,JSON.stringify(r)))).subaddresses,e=[];for(let r of t)e.push(C.a.sanitizeSubaddress(new A.Z(r)));return e}))}async createSubaddress(t,e){return this.getWalletProxy()?this.getWalletProxy().createSubaddress(t,e):(void 0===e&&(e=""),this.module.queueTask((async()=>{this.assertNotClosed();let r=this.module.create_subaddress(this.cppAddress,t,e),i=JSON.parse(a.Z.stringifyBigInts(r));return C.a.sanitizeSubaddress(new A.Z(i))})))}async setSubaddressLabel(t,e,r){return this.getWalletProxy()?this.getWalletProxy().setSubaddressLabel(t,e,r):(void 0===r&&(r=""),this.module.queueTask((async()=>{this.assertNotClosed(),this.module.set_subaddress_label(this.cppAddress,t,e,r)})))}async getTxs(t){if(this.getWalletProxy())return this.getWalletProxy().getTxs(t);const e=t=B.Z.normalizeTxQuery(t);return this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((t,r)=>{this.module.get_txs(this.cppAddress,JSON.stringify(e.getBlock().toJson()),(i=>{if("{"===i.charAt(0))try{t(H.deserializeTxs(e,i))}catch(t){r(t)}else r(new y.Z(i))}))})))))}async getTransfers(t){if(this.getWalletProxy())return this.getWalletProxy().getTransfers(t);const e=B.Z.normalizeTransferQuery(t);return this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((t,r)=>{this.module.get_transfers(this.cppAddress,JSON.stringify(e.getTxQuery().getBlock().toJson()),(i=>{if("{"===i.charAt(0))try{t(H.deserializeTransfers(e,i))}catch(t){r(t)}else r(new y.Z(i))}))})))))}async getOutputs(t){if(this.getWalletProxy())return this.getWalletProxy().getOutputs(t);const e=B.Z.normalizeOutputQuery(t);return this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((t,r)=>{this.module.get_outputs(this.cppAddress,JSON.stringify(e.getTxQuery().getBlock().toJson()),(i=>{if("{"===i.charAt(0))try{t(H.deserializeOutputs(e,i))}catch(t){r(t)}else r(new y.Z(i))}))})))))}async exportOutputs(t=!1){return this.getWalletProxy()?this.getWalletProxy().exportOutputs(t):this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((e,r)=>{this.module.export_outputs(this.cppAddress,t,(t=>e(t)))})))))}async importOutputs(t){return this.getWalletProxy()?this.getWalletProxy().importOutputs(t):this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((e,r)=>{this.module.import_outputs(this.cppAddress,t,(t=>e(t)))})))))}async exportKeyImages(t=!1){return this.getWalletProxy()?this.getWalletProxy().exportKeyImages(t):this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((e,r)=>{this.module.export_key_images(this.cppAddress,t,(t=>{"{"!==t.charAt(0)&&r(new y.Z(t));let i=[];for(let e of JSON.parse(a.Z.stringifyBigInts(t)).keyImages)i.push(new b.Z(e));e(i)}))})))))}async importKeyImages(t){return this.getWalletProxy()?this.getWalletProxy().importKeyImages(t):this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((e,r)=>{this.module.import_key_images(this.cppAddress,JSON.stringify({keyImages:t.map((t=>t.toJson()))}),(t=>{e(new w.Z(JSON.parse(a.Z.stringifyBigInts(t))))}))})))))}async getNewKeyImagesFromLastImport(){if(this.getWalletProxy())return this.getWalletProxy().getNewKeyImagesFromLastImport();throw new y.Z("Not implemented")}async freezeOutput(t){if(this.getWalletProxy())return this.getWalletProxy().freezeOutput(t);if(!t)throw new y.Z("Must specify key image to freeze");return this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((e,r)=>{this.module.freeze_output(this.cppAddress,t,(()=>e()))})))))}async thawOutput(t){if(this.getWalletProxy())return this.getWalletProxy().thawOutput(t);if(!t)throw new y.Z("Must specify key image to thaw");return this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((e,r)=>{this.module.thaw_output(this.cppAddress,t,(()=>e()))})))))}async isOutputFrozen(t){if(this.getWalletProxy())return this.getWalletProxy().isOutputFrozen(t);if(!t)throw new y.Z("Must specify key image to check if frozen");return this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((e,r)=>{this.module.is_output_frozen(this.cppAddress,t,(t=>e(t)))})))))}async createTxs(t){if(this.getWalletProxy())return this.getWalletProxy().createTxs(t);const e=B.Z.normalizeCreateTxsConfig(t);return void 0===e.getCanSplit()&&e.setCanSplit(!0),this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((t,r)=>{this.module.create_txs(this.cppAddress,JSON.stringify(e.toJson()),(e=>{"{"!==e.charAt(0)?r(new y.Z(e)):t(new R.Z(JSON.parse(a.Z.stringifyBigInts(e))).getTxs())}))})))))}async sweepOutput(t){if(this.getWalletProxy())return this.getWalletProxy().sweepOutput(t);const e=B.Z.normalizeSweepOutputConfig(t);return this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((t,r)=>{this.module.sweep_output(this.cppAddress,JSON.stringify(e.toJson()),(e=>{"{"!==e.charAt(0)?r(new y.Z(e)):t(new R.Z(JSON.parse(a.Z.stringifyBigInts(e))).getTxs()[0])}))})))))}async sweepUnlocked(t){if(this.getWalletProxy())return this.getWalletProxy().sweepUnlocked(t);const e=B.Z.normalizeSweepUnlockedConfig(t);return this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((t,r)=>{this.module.sweep_unlocked(this.cppAddress,JSON.stringify(e.toJson()),(e=>{if("{"!==e.charAt(0))r(new y.Z(e));else{let r=[];for(let t of JSON.parse(a.Z.stringifyBigInts(e)).txSets)r.push(new R.Z(t));let i=[];for(let t of r)for(let e of t.getTxs())i.push(e);t(i)}}))})))))}async sweepDust(t){return this.getWalletProxy()?this.getWalletProxy().sweepDust(t):this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((e,r)=>{this.module.sweep_dust(this.cppAddress,t,(t=>{if("{"!==t.charAt(0))r(new y.Z(t));else{let r=new R.Z(JSON.parse(a.Z.stringifyBigInts(t)));void 0===r.getTxs()&&r.setTxs([]),e(r.getTxs())}}))})))))}async relayTxs(t){if(this.getWalletProxy())return this.getWalletProxy().relayTxs(t);n()(Array.isArray(t),"Must provide an array of txs or their metadata to relay");let e=[];for(let r of t)e.push(r instanceof k.Z?r.getMetadata():r);return this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((t,r)=>{this.module.relay_txs(this.cppAddress,JSON.stringify({txMetadatas:e}),(e=>{"{"!==e.charAt(0)?r(new y.Z(e)):t(JSON.parse(e).txHashes)}))})))))}async describeTxSet(t){return this.getWalletProxy()?this.getWalletProxy().describeTxSet(t):this.module.queueTask((async()=>{this.assertNotClosed(),t=new R.Z({unsignedTxHex:t.getUnsignedTxHex(),signedTxHex:t.getSignedTxHex(),multisigTxHex:t.getMultisigTxHex()});try{return new R.Z(JSON.parse(a.Z.stringifyBigInts(this.module.describe_tx_set(this.cppAddress,JSON.stringify(t.toJson())))))}catch(t){throw new y.Z(this.module.get_exception_message(t))}}))}async signTxs(t){return this.getWalletProxy()?this.getWalletProxy().signTxs(t):this.module.queueTask((async()=>{this.assertNotClosed();try{return new R.Z(JSON.parse(a.Z.stringifyBigInts(this.module.sign_txs(this.cppAddress,t))))}catch(t){throw new y.Z(this.module.get_exception_message(t))}}))}async submitTxs(t){return this.getWalletProxy()?this.getWalletProxy().submitTxs(t):this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((e,r)=>{this.module.submit_txs(this.cppAddress,t,(t=>{"{"!==t.charAt(0)?r(new y.Z(t)):e(JSON.parse(t).txHashes)}))})))))}async signMessage(t,e=j.Z.SIGN_WITH_SPEND_KEY,r=0,i=0){return this.getWalletProxy()?this.getWalletProxy().signMessage(t,e,r,i):(e=e||j.Z.SIGN_WITH_SPEND_KEY,r=r||0,i=i||0,this.module.queueTask((async()=>{this.assertNotClosed();try{return this.module.sign_message(this.cppAddress,t,e===j.Z.SIGN_WITH_SPEND_KEY?0:1,r,i)}catch(t){throw new y.Z(this.module.get_exception_message(t))}})))}async verifyMessage(t,e,r){return this.getWalletProxy()?this.getWalletProxy().verifyMessage(t,e,r):this.module.queueTask((async()=>{let i;this.assertNotClosed();try{i=JSON.parse(this.module.verify_message(this.cppAddress,t,e,r))}catch(t){i={isGood:!1}}return new Z.Z(i.isGood?{isGood:i.isGood,isOld:i.isOld,signatureType:"spend"===i.signatureType?j.Z.SIGN_WITH_SPEND_KEY:j.Z.SIGN_WITH_VIEW_KEY,version:i.version}:{isGood:!1})}))}async getTxKey(t){return this.getWalletProxy()?this.getWalletProxy().getTxKey(t):this.module.queueTask((async()=>{this.assertNotClosed();try{return this.module.get_tx_key(this.cppAddress,t)}catch(t){throw new y.Z(this.module.get_exception_message(t))}}))}async checkTxKey(t,e,r){return this.getWalletProxy()?this.getWalletProxy().checkTxKey(t,e,r):this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((i,n)=>{this.module.check_tx_key(this.cppAddress,t,e,r,(t=>{"{"!==t.charAt(0)?n(new y.Z(t)):i(new p.Z(JSON.parse(a.Z.stringifyBigInts(t))))}))})))))}async getTxProof(t,e,r){return this.getWalletProxy()?this.getWalletProxy().getTxProof(t,e,r):this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((i,n)=>{this.module.get_tx_proof(this.cppAddress,t||"",e||"",r||"",(t=>{0===t.indexOf("error: ")?n(new y.Z(t.substring(7))):i(t)}))})))))}async checkTxProof(t,e,r,i){return this.getWalletProxy()?this.getWalletProxy().checkTxProof(t,e,r,i):this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((n,s)=>{this.module.check_tx_proof(this.cppAddress,t||"",e||"",r||"",i||"",(t=>{"{"!==t.charAt(0)?s(new y.Z(t)):n(new p.Z(JSON.parse(a.Z.stringifyBigInts(t))))}))})))))}async getSpendProof(t,e){return this.getWalletProxy()?this.getWalletProxy().getSpendProof(t,e):this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((r,i)=>{this.module.get_spend_proof(this.cppAddress,t||"",e||"",(t=>{0===t.indexOf("error: ")?i(new y.Z(t.substring(7))):r(t)}))})))))}async checkSpendProof(t,e,r){return this.getWalletProxy()?this.getWalletProxy().checkSpendProof(t,e,r):this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((i,n)=>{this.module.check_spend_proof(this.cppAddress,t||"",e||"",r||"",(t=>{"string"==typeof t?n(new y.Z(t)):i(t)}))})))))}async getReserveProofWallet(t){return this.getWalletProxy()?this.getWalletProxy().getReserveProofWallet(t):this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((e,r)=>{this.module.get_reserve_proof_wallet(this.cppAddress,t,(t=>{0===t.indexOf("error: ")?r(new y.Z(t.substring(7),-1)):e(t)}))})))))}async getReserveProofAccount(t,e,r){return this.getWalletProxy()?this.getWalletProxy().getReserveProofAccount(t,e,r):this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((i,n)=>{this.module.get_reserve_proof_account(this.cppAddress,t,e.toString(),r,(t=>{0===t.indexOf("error: ")?n(new y.Z(t.substring(7),-1)):i(t)}))})))))}async checkReserveProof(t,e,r){return this.getWalletProxy()?this.getWalletProxy().checkReserveProof(t,e,r):this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((i,n)=>{this.module.check_reserve_proof(this.cppAddress,t,e,r,(t=>{"{"!==t.charAt(0)?n(new y.Z(t,-1)):i(new g.Z(JSON.parse(a.Z.stringifyBigInts(t))))}))})))))}async getTxNotes(t){return this.getWalletProxy()?this.getWalletProxy().getTxNotes(t):this.module.queueTask((async()=>{this.assertNotClosed();try{return JSON.parse(this.module.get_tx_notes(this.cppAddress,JSON.stringify({txHashes:t}))).txNotes}catch(t){throw new y.Z(this.module.get_exception_message(t))}}))}async setTxNotes(t,e){return this.getWalletProxy()?this.getWalletProxy().setTxNotes(t,e):this.module.queueTask((async()=>{this.assertNotClosed();try{this.module.set_tx_notes(this.cppAddress,JSON.stringify({txHashes:t,txNotes:e}))}catch(t){throw new y.Z(this.module.get_exception_message(t))}}))}async getAddressBookEntries(t){return this.getWalletProxy()?this.getWalletProxy().getAddressBookEntries(t):(t||(t=[]),this.module.queueTask((async()=>{this.assertNotClosed();let e=[];for(let r of JSON.parse(this.module.get_address_book_entries(this.cppAddress,JSON.stringify({entryIndices:t}))).entries)e.push(new d.Z(r));return e})))}async addAddressBookEntry(t,e){return this.getWalletProxy()?this.getWalletProxy().addAddressBookEntry(t,e):(t||(t=""),e||(e=""),this.module.queueTask((async()=>(this.assertNotClosed(),this.module.add_address_book_entry(this.cppAddress,t,e)))))}async editAddressBookEntry(t,e,r,i,n){return this.getWalletProxy()?this.getWalletProxy().editAddressBookEntry(t,e,r,i,n):(e||(e=!1),r||(r=""),i||(i=!1),n||(n=""),this.module.queueTask((async()=>{this.assertNotClosed(),this.module.edit_address_book_entry(this.cppAddress,t,e,r,i,n)})))}async deleteAddressBookEntry(t){return this.getWalletProxy()?this.getWalletProxy().deleteAddressBookEntry(t):this.module.queueTask((async()=>{this.assertNotClosed(),this.module.delete_address_book_entry(this.cppAddress,t)}))}async tagAccounts(t,e){return this.getWalletProxy()?this.getWalletProxy().tagAccounts(t,e):(t||(t=""),e||(e=[]),this.module.queueTask((async()=>{this.assertNotClosed(),this.module.tag_accounts(this.cppAddress,JSON.stringify({tag:t,accountIndices:e}))})))}async untagAccounts(t){return this.getWalletProxy()?this.getWalletProxy().untagAccounts(t):(t||(t=[]),this.module.queueTask((async()=>{this.assertNotClosed(),this.module.tag_accounts(this.cppAddress,JSON.stringify({accountIndices:t}))})))}async getAccountTags(){return this.getWalletProxy()?this.getWalletProxy().getAccountTags():this.module.queueTask((async()=>{this.assertNotClosed();let t=[];for(let e of JSON.parse(this.module.get_account_tags(this.cppAddress)).accountTags)t.push(new l.Z(e));return t}))}async setAccountTagLabel(t,e){return this.getWalletProxy()?this.getWalletProxy().setAccountTagLabel(t,e):(t||(t=""),e||(e=""),this.module.queueTask((async()=>{this.assertNotClosed(),this.module.set_account_tag_label(this.cppAddress,t,e)})))}async getPaymentUri(t){return this.getWalletProxy()?this.getWalletProxy().getPaymentUri(t):(t=B.Z.normalizeCreateTxsConfig(t),this.module.queueTask((async()=>{this.assertNotClosed();try{return this.module.get_payment_uri(this.cppAddress,JSON.stringify(t.toJson()))}catch(t){throw new y.Z("Cannot make URI from supplied parameters")}})))}async parsePaymentUri(t){return this.getWalletProxy()?this.getWalletProxy().parsePaymentUri(t):this.module.queueTask((async()=>{this.assertNotClosed();try{return new T.Z(JSON.parse(a.Z.stringifyBigInts(this.module.parse_payment_uri(this.cppAddress,t))))}catch(t){throw new y.Z(t.message)}}))}async getAttribute(t){return this.getWalletProxy()?this.getWalletProxy().getAttribute(t):(this.assertNotClosed(),n()("string"==typeof t,"Attribute key must be a string"),this.module.queueTask((async()=>{this.assertNotClosed();let e=this.module.get_attribute(this.cppAddress,t);return""===e?null:e})))}async setAttribute(t,e){return this.getWalletProxy()?this.getWalletProxy().setAttribute(t,e):(this.assertNotClosed(),n()("string"==typeof t,"Attribute key must be a string"),n()("string"==typeof e,"Attribute value must be a string"),this.module.queueTask((async()=>{this.assertNotClosed(),this.module.set_attribute(this.cppAddress,t,e)})))}async startMining(t,e,r){if(this.getWalletProxy())return this.getWalletProxy().startMining(t,e,r);this.assertNotClosed();let i=await m.Z.connectToDaemonRpc(await this.getDaemonConnection());await i.startMining(await this.getPrimaryAddress(),t,e,r)}async stopMining(){if(this.getWalletProxy())return this.getWalletProxy().stopMining();this.assertNotClosed();let t=await m.Z.connectToDaemonRpc(await this.getDaemonConnection());await t.stopMining()}async isMultisigImportNeeded(){return this.getWalletProxy()?this.getWalletProxy().isMultisigImportNeeded():this.module.queueTask((async()=>(this.assertNotClosed(),this.module.is_multisig_import_needed(this.cppAddress))))}async isMultisig(){return this.getWalletProxy()?this.getWalletProxy().isMultisig():this.module.queueTask((async()=>(this.assertNotClosed(),this.module.is_multisig(this.cppAddress))))}async getMultisigInfo(){return this.getWalletProxy()?this.getWalletProxy().getMultisigInfo():this.module.queueTask((async()=>(this.assertNotClosed(),new E.Z(JSON.parse(this.module.get_multisig_info(this.cppAddress))))))}async prepareMultisig(){return this.getWalletProxy()?this.getWalletProxy().prepareMultisig():this.module.queueTask((async()=>(this.assertNotClosed(),this.module.prepare_multisig(this.cppAddress))))}async makeMultisig(t,e,r){return this.getWalletProxy()?this.getWalletProxy().makeMultisig(t,e,r):this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((i,n)=>{this.module.make_multisig(this.cppAddress,JSON.stringify({multisigHexes:t,threshold:e,password:r}),(t=>{0===t.indexOf("error: ")?n(new y.Z(t.substring(7))):i(t)}))})))))}async exchangeMultisigKeys(t,e){return this.getWalletProxy()?this.getWalletProxy().exchangeMultisigKeys(t,e):this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((r,i)=>{this.module.exchange_multisig_keys(this.cppAddress,JSON.stringify({multisigHexes:t,password:e}),(t=>{0===t.indexOf("error: ")?i(new y.Z(t.substring(7))):r(new S.Z(JSON.parse(t)))}))})))))}async exportMultisigHex(){return this.getWalletProxy()?this.getWalletProxy().exportMultisigHex():this.module.queueTask((async()=>(this.assertNotClosed(),this.module.export_multisig_hex(this.cppAddress))))}async importMultisigHex(t){if(this.getWalletProxy())return this.getWalletProxy().importMultisigHex(t);if(!a.Z.isArray(t))throw new y.Z("Must provide string[] to importMultisigHex()");return this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((e,r)=>{this.module.import_multisig_hex(this.cppAddress,JSON.stringify({multisigHexes:t}),(t=>{"string"==typeof t?r(new y.Z(t)):e(t)}))})))))}async signMultisigTxHex(t){return this.getWalletProxy()?this.getWalletProxy().signMultisigTxHex(t):this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((e,r)=>{this.module.sign_multisig_tx_hex(this.cppAddress,t,(t=>{"{"!==t.charAt(0)?r(new y.Z(t)):e(new N.Z(JSON.parse(t)))}))})))))}async submitMultisigTxHex(t){return this.getWalletProxy()?this.getWalletProxy().submitMultisigTxHex(t):this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((e,r)=>{this.module.submit_multisig_tx_hex(this.cppAddress,t,(t=>{"{"!==t.charAt(0)?r(new y.Z(t)):e(JSON.parse(t).txHashes)}))})))))}async getData(){if(this.getWalletProxy())return this.getWalletProxy().getData();let t=await this.isViewOnly();return this.module.queueTask((async()=>{this.assertNotClosed();let e=[],r=JSON.parse(this.module.get_cache_file_buffer(this.cppAddress)),i=new DataView(new ArrayBuffer(r.length));for(let t=0;t<r.length;t++)i.setInt8(t,this.module.HEAPU8[r.pointer/Uint8Array.BYTES_PER_ELEMENT+t]);this.module._free(r.pointer),e.push(z.from(i.buffer));let n=JSON.parse(this.module.get_keys_file_buffer(this.cppAddress,this.password,t));i=new DataView(new ArrayBuffer(n.length));for(let t=0;t<n.length;t++)i.setInt8(t,this.module.HEAPU8[n.pointer/Uint8Array.BYTES_PER_ELEMENT+t]);return this.module._free(n.pointer),e.unshift(z.from(i.buffer)),e}))}async changePassword(t,e){if(this.getWalletProxy())return this.getWalletProxy().changePassword(t,e);if(t!==this.password)throw new y.Z("Invalid original password.");void 0===e&&(e=""),await this.module.queueTask((async()=>(this.assertNotClosed(),new Promise(((r,i)=>{this.module.change_wallet_password(this.cppAddress,t,e,(t=>{t?i(new y.Z(t)):r()}))}))))),this.password=e,this.path&&await this.save()}async save(){return this.getWalletProxy()?this.getWalletProxy().save():H.save(this)}async close(t=!1){if(!this._isClosed){if(t&&await this.save(),this.getWalletProxy())return await this.getWalletProxy().close(!1),void await super.close();await this.refreshListening(),await this.stopSyncing(),await super.close(),delete this.path,delete this.password,delete this.wasmListener,u.Z.setRejectUnauthorizedFn(this.rejectUnauthorizedConfigId,void 0)}}async getNumBlocksToUnlock(){return super.getNumBlocksToUnlock()}async getTx(t){return super.getTx(t)}async getIncomingTransfers(t){return super.getIncomingTransfers(t)}async getOutgoingTransfers(t){return super.getOutgoingTransfers(t)}async createTx(t){return super.createTx(t)}async relayTx(t){return super.relayTx(t)}async getTxNote(t){return super.getTxNote(t)}async setTxNote(t,e){return super.setTxNote(t,e)}static async openWalletData(t){if(t.proxyToWorker){let e=await K.openWalletData(t);return new H(void 0,void 0,void 0,void 0,void 0,void 0,e)}if(void 0===t.networkType)throw new y.Z("Must provide the wallet's network type");t.networkType=M.Z.from(t.networkType);let e=t.getServer(),r=e&&e.getUri()?e.getUri():"",i=e&&e.getUsername()?e.getUsername():"",n=e&&e.getPassword()?e.getPassword():"",s=!e||e.getRejectUnauthorized(),o=await u.Z.loadWasmModule();return o.queueTask((async()=>new Promise(((e,h)=>{let c=a.Z.getUUID();u.Z.setRejectUnauthorizedFn(c,(()=>s)),o.open_wallet_full(t.password,t.networkType,t.keysData??"",t.cacheData??"",r,i,n,c,(r=>{"string"==typeof r?h(new y.Z(r)):e(new H(r,t.path,t.password,t.fs,s,c))}))}))))}getWalletProxy(){return super.getWalletProxy()}async backgroundSync(){let t=this.path?this.path:this.browserMainPath?this.browserMainPath:"in-memory wallet";u.Z.log(1,"Background synchronizing "+t);try{await this.sync()}catch(e){this._isClosed||console.error("Failed to background synchronize "+t+": "+e.message)}}async refreshListening(){let t=this.listeners.length>0;if(!(0===this.wasmListenerHandle&&!t||this.wasmListenerHandle>0&&t))return this.module.queueTask((async()=>new Promise(((e,r)=>{this.module.set_listener(this.cppAddress,this.wasmListenerHandle,(t=>{"string"==typeof t?r(new y.Z(t)):(this.wasmListenerHandle=t,e())}),t?async(t,e,r,i,n)=>await this.wasmListener.onSyncProgress(t,e,r,i,n):void 0,t?async t=>await this.wasmListener.onNewBlock(t):void 0,t?async(t,e)=>await this.wasmListener.onBalancesChanged(t,e):void 0,t?async(t,e,r,i,n,s,o,a)=>await this.wasmListener.onOutputReceived(t,e,r,i,n,s,o,a):void 0,t?async(t,e,r,i,n,s,o,a)=>await this.wasmListener.onOutputSpent(t,e,r,i,n,s,o,a):void 0)}))))}static sanitizeBlock(t){for(let e of t.getTxs())H.sanitizeTxWallet(e);return t}static sanitizeTxWallet(t){return n()(t instanceof k.Z),t}static sanitizeAccount(t){if(t.getSubaddresses())for(let e of t.getSubaddresses())C.a.sanitizeSubaddress(e);return t}static deserializeBlocks(t){let e=JSON.parse(a.Z.stringifyBigInts(t)),r={blocks:[]};if(e.blocks)for(let t of e.blocks)r.blocks.push(H.sanitizeBlock(new f.Z(t,f.Z.DeserializationType.TX_WALLET)));return r}static deserializeTxs(t,e){let r=H.deserializeBlocks(e).blocks,i=[];for(let t of r){H.sanitizeBlock(t);for(let e of t.getTxs())void 0===t.getHeight()&&e.setBlock(void 0),i.push(e)}if(void 0!==t.getHashes()){let e=new Map;for(let t of i)e[t.getHash()]=t;let r=[];for(let i of t.getHashes())void 0!==e[i]&&r.push(e[i]);i=r}return i}static deserializeTransfers(t,e){let r=H.deserializeBlocks(e).blocks,i=[];for(let t of r)for(let e of t.getTxs())if(void 0===t.getHeight()&&e.setBlock(void 0),void 0!==e.getOutgoingTransfer()&&i.push(e.getOutgoingTransfer()),void 0!==e.getIncomingTransfers())for(let t of e.getIncomingTransfers())i.push(t);return i}static deserializeOutputs(t,e){let r=H.deserializeBlocks(e).blocks,i=[];for(let t of r)for(let e of t.getTxs())for(let t of e.getOutputs())i.push(t);return i}setBrowserMainPath(t){this.browserMainPath=t}static async moveTo(t,e){return o().normalize(e.path)===o().normalize(t)?e.save():u.Z.queueTask((async()=>{if(await e.isClosed())throw new y.Z("Wallet is closed");if(!t)throw new y.Z("Must provide path of destination wallet");let r=o().dirname(t);if(!await u.Z.exists(e.fs,r))try{await e.fs.mkdir(r)}catch(e){throw new y.Z("Destination path "+t+" does not exist and cannot be created: "+e.message)}const i=await e.getData();await e.fs.writeFile(t+".keys",i[0],"binary"),await e.fs.writeFile(t,i[1],"binary"),await e.fs.writeFile(t+".address.txt",await e.getPrimaryAddress());let n=e.path;e.path=t,n&&(await e.fs.unlink(n+".address.txt"),await e.fs.unlink(n+".keys"),await e.fs.unlink(n))}))}static async save(t){return u.Z.queueTask((async()=>{if(await t.isClosed())throw new y.Z("Wallet is closed");let e=await t.getPath();if(!e)throw new y.Z("Cannot save wallet because path is not set");const r=await t.getData();let i=e+".new";await t.fs.writeFile(i+".keys",r[0],"binary"),await t.fs.writeFile(i,r[1],"binary"),await t.fs.writeFile(i+".address.txt",await t.getPrimaryAddress()),await t.fs.rename(i+".keys",e+".keys"),await t.fs.rename(i,e),await t.fs.rename(i+".address.txt",e+".address.txt")}))}}H.DEFAULT_SYNC_PERIOD_IN_MS=2e4;const W=H;class K extends C.I{static async openWalletData(t){let e=a.Z.getUUID();void 0===t.password&&(t.password="");let r=t.getServer();await u.Z.invokeWorker(e,"openWalletData",[t.path,t.password,t.networkType,t.keysData,t.cacheData,r?r.toJson():void 0]);let i=new K(e,await u.Z.getWorker(),t.path,t.getFs());return t.path&&await i.save(),i}static async createWallet(t){if(t.getPath()&&await H.walletExists(t.getPath(),t.getFs()))throw new y.Z("Wallet already exists: "+t.getPath());let e=a.Z.getUUID();await u.Z.invokeWorker(e,"createWalletFull",[t.toJson()]);let r=new K(e,await u.Z.getWorker(),t.getPath(),t.getFs());return t.getPath()&&await r.save(),r}constructor(t,e,r,i){super(t,e),this.path=r,this.fs=i||(r?H.getFs():void 0),this.wrappedListeners=[]}getPath(){return this.path}async getNetworkType(){return this.invokeWorker("getNetworkType")}async setSubaddressLabel(t,e,r){return this.invokeWorker("setSubaddressLabel",Array.from(arguments))}async setDaemonConnection(t){if(t){let e=t?t instanceof I.Z?t:new I.Z(t):void 0;await this.invokeWorker("setDaemonConnection",e?e.getConfig():void 0)}else await this.invokeWorker("setDaemonConnection")}async getDaemonConnection(){let t=await this.invokeWorker("getDaemonConnection");return t?new I.Z(t):void 0}async isConnectedToDaemon(){return this.invokeWorker("isConnectedToDaemon")}async getRestoreHeight(){return this.invokeWorker("getRestoreHeight")}async setRestoreHeight(t){return this.invokeWorker("setRestoreHeight",[t])}async getDaemonHeight(){return this.invokeWorker("getDaemonHeight")}async getDaemonMaxPeerHeight(){return this.invokeWorker("getDaemonMaxPeerHeight")}async getHeightByDate(t,e,r){return this.invokeWorker("getHeightByDate",[t,e,r])}async isDaemonSynced(){return this.invokeWorker("isDaemonSynced")}async getHeight(){return this.invokeWorker("getHeight")}async addListener(t){let e=new U(t),r=e.getId();return u.Z.addWorkerCallback(this.walletId,"onSyncProgress_"+r,[e.onSyncProgress,e]),u.Z.addWorkerCallback(this.walletId,"onNewBlock_"+r,[e.onNewBlock,e]),u.Z.addWorkerCallback(this.walletId,"onBalancesChanged_"+r,[e.onBalancesChanged,e]),u.Z.addWorkerCallback(this.walletId,"onOutputReceived_"+r,[e.onOutputReceived,e]),u.Z.addWorkerCallback(this.walletId,"onOutputSpent_"+r,[e.onOutputSpent,e]),this.wrappedListeners.push(e),this.invokeWorker("addListener",[r])}async removeListener(t){for(let e=0;e<this.wrappedListeners.length;e++)if(this.wrappedListeners[e].getListener()===t){let t=this.wrappedListeners[e].getId();return await this.invokeWorker("removeListener",[t]),u.Z.removeWorkerCallback(this.walletId,"onSyncProgress_"+t),u.Z.removeWorkerCallback(this.walletId,"onNewBlock_"+t),u.Z.removeWorkerCallback(this.walletId,"onBalancesChanged_"+t),u.Z.removeWorkerCallback(this.walletId,"onOutputReceived_"+t),u.Z.removeWorkerCallback(this.walletId,"onOutputSpent_"+t),void this.wrappedListeners.splice(e,1)}throw new y.Z("Listener is not registered with wallet")}getListeners(){let t=[];for(let e of this.wrappedListeners)t.push(e.getListener());return t}async isSynced(){return this.invokeWorker("isSynced")}async sync(t,e,r=!1){e=t instanceof L.Z?e:t;let i,n,s=t instanceof L.Z?t:void 0;void 0===e&&(e=Math.max(await this.getHeight(),await this.getRestoreHeight())),s&&await this.addListener(s);try{let t=await this.invokeWorker("sync",[e,r]);n=new P.Z(t.numBlocksFetched,t.receivedMoney)}catch(t){i=t}if(s&&await this.removeListener(s),i)throw i;return n}async startSyncing(t){return this.invokeWorker("startSyncing",Array.from(arguments))}async stopSyncing(){return this.invokeWorker("stopSyncing")}async scanTxs(t){return n()(Array.isArray(t),"Must provide an array of txs hashes to scan"),this.invokeWorker("scanTxs",[t])}async rescanSpent(){return this.invokeWorker("rescanSpent")}async rescanBlockchain(){return this.invokeWorker("rescanBlockchain")}async getBalance(t,e){return BigInt(await this.invokeWorker("getBalance",Array.from(arguments)))}async getUnlockedBalance(t,e){let r=await this.invokeWorker("getUnlockedBalance",Array.from(arguments));return BigInt(r)}async getAccounts(t,e){let r=[];for(let t of await this.invokeWorker("getAccounts",Array.from(arguments)))r.push(H.sanitizeAccount(new c.Z(t)));return r}async getAccount(t,e){let r=await this.invokeWorker("getAccount",Array.from(arguments));return H.sanitizeAccount(new c.Z(r))}async createAccount(t){let e=await this.invokeWorker("createAccount",Array.from(arguments));return H.sanitizeAccount(new c.Z(e))}async getSubaddresses(t,e){let r=[];for(let t of await this.invokeWorker("getSubaddresses",Array.from(arguments)))r.push(C.a.sanitizeSubaddress(new A.Z(t)));return r}async createSubaddress(t,e){let r=await this.invokeWorker("createSubaddress",Array.from(arguments));return C.a.sanitizeSubaddress(new A.Z(r))}async getTxs(t){t=B.Z.normalizeTxQuery(t);let e=await this.invokeWorker("getTxs",[t.getBlock().toJson()]);return H.deserializeTxs(t,JSON.stringify({blocks:e.blocks}))}async getTransfers(t){t=B.Z.normalizeTransferQuery(t);let e=await this.invokeWorker("getTransfers",[t.getTxQuery().getBlock().toJson()]);return H.deserializeTransfers(t,JSON.stringify({blocks:e}))}async getOutputs(t){t=B.Z.normalizeOutputQuery(t);let e=await this.invokeWorker("getOutputs",[t.getTxQuery().getBlock().toJson()]);return H.deserializeOutputs(t,JSON.stringify({blocks:e}))}async exportOutputs(t){return this.invokeWorker("exportOutputs",[t])}async importOutputs(t){return this.invokeWorker("importOutputs",[t])}async exportKeyImages(t){let e=[];for(let r of await this.invokeWorker("getKeyImages",[t]))e.push(new b.Z(r));return e}async importKeyImages(t){let e=[];for(let r of t)e.push(r.toJson());return new w.Z(await this.invokeWorker("importKeyImages",[e]))}async getNewKeyImagesFromLastImport(){throw new y.Z("MoneroWalletFull.getNewKeyImagesFromLastImport() not implemented")}async freezeOutput(t){return this.invokeWorker("freezeOutput",[t])}async thawOutput(t){return this.invokeWorker("thawOutput",[t])}async isOutputFrozen(t){return this.invokeWorker("isOutputFrozen",[t])}async createTxs(t){t=B.Z.normalizeCreateTxsConfig(t);let e=await this.invokeWorker("createTxs",[t.toJson()]);return new R.Z(e).getTxs()}async sweepOutput(t){t=B.Z.normalizeSweepOutputConfig(t);let e=await this.invokeWorker("sweepOutput",[t.toJson()]);return new R.Z(e).getTxs()[0]}async sweepUnlocked(t){t=B.Z.normalizeSweepUnlockedConfig(t);let e=await this.invokeWorker("sweepUnlocked",[t.toJson()]),r=[];for(let t of e)for(let e of new R.Z(t).getTxs())r.push(e);return r}async sweepDust(t){return new R.Z(await this.invokeWorker("sweepDust",[t])).getTxs()||[]}async relayTxs(t){n()(Array.isArray(t),"Must provide an array of txs or their metadata to relay");let e=[];for(let r of t)e.push(r instanceof k.Z?r.getMetadata():r);return this.invokeWorker("relayTxs",[e])}async describeTxSet(t){return new R.Z(await this.invokeWorker("describeTxSet",[t.toJson()]))}async signTxs(t){return new R.Z(await this.invokeWorker("signTxs",Array.from(arguments)))}async submitTxs(t){return this.invokeWorker("submitTxs",Array.from(arguments))}async signMessage(t,e,r,i){return this.invokeWorker("signMessage",Array.from(arguments))}async verifyMessage(t,e,r){return new Z.Z(await this.invokeWorker("verifyMessage",Array.from(arguments)))}async getTxKey(t){return this.invokeWorker("getTxKey",Array.from(arguments))}async checkTxKey(t,e,r){return new p.Z(await this.invokeWorker("checkTxKey",Array.from(arguments)))}async getTxProof(t,e,r){return this.invokeWorker("getTxProof",Array.from(arguments))}async checkTxProof(t,e,r,i){return new p.Z(await this.invokeWorker("checkTxProof",Array.from(arguments)))}async getSpendProof(t,e){return this.invokeWorker("getSpendProof",Array.from(arguments))}async checkSpendProof(t,e,r){return this.invokeWorker("checkSpendProof",Array.from(arguments))}async getReserveProofWallet(t){return this.invokeWorker("getReserveProofWallet",Array.from(arguments))}async getReserveProofAccount(t,e,r){try{return await this.invokeWorker("getReserveProofAccount",[t,e.toString(),r])}catch(t){throw new y.Z(t.message,-1)}}async checkReserveProof(t,e,r){try{return new g.Z(await this.invokeWorker("checkReserveProof",Array.from(arguments)))}catch(t){throw new y.Z(t.message,-1)}}async getTxNotes(t){return this.invokeWorker("getTxNotes",Array.from(arguments))}async setTxNotes(t,e){return this.invokeWorker("setTxNotes",Array.from(arguments))}async getAddressBookEntries(t){t||(t=[]);let e=[];for(let t of await this.invokeWorker("getAddressBookEntries",Array.from(arguments)))e.push(new d.Z(t));return e}async addAddressBookEntry(t,e){return this.invokeWorker("addAddressBookEntry",Array.from(arguments))}async editAddressBookEntry(t,e,r,i,n){return this.invokeWorker("editAddressBookEntry",Array.from(arguments))}async deleteAddressBookEntry(t){return this.invokeWorker("deleteAddressBookEntry",Array.from(arguments))}async tagAccounts(t,e){return this.invokeWorker("tagAccounts",Array.from(arguments))}async untagAccounts(t){return this.invokeWorker("untagAccounts",Array.from(arguments))}async getAccountTags(){return this.invokeWorker("getAccountTags",Array.from(arguments))}async setAccountTagLabel(t,e){return this.invokeWorker("setAccountTagLabel",Array.from(arguments))}async getPaymentUri(t){return t=B.Z.normalizeCreateTxsConfig(t),this.invokeWorker("getPaymentUri",[t.toJson()])}async parsePaymentUri(t){return new T.Z(await this.invokeWorker("parsePaymentUri",Array.from(arguments)))}async getAttribute(t){return this.invokeWorker("getAttribute",Array.from(arguments))}async setAttribute(t,e){return this.invokeWorker("setAttribute",Array.from(arguments))}async startMining(t,e,r){return this.invokeWorker("startMining",Array.from(arguments))}async stopMining(){return this.invokeWorker("stopMining",Array.from(arguments))}async isMultisigImportNeeded(){return this.invokeWorker("isMultisigImportNeeded")}async isMultisig(){return this.invokeWorker("isMultisig")}async getMultisigInfo(){return new E.Z(await this.invokeWorker("getMultisigInfo"))}async prepareMultisig(){return this.invokeWorker("prepareMultisig")}async makeMultisig(t,e,r){return await this.invokeWorker("makeMultisig",Array.from(arguments))}async exchangeMultisigKeys(t,e){return new S.Z(await this.invokeWorker("exchangeMultisigKeys",Array.from(arguments)))}async exportMultisigHex(){return this.invokeWorker("exportMultisigHex")}async importMultisigHex(t){return this.invokeWorker("importMultisigHex",Array.from(arguments))}async signMultisigTxHex(t){return new N.Z(await this.invokeWorker("signMultisigTxHex",Array.from(arguments)))}async submitMultisigTxHex(t){return this.invokeWorker("submitMultisigTxHex",Array.from(arguments))}async getData(){return this.invokeWorker("getData")}async moveTo(t){return H.moveTo(t,this)}async changePassword(t,e){await this.invokeWorker("changePassword",Array.from(arguments)),this.path&&await this.save()}async save(){return H.save(this)}async close(t){if(!await this.isClosed()){for(t&&await this.save();this.wrappedListeners.length;)await this.removeListener(this.wrappedListeners[0].getListener());await super.close(!1)}}}class q{constructor(t){this.wallet=t}async onSyncProgress(t,e,r,i,n){await this.wallet.announceSyncProgress(t,e,r,i,n)}async onNewBlock(t){await this.wallet.announceNewBlock(t)}async onBalancesChanged(t,e){await this.wallet.announceBalancesChanged(t,e)}async onOutputReceived(t,e,r,i,n,s,o,a){let u=new x.Z;u.setAmount(BigInt(r)),u.setAccountIndex(i),u.setSubaddressIndex(n);let h=new k.Z;if(h.setHash(e),h.setVersion(s),h.setUnlockTime(o),u.setTx(h),h.setOutputs([u]),h.setIsIncoming(!0),h.setIsLocked(a),t>0){let e=(new f.Z).setHeight(t);e.setTxs([h]),h.setBlock(e),h.setIsConfirmed(!0),h.setInTxPool(!1),h.setIsFailed(!1)}else h.setIsConfirmed(!1),h.setInTxPool(!0);await this.wallet.announceOutputReceived(u)}async onOutputSpent(t,e,r,i,n,s,o,a){let u=new x.Z;u.setAmount(BigInt(r)),i&&u.setAccountIndex(parseInt(i)),n&&u.setSubaddressIndex(parseInt(n));let h=new k.Z;if(h.setHash(e),h.setVersion(s),h.setUnlockTime(o),h.setIsLocked(a),u.setTx(h),h.setInputs([u]),t>0){let e=(new f.Z).setHeight(t);e.setTxs([h]),h.setBlock(e),h.setIsConfirmed(!0),h.setInTxPool(!1),h.setIsFailed(!1)}else h.setIsConfirmed(!1),h.setInTxPool(!0);await this.wallet.announceOutputSpent(u)}}class U{constructor(t){this.id=a.Z.getUUID(),this.listener=t}getId(){return this.id}getListener(){return this.listener}onSyncProgress(t,e,r,i,n){this.listener.onSyncProgress(t,e,r,i,n)}async onNewBlock(t){await this.listener.onNewBlock(t)}async onBalancesChanged(t,e){await this.listener.onBalancesChanged(BigInt(t),BigInt(e))}async onOutputReceived(t){let e=new f.Z(t,f.Z.DeserializationType.TX_WALLET);await this.listener.onOutputReceived(e.getTxs()[0].getOutputs()[0])}async onOutputSpent(t){let e=new f.Z(t,f.Z.DeserializationType.TX_WALLET);await this.listener.onOutputSpent(e.getTxs()[0].getInputs()[0])}}},5522:(t,e,r)=>{"use strict";r.d(e,{I:()=>g,a:()=>p});var i=r(9282),n=r.n(i),s=r(6048),o=r(9390),a=r(2477),u=r(2990),h=r(8403),c=r(2122),l=r(8112),d=r(929),f=r(8788);class p extends d.Z{static async createWallet(t){if(void 0===t)throw new a.Z("Must provide config to create wallet");if(void 0!==(t=t instanceof f.Z?t:new f.Z(t)).getSeed()&&(void 0!==t.getPrimaryAddress()||void 0!==t.getPrivateViewKey()||void 0!==t.getPrivateSpendKey()))throw new a.Z("Wallet may be initialized with a seed or keys but not both");if(void 0===t.getNetworkType())throw new a.Z("Must provide a networkType: 'mainnet', 'testnet' or 'stagenet'");if(!0===t.getSaveCurrent())throw new a.Z("Cannot save current wallet when creating keys-only wallet");if(void 0===t.getProxyToWorker()&&t.setProxyToWorker(!0),t.getProxyToWorker()){let e=await g.createWallet(t);return new p(void 0,e)}if(void 0!==t.getServer())throw new a.Z("Cannot initialize keys wallet with server connection");return void 0!==t.getSeed()?p.createWalletFromSeed(t):void 0!==t.getPrivateSpendKey()||void 0!==t.getPrimaryAddress()?p.createWalletFromKeys(t):p.createWalletRandom(t)}static async createWalletRandom(t){if(void 0!==(t=t.copy()).getSeedOffset())throw new a.Z("Cannot provide seedOffset when creating random wallet");if(void 0!==t.getRestoreHeight())throw new a.Z("Cannot provide restoreHeight when creating random wallet");h.Z.validate(t.getNetworkType()),void 0===t.getLanguage()&&t.setLanguage("English");let e=await o.Z.loadWasmModule();return e.queueTask((async()=>new Promise(((r,i)=>{e.create_keys_wallet_random(JSON.stringify(t.toJson()),(t=>{"string"==typeof t?i(new a.Z(t)):r(new p(t))}))}))))}static async createWalletFromSeed(t){if(h.Z.validate(t.getNetworkType()),void 0===t.getSeed())throw Error("Must define seed to create wallet from");if(void 0===t.getSeedOffset()&&t.setSeedOffset(""),void 0!==t.getLanguage())throw new a.Z("Cannot provide language when creating wallet from seed");let e=await o.Z.loadWasmModule();return e.queueTask((async()=>new Promise(((r,i)=>{e.create_keys_wallet_from_seed(JSON.stringify(t.toJson()),(t=>{"string"==typeof t?i(new a.Z(t)):r(new p(t))}))}))))}static async createWalletFromKeys(t){if(void 0!==t.getSeedOffset())throw new a.Z("Cannot provide seedOffset when creating wallet from keys");h.Z.validate(t.getNetworkType()),void 0===t.getPrimaryAddress()&&t.setPrimaryAddress(""),void 0===t.getPrivateViewKey()&&t.setPrivateViewKey(""),void 0===t.getPrivateSpendKey()&&t.setPrivateSpendKey(""),void 0===t.getLanguage()&&t.setLanguage("English");let e=await o.Z.loadWasmModule();return e.queueTask((async()=>new Promise(((r,i)=>{e.create_keys_wallet_from_keys(JSON.stringify(t.toJson()),(t=>{"string"==typeof t?i(new a.Z(t)):r(new p(t))}))}))))}static async getSeedLanguages(){let t=await o.Z.loadWasmModule();return t.queueTask((async()=>JSON.parse(t.get_keys_wallet_seed_languages()).languages))}constructor(t,e){if(super(),!t&&!e)throw new a.Z("Must provide cppAddress or walletProxy");if(e)this.walletProxy=e;else if(this.cppAddress=t,this.module=o.Z.getWasmModule(),!this.module.create_full_wallet)throw new a.Z("WASM module not loaded - create wallet instance using static utilities")}async isViewOnly(){return this.getWalletProxy()?this.getWalletProxy().isViewOnly():this.module.queueTask((async()=>(this.assertNotClosed(),this.module.is_view_only(this.cppAddress))))}async isConnectedToDaemon(){return!!this.getWalletProxy()&&this.getWalletProxy().isConnectedToDaemon()}async getVersion(){return this.getWalletProxy()?this.getWalletProxy().getVersion():this.module.queueTask((async()=>{this.assertNotClosed();let t=this.module.get_version(this.cppAddress),e=JSON.parse(t);return new l.Z(e.number,e.isRelease)}))}getPath(){throw new a.Z("MoneroWalletKeys does not support a persisted path")}async getSeed(){return this.getWalletProxy()?this.getWalletProxy().getSeed():this.module.queueTask((async()=>{this.assertNotClosed();let t=this.module.get_seed(this.cppAddress);if(0===t.indexOf("error: "))throw new a.Z(t.substring(7));return t||void 0}))}async getSeedLanguage(){return this.getWalletProxy()?this.getWalletProxy().getSeedLanguage():this.module.queueTask((async()=>{this.assertNotClosed();let t=this.module.get_seed_language(this.cppAddress);if(0===t.indexOf("error: "))throw new a.Z(t.substring(7));return t||void 0}))}async getPrivateSpendKey(){return this.getWalletProxy()?this.getWalletProxy().getPrivateSpendKey():this.module.queueTask((async()=>{this.assertNotClosed();let t=this.module.get_private_spend_key(this.cppAddress);if(0===t.indexOf("error: "))throw new a.Z(t.substring(7));return t||void 0}))}async getPrivateViewKey(){return this.getWalletProxy()?this.getWalletProxy().getPrivateViewKey():this.module.queueTask((async()=>{this.assertNotClosed();let t=this.module.get_private_view_key(this.cppAddress);if(0===t.indexOf("error: "))throw new a.Z(t.substring(7));return t||void 0}))}async getPublicViewKey(){return this.getWalletProxy()?this.getWalletProxy().getPublicViewKey():this.module.queueTask((async()=>{this.assertNotClosed();let t=this.module.get_public_view_key(this.cppAddress);if(0===t.indexOf("error: "))throw new a.Z(t.substring(7));return t||void 0}))}async getPublicSpendKey(){return this.getWalletProxy()?this.getWalletProxy().getPublicSpendKey():this.module.queueTask((async()=>{this.assertNotClosed();let t=this.module.get_public_spend_key(this.cppAddress);if(0===t.indexOf("error: "))throw new a.Z(t.substring(7));return t||void 0}))}async getAddress(t,e){return this.getWalletProxy()?this.getWalletProxy().getAddress(t,e):(n()("number"==typeof t),this.module.queueTask((async()=>(this.assertNotClosed(),this.module.get_address(this.cppAddress,t,e)))))}async getAddressIndex(t){return this.getWalletProxy()?this.getWalletProxy().getAddressIndex(t):this.module.queueTask((async()=>{this.assertNotClosed();let e=this.module.get_address_index(this.cppAddress,t);if("{"!==e.charAt(0))throw new a.Z(e);return new c.Z(JSON.parse(e))}))}async getAccounts(t,e){if(this.getWalletProxy())return this.getWalletProxy().getAccounts();throw new a.Z("MoneroWalletKeys does not support getting an enumerable set of accounts; query specific accounts")}async close(t=!1){if(!this._isClosed)return this.getWalletProxy()?(await this.getWalletProxy().close(t),await super.close(),void(this._isClosed=!0)):(t&&await this.save(),await super.close(),this._isClosed=!0,this.module.queueTask((async()=>new Promise(((t,e)=>{this._isClosed?t(void 0):this.module.close(this.cppAddress,!1,(async()=>{delete this.cppAddress,this._isClosed=!0,t()}))})))))}async isClosed(){return this._isClosed}async getPrimaryAddress(){return super.getPrimaryAddress()}async getSubaddress(t,e){return super.getSubaddress(t,e)}static sanitizeSubaddress(t){return""===t.getLabel()&&t.setLabel(void 0),t}assertNotClosed(){if(this._isClosed)throw new a.Z("Wallet is closed")}getWalletProxy(){return this.assertNotClosed(),this.walletProxy}}class g extends d.Z{static async createWallet(t){let e=s.Z.getUUID();return await o.Z.invokeWorker(e,"createWalletKeys",[t.toJson()]),new g(e,await o.Z.getWorker())}constructor(t,e){super(),this.walletId=t,this.worker=e}async isViewOnly(){return this.invokeWorker("isViewOnly")}async getVersion(){throw new a.Z("Not implemented")}async getSeed(){return this.invokeWorker("getSeed")}async getSeedLanguage(){return this.invokeWorker("getSeedLanguage")}async getSeedLanguages(){return this.invokeWorker("getSeedLanguages")}async getPrivateSpendKey(){return this.invokeWorker("getPrivateSpendKey")}async getPrivateViewKey(){return this.invokeWorker("getPrivateViewKey")}async getPublicViewKey(){return this.invokeWorker("getPublicViewKey")}async getPublicSpendKey(){return this.invokeWorker("getPublicSpendKey")}async getAddress(t,e){return this.invokeWorker("getAddress",Array.from(arguments))}async getAddressIndex(t){let e=await this.invokeWorker("getAddressIndex",Array.from(arguments));return p.sanitizeSubaddress(new c.Z(e))}async getIntegratedAddress(t,e){return new u.Z(await this.invokeWorker("getIntegratedAddress",Array.from(arguments)))}async decodeIntegratedAddress(t){return new u.Z(await this.invokeWorker("decodeIntegratedAddress",Array.from(arguments)))}async close(t){await this.invokeWorker("close",Array.from(arguments)),o.Z.removeWorkerObject(this.walletId)}async isClosed(){return this.invokeWorker("isClosed")}async invokeWorker(t,e){return await o.Z.invokeWorker(this.walletId,t,e)}}},7946:(t,e,r)=>{"use strict";r.d(e,{Z:()=>a});var i=r(9282),n=r.n(i),s=r(6048),o=r(2122);class a{constructor(t){if(Object.assign(this,t),void 0!==this.balance&&"bigint"!=typeof this.balance&&(this.balance=BigInt(this.balance)),void 0!==this.unlockedBalance&&"bigint"!=typeof this.unlockedBalance&&(this.unlockedBalance=BigInt(this.unlockedBalance)),this.subaddresses)for(let t=0;t<this.subaddresses.length;t++)this.subaddresses[t]=new o.Z(this.subaddresses[t])}toJson(){let t=Object.assign({},this);if(void 0!==t.balance&&(t.balance=t.balance.toString()),void 0!==t.unlockedBalance&&(t.unlockedBalance=t.unlockedBalance.toString()),void 0!==t.subaddresses)for(let e=0;e<t.subaddresses.length;e++)t.subaddresses[e]=t.subaddresses[e].toJson();return t}getIndex(){return this.index}setIndex(t){return this.index=t,this}getPrimaryAddress(){return this.primaryAddress}setPrimaryAddress(t){return this.primaryAddress=t,this}getBalance(){return this.balance}setBalance(t){return this.balance=t,this}getUnlockedBalance(){return this.unlockedBalance}setUnlockedBalance(t){return this.unlockedBalance=t,this}getLabel(){return this.label}setLabel(t){return this.label=t,this}getTag(){return this.tag}setTag(t){return this.tag=t,this}getSubaddresses(){return this.subaddresses}setSubaddresses(t){if(n()(void 0===t||Array.isArray(t),"Given subaddresses must be undefined or an array of subaddresses"),this.subaddresses=t,t)for(let e of t)e.setAccountIndex(this.index);return this}toString(t=0){let e="";if(e+=s.Z.kvLine("Index",this.getIndex(),t),e+=s.Z.kvLine("Primary address",this.getPrimaryAddress(),t),e+=s.Z.kvLine("Balance",this.getBalance(),t),e+=s.Z.kvLine("Unlocked balance",this.getUnlockedBalance(),t),e+=s.Z.kvLine("Label",this.getTag(),t),e+=s.Z.kvLine("Tag",this.getTag(),t),void 0!==this.getSubaddresses()){e+=s.Z.kvLine("Subaddresses","",t);for(let r=0;r<this.getSubaddresses().length;r++)e+=s.Z.kvLine(r+1,"",t+1),e+=this.getSubaddresses()[r].toString(t+2)+"\n"}return e.slice(0,e.length-1)}}},9613:(t,e,r)=>{"use strict";r.d(e,{Z:()=>i});class i{constructor(t){Object.assign(this,t)}getTag(){return this.tag}setTag(t){return this.tag=t,this}getLabel(){return this.label}setLabel(t){return this.label=t,this}getAccountIndices(){return this.accountIndices}setAccountIndices(t){return this.accountIndices=t,this}}},2582:(t,e,r)=>{"use strict";r.d(e,{Z:()=>i});class i{constructor(t){Object.assign(this,t)}toJson(){return Object.assign({},this)}getIndex(){return this.index}setIndex(t){return this.index=t,this}getAddress(){return this.address}setAddress(t){return this.address=t,this}getDescription(){return this.description}setDescription(t){return this.description=t,this}getPaymentId(){return this.paymentId}setPaymentId(t){return this.paymentId=t,this}}},791:(t,e,r)=>{"use strict";r.d(e,{Z:()=>i});class i{constructor(t){Object.assign(this,t)}getIsGood(){return this.isGood}setIsGood(t){return this.isGood=t,this}}},4659:(t,e,r)=>{"use strict";r.d(e,{Z:()=>n});var i=r(791);class n extends i.Z{constructor(t){super(t),void 0!==this.totalAmount&&"bigint"!=typeof this.totalAmount&&(this.totalAmount=BigInt(this.totalAmount)),void 0!==this.unconfirmedSpentAmount&&"bigint"!=typeof this.unconfirmedSpentAmount&&(this.unconfirmedSpentAmount=BigInt(this.unconfirmedSpentAmount))}toJson(){let t=Object.assign({},this);return void 0!==this.getTotalAmount()&&(t.totalAmount=this.getTotalAmount().toString()),void 0!==this.getUnconfirmedSpentAmount()&&(t.unconfirmedSpentAmount=this.getUnconfirmedSpentAmount().toString()),t}getTotalAmount(){return this.totalAmount}setTotalAmount(t){return this.totalAmount=t,this}getUnconfirmedSpentAmount(){return this.unconfirmedSpentAmount}setUnconfirmedSpentAmount(t){return this.unconfirmedSpentAmount=t,this}}},1976:(t,e,r)=>{"use strict";r.d(e,{Z:()=>n});var i=r(791);class n extends i.Z{constructor(t){super(t),void 0!==this.receivedAmount&&"bigint"!=typeof this.receivedAmount&&(this.receivedAmount=BigInt(this.receivedAmount))}toJson(){let t=Object.assign({},this);return void 0!==this.getReceivedAmount()&&(t.receivedAmount=this.getReceivedAmount().toString()),t}getInTxPool(){return this.inTxPool}setInTxPool(t){return this.inTxPool=t,this}getNumConfirmations(){return this.numConfirmations}setNumConfirmations(t){return this.numConfirmations=t,this}getReceivedAmount(){return this.receivedAmount}setReceivedAmount(t){return this.receivedAmount=t,this}}},540:(t,e,r)=>{"use strict";r.d(e,{Z:()=>s});var i=r(6048),n=r(2477);class s{constructor(t,e){if("string"==typeof t)this.setAddress(t),this.setAmount(e);else{if(void 0!==e)throw new Error("Amount parameter must be undefined when initializing a MoneroDestination from a MoneroDestination");Object.assign(this,t),this.amount&&"bigint"!=typeof this.amount&&(this.amount=BigInt(this.amount))}}getAddress(){return this.address}setAddress(t){return this.address=t,this}getAmount(){return this.amount}setAmount(t){if(void 0!==t&&"bigint"!=typeof t){if("number"==typeof t)throw new n.Z("Destination amount must be BigInt or string");try{t=BigInt(t)}catch(e){throw new n.Z("Invalid destination amount: "+t)}}return this.amount=t,this}copy(){return new s(this)}toJson(){let t=Object.assign({},this);return void 0!==this.getAmount()&&(t.amount=this.getAmount().toString()),t}toString(t=0){let e=i.Z.kvLine("Address",this.getAddress(),t);return e+=i.Z.kvLine("Amount",this.getAmount()?this.getAmount().toString():void 0,t),e.slice(0,e.length-1)}}},9467:(t,e,r)=>{"use strict";r.d(e,{Z:()=>a});var i=r(9282),n=r.n(i),s=r(6048),o=r(5445);class a extends o.Z{constructor(t){super(t)}getIsIncoming(){return!0}getSubaddressIndex(){return this.subaddressIndex}setSubaddressIndex(t){return this.subaddressIndex=t,this}getAddress(){return this.address}setAddress(t){return this.address=t,this}getNumSuggestedConfirmations(){return this.numSuggestedConfirmations}setNumSuggestedConfirmations(t){return this.numSuggestedConfirmations=t,this}copy(){return new a(this.toJson())}merge(t){return super.merge(t),n()(t instanceof a),this===t||(this.setSubaddressIndex(s.Z.reconcile(this.getSubaddressIndex(),t.getSubaddressIndex())),this.setAddress(s.Z.reconcile(this.getAddress(),t.getAddress())),this.setNumSuggestedConfirmations(s.Z.reconcile(this.getNumSuggestedConfirmations(),t.getNumSuggestedConfirmations(),{resolveMax:!1}))),this}toString(t=0){let e=super.toString(t)+"\n";return e+=s.Z.kvLine("Subaddress index",this.getSubaddressIndex(),t),e+=s.Z.kvLine("Address",this.getAddress(),t),e+=s.Z.kvLine("Num suggested confirmations",this.getNumSuggestedConfirmations(),t),e.slice(0,e.length-1)}setTx(t){return super.setTx(t),this}setAmount(t){return super.setAmount(t),this}setAccountIndex(t){return super.setAccountIndex(t),this}}},2990:(t,e,r)=>{"use strict";r.d(e,{Z:()=>i});class i{constructor(t){Object.assign(this,t)}toJson(){return Object.assign({},this)}getStandardAddress(){return this.standardAddress}setStandardAddress(t){return this.standardAddress=t,this}getPaymentId(){return this.paymentId}setPaymentId(t){return this.paymentId=t,this}getIntegratedAddress(){return this.integratedAddress}setIntegratedAddress(t){return this.integratedAddress=t,this}toString(){return this.integratedAddress}}},818:(t,e,r)=>{"use strict";r.d(e,{Z:()=>i});class i{constructor(t){Object.assign(this,t),void 0!==this.spentAmount&&"bigint"!=typeof this.spentAmount&&(this.spentAmount=BigInt(this.spentAmount)),void 0!==this.unspentAmount&&"bigint"!=typeof this.unspentAmount&&(this.unspentAmount=BigInt(this.unspentAmount))}toJson(){let t=Object.assign({},this);return void 0!==this.getSpentAmount()&&(t.spentAmount=this.getSpentAmount().toString()),void 0!==this.getUnspentAmount()&&(t.unspentAmount=this.getUnspentAmount().toString()),t}getHeight(){return this.height}setHeight(t){return this.height=t,this}getSpentAmount(){return this.spentAmount}setSpentAmount(t){return this.spentAmount=t,this}getUnspentAmount(){return this.unspentAmount}setUnspentAmount(t){return this.unspentAmount=t,this}}},6326:(t,e,r)=>{"use strict";r.d(e,{Z:()=>i});class i{constructor(t){Object.assign(this,t)}toJson(){return Object.assign({},this)}getIsGood(){return this.isGood}setIsGood(t){return this.isGood=t,this}getIsOld(){return this.isOld}setIsOld(t){return this.isOld=t,this}getSignatureType(){return this.signatureType}setSignatureType(t){return this.signatureType=t,this}getVersion(){return this.version}setVersion(t){return this.version=t,this}}},5471:(t,e,r)=>{"use strict";var i;r.d(e,{Z:()=>n}),function(t){t[t.SIGN_WITH_SPEND_KEY=0]="SIGN_WITH_SPEND_KEY",t[t.SIGN_WITH_VIEW_KEY=1]="SIGN_WITH_VIEW_KEY"}(i||(i={}));const n=i},8715:(t,e,r)=>{"use strict";r.d(e,{Z:()=>i});class i{constructor(t){Object.assign(this,t)}toJson(){return Object.assign({},this)}getIsMultisig(){return this.isMultisig}setIsMultisig(t){return this.isMultisig=t,this}getIsReady(){return this.isReady}setIsReady(t){return this.isReady=t,this}getThreshold(){return this.threshold}setThreshold(t){return this.threshold=t,this}getNumParticipants(){return this.numParticipants}setNumParticipants(t){return this.numParticipants=t,this}}},1787:(t,e,r)=>{"use strict";r.d(e,{Z:()=>i});class i{constructor(t){Object.assign(this,t)}toJson(){return Object.assign({},this)}getAddress(){return this.address}setAddress(t){return this.address=t,this}getMultisigHex(){return this.multisigHex}setMultisigHex(t){return this.multisigHex=t,this}}},4609:(t,e,r)=>{"use strict";r.d(e,{Z:()=>i});class i{constructor(t){Object.assign(this,t)}toJson(){return Object.assign({},this)}getSignedMultisigTxHex(){return this.signedMultisigTxHex}setSignedMultisigTxHex(t){return this.signedMultisigTxHex=t,this}getTxHashes(){return this.txHashes}setTxHashes(t){return this.txHashes=t,this}}},3497:(t,e,r)=>{"use strict";r.d(e,{Z:()=>u});var i=r(9282),n=r.n(i),s=r(6048),o=r(540),a=r(5445);class u extends a.Z{constructor(t){if(super(t),this.destinations){this.destinations=this.destinations.slice();for(let t=0;t<this.destinations.length;t++)this.destinations[t]=new o.Z(this.destinations[t])}}getIsIncoming(){return!1}getSubaddressIndices(){return this.subaddressIndices}setSubaddressIndices(t){return this.subaddressIndices=t,this}getAddresses(){return this.addresses}setAddresses(t){return this.addresses=t,this}getDestinations(){return this.destinations}setDestinations(t){return this.destinations=t,this}copy(){return new u(this)}toJson(){let t=Object.assign({},this,super.toJson());if(void 0!==this.getDestinations()){t.destinations=[];for(let e of this.getDestinations())t.destinations.push(e.toJson())}return delete t.tx,t}merge(t){return super.merge(t),n()(t instanceof u),this===t||(this.setSubaddressIndices(s.Z.reconcile(this.getSubaddressIndices(),t.getSubaddressIndices())),this.setAddresses(s.Z.reconcile(this.getAddresses(),t.getAddresses())),this.setDestinations(s.Z.reconcile(this.getDestinations(),t.getDestinations()))),this}toString(t=0){let e=super.toString(t)+"\n";if(e+=s.Z.kvLine("Subaddress indices",this.getSubaddressIndices(),t),e+=s.Z.kvLine("Addresses",this.getAddresses(),t),void 0!==this.getDestinations()){e+=s.Z.kvLine("Destinations","",t);for(let r=0;r<this.getDestinations().length;r++)e+=s.Z.kvLine(r+1,"",t+1),e+=this.getDestinations()[r].toString(t+2)+"\n"}return e.slice(0,e.length-1)}setTx(t){return super.setTx(t),this}setAmount(t){return super.setAmount(t),this}setAccountIndex(t){return super.setAccountIndex(t),this}}},9761:(t,e,r)=>{"use strict";r.d(e,{Z:()=>o});var i=r(2477),n=r(7514),s=r(4569);class o extends n.Z{constructor(t){if(super(t),void 0!==this.minAmount&&"bigint"!=typeof this.minAmount&&(this.minAmount=BigInt(this.minAmount)),void 0!==this.maxAmount&&"bigint"!=typeof this.maxAmount&&(this.maxAmount=BigInt(this.maxAmount)),!this.txQuery||this.txQuery instanceof s.Z||(this.txQuery=new s.Z(this.txQuery)),this.txQuery&&this.txQuery.setOutputQuery(this),void 0!==this.isLocked)throw new i.Z("isLocked must be part of tx query, not output query")}copy(){return new o(this)}toJson(){let t=Object.assign({},this,super.toJson());return void 0!==this.getMinAmount()&&(t.minAmount=this.getMinAmount().toString()),void 0!==this.getMaxAmount()&&(t.maxAmount=this.getMaxAmount().toString()),delete t.txQuery,t}getMinAmount(){return this.minAmount}setMinAmount(t){return this.minAmount=t,this}getMaxAmount(){return this.maxAmount}setMaxAmount(t){return this.maxAmount=t,this}getTxQuery(){return this.txQuery}setTxQuery(t){return this.txQuery=void 0===t?void 0:t instanceof s.Z?t:new s.Z(t),t&&(this.txQuery.outputQuery=this),this}getSubaddressIndices(){return this.subaddressIndices}setSubaddressIndices(t){return this.subaddressIndices=t,this}meetsCriteria(t,e=!0){if(!(t instanceof n.Z))throw new Error("Output not given to MoneroOutputQuery.meetsCriteria(output)");if(void 0!==this.getAccountIndex()&&this.getAccountIndex()!==t.getAccountIndex())return!1;if(void 0!==this.getSubaddressIndex()&&this.getSubaddressIndex()!==t.getSubaddressIndex())return!1;if(void 0!==this.getAmount()&&this.getAmount()!==t.getAmount())return!1;if(void 0!==this.getIsSpent()&&this.getIsSpent()!==t.getIsSpent())return!1;if(void 0!==this.getIsFrozen()&&this.getIsFrozen()!==t.getIsFrozen())return!1;if(void 0!==this.getKeyImage()){if(void 0===t.getKeyImage())return!1;if(void 0!==this.getKeyImage().getHex()&&this.getKeyImage().getHex()!==t.getKeyImage().getHex())return!1;if(void 0!==this.getKeyImage().getSignature()&&this.getKeyImage().getSignature()!==t.getKeyImage().getSignature())return!1}return!(void 0!==this.getSubaddressIndices()&&!this.getSubaddressIndices().includes(t.getSubaddressIndex())||this.getTxQuery()&&!this.getTxQuery().meetsCriteria(t.getTx(),!1)||void 0!==this.getMinAmount()&&(void 0===t.getAmount()||t.getAmount()<this.getMinAmount())||void 0!==this.getMaxAmount()&&(void 0===t.getAmount()||t.getAmount()>this.getMaxAmount()))}setTx(t){return super.setTx(t),this}setAccountIndex(t){return super.setAccountIndex(t),this}setSubaddressIndex(t){return super.setSubaddressIndex(t),this}setIsSpent(t){return super.setIsSpent(t),this}setIsFrozen(t){return super.setIsFrozen(t),this}setKeyImage(t){return super.setKeyImage(t),this}setAmount(t){return super.setAmount(t),this}setIndex(t){return super.setIndex(t),this}setRingOutputIndices(t){return super.setRingOutputIndices(t),this}setStealthPublicKey(t){return super.setStealthPublicKey(t),this}}},7514:(t,e,r)=>{"use strict";r.d(e,{Z:()=>h});var i=r(9282),n=r.n(i),s=r(6048),o=r(2477),a=r(4314),u=r(603);class h extends a.Z{constructor(t){super(t)}getTx(){return super.getTx()}setTx(t){if(void 0!==t&&!(t instanceof u.Z))throw new o.Z("Wallet output's transaction must be of type MoneroTxWallet");return super.setTx(t),this}getAccountIndex(){return this.accountIndex}setAccountIndex(t){return this.accountIndex=t,this}getSubaddressIndex(){return this.subaddressIndex}setSubaddressIndex(t){return this.subaddressIndex=t,this}getIsSpent(){return this.isSpent}setIsSpent(t){return this.isSpent=t,this}getIsFrozen(){return this.isFrozen}setIsFrozen(t){return this.isFrozen=t,this}getIsLocked(){if(void 0!==this.getTx())return this.getTx().getIsLocked()}copy(){return new h(this.toJson())}toJson(){let t=Object.assign({},this,super.toJson());return delete t.tx,t}merge(t){if(n()(t instanceof h),this!==t)return super.merge(t),this.setAccountIndex(s.Z.reconcile(this.getAccountIndex(),t.getAccountIndex())),this.setSubaddressIndex(s.Z.reconcile(this.getSubaddressIndex(),t.getSubaddressIndex())),this.setIsSpent(s.Z.reconcile(this.getIsSpent(),t.getIsSpent(),{resolveTrue:!0})),this.setIsFrozen(s.Z.reconcile(this.getIsFrozen(),t.getIsFrozen())),this}toString(t=0){let e=super.toString(t)+"\n";return e+=s.Z.kvLine("Account index",this.getAccountIndex(),t),e+=s.Z.kvLine("Subaddress index",this.getSubaddressIndex(),t),e+=s.Z.kvLine("Is spent",this.getIsSpent(),t),e+=s.Z.kvLine("Is frozen",this.getIsFrozen(),t),e.slice(0,e.length-1)}setKeyImage(t){return super.setKeyImage(t),this}setAmount(t){return super.setAmount(t),this}setIndex(t){return super.setIndex(t),this}setRingOutputIndices(t){return super.setRingOutputIndices(t),this}setStealthPublicKey(t){return super.setStealthPublicKey(t),this}}},2122:(t,e,r)=>{"use strict";r.d(e,{Z:()=>n});var i=r(6048);class n{constructor(t){Object.assign(this,t),void 0!==this.balance&&"bigint"!=typeof this.balance&&(this.balance=BigInt(this.balance)),void 0!==this.unlockedBalance&&"bigint"!=typeof this.unlockedBalance&&(this.unlockedBalance=BigInt(this.unlockedBalance))}toJson(){let t=Object.assign({},this);return void 0!==t.balance&&(t.balance=t.balance.toString()),void 0!==t.unlockedBalance&&(t.unlockedBalance=t.unlockedBalance.toString()),t}getAccountIndex(){return this.accountIndex}setAccountIndex(t){return this.accountIndex=t,this}getIndex(){return this.index}setIndex(t){return this.index=t,this}getAddress(){return this.address}setAddress(t){return this.address=t,this}getLabel(){return this.label}setLabel(t){return this.label=t,this}getBalance(){return this.balance}setBalance(t){return this.balance=t,this}getUnlockedBalance(){return this.unlockedBalance}setUnlockedBalance(t){return this.unlockedBalance=t,this}getNumUnspentOutputs(){return this.numUnspentOutputs}setNumUnspentOutputs(t){return this.numUnspentOutputs=t,this}getIsUsed(){return this.isUsed}setIsUsed(t){return this.isUsed=t,this}getNumBlocksToUnlock(){return this.numBlocksToUnlock}setNumBlocksToUnlock(t){return this.numBlocksToUnlock=t,this}toString(t=0){let e="";return e+=i.Z.kvLine("Account index",this.getAccountIndex(),t),e+=i.Z.kvLine("Subaddress index",this.getIndex(),t),e+=i.Z.kvLine("Address",this.getAddress(),t),e+=i.Z.kvLine("Label",this.getLabel(),t),e+=i.Z.kvLine("Balance",this.getBalance(),t),e+=i.Z.kvLine("Unlocked balance",this.getUnlockedBalance(),t),e+=i.Z.kvLine("Num unspent outputs",this.getNumUnspentOutputs(),t),e+=i.Z.kvLine("Is used",this.getIsUsed(),t),e+=i.Z.kvLine("Num blocks to unlock",this.getNumBlocksToUnlock(),t),e.slice(0,e.length-1)}}},8792:(t,e,r)=>{"use strict";r.d(e,{Z:()=>i});class i{constructor(t,e){this.setNumBlocksFetched(t),this.setReceivedMoney(e)}getNumBlocksFetched(){return this.numBlocksFetched}setNumBlocksFetched(t){return this.numBlocksFetched=t,this}getReceivedMoney(){return this.receivedMoney}setReceivedMoney(t){return this.receivedMoney=t,this}}},5445:(t,e,r)=>{"use strict";r.d(e,{Z:()=>a});var i=r(9282),n=r.n(i),s=r(6048),o=r(2477);class a{constructor(t){Object.assign(this,t),void 0!==this.amount&&"bigint"!=typeof this.amount&&(this.amount=BigInt(this.amount)),this.validate()}copy(){return new a(this)}toJson(){let t=Object.assign({},this);return void 0!==this.getAmount()&&(t.amount=this.getAmount().toString()),delete t.tx,t}getTx(){return this.tx}setTx(t){return this.tx=t,this}getIsOutgoing(){let t=this.getIsIncoming();return n()("boolean"==typeof t),!t}getIsIncoming(){throw new Error("Subclass must implement")}getAccountIndex(){return this.accountIndex}setAccountIndex(t){return this.accountIndex=t,this.validate(),this}getAmount(){return this.amount}setAmount(t){return this.amount=t,this}merge(t){return n()(t instanceof a),this===t?this:this.getTx()!==t.getTx()?(this.getTx().merge(t.getTx()),this):(this.setAccountIndex(s.Z.reconcile(this.getAccountIndex(),t.getAccountIndex())),void 0===this.getAmount()||void 0===t.getAmount()||this.getAmount()===t.getAmount()||0n!==this.getAmount()&&0n!==t.getAmount()?this.setAmount(s.Z.reconcile(this.getAmount(),t.getAmount())):console.warn("monero-project returning transfers with 0 amount/numSuggestedConfirmations"),this)}toString(t=0){let e="";return e+=s.Z.kvLine("Is incoming",this.getIsIncoming(),t),e+=s.Z.kvLine("Account index",this.getAccountIndex(),t),e+=s.Z.kvLine("Amount",this.getAmount()?this.getAmount().toString():void 0,t),""===e?e:e.slice(0,e.length-1)}validate(){if(void 0!==this.getAccountIndex()&&this.getAccountIndex()<0)throw new o.Z("Account index must be >= 0")}}},4744:(t,e,r)=>{"use strict";r.d(e,{Z:()=>u});var i=r(9467),n=r(3497),s=r(5445),o=r(4569),a=r(2477);class u extends s.Z{constructor(t){super(t),!this.txQuery||this.txQuery instanceof o.Z||(this.txQuery=new o.Z(this.txQuery)),this.txQuery&&this.txQuery.setTransferQuery(this),void 0!==this.isOutgoing&&(this.isIncoming=!this.isOutgoing),this.validate()}copy(){return new u(this)}toJson(){let t=Object.assign({},this,super.toJson());return delete t.txQuery,t}getTxQuery(){return this.txQuery}setTxQuery(t){return this.txQuery=t,t&&t.setTransferQuery(this),this}getIsIncoming(){return this.isIncoming}setIsIncoming(t){return this.isIncoming=t,this}getIsOutgoing(){return void 0===this.isIncoming?void 0:!this.isIncoming}setIsOutgoing(t){return this.isIncoming=void 0===t?void 0:!t,this}getAddress(){return this.address}setAddress(t){return this.address=t,this}getAddresses(){return this.addresses}setAddresses(t){return this.addresses=t,this}getSubaddressIndex(){return this.subaddressIndex}setSubaddressIndex(t){return this.subaddressIndex=t,this.validate(),this}getSubaddressIndices(){return this.subaddressIndices}setSubaddressIndices(t){return this.subaddressIndices=t,this.validate(),this}getDestinations(){return this.destinations}setDestinations(t){return this.destinations=t,this}getHasDestinations(){return this.hasDestinations}setHasDestinations(t){return this.hasDestinations=t,this}setIsLocked(t){return void 0===this.txQuery&&(this.txQuery=new o.Z),this.getTxQuery().setIsLocked(t),this}meetsCriteria(t,e=!0){if(!(t instanceof s.Z))throw new Error("Transfer not given to MoneroTransferQuery.meetsCriteria(transfer)");if(void 0!==this.getIsIncoming()&&this.getIsIncoming()!==t.getIsIncoming())return!1;if(void 0!==this.getIsOutgoing()&&this.getIsOutgoing()!==t.getIsOutgoing())return!1;if(void 0!==this.getAmount()&&this.getAmount()!==t.getAmount())return!1;if(void 0!==this.getAccountIndex()&&this.getAccountIndex()!==t.getAccountIndex())return!1;if(t instanceof i.Z){if(void 0!==this.getHasDestinations())return!1;if(void 0!==this.getAddress()&&this.getAddress()!==t.getAddress())return!1;if(void 0!==this.getAddresses()&&!this.getAddresses().includes(t.getAddress()))return!1;if(void 0!==this.getSubaddressIndex()&&this.getSubaddressIndex()!==t.getSubaddressIndex())return!1;if(void 0!==this.getSubaddressIndices()&&!this.getSubaddressIndices().includes(t.getSubaddressIndex()))return!1}else{if(!(t instanceof n.Z))throw new Error("Transfer must be MoneroIncomingTransfer or MoneroOutgoingTransfer");if(void 0!==this.getAddress()&&(void 0===t.getAddresses()||!t.getAddresses().includes(this.getAddress())))return!1;if(void 0!==this.getAddresses()){if(!t.getAddresses())return!1;if(!this.getAddresses().some((e=>t.getAddresses().includes(e))))return!1}if(void 0!==this.getSubaddressIndex()&&(void 0===t.getSubaddressIndices()||!t.getSubaddressIndices().includes(this.getSubaddressIndex())))return!1;if(void 0!==this.getSubaddressIndices()){if(!t.getSubaddressIndices())return!1;if(!this.getSubaddressIndices().some((e=>t.getSubaddressIndices().includes(e))))return!1}if(void 0!==this.getHasDestinations()){if(this.getHasDestinations()&&void 0===t.getDestinations())return!1;if(!this.getHasDestinations()&&void 0!==t.getDestinations())return!1}}return!(e&&void 0!==this.getTxQuery()&&!this.getTxQuery().meetsCriteria(t.getTx()))}validate(){if(void 0!==this.getSubaddressIndex()&&this.getSubaddressIndex()<0)throw new a.Z("Subaddress index must be >= 0");if(void 0!==this.getSubaddressIndices())for(let t of this.getSubaddressIndices())if(t<0)throw new a.Z("Subaddress indices must be >= 0")}setTx(t){return super.setTx(t),this}setAmount(t){return super.setAmount(t),this}setAccountIndex(t){return super.setAccountIndex(t),this}}},2245:(t,e,r)=>{"use strict";r.d(e,{Z:()=>a});var i=r(9282),n=r.n(i),s=r(540),o=r(2477);class a{constructor(t){Object.assign(this,t),void 0!==this.amount&&"bigint"!=typeof this.amount&&(this.amount=BigInt(this.amount)),void 0!==this.fee&&"bigint"!=typeof this.fee&&(this.fee=BigInt(this.fee)),void 0!==this.belowAmount&&"bigint"!=typeof this.belowAmount&&(this.belowAmount=BigInt(this.belowAmount)),this.destinations&&(n()(void 0===this.address&&void 0===this.amount,"Tx configuration may specify destinations or an address/amount but not both"),this.setDestinations(this.destinations.map((t=>new s.Z(t))))),(this.address||this.amount)&&(n()(!this.destinations,"Tx configuration may specify destinations or an address/amount but not both"),this.setAddress(this.address),this.setAmount(this.amount),delete this.address,delete this.amount),void 0!==this.subaddressIndex&&(this.setSubaddressIndices([this.subaddressIndex]),delete this.subaddressIndex)}copy(){return new a(this)}toJson(){let t=Object.assign({},this);if(void 0!==this.getDestinations()){t.destinations=[];for(let e of this.getDestinations())t.destinations.push(e.toJson())}return this.getFee()&&(t.fee=this.getFee().toString()),this.getBelowAmount()&&(t.belowAmount=this.getBelowAmount().toString()),t}setAddress(t){if(void 0!==this.destinations&&this.destinations.length>1)throw new o.Z("Cannot set address because MoneroTxConfig already has multiple destinations");return void 0===this.destinations||0===this.destinations.length?this.addDestination(new s.Z(t)):this.destinations[0].setAddress(t),this}getAddress(){if(void 0===this.destinations||1!==this.destinations.length)throw new o.Z("Cannot get address because MoneroTxConfig does not have exactly one destination");return this.destinations[0].getAddress()}setAmount(t){if(void 0!==t&&"bigint"!=typeof this.amount){if("number"==typeof t)throw new o.Z("Destination amount must be bigint or string");try{t=BigInt(t)}catch(e){throw new o.Z("Invalid destination amount: "+t)}}if(void 0!==this.destinations&&this.destinations.length>1)throw new o.Z("Cannot set amount because MoneroTxConfig already has multiple destinations");return void 0===this.destinations||0===this.destinations.length?this.addDestination(new s.Z(void 0,t)):this.destinations[0].setAmount(t),this}getAmount(){if(void 0===this.destinations||1!==this.destinations.length)throw new o.Z("Cannot get amount because MoneroTxConfig does not have exactly one destination");return this.destinations[0].getAmount()}addDestination(t,e){return"string"==typeof t?this.addDestination(new s.Z(t,e)):(n()(t instanceof s.Z),void 0===this.destinations&&(this.destinations=[]),this.destinations.push(t),this)}getDestinations(){return this.destinations}setDestinations(t){return arguments.length>1&&(t=Array.from(arguments)),this.destinations=t,this}setDestination(t){return this.setDestinations(t?[t]:void 0)}getSubtractFeeFrom(){return this.subtractFeeFrom}setSubtractFeeFrom(t){return arguments.length>1&&(t=Array.from(arguments)),this.subtractFeeFrom=t,this}getPaymentId(){return this.paymentId}setPaymentId(t){return this.paymentId=t,this}getPriority(){return this.priority}setPriority(t){return this.priority=t,this}getFee(){return this.fee}setFee(t){return this.fee=t,this}getAccountIndex(){return this.accountIndex}setAccountIndex(t){return this.accountIndex=t,this}setSubaddressIndex(t){return this.setSubaddressIndices([t]),this}getSubaddressIndices(){return this.subaddressIndices}setSubaddressIndices(t){return arguments.length>1&&(t=Array.from(arguments)),this.subaddressIndices=t,this}getRelay(){return this.relay}setRelay(t){return this.relay=t,this}getCanSplit(){return this.canSplit}setCanSplit(t){return this.canSplit=t,this}getNote(){return this.note}setNote(t){return this.note=t,this}getRecipientName(){return this.recipientName}setRecipientName(t){return this.recipientName=t,this}getBelowAmount(){return this.belowAmount}setBelowAmount(t){return this.belowAmount=t,this}getSweepEachSubaddress(){return this.sweepEachSubaddress}setSweepEachSubaddress(t){return this.sweepEachSubaddress=t,this}getKeyImage(){return this.keyImage}setKeyImage(t){return this.keyImage=t,this}}},4569:(t,e,r)=>{"use strict";r.d(e,{Z:()=>u});var i=r(9282),n=r.n(i),s=r(9761),o=r(4744),a=r(603);class u extends a.Z{constructor(t){super(t),this.transferQuery&&(this.transferQuery=new o.Z(this.transferQuery)),this.inputQuery&&(this.inputQuery=new s.Z(this.inputQuery)),this.outputQuery&&(this.outputQuery=new s.Z(this.outputQuery)),this.transferQuery&&this.getTransferQuery().setTxQuery(this),this.inputQuery&&this.getInputQuery().setTxQuery(this),this.outputQuery&&this.getOutputQuery().setTxQuery(this),this.hash&&(this.setHashes([this.hash]),delete this.hash)}copy(){return new u(this)}toJson(){let t=Object.assign({},this,super.toJson());return void 0!==this.getTransferQuery()&&(t.transferQuery=this.getTransferQuery().toJson()),void 0!==this.getInputQuery()&&(t.inputQuery=this.getInputQuery().toJson()),void 0!==this.getOutputQuery()&&(t.outputQuery=this.getOutputQuery().toJson()),delete t.block,t}getIsIncoming(){return this.isIncoming}setIsIncoming(t){return this.isIncoming=t,this}getIsOutgoing(){return this.isOutgoing}setIsOutgoing(t){return this.isOutgoing=t,this}getHashes(){return this.hashes}setHashes(t){return this.hashes=t,this}setHash(t){return void 0===t?this.setHashes(void 0):(n()("string"==typeof t),this.setHashes([t]))}getHasPaymentId(){return this.hasPaymentId}setHasPaymentId(t){return this.hasPaymentId=t,this}getPaymentIds(){return this.paymentIds}setPaymentIds(t){return this.paymentIds=t,this}setPaymentId(t){return void 0===t?this.setPaymentIds(void 0):(n()("string"==typeof t),this.setPaymentIds([t]))}getHeight(){return this.height}setHeight(t){return this.height=t,this}getMinHeight(){return this.minHeight}setMinHeight(t){return this.minHeight=t,this}getMaxHeight(){return this.maxHeight}setMaxHeight(t){return this.maxHeight=t,this}getIncludeOutputs(){return this.includeOutputs}setIncludeOutputs(t){return this.includeOutputs=t,this}getTransferQuery(){return this.transferQuery}setTransferQuery(t){return this.transferQuery=void 0===t?void 0:t instanceof o.Z?t:new o.Z(t),t&&(this.transferQuery.txQuery=this),this}getInputQuery(){return this.inputQuery}setInputQuery(t){return this.inputQuery=t,t&&(t.txQuery=this),this}getOutputQuery(){return this.outputQuery}setOutputQuery(t){return this.outputQuery=void 0===t?void 0:t instanceof s.Z?t:new s.Z(t),t&&(this.outputQuery.txQuery=this),this}meetsCriteria(t,e){if(!(t instanceof a.Z))throw new Error("Tx not given to MoneroTxQuery.meetsCriteria(tx)");if(void 0===e&&(e=!0),void 0!==this.getHash()&&this.getHash()!==t.getHash())return!1;if(void 0!==this.getPaymentId()&&this.getPaymentId()!==t.getPaymentId())return!1;if(void 0!==this.getIsConfirmed()&&this.getIsConfirmed()!==t.getIsConfirmed())return!1;if(void 0!==this.getInTxPool()&&this.getInTxPool()!==t.getInTxPool())return!1;if(void 0!==this.getRelay()&&this.getRelay()!==t.getRelay())return!1;if(void 0!==this.getIsRelayed()&&this.getIsRelayed()!==t.getIsRelayed())return!1;if(void 0!==this.getIsFailed()&&this.getIsFailed()!==t.getIsFailed())return!1;if(void 0!==this.getIsMinerTx()&&this.getIsMinerTx()!==t.getIsMinerTx())return!1;if(void 0!==this.getIsLocked()&&this.getIsLocked()!==t.getIsLocked())return!1;if(void 0!==this.getHasPaymentId()){if(this.getHasPaymentId()&&void 0===t.getPaymentId())return!1;if(!this.getHasPaymentId()&&void 0!==t.getPaymentId())return!1}if(void 0!==this.getIsIncoming()){if(this.getIsIncoming()&&!t.getIsIncoming())return!1;if(!this.getIsIncoming()&&t.getIsIncoming())return!1}if(void 0!==this.getIsOutgoing()){if(this.getIsOutgoing()&&!t.getIsOutgoing())return!1;if(!this.getIsOutgoing()&&t.getIsOutgoing())return!1}let r=void 0===t.getBlock()?void 0:t.getBlock().getHeight();if(void 0!==this.getHashes()&&!this.getHashes().includes(t.getHash()))return!1;if(void 0!==this.getPaymentIds()&&!this.getPaymentIds().includes(t.getPaymentId()))return!1;if(void 0!==this.getHeight()&&(void 0===r||r!==this.getHeight()))return!1;if(void 0!==this.getMinHeight()&&void 0!==r&&r<this.getMinHeight())return!1;if(void 0!==this.getMaxHeight()&&(void 0===r||r>this.getMaxHeight()))return!1;if(!e)return!0;if(void 0!==this.getTransferQuery()){let e=!1;if(t.getOutgoingTransfer()&&this.getTransferQuery().meetsCriteria(t.getOutgoingTransfer(),!1))e=!0;else if(t.getIncomingTransfers())for(let r of t.getIncomingTransfers())if(this.getTransferQuery().meetsCriteria(r,!1)){e=!0;break}if(!e)return!1}if(void 0!==this.getInputQuery()){if(void 0===t.getInputs()||0===t.getInputs().length)return!1;let e=!1;for(let r of t.getInputsWallet())if(this.getInputQuery().meetsCriteria(r,!1)){e=!0;break}if(!e)return!1}if(void 0!==this.getOutputQuery()){if(void 0===t.getOutputs()||0===t.getOutputs().length)return!1;let e=!1;for(let r of t.getOutputsWallet())if(this.getOutputQuery().meetsCriteria(r,!1)){e=!0;break}if(!e)return!1}return!0}setIncomingTransfers(t){return super.setIncomingTransfers(t),this}setOutgoingTransfer(t){return super.setOutgoingTransfer(t),this}setOutputs(t){return super.setOutputs(t),this}setNote(t){return super.setNote(t),this}setIsLocked(t){return super.setIsLocked(t),this}setBlock(t){return super.setBlock(t),this}setVersion(t){return super.setVersion(t),this}setIsMinerTx(t){return super.setIsMinerTx(t),this}setFee(t){return super.setFee(t),this}setRingSize(t){return super.setRingSize(t),this}setRelay(t){return super.setRelay(t),this}setIsRelayed(t){return super.setIsRelayed(t),this}setIsConfirmed(t){return super.setIsConfirmed(t),this}setInTxPool(t){return super.setInTxPool(t),this}setNumConfirmations(t){return super.setNumConfirmations(t),this}setUnlockTime(t){return super.setUnlockTime(t),this}setLastRelayedTimestamp(t){return super.setLastRelayedTimestamp(t),this}setReceivedTimestamp(t){return super.setReceivedTimestamp(t),this}setIsDoubleSpendSeen(t){return super.setIsDoubleSpendSeen(t),this}setKey(t){return super.setKey(t),this}setFullHex(t){return super.setFullHex(t),this}setPrunedHex(t){return super.setPrunedHex(t),this}setPrunableHex(t){return super.setPrunableHex(t),this}setPrunableHash(t){return super.setPrunableHash(t),this}setSize(t){return super.setSize(t),this}setWeight(t){return super.setWeight(t),this}setInputs(t){return super.setInputs(t),this}setOutputIndices(t){return super.setOutputIndices(t),this}setMetadata(t){return super.setMetadata(t),this}setTxSet(t){return super.setTxSet(t),this}setExtra(t){return super.setExtra(t),this}setRctSignatures(t){return super.setRctSignatures(t),this}setRctSigPrunable(t){return super.setRctSigPrunable(t),this}setIsKeptByBlock(t){return super.setIsKeptByBlock(t),this}setIsFailed(t){return super.setIsFailed(t),this}setLastFailedHeight(t){return super.setLastFailedHeight(t),this}setLastFailedHash(t){return super.setLastFailedHash(t),this}setMaxUsedBlockHeight(t){return super.setMaxUsedBlockHeight(t),this}setMaxUsedBlockHash(t){return super.setMaxUsedBlockHash(t),this}setSignatures(t){return super.setSignatures(t),this}}},9702:(t,e,r)=>{"use strict";r.d(e,{Z:()=>u});var i=r(9282),n=r.n(i),s=r(6048),o=r(603),a=r(3547);class u{constructor(t){if(Object.assign(this,t),this.txs)for(let t=0;t<this.txs.length;t++)this.txs[t]=new o.Z(this.txs[t]),this.txs[t].setTxSet(this)}toJson(){let t=Object.assign({},this);if(void 0!==this.getTxs()){t.txs=[];for(let e of this.getTxs())t.txs.push(e.toJson())}return t}getTxs(){return this.txs}setTxs(t){return this.txs=t,this}getMultisigTxHex(){return this.multisigTxHex}setMultisigTxHex(t){return this.multisigTxHex=t,this}getUnsignedTxHex(){return this.unsignedTxHex}setUnsignedTxHex(t){return this.unsignedTxHex=t,this}getSignedTxHex(){return this.signedTxHex}setSignedTxHex(t){return this.signedTxHex=t,this}merge(t){if(n()(t instanceof u),this===t)return this;if(this.setMultisigTxHex(s.Z.reconcile(this.getMultisigTxHex(),t.getMultisigTxHex())),this.setUnsignedTxHex(s.Z.reconcile(this.getUnsignedTxHex(),t.getUnsignedTxHex())),this.setSignedTxHex(s.Z.reconcile(this.getSignedTxHex(),t.getSignedTxHex())),void 0!==t.getTxs())for(let e of t.getTxs())e.setTxSet(this),a.Z.mergeTx(this.getTxs(),e);return this}toString(t=0){let e="";if(e+=s.Z.kvLine("Multisig tx hex: ",this.getMultisigTxHex(),t),e+=s.Z.kvLine("Unsigned tx hex: ",this.getUnsignedTxHex(),t),e+=s.Z.kvLine("Signed tx hex: ",this.getSignedTxHex(),t),void 0!==this.getTxs()){e+=s.Z.kvLine("Txs","",t);for(let r of this.getTxs())e+=r.toString(t+1)+"\n"}return e}}},603:(t,e,r)=>{"use strict";r.d(e,{Z:()=>d});var i=r(9282),n=r.n(i),s=r(6048),o=r(2477),a=r(9467),u=r(3497),h=r(7514),c=r(2318),l=r(9702);class d extends c.Z{constructor(t){if(super(t),this.setTxSet(this.getTxSet()),this.incomingTransfers){this.incomingTransfers=this.incomingTransfers.slice();for(let t=0;t<this.incomingTransfers.length;t++)this.incomingTransfers[t]=new a.Z(this.incomingTransfers[t]).setTx(this)}if(this.outgoingTransfer&&(this.outgoingTransfer=new u.Z(this.outgoingTransfer).setTx(this)),this.inputs){this.inputs=this.inputs.slice();for(let t=0;t<this.inputs.length;t++)this.inputs[t]=new h.Z(this.inputs[t]).setTx(this)}if(this.outputs){this.outputs=this.outputs.slice();for(let t=0;t<this.outputs.length;t++)this.outputs[t]=new h.Z(this.outputs[t]).setTx(this)}void 0!==this.inputSum&&"bigint"!=typeof this.inputSum&&(this.inputSum=BigInt(this.inputSum)),void 0!==this.outputSum&&"bigint"!=typeof this.outputSum&&(this.outputSum=BigInt(this.outputSum)),void 0!==this.changeAmount&&"bigint"!=typeof this.changeAmount&&(this.changeAmount=BigInt(this.changeAmount))}toJson(){let t=Object.assign({},this,super.toJson());if(void 0!==this.getIncomingTransfers()){t.incomingTransfers=[];for(let e of this.getIncomingTransfers())t.incomingTransfers.push(e.toJson())}return void 0!==this.getOutgoingTransfer()&&(t.outgoingTransfer=this.getOutgoingTransfer().toJson()),void 0!==this.getInputSum()&&(t.inputSum=this.getInputSum().toString()),void 0!==this.getOutputSum()&&(t.outputSum=this.getOutputSum().toString()),void 0!==this.getChangeAmount()&&(t.changeAmount=this.getChangeAmount().toString()),delete t.block,delete t.txSet,t}getTxSet(){return this.txSet}setTxSet(t){return this.txSet=t,this}getIsIncoming(){return this.isIncoming}setIsIncoming(t){return this.isIncoming=t,this}getIsOutgoing(){return this.isOutgoing}setIsOutgoing(t){return this.isOutgoing=t,this}getIncomingAmount(){if(void 0===this.getIncomingTransfers())return;let t=0n;for(let e of this.getIncomingTransfers())t+=e.getAmount();return t}getOutgoingAmount(){return this.getOutgoingTransfer()?this.getOutgoingTransfer().getAmount():void 0}getTransfers(t){let e=[];if(!this.getOutgoingTransfer()||t&&!t.meetsCriteria(this.getOutgoingTransfer())||e.push(this.getOutgoingTransfer()),void 0!==this.getIncomingTransfers())for(let r of this.getIncomingTransfers())t&&!t.meetsCriteria(r)||e.push(r);return e}filterTransfers(t){let e=[];if(!this.getOutgoingTransfer()||t&&!t.meetsCriteria(this.getOutgoingTransfer())?this.setOutgoingTransfer(void 0):e.push(this.getOutgoingTransfer()),void 0!==this.getIncomingTransfers()){let r=[];for(let i of this.getIncomingTransfers())t.meetsCriteria(i)?e.push(i):r.push(i);this.setIncomingTransfers(this.getIncomingTransfers().filter((function(t){return!r.includes(t)}))),0===this.getIncomingTransfers().length&&this.setIncomingTransfers(void 0)}return e}getIncomingTransfers(){return this.incomingTransfers}setIncomingTransfers(t){return this.incomingTransfers=t,this}getOutgoingTransfer(){return this.outgoingTransfer}setOutgoingTransfer(t){return this.outgoingTransfer=t,this}getInputsWallet(t){let e=[];for(let r of super.getInputs())t&&!t.meetsCriteria(r)||e.push(r);return e}setInputsWallet(t){if(t)for(let e of t)if(!(e instanceof h.Z))throw new o.Z("Wallet transaction inputs must be of type MoneroOutputWallet");return super.setInputs(t),this}getOutputsWallet(t){let e=[];for(let r of super.getOutputs())t&&!t.meetsCriteria(r)||e.push(r);return e}setOutputsWallet(t){if(t)for(let e of t)if(!(e instanceof h.Z))throw new o.Z("Wallet transaction outputs must be of type MoneroOutputWallet");return super.setOutputs(t),this}filterOutputs(t){let e=[];if(super.getOutputs()){let r=[];for(let i of super.getOutputs())!t||t.meetsCriteria(i)?e.push(i):r.push(i);this.setOutputs(super.getOutputs().filter((function(t){return!r.includes(t)}))),0===this.getOutputs().length&&this.setOutputs(void 0)}return e}getNote(){return this.note}setNote(t){return this.note=t,this}getIsLocked(){return this.isLocked}setIsLocked(t){return this.isLocked=t,this}getInputSum(){return this.inputSum}setInputSum(t){return this.inputSum=t,this}getOutputSum(){return this.outputSum}setOutputSum(t){return this.outputSum=t,this}getChangeAddress(){return this.changeAddress}setChangeAddress(t){return this.changeAddress=t,this}getChangeAmount(){return this.changeAmount}setChangeAmount(t){return this.changeAmount=t,this}getNumDummyOutputs(){return this.numDummyOutputs}setNumDummyOutputs(t){return this.numDummyOutputs=t,this}getExtraHex(){return this.extraHex}setExtraHex(t){return this.extraHex=t,this}copy(){return new d(this)}merge(t){if(n()(t instanceof d),this===t)return this;if(super.merge(t),this.getTxSet()!==t.getTxSet())return null==this.getTxSet()&&this.setTxSet((new l.Z).setTxs([this])),void 0===t.getTxSet()&&t.setTxSet((new l.Z).setTxs([t])),this.getTxSet().merge(t.getTxSet()),this;if(t.getIncomingTransfers()){void 0===this.getIncomingTransfers()&&this.setIncomingTransfers([]);for(let e of t.getIncomingTransfers())e.setTx(this),d.mergeIncomingTransfer(this.getIncomingTransfers(),e)}return t.getOutgoingTransfer()&&(t.getOutgoingTransfer().setTx(this),void 0===this.getOutgoingTransfer()?this.setOutgoingTransfer(t.getOutgoingTransfer()):this.getOutgoingTransfer().merge(t.getOutgoingTransfer())),this.setIsIncoming(s.Z.reconcile(this.getIsIncoming(),t.getIsIncoming(),{resolveTrue:!0})),this.setIsOutgoing(s.Z.reconcile(this.getIsOutgoing(),t.getIsOutgoing())),this.setNote(s.Z.reconcile(this.getNote(),t.getNote())),this.setIsLocked(s.Z.reconcile(this.getIsLocked(),t.getIsLocked(),{resolveTrue:!1})),this.setInputSum(s.Z.reconcile(this.getInputSum(),t.getInputSum())),this.setOutputSum(s.Z.reconcile(this.getOutputSum(),t.getOutputSum())),this.setChangeAddress(s.Z.reconcile(this.getChangeAddress(),t.getChangeAddress())),this.setChangeAmount(s.Z.reconcile(this.getChangeAmount(),t.getChangeAmount())),this.setNumDummyOutputs(s.Z.reconcile(this.getNumDummyOutputs(),t.getNumDummyOutputs())),this.setExtraHex(s.Z.reconcile(this.getExtraHex(),t.getExtraHex())),this}toString(t=0,e=!1){let r="";if(e)return r+=this.getHash()+", ",r+=(this.getIsConfirmed()?this.getBlock().getTimestamp():this.getReceivedTimestamp())+", ",r+=this.getIsConfirmed()+", ",r+=(this.getOutgoingAmount()?this.getOutgoingAmount().toString():"")+", ",r+=this.getIncomingAmount()?this.getIncomingAmount().toString():"",r;if(r+=super.toString(t)+"\n",r+=s.Z.kvLine("Is incoming",this.getIsIncoming(),t),r+=s.Z.kvLine("Incoming amount",this.getIncomingAmount(),t),void 0!==this.getIncomingTransfers()){r+=s.Z.kvLine("Incoming transfers","",t);for(let e=0;e<this.getIncomingTransfers().length;e++)r+=s.Z.kvLine(e+1,"",t+1),r+=this.getIncomingTransfers()[e].toString(t+2)+"\n"}return r+=s.Z.kvLine("Is outgoing",this.getIsOutgoing(),t),r+=s.Z.kvLine("Outgoing amount",this.getOutgoingAmount(),t),void 0!==this.getOutgoingTransfer()&&(r+=s.Z.kvLine("Outgoing transfer","",t),r+=this.getOutgoingTransfer().toString(t+1)+"\n"),r+=s.Z.kvLine("Note",this.getNote(),t),r+=s.Z.kvLine("Is locked",this.getIsLocked(),t),r+=s.Z.kvLine("Input sum",this.getInputSum(),t),r+=s.Z.kvLine("Output sum",this.getOutputSum(),t),r+=s.Z.kvLine("Change address",this.getChangeAddress(),t),r+=s.Z.kvLine("Change amount",this.getChangeAmount(),t),r+=s.Z.kvLine("Num dummy outputs",this.getNumDummyOutputs(),t),r+=s.Z.kvLine("Extra hex",this.getExtraHex(),t),r.slice(0,r.length-1)}static mergeIncomingTransfer(t,e){for(let r of t)if(r.getAccountIndex()===e.getAccountIndex()&&r.getSubaddressIndex()===e.getSubaddressIndex())return void r.merge(e);t.push(e)}setBlock(t){return super.setBlock(t),this}setHash(t){return super.setHash(t),this}setVersion(t){return super.setVersion(t),this}setIsMinerTx(t){return super.setIsMinerTx(t),this}setPaymentId(t){return super.setPaymentId(t),this}setFee(t){return super.setFee(t),this}setRingSize(t){return super.setRingSize(t),this}setRelay(t){return super.setRelay(t),this}setIsRelayed(t){return super.setIsRelayed(t),this}setIsConfirmed(t){return super.setIsConfirmed(t),this}setInTxPool(t){return super.setInTxPool(t),this}setNumConfirmations(t){return super.setNumConfirmations(t),this}setUnlockTime(t){return super.setUnlockTime(t),this}setLastRelayedTimestamp(t){return super.setLastRelayedTimestamp(t),this}setReceivedTimestamp(t){return super.setReceivedTimestamp(t),this}setIsDoubleSpendSeen(t){return super.setIsDoubleSpendSeen(t),this}setKey(t){return super.setKey(t),this}setFullHex(t){return super.setFullHex(t),this}setPrunedHex(t){return super.setPrunedHex(t),this}setPrunableHex(t){return super.setPrunableHex(t),this}setPrunableHash(t){return super.setPrunableHash(t),this}setSize(t){return super.setSize(t),this}setWeight(t){return super.setWeight(t),this}setInputs(t){return super.setInputs(t),this}setOutputs(t){return super.setOutputs(t),this}setOutputIndices(t){return super.setOutputIndices(t),this}setMetadata(t){return super.setMetadata(t),this}setExtra(t){return super.setExtra(t),this}setRctSignatures(t){return super.setRctSignatures(t),this}setRctSigPrunable(t){return super.setRctSigPrunable(t),this}setIsKeptByBlock(t){return super.setIsKeptByBlock(t),this}setIsFailed(t){return super.setIsFailed(t),this}setLastFailedHeight(t){return super.setLastFailedHeight(t),this}setLastFailedHash(t){return super.setLastFailedHash(t),this}setMaxUsedBlockHeight(t){return super.setMaxUsedBlockHeight(t),this}setMaxUsedBlockHash(t){return super.setMaxUsedBlockHash(t),this}setSignatures(t){return super.setSignatures(t),this}}},8788:(t,e,r)=>{"use strict";r.d(e,{Z:()=>s});var i=r(8403),n=r(1779);class s{constructor(t){Object.assign(this,t),this.server&&this.setServer(this.server),this.setProxyToWorker(this.proxyToWorker),void 0!==this.networkType&&(this.networkType=i.Z.from(this.networkType))}copy(){return new s(this)}toJson(){let t=Object.assign({},this);return t.server&&(t.server=t.server.toJson()),t.fs=void 0,t.connectionManager=void 0,t}getPath(){return this.path}setPath(t){return this.path=t,this}getPassword(){return this.password}setPassword(t){return this.password=t,this}getNetworkType(){return this.networkType}setNetworkType(t){return this.networkType=void 0===t?void 0:i.Z.from(t),this}getServer(){return this.server}setServer(t){return!t||t instanceof n.Z||(t=new n.Z(t)),this.server=t,this}getConnectionManager(){return this.connectionManager}setConnectionManager(t){return this.connectionManager=t,this}getSeed(){return this.seed}setSeed(t){return this.seed=t,this}getSeedOffset(){return this.seedOffset}setSeedOffset(t){return this.seedOffset=t,this}getIsMultisig(){return this.isMultisig}setIsMultisig(t){return this.isMultisig=t,this}getPrimaryAddress(){return this.primaryAddress}setPrimaryAddress(t){return this.primaryAddress=t,this}getPrivateViewKey(){return this.privateViewKey}setPrivateViewKey(t){return this.privateViewKey=t,this}getPrivateSpendKey(){return this.privateSpendKey}setPrivateSpendKey(t){return this.privateSpendKey=t,this}getRestoreHeight(){return this.restoreHeight}setRestoreHeight(t){return this.restoreHeight=t,this}getLanguage(){return this.language}setLanguage(t){return this.language=t,this}getSaveCurrent(){return this.saveCurrent}setSaveCurrent(t){return this.saveCurrent=t,this}getProxyToWorker(){return this.proxyToWorker}setProxyToWorker(t){return this.proxyToWorker=t,this}getFs(){return this.fs}setFs(t){return this.fs=t,this}getKeysData(){return this.keysData}setKeysData(t){return this.keysData=t,this}getCacheData(){return this.cacheData}setCacheData(t){return this.cacheData=t,this}getAccountLookahead(){return this.accountLookahead}setAccountLookahead(t){return this.accountLookahead=t,this}getSubaddressLookahead(){return this.subaddressLookahead}setSubaddressLookahead(t){return this.subaddressLookahead=t,this}}},6537:(t,e,r)=>{"use strict";r.d(e,{Z:()=>i});class i{async onSyncProgress(t,e,r,i,n){}async onNewBlock(t){}async onBalancesChanged(t,e){}async onOutputReceived(t){}async onOutputSpent(t){}}},2511:function(t,e,r){var i;t=r.nmd(t),function(n){e&&e.nodeType,t&&t.nodeType;var s="object"==typeof r.g&&r.g;s.global!==s&&s.window!==s&&s.self;var o,a=2147483647,u=36,h=26,c=38,l=700,d=/^xn--/,f=/[^\x20-\x7E]/,p=/[\x2E\u3002\uFF0E\uFF61]/g,g={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},m=u-1,y=Math.floor,v=String.fromCharCode;function b(t){throw new RangeError(g[t])}function w(t,e){for(var r=t.length,i=[];r--;)i[r]=e(t[r]);return i}function E(t,e){var r=t.split("@"),i="";return r.length>1&&(i=r[0]+"@",t=r[1]),i+w((t=t.replace(p,".")).split("."),e).join(".")}function S(t){for(var e,r,i=[],n=0,s=t.length;n<s;)(e=t.charCodeAt(n++))>=55296&&e<=56319&&n<s?56320==(64512&(r=t.charCodeAt(n++)))?i.push(((1023&e)<<10)+(1023&r)+65536):(i.push(e),n--):i.push(e);return i}function N(t){return w(t,(function(t){var e="";return t>65535&&(e+=v((t-=65536)>>>10&1023|55296),t=56320|1023&t),e+v(t)})).join("")}function M(t,e){return t+22+75*(t<26)-((0!=e)<<5)}function x(t,e,r){var i=0;for(t=r?y(t/l):t>>1,t+=y(t/e);t>m*h>>1;i+=u)t=y(t/m);return y(i+(m+1)*t/(t+c))}function I(t){var e,r,i,n,s,o,c,l,d,f,p,g=[],m=t.length,v=0,w=128,E=72;for((r=t.lastIndexOf("-"))<0&&(r=0),i=0;i<r;++i)t.charCodeAt(i)>=128&&b("not-basic"),g.push(t.charCodeAt(i));for(n=r>0?r+1:0;n<m;){for(s=v,o=1,c=u;n>=m&&b("invalid-input"),((l=(p=t.charCodeAt(n++))-48<10?p-22:p-65<26?p-65:p-97<26?p-97:u)>=u||l>y((a-v)/o))&&b("overflow"),v+=l*o,!(l<(d=c<=E?1:c>=E+h?h:c-E));c+=u)o>y(a/(f=u-d))&&b("overflow"),o*=f;E=x(v-s,e=g.length+1,0==s),y(v/e)>a-w&&b("overflow"),w+=y(v/e),v%=e,g.splice(v++,0,w)}return N(g)}function A(t){var e,r,i,n,s,o,c,l,d,f,p,g,m,w,E,N=[];for(g=(t=S(t)).length,e=128,r=0,s=72,o=0;o<g;++o)(p=t[o])<128&&N.push(v(p));for(i=n=N.length,n&&N.push("-");i<g;){for(c=a,o=0;o<g;++o)(p=t[o])>=e&&p<c&&(c=p);for(c-e>y((a-r)/(m=i+1))&&b("overflow"),r+=(c-e)*m,e=c,o=0;o<g;++o)if((p=t[o])<e&&++r>a&&b("overflow"),p==e){for(l=r,d=u;!(l<(f=d<=s?1:d>=s+h?h:d-s));d+=u)E=l-f,w=u-f,N.push(v(M(f+E%w,0))),l=y(E/w);N.push(v(M(l,0))),s=x(r,m,i==n),r=0,++i}++r,++e}return N.join("")}o={version:"1.4.1",ucs2:{decode:S,encode:N},decode:I,encode:A,toASCII:function(t){return E(t,(function(t){return f.test(t)?"xn--"+A(t):t}))},toUnicode:function(t){return E(t,(function(t){return d.test(t)?I(t.slice(4).toLowerCase()):t}))}},void 0===(i=function(){return o}.call(e,r,e,t))||(t.exports=i)}()},9532:t=>{"use strict";var e=String.prototype.replace,r=/%20/g,i="RFC3986";t.exports={default:i,formatters:{RFC1738:function(t){return e.call(t,r,"+")},RFC3986:function(t){return String(t)}},RFC1738:"RFC1738",RFC3986:i}},5984:(t,e,r)=>{"use strict";var i=r(4730),n=r(7325),s=r(9532);t.exports={formats:s,parse:n,stringify:i}},7325:(t,e,r)=>{"use strict";var i=r(9368),n=Object.prototype.hasOwnProperty,s=Array.isArray,o={allowDots:!1,allowPrototypes:!1,allowSparse:!1,arrayLimit:20,charset:"utf-8",charsetSentinel:!1,comma:!1,decoder:i.decode,delimiter:"&",depth:5,ignoreQueryPrefix:!1,interpretNumericEntities:!1,parameterLimit:1e3,parseArrays:!0,plainObjects:!1,strictNullHandling:!1},a=function(t){return t.replace(/&#(\d+);/g,(function(t,e){return String.fromCharCode(parseInt(e,10))}))},u=function(t,e){return t&&"string"==typeof t&&e.comma&&t.indexOf(",")>-1?t.split(","):t},h=function(t,e,r,i){if(t){var s=r.allowDots?t.replace(/\.([^.[]+)/g,"[$1]"):t,o=/(\[[^[\]]*])/g,a=r.depth>0&&/(\[[^[\]]*])/.exec(s),h=a?s.slice(0,a.index):s,c=[];if(h){if(!r.plainObjects&&n.call(Object.prototype,h)&&!r.allowPrototypes)return;c.push(h)}for(var l=0;r.depth>0&&null!==(a=o.exec(s))&&l<r.depth;){if(l+=1,!r.plainObjects&&n.call(Object.prototype,a[1].slice(1,-1))&&!r.allowPrototypes)return;c.push(a[1])}return a&&c.push("["+s.slice(a.index)+"]"),function(t,e,r,i){for(var n=i?e:u(e,r),s=t.length-1;s>=0;--s){var o,a=t[s];if("[]"===a&&r.parseArrays)o=[].concat(n);else{o=r.plainObjects?Object.create(null):{};var h="["===a.charAt(0)&&"]"===a.charAt(a.length-1)?a.slice(1,-1):a,c=parseInt(h,10);r.parseArrays||""!==h?!isNaN(c)&&a!==h&&String(c)===h&&c>=0&&r.parseArrays&&c<=r.arrayLimit?(o=[])[c]=n:"__proto__"!==h&&(o[h]=n):o={0:n}}n=o}return n}(c,e,r,i)}};t.exports=function(t,e){var r=function(t){if(!t)return o;if(null!==t.decoder&&void 0!==t.decoder&&"function"!=typeof t.decoder)throw new TypeError("Decoder has to be a function.");if(void 0!==t.charset&&"utf-8"!==t.charset&&"iso-8859-1"!==t.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var e=void 0===t.charset?o.charset:t.charset;return{allowDots:void 0===t.allowDots?o.allowDots:!!t.allowDots,allowPrototypes:"boolean"==typeof t.allowPrototypes?t.allowPrototypes:o.allowPrototypes,allowSparse:"boolean"==typeof t.allowSparse?t.allowSparse:o.allowSparse,arrayLimit:"number"==typeof t.arrayLimit?t.arrayLimit:o.arrayLimit,charset:e,charsetSentinel:"boolean"==typeof t.charsetSentinel?t.charsetSentinel:o.charsetSentinel,comma:"boolean"==typeof t.comma?t.comma:o.comma,decoder:"function"==typeof t.decoder?t.decoder:o.decoder,delimiter:"string"==typeof t.delimiter||i.isRegExp(t.delimiter)?t.delimiter:o.delimiter,depth:"number"==typeof t.depth||!1===t.depth?+t.depth:o.depth,ignoreQueryPrefix:!0===t.ignoreQueryPrefix,interpretNumericEntities:"boolean"==typeof t.interpretNumericEntities?t.interpretNumericEntities:o.interpretNumericEntities,parameterLimit:"number"==typeof t.parameterLimit?t.parameterLimit:o.parameterLimit,parseArrays:!1!==t.parseArrays,plainObjects:"boolean"==typeof t.plainObjects?t.plainObjects:o.plainObjects,strictNullHandling:"boolean"==typeof t.strictNullHandling?t.strictNullHandling:o.strictNullHandling}}(e);if(""===t||null==t)return r.plainObjects?Object.create(null):{};for(var c="string"==typeof t?function(t,e){var r,h={__proto__:null},c=e.ignoreQueryPrefix?t.replace(/^\?/,""):t,l=e.parameterLimit===1/0?void 0:e.parameterLimit,d=c.split(e.delimiter,l),f=-1,p=e.charset;if(e.charsetSentinel)for(r=0;r<d.length;++r)0===d[r].indexOf("utf8=")&&("utf8=%E2%9C%93"===d[r]?p="utf-8":"utf8=%26%2310003%3B"===d[r]&&(p="iso-8859-1"),f=r,r=d.length);for(r=0;r<d.length;++r)if(r!==f){var g,m,y=d[r],v=y.indexOf("]="),b=-1===v?y.indexOf("="):v+1;-1===b?(g=e.decoder(y,o.decoder,p,"key"),m=e.strictNullHandling?null:""):(g=e.decoder(y.slice(0,b),o.decoder,p,"key"),m=i.maybeMap(u(y.slice(b+1),e),(function(t){return e.decoder(t,o.decoder,p,"value")}))),m&&e.interpretNumericEntities&&"iso-8859-1"===p&&(m=a(m)),y.indexOf("[]=")>-1&&(m=s(m)?[m]:m),n.call(h,g)?h[g]=i.combine(h[g],m):h[g]=m}return h}(t,r):t,l=r.plainObjects?Object.create(null):{},d=Object.keys(c),f=0;f<d.length;++f){var p=d[f],g=h(p,c[p],r,"string"==typeof t);l=i.merge(l,g,r)}return!0===r.allowSparse?l:i.compact(l)}},4730:(t,e,r)=>{"use strict";var i=r(7478),n=r(9368),s=r(9532),o=Object.prototype.hasOwnProperty,a={brackets:function(t){return t+"[]"},comma:"comma",indices:function(t,e){return t+"["+e+"]"},repeat:function(t){return t}},u=Array.isArray,h=Array.prototype.push,c=function(t,e){h.apply(t,u(e)?e:[e])},l=Date.prototype.toISOString,d=s.default,f={addQueryPrefix:!1,allowDots:!1,charset:"utf-8",charsetSentinel:!1,delimiter:"&",encode:!0,encoder:n.encode,encodeValuesOnly:!1,format:d,formatter:s.formatters[d],indices:!1,serializeDate:function(t){return l.call(t)},skipNulls:!1,strictNullHandling:!1},p={},g=function t(e,r,s,o,a,h,l,d,g,m,y,v,b,w,E,S){for(var N,M=e,x=S,I=0,A=!1;void 0!==(x=x.get(p))&&!A;){var P=x.get(e);if(I+=1,void 0!==P){if(P===I)throw new RangeError("Cyclic object value");A=!0}void 0===x.get(p)&&(I=0)}if("function"==typeof d?M=d(r,M):M instanceof Date?M=y(M):"comma"===s&&u(M)&&(M=n.maybeMap(M,(function(t){return t instanceof Date?y(t):t}))),null===M){if(a)return l&&!w?l(r,f.encoder,E,"key",v):r;M=""}if("string"==typeof(N=M)||"number"==typeof N||"boolean"==typeof N||"symbol"==typeof N||"bigint"==typeof N||n.isBuffer(M))return l?[b(w?r:l(r,f.encoder,E,"key",v))+"="+b(l(M,f.encoder,E,"value",v))]:[b(r)+"="+b(String(M))];var T,R=[];if(void 0===M)return R;if("comma"===s&&u(M))w&&l&&(M=n.maybeMap(M,l)),T=[{value:M.length>0?M.join(",")||null:void 0}];else if(u(d))T=d;else{var k=Object.keys(M);T=g?k.sort(g):k}for(var B=o&&u(M)&&1===M.length?r+"[]":r,O=0;O<T.length;++O){var C=T[O],L="object"==typeof C&&void 0!==C.value?C.value:M[C];if(!h||null!==L){var j=u(M)?"function"==typeof s?s(B,C):B:B+(m?"."+C:"["+C+"]");S.set(e,I);var Z=i();Z.set(p,S),c(R,t(L,j,s,o,a,h,"comma"===s&&w&&u(M)?null:l,d,g,m,y,v,b,w,E,Z))}}return R};t.exports=function(t,e){var r,n=t,h=function(t){if(!t)return f;if(null!==t.encoder&&void 0!==t.encoder&&"function"!=typeof t.encoder)throw new TypeError("Encoder has to be a function.");var e=t.charset||f.charset;if(void 0!==t.charset&&"utf-8"!==t.charset&&"iso-8859-1"!==t.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var r=s.default;if(void 0!==t.format){if(!o.call(s.formatters,t.format))throw new TypeError("Unknown format option provided.");r=t.format}var i=s.formatters[r],n=f.filter;return("function"==typeof t.filter||u(t.filter))&&(n=t.filter),{addQueryPrefix:"boolean"==typeof t.addQueryPrefix?t.addQueryPrefix:f.addQueryPrefix,allowDots:void 0===t.allowDots?f.allowDots:!!t.allowDots,charset:e,charsetSentinel:"boolean"==typeof t.charsetSentinel?t.charsetSentinel:f.charsetSentinel,delimiter:void 0===t.delimiter?f.delimiter:t.delimiter,encode:"boolean"==typeof t.encode?t.encode:f.encode,encoder:"function"==typeof t.encoder?t.encoder:f.encoder,encodeValuesOnly:"boolean"==typeof t.encodeValuesOnly?t.encodeValuesOnly:f.encodeValuesOnly,filter:n,format:r,formatter:i,serializeDate:"function"==typeof t.serializeDate?t.serializeDate:f.serializeDate,skipNulls:"boolean"==typeof t.skipNulls?t.skipNulls:f.skipNulls,sort:"function"==typeof t.sort?t.sort:null,strictNullHandling:"boolean"==typeof t.strictNullHandling?t.strictNullHandling:f.strictNullHandling}}(e);"function"==typeof h.filter?n=(0,h.filter)("",n):u(h.filter)&&(r=h.filter);var l,d=[];if("object"!=typeof n||null===n)return"";l=e&&e.arrayFormat in a?e.arrayFormat:e&&"indices"in e?e.indices?"indices":"repeat":"indices";var p=a[l];if(e&&"commaRoundTrip"in e&&"boolean"!=typeof e.commaRoundTrip)throw new TypeError("`commaRoundTrip` must be a boolean, or absent");var m="comma"===p&&e&&e.commaRoundTrip;r||(r=Object.keys(n)),h.sort&&r.sort(h.sort);for(var y=i(),v=0;v<r.length;++v){var b=r[v];h.skipNulls&&null===n[b]||c(d,g(n[b],b,p,m,h.strictNullHandling,h.skipNulls,h.encode?h.encoder:null,h.filter,h.sort,h.allowDots,h.serializeDate,h.format,h.formatter,h.encodeValuesOnly,h.charset,y))}var w=d.join(h.delimiter),E=!0===h.addQueryPrefix?"?":"";return h.charsetSentinel&&("iso-8859-1"===h.charset?E+="utf8=%26%2310003%3B&":E+="utf8=%E2%9C%93&"),w.length>0?E+w:""}},9368:(t,e,r)=>{"use strict";var i=r(9532),n=Object.prototype.hasOwnProperty,s=Array.isArray,o=function(){for(var t=[],e=0;e<256;++e)t.push("%"+((e<16?"0":"")+e.toString(16)).toUpperCase());return t}(),a=function(t,e){for(var r=e&&e.plainObjects?Object.create(null):{},i=0;i<t.length;++i)void 0!==t[i]&&(r[i]=t[i]);return r};t.exports={arrayToObject:a,assign:function(t,e){return Object.keys(e).reduce((function(t,r){return t[r]=e[r],t}),t)},combine:function(t,e){return[].concat(t,e)},compact:function(t){for(var e=[{obj:{o:t},prop:"o"}],r=[],i=0;i<e.length;++i)for(var n=e[i],o=n.obj[n.prop],a=Object.keys(o),u=0;u<a.length;++u){var h=a[u],c=o[h];"object"==typeof c&&null!==c&&-1===r.indexOf(c)&&(e.push({obj:o,prop:h}),r.push(c))}return function(t){for(;t.length>1;){var e=t.pop(),r=e.obj[e.prop];if(s(r)){for(var i=[],n=0;n<r.length;++n)void 0!==r[n]&&i.push(r[n]);e.obj[e.prop]=i}}}(e),t},decode:function(t,e,r){var i=t.replace(/\+/g," ");if("iso-8859-1"===r)return i.replace(/%[0-9a-f]{2}/gi,unescape);try{return decodeURIComponent(i)}catch(t){return i}},encode:function(t,e,r,n,s){if(0===t.length)return t;var a=t;if("symbol"==typeof t?a=Symbol.prototype.toString.call(t):"string"!=typeof t&&(a=String(t)),"iso-8859-1"===r)return escape(a).replace(/%u[0-9a-f]{4}/gi,(function(t){return"%26%23"+parseInt(t.slice(2),16)+"%3B"}));for(var u="",h=0;h<a.length;++h){var c=a.charCodeAt(h);45===c||46===c||95===c||126===c||c>=48&&c<=57||c>=65&&c<=90||c>=97&&c<=122||s===i.RFC1738&&(40===c||41===c)?u+=a.charAt(h):c<128?u+=o[c]:c<2048?u+=o[192|c>>6]+o[128|63&c]:c<55296||c>=57344?u+=o[224|c>>12]+o[128|c>>6&63]+o[128|63&c]:(h+=1,c=65536+((1023&c)<<10|1023&a.charCodeAt(h)),u+=o[240|c>>18]+o[128|c>>12&63]+o[128|c>>6&63]+o[128|63&c])}return u},isBuffer:function(t){return!(!t||"object"!=typeof t||!(t.constructor&&t.constructor.isBuffer&&t.constructor.isBuffer(t)))},isRegExp:function(t){return"[object RegExp]"===Object.prototype.toString.call(t)},maybeMap:function(t,e){if(s(t)){for(var r=[],i=0;i<t.length;i+=1)r.push(e(t[i]));return r}return e(t)},merge:function t(e,r,i){if(!r)return e;if("object"!=typeof r){if(s(e))e.push(r);else{if(!e||"object"!=typeof e)return[e,r];(i&&(i.plainObjects||i.allowPrototypes)||!n.call(Object.prototype,r))&&(e[r]=!0)}return e}if(!e||"object"!=typeof e)return[e].concat(r);var o=e;return s(e)&&!s(r)&&(o=a(e,i)),s(e)&&s(r)?(r.forEach((function(r,s){if(n.call(e,s)){var o=e[s];o&&"object"==typeof o&&r&&"object"==typeof r?e[s]=t(o,r,i):e.push(r)}else e[s]=r})),e):Object.keys(r).reduce((function(e,s){var o=r[s];return n.call(e,s)?e[s]=t(e[s],o,i):e[s]=o,e}),o)}}},8575:(t,e,r)=>{"use strict";var i=r(2511);function n(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}var s=/^([a-z0-9.+-]+:)/i,o=/:[0-9]*$/,a=/^(\/\/?(?!\/)[^?\s]*)(\?[^\s]*)?$/,u=["{","}","|","\\","^","`"].concat(["<",">",'"',"`"," ","\r","\n","\t"]),h=["'"].concat(u),c=["%","/","?",";","#"].concat(h),l=["/","?","#"],d=/^[+a-z0-9A-Z_-]{0,63}$/,f=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,p={javascript:!0,"javascript:":!0},g={javascript:!0,"javascript:":!0},m={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0},y=r(5984);function v(t,e,r){if(t&&"object"==typeof t&&t instanceof n)return t;var i=new n;return i.parse(t,e,r),i}n.prototype.parse=function(t,e,r){if("string"!=typeof t)throw new TypeError("Parameter 'url' must be a string, not "+typeof t);var n=t.indexOf("?"),o=-1!==n&&n<t.indexOf("#")?"?":"#",u=t.split(o);u[0]=u[0].replace(/\\/g,"/");var v=t=u.join(o);if(v=v.trim(),!r&&1===t.split("#").length){var b=a.exec(v);if(b)return this.path=v,this.href=v,this.pathname=b[1],b[2]?(this.search=b[2],this.query=e?y.parse(this.search.substr(1)):this.search.substr(1)):e&&(this.search="",this.query={}),this}var w=s.exec(v);if(w){var E=(w=w[0]).toLowerCase();this.protocol=E,v=v.substr(w.length)}if(r||w||v.match(/^\/\/[^@/]+@[^@/]+/)){var S="//"===v.substr(0,2);!S||w&&g[w]||(v=v.substr(2),this.slashes=!0)}if(!g[w]&&(S||w&&!m[w])){for(var N,M,x=-1,I=0;I<l.length;I++)-1!==(A=v.indexOf(l[I]))&&(-1===x||A<x)&&(x=A);for(-1!==(M=-1===x?v.lastIndexOf("@"):v.lastIndexOf("@",x))&&(N=v.slice(0,M),v=v.slice(M+1),this.auth=decodeURIComponent(N)),x=-1,I=0;I<c.length;I++){var A;-1!==(A=v.indexOf(c[I]))&&(-1===x||A<x)&&(x=A)}-1===x&&(x=v.length),this.host=v.slice(0,x),v=v.slice(x),this.parseHost(),this.hostname=this.hostname||"";var P="["===this.hostname[0]&&"]"===this.hostname[this.hostname.length-1];if(!P)for(var T=this.hostname.split(/\./),R=(I=0,T.length);I<R;I++){var k=T[I];if(k&&!k.match(d)){for(var B="",O=0,C=k.length;O<C;O++)k.charCodeAt(O)>127?B+="x":B+=k[O];if(!B.match(d)){var L=T.slice(0,I),j=T.slice(I+1),Z=k.match(f);Z&&(L.push(Z[1]),j.unshift(Z[2])),j.length&&(v="/"+j.join(".")+v),this.hostname=L.join(".");break}}}this.hostname.length>255?this.hostname="":this.hostname=this.hostname.toLowerCase(),P||(this.hostname=i.toASCII(this.hostname));var D=this.port?":"+this.port:"",F=this.hostname||"";this.host=F+D,this.href+=this.host,P&&(this.hostname=this.hostname.substr(1,this.hostname.length-2),"/"!==v[0]&&(v="/"+v))}if(!p[E])for(I=0,R=h.length;I<R;I++){var z=h[I];if(-1!==v.indexOf(z)){var H=encodeURIComponent(z);H===z&&(H=escape(z)),v=v.split(z).join(H)}}var W=v.indexOf("#");-1!==W&&(this.hash=v.substr(W),v=v.slice(0,W));var K=v.indexOf("?");if(-1!==K?(this.search=v.substr(K),this.query=v.substr(K+1),e&&(this.query=y.parse(this.query)),v=v.slice(0,K)):e&&(this.search="",this.query={}),v&&(this.pathname=v),m[E]&&this.hostname&&!this.pathname&&(this.pathname="/"),this.pathname||this.search){D=this.pathname||"";var q=this.search||"";this.path=D+q}return this.href=this.format(),this},n.prototype.format=function(){var t=this.auth||"";t&&(t=(t=encodeURIComponent(t)).replace(/%3A/i,":"),t+="@");var e=this.protocol||"",r=this.pathname||"",i=this.hash||"",n=!1,s="";this.host?n=t+this.host:this.hostname&&(n=t+(-1===this.hostname.indexOf(":")?this.hostname:"["+this.hostname+"]"),this.port&&(n+=":"+this.port)),this.query&&"object"==typeof this.query&&Object.keys(this.query).length&&(s=y.stringify(this.query,{arrayFormat:"repeat",addQueryPrefix:!1}));var o=this.search||s&&"?"+s||"";return e&&":"!==e.substr(-1)&&(e+=":"),this.slashes||(!e||m[e])&&!1!==n?(n="//"+(n||""),r&&"/"!==r.charAt(0)&&(r="/"+r)):n||(n=""),i&&"#"!==i.charAt(0)&&(i="#"+i),o&&"?"!==o.charAt(0)&&(o="?"+o),e+n+(r=r.replace(/[?#]/g,(function(t){return encodeURIComponent(t)})))+(o=o.replace("#","%23"))+i},n.prototype.resolve=function(t){return this.resolveObject(v(t,!1,!0)).format()},n.prototype.resolveObject=function(t){if("string"==typeof t){var e=new n;e.parse(t,!1,!0),t=e}for(var r=new n,i=Object.keys(this),s=0;s<i.length;s++){var o=i[s];r[o]=this[o]}if(r.hash=t.hash,""===t.href)return r.href=r.format(),r;if(t.slashes&&!t.protocol){for(var a=Object.keys(t),u=0;u<a.length;u++){var h=a[u];"protocol"!==h&&(r[h]=t[h])}return m[r.protocol]&&r.hostname&&!r.pathname&&(r.pathname="/",r.path=r.pathname),r.href=r.format(),r}if(t.protocol&&t.protocol!==r.protocol){if(!m[t.protocol]){for(var c=Object.keys(t),l=0;l<c.length;l++){var d=c[l];r[d]=t[d]}return r.href=r.format(),r}if(r.protocol=t.protocol,t.host||g[t.protocol])r.pathname=t.pathname;else{for(var f=(t.pathname||"").split("/");f.length&&!(t.host=f.shift()););t.host||(t.host=""),t.hostname||(t.hostname=""),""!==f[0]&&f.unshift(""),f.length<2&&f.unshift(""),r.pathname=f.join("/")}if(r.search=t.search,r.query=t.query,r.host=t.host||"",r.auth=t.auth,r.hostname=t.hostname||t.host,r.port=t.port,r.pathname||r.search){var p=r.pathname||"",y=r.search||"";r.path=p+y}return r.slashes=r.slashes||t.slashes,r.href=r.format(),r}var v=r.pathname&&"/"===r.pathname.charAt(0),b=t.host||t.pathname&&"/"===t.pathname.charAt(0),w=b||v||r.host&&t.pathname,E=w,S=r.pathname&&r.pathname.split("/")||[],N=(f=t.pathname&&t.pathname.split("/")||[],r.protocol&&!m[r.protocol]);if(N&&(r.hostname="",r.port=null,r.host&&(""===S[0]?S[0]=r.host:S.unshift(r.host)),r.host="",t.protocol&&(t.hostname=null,t.port=null,t.host&&(""===f[0]?f[0]=t.host:f.unshift(t.host)),t.host=null),w=w&&(""===f[0]||""===S[0])),b)r.host=t.host||""===t.host?t.host:r.host,r.hostname=t.hostname||""===t.hostname?t.hostname:r.hostname,r.search=t.search,r.query=t.query,S=f;else if(f.length)S||(S=[]),S.pop(),S=S.concat(f),r.search=t.search,r.query=t.query;else if(null!=t.search)return N&&(r.host=S.shift(),r.hostname=r.host,(P=!!(r.host&&r.host.indexOf("@")>0)&&r.host.split("@"))&&(r.auth=P.shift(),r.hostname=P.shift(),r.host=r.hostname)),r.search=t.search,r.query=t.query,null===r.pathname&&null===r.search||(r.path=(r.pathname?r.pathname:"")+(r.search?r.search:"")),r.href=r.format(),r;if(!S.length)return r.pathname=null,r.search?r.path="/"+r.search:r.path=null,r.href=r.format(),r;for(var M=S.slice(-1)[0],x=(r.host||t.host||S.length>1)&&("."===M||".."===M)||""===M,I=0,A=S.length;A>=0;A--)"."===(M=S[A])?S.splice(A,1):".."===M?(S.splice(A,1),I++):I&&(S.splice(A,1),I--);if(!w&&!E)for(;I--;I)S.unshift("..");!w||""===S[0]||S[0]&&"/"===S[0].charAt(0)||S.unshift(""),x&&"/"!==S.join("/").substr(-1)&&S.push("");var P,T=""===S[0]||S[0]&&"/"===S[0].charAt(0);return N&&(r.hostname=T?"":S.length?S.shift():"",r.host=r.hostname,(P=!!(r.host&&r.host.indexOf("@")>0)&&r.host.split("@"))&&(r.auth=P.shift(),r.hostname=P.shift(),r.host=r.hostname)),(w=w||r.host&&S.length)&&!T&&S.unshift(""),S.length>0?r.pathname=S.join("/"):(r.pathname=null,r.path=null),null===r.pathname&&null===r.search||(r.path=(r.pathname?r.pathname:"")+(r.search?r.search:"")),r.auth=t.auth||r.auth,r.slashes=r.slashes||t.slashes,r.href=r.format(),r},n.prototype.parseHost=function(){var t=this.host,e=o.exec(t);e&&(":"!==(e=e[0])&&(this.port=e.substr(1)),t=t.substr(0,t.length-e.length)),t&&(this.hostname=t)},e.parse=v,e.resolve=function(t,e){return v(t,!1,!0).resolve(e)},e.resolveObject=function(t,e){return t?v(t,!1,!0).resolveObject(e):e},e.format=function(t){return"string"==typeof t&&(t=v(t)),t instanceof n?t.format():n.prototype.format.call(t)},e.Url=n},4927:(t,e,r)=>{function i(t){try{if(!r.g.localStorage)return!1}catch(t){return!1}var e=r.g.localStorage[t];return null!=e&&"true"===String(e).toLowerCase()}t.exports=function(t,e){if(i("noDeprecation"))return t;var r=!1;return function(){if(!r){if(i("throwDeprecation"))throw new Error(e);i("traceDeprecation")?console.trace(e):console.warn(e),r=!0}return t.apply(this,arguments)}}},384:t=>{t.exports=function(t){return t&&"object"==typeof t&&"function"==typeof t.copy&&"function"==typeof t.fill&&"function"==typeof t.readUInt8}},5955:(t,e,r)=>{"use strict";var i=r(2584),n=r(8662),s=r(6430),o=r(5692);function a(t){return t.call.bind(t)}var u="undefined"!=typeof BigInt,h="undefined"!=typeof Symbol,c=a(Object.prototype.toString),l=a(Number.prototype.valueOf),d=a(String.prototype.valueOf),f=a(Boolean.prototype.valueOf);if(u)var p=a(BigInt.prototype.valueOf);if(h)var g=a(Symbol.prototype.valueOf);function m(t,e){if("object"!=typeof t)return!1;try{return e(t),!0}catch(t){return!1}}function y(t){return"[object Map]"===c(t)}function v(t){return"[object Set]"===c(t)}function b(t){return"[object WeakMap]"===c(t)}function w(t){return"[object WeakSet]"===c(t)}function E(t){return"[object ArrayBuffer]"===c(t)}function S(t){return"undefined"!=typeof ArrayBuffer&&(E.working?E(t):t instanceof ArrayBuffer)}function N(t){return"[object DataView]"===c(t)}function M(t){return"undefined"!=typeof DataView&&(N.working?N(t):t instanceof DataView)}e.isArgumentsObject=i,e.isGeneratorFunction=n,e.isTypedArray=o,e.isPromise=function(t){return"undefined"!=typeof Promise&&t instanceof Promise||null!==t&&"object"==typeof t&&"function"==typeof t.then&&"function"==typeof t.catch},e.isArrayBufferView=function(t){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(t):o(t)||M(t)},e.isUint8Array=function(t){return"Uint8Array"===s(t)},e.isUint8ClampedArray=function(t){return"Uint8ClampedArray"===s(t)},e.isUint16Array=function(t){return"Uint16Array"===s(t)},e.isUint32Array=function(t){return"Uint32Array"===s(t)},e.isInt8Array=function(t){return"Int8Array"===s(t)},e.isInt16Array=function(t){return"Int16Array"===s(t)},e.isInt32Array=function(t){return"Int32Array"===s(t)},e.isFloat32Array=function(t){return"Float32Array"===s(t)},e.isFloat64Array=function(t){return"Float64Array"===s(t)},e.isBigInt64Array=function(t){return"BigInt64Array"===s(t)},e.isBigUint64Array=function(t){return"BigUint64Array"===s(t)},y.working="undefined"!=typeof Map&&y(new Map),e.isMap=function(t){return"undefined"!=typeof Map&&(y.working?y(t):t instanceof Map)},v.working="undefined"!=typeof Set&&v(new Set),e.isSet=function(t){return"undefined"!=typeof Set&&(v.working?v(t):t instanceof Set)},b.working="undefined"!=typeof WeakMap&&b(new WeakMap),e.isWeakMap=function(t){return"undefined"!=typeof WeakMap&&(b.working?b(t):t instanceof WeakMap)},w.working="undefined"!=typeof WeakSet&&w(new WeakSet),e.isWeakSet=function(t){return w(t)},E.working="undefined"!=typeof ArrayBuffer&&E(new ArrayBuffer),e.isArrayBuffer=S,N.working="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof DataView&&N(new DataView(new ArrayBuffer(1),0,1)),e.isDataView=M;var x="undefined"!=typeof SharedArrayBuffer?SharedArrayBuffer:void 0;function I(t){return"[object SharedArrayBuffer]"===c(t)}function A(t){return void 0!==x&&(void 0===I.working&&(I.working=I(new x)),I.working?I(t):t instanceof x)}function P(t){return m(t,l)}function T(t){return m(t,d)}function R(t){return m(t,f)}function k(t){return u&&m(t,p)}function B(t){return h&&m(t,g)}e.isSharedArrayBuffer=A,e.isAsyncFunction=function(t){return"[object AsyncFunction]"===c(t)},e.isMapIterator=function(t){return"[object Map Iterator]"===c(t)},e.isSetIterator=function(t){return"[object Set Iterator]"===c(t)},e.isGeneratorObject=function(t){return"[object Generator]"===c(t)},e.isWebAssemblyCompiledModule=function(t){return"[object WebAssembly.Module]"===c(t)},e.isNumberObject=P,e.isStringObject=T,e.isBooleanObject=R,e.isBigIntObject=k,e.isSymbolObject=B,e.isBoxedPrimitive=function(t){return P(t)||T(t)||R(t)||k(t)||B(t)},e.isAnyArrayBuffer=function(t){return"undefined"!=typeof Uint8Array&&(S(t)||A(t))},["isProxy","isExternal","isModuleNamespaceObject"].forEach((function(t){Object.defineProperty(e,t,{enumerable:!1,value:function(){throw new Error(t+" is not supported in userland")}})}))},9539:(t,e,r)=>{var i=r(4155),n=Object.getOwnPropertyDescriptors||function(t){for(var e=Object.keys(t),r={},i=0;i<e.length;i++)r[e[i]]=Object.getOwnPropertyDescriptor(t,e[i]);return r},s=/%[sdj%]/g;e.format=function(t){if(!b(t)){for(var e=[],r=0;r<arguments.length;r++)e.push(h(arguments[r]));return e.join(" ")}r=1;for(var i=arguments,n=i.length,o=String(t).replace(s,(function(t){if("%%"===t)return"%";if(r>=n)return t;switch(t){case"%s":return String(i[r++]);case"%d":return Number(i[r++]);case"%j":try{return JSON.stringify(i[r++])}catch(t){return"[Circular]"}default:return t}})),a=i[r];r<n;a=i[++r])y(a)||!S(a)?o+=" "+a:o+=" "+h(a);return o},e.deprecate=function(t,r){if(void 0!==i&&!0===i.noDeprecation)return t;if(void 0===i)return function(){return e.deprecate(t,r).apply(this,arguments)};var n=!1;return function(){if(!n){if(i.throwDeprecation)throw new Error(r);i.traceDeprecation?console.trace(r):console.error(r),n=!0}return t.apply(this,arguments)}};var o={},a=/^$/;if(i.env.NODE_DEBUG){var u=i.env.NODE_DEBUG;u=u.replace(/[|\\{}()[\]^$+?.]/g,"\\$&").replace(/\*/g,".*").replace(/,/g,"$|^").toUpperCase(),a=new RegExp("^"+u+"$","i")}function h(t,r){var i={seen:[],stylize:l};return arguments.length>=3&&(i.depth=arguments[2]),arguments.length>=4&&(i.colors=arguments[3]),m(r)?i.showHidden=r:r&&e._extend(i,r),w(i.showHidden)&&(i.showHidden=!1),w(i.depth)&&(i.depth=2),w(i.colors)&&(i.colors=!1),w(i.customInspect)&&(i.customInspect=!0),i.colors&&(i.stylize=c),d(i,t,i.depth)}function c(t,e){var r=h.styles[e];return r?"["+h.colors[r][0]+"m"+t+"["+h.colors[r][1]+"m":t}function l(t,e){return t}function d(t,r,i){if(t.customInspect&&r&&x(r.inspect)&&r.inspect!==e.inspect&&(!r.constructor||r.constructor.prototype!==r)){var n=r.inspect(i,t);return b(n)||(n=d(t,n,i)),n}var s=function(t,e){if(w(e))return t.stylize("undefined","undefined");if(b(e)){var r="'"+JSON.stringify(e).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return t.stylize(r,"string")}return v(e)?t.stylize(""+e,"number"):m(e)?t.stylize(""+e,"boolean"):y(e)?t.stylize("null","null"):void 0}(t,r);if(s)return s;var o=Object.keys(r),a=function(t){var e={};return t.forEach((function(t,r){e[t]=!0})),e}(o);if(t.showHidden&&(o=Object.getOwnPropertyNames(r)),M(r)&&(o.indexOf("message")>=0||o.indexOf("description")>=0))return f(r);if(0===o.length){if(x(r)){var u=r.name?": "+r.name:"";return t.stylize("[Function"+u+"]","special")}if(E(r))return t.stylize(RegExp.prototype.toString.call(r),"regexp");if(N(r))return t.stylize(Date.prototype.toString.call(r),"date");if(M(r))return f(r)}var h,c="",l=!1,S=["{","}"];return g(r)&&(l=!0,S=["[","]"]),x(r)&&(c=" [Function"+(r.name?": "+r.name:"")+"]"),E(r)&&(c=" "+RegExp.prototype.toString.call(r)),N(r)&&(c=" "+Date.prototype.toUTCString.call(r)),M(r)&&(c=" "+f(r)),0!==o.length||l&&0!=r.length?i<0?E(r)?t.stylize(RegExp.prototype.toString.call(r),"regexp"):t.stylize("[Object]","special"):(t.seen.push(r),h=l?function(t,e,r,i,n){for(var s=[],o=0,a=e.length;o<a;++o)T(e,String(o))?s.push(p(t,e,r,i,String(o),!0)):s.push("");return n.forEach((function(n){n.match(/^\d+$/)||s.push(p(t,e,r,i,n,!0))})),s}(t,r,i,a,o):o.map((function(e){return p(t,r,i,a,e,l)})),t.seen.pop(),function(t,e,r){return t.reduce((function(t,e){return e.indexOf("\n"),t+e.replace(/\u001b\[\d\d?m/g,"").length+1}),0)>60?r[0]+(""===e?"":e+"\n ")+" "+t.join(",\n  ")+" "+r[1]:r[0]+e+" "+t.join(", ")+" "+r[1]}(h,c,S)):S[0]+c+S[1]}function f(t){return"["+Error.prototype.toString.call(t)+"]"}function p(t,e,r,i,n,s){var o,a,u;if((u=Object.getOwnPropertyDescriptor(e,n)||{value:e[n]}).get?a=u.set?t.stylize("[Getter/Setter]","special"):t.stylize("[Getter]","special"):u.set&&(a=t.stylize("[Setter]","special")),T(i,n)||(o="["+n+"]"),a||(t.seen.indexOf(u.value)<0?(a=y(r)?d(t,u.value,null):d(t,u.value,r-1)).indexOf("\n")>-1&&(a=s?a.split("\n").map((function(t){return"  "+t})).join("\n").slice(2):"\n"+a.split("\n").map((function(t){return"   "+t})).join("\n")):a=t.stylize("[Circular]","special")),w(o)){if(s&&n.match(/^\d+$/))return a;(o=JSON.stringify(""+n)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(o=o.slice(1,-1),o=t.stylize(o,"name")):(o=o.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),o=t.stylize(o,"string"))}return o+": "+a}function g(t){return Array.isArray(t)}function m(t){return"boolean"==typeof t}function y(t){return null===t}function v(t){return"number"==typeof t}function b(t){return"string"==typeof t}function w(t){return void 0===t}function E(t){return S(t)&&"[object RegExp]"===I(t)}function S(t){return"object"==typeof t&&null!==t}function N(t){return S(t)&&"[object Date]"===I(t)}function M(t){return S(t)&&("[object Error]"===I(t)||t instanceof Error)}function x(t){return"function"==typeof t}function I(t){return Object.prototype.toString.call(t)}function A(t){return t<10?"0"+t.toString(10):t.toString(10)}e.debuglog=function(t){if(t=t.toUpperCase(),!o[t])if(a.test(t)){var r=i.pid;o[t]=function(){var i=e.format.apply(e,arguments);console.error("%s %d: %s",t,r,i)}}else o[t]=function(){};return o[t]},e.inspect=h,h.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},h.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},e.types=r(5955),e.isArray=g,e.isBoolean=m,e.isNull=y,e.isNullOrUndefined=function(t){return null==t},e.isNumber=v,e.isString=b,e.isSymbol=function(t){return"symbol"==typeof t},e.isUndefined=w,e.isRegExp=E,e.types.isRegExp=E,e.isObject=S,e.isDate=N,e.types.isDate=N,e.isError=M,e.types.isNativeError=M,e.isFunction=x,e.isPrimitive=function(t){return null===t||"boolean"==typeof t||"number"==typeof t||"string"==typeof t||"symbol"==typeof t||void 0===t},e.isBuffer=r(384);var P=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function T(t,e){return Object.prototype.hasOwnProperty.call(t,e)}e.log=function(){var t,r;console.log("%s - %s",(r=[A((t=new Date).getHours()),A(t.getMinutes()),A(t.getSeconds())].join(":"),[t.getDate(),P[t.getMonth()],r].join(" ")),e.format.apply(e,arguments))},e.inherits=r(5717),e._extend=function(t,e){if(!e||!S(e))return t;for(var r=Object.keys(e),i=r.length;i--;)t[r[i]]=e[r[i]];return t};var R="undefined"!=typeof Symbol?Symbol("util.promisify.custom"):void 0;function k(t,e){if(!t){var r=new Error("Promise was rejected with a falsy value");r.reason=t,t=r}return e(t)}e.promisify=function(t){if("function"!=typeof t)throw new TypeError('The "original" argument must be of type Function');if(R&&t[R]){var e;if("function"!=typeof(e=t[R]))throw new TypeError('The "util.promisify.custom" argument must be of type Function');return Object.defineProperty(e,R,{value:e,enumerable:!1,writable:!1,configurable:!0}),e}function e(){for(var e,r,i=new Promise((function(t,i){e=t,r=i})),n=[],s=0;s<arguments.length;s++)n.push(arguments[s]);n.push((function(t,i){t?r(t):e(i)}));try{t.apply(this,n)}catch(t){r(t)}return i}return Object.setPrototypeOf(e,Object.getPrototypeOf(t)),R&&Object.defineProperty(e,R,{value:e,enumerable:!1,writable:!1,configurable:!0}),Object.defineProperties(e,n(t))},e.promisify.custom=R,e.callbackify=function(t){if("function"!=typeof t)throw new TypeError('The "original" argument must be of type Function');function e(){for(var e=[],r=0;r<arguments.length;r++)e.push(arguments[r]);var n=e.pop();if("function"!=typeof n)throw new TypeError("The last argument must be of type Function");var s=this,o=function(){return n.apply(s,arguments)};t.apply(this,e).then((function(t){i.nextTick(o.bind(null,null,t))}),(function(t){i.nextTick(k.bind(null,t,o))}))}return Object.setPrototypeOf(e,Object.getPrototypeOf(t)),Object.defineProperties(e,n(t)),e}},6430:(t,e,r)=>{"use strict";var i=r(4029),n=r(3083),s=r(5559),o=r(1924),a=r(7296),u=o("Object.prototype.toString"),h=r(6410)(),c="undefined"==typeof globalThis?r.g:globalThis,l=n(),d=o("String.prototype.slice"),f=Object.getPrototypeOf,p=o("Array.prototype.indexOf",!0)||function(t,e){for(var r=0;r<t.length;r+=1)if(t[r]===e)return r;return-1},g={__proto__:null};i(l,h&&a&&f?function(t){var e=new c[t];if(Symbol.toStringTag in e){var r=f(e),i=a(r,Symbol.toStringTag);if(!i){var n=f(r);i=a(n,Symbol.toStringTag)}g["$"+t]=s(i.get)}}:function(t){var e=new c[t];g["$"+t]=s(e.slice)}),t.exports=function(t){if(!t||"object"!=typeof t)return!1;if(!h){var e=d(u(t),8,-1);return p(l,e)>-1?e:"Object"===e&&function(t){var e=!1;return i(g,(function(r,i){if(!e)try{r(t),e=d(i,1)}catch(t){}})),e}(t)}return a?function(t){var e=!1;return i(g,(function(r,i){if(!e)try{"$"+r(t)===i&&(e=d(i,1))}catch(t){}})),e}(t):null}},7529:t=>{t.exports=function(){for(var t={},r=0;r<arguments.length;r++){var i=arguments[r];for(var n in i)e.call(i,n)&&(t[n]=i[n])}return t};var e=Object.prototype.hasOwnProperty},3448:t=>{"use strict";t.exports=child_process},9667:t=>{"use strict";t.exports=web-worker},950:()=>{},6601:()=>{},9214:()=>{},8623:()=>{},2480:()=>{},7748:()=>{},5568:()=>{},6619:()=>{},4654:()=>{},7108:()=>{},2361:()=>{},4616:()=>{},3083:(t,e,r)=>{"use strict";var i=["BigInt64Array","BigUint64Array","Float32Array","Float64Array","Int16Array","Int32Array","Int8Array","Uint16Array","Uint32Array","Uint8Array","Uint8ClampedArray"],n="undefined"==typeof globalThis?r.g:globalThis;t.exports=function(){for(var t=[],e=0;e<i.length;e++)"function"==typeof n[i[e]]&&(t[t.length]=i[e]);return t}},7582:(t,e,r)=>{"use strict";r.r(e),r.d(e,{__addDisposableResource:()=>C,__assign:()=>s,__asyncDelegator:()=>x,__asyncGenerator:()=>M,__asyncValues:()=>I,__await:()=>N,__awaiter:()=>p,__classPrivateFieldGet:()=>k,__classPrivateFieldIn:()=>O,__classPrivateFieldSet:()=>B,__createBinding:()=>m,__decorate:()=>a,__disposeResources:()=>j,__esDecorate:()=>h,__exportStar:()=>y,__extends:()=>n,__generator:()=>g,__importDefault:()=>R,__importStar:()=>T,__makeTemplateObject:()=>A,__metadata:()=>f,__param:()=>u,__propKey:()=>l,__read:()=>b,__rest:()=>o,__runInitializers:()=>c,__setFunctionName:()=>d,__spread:()=>w,__spreadArray:()=>S,__spreadArrays:()=>E,__values:()=>v,default:()=>Z});var i=function(t,e){return i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])},i(t,e)};function n(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}var s=function(){return s=Object.assign||function(t){for(var e,r=1,i=arguments.length;r<i;r++)for(var n in e=arguments[r])Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t},s.apply(this,arguments)};function o(t,e){var r={};for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&e.indexOf(i)<0&&(r[i]=t[i]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var n=0;for(i=Object.getOwnPropertySymbols(t);n<i.length;n++)e.indexOf(i[n])<0&&Object.prototype.propertyIsEnumerable.call(t,i[n])&&(r[i[n]]=t[i[n]])}return r}function a(t,e,r,i){var n,s=arguments.length,o=s<3?e:null===i?i=Object.getOwnPropertyDescriptor(e,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(t,e,r,i);else for(var a=t.length-1;a>=0;a--)(n=t[a])&&(o=(s<3?n(o):s>3?n(e,r,o):n(e,r))||o);return s>3&&o&&Object.defineProperty(e,r,o),o}function u(t,e){return function(r,i){e(r,i,t)}}function h(t,e,r,i,n,s){function o(t){if(void 0!==t&&"function"!=typeof t)throw new TypeError("Function expected");return t}for(var a,u=i.kind,h="getter"===u?"get":"setter"===u?"set":"value",c=!e&&t?i.static?t:t.prototype:null,l=e||(c?Object.getOwnPropertyDescriptor(c,i.name):{}),d=!1,f=r.length-1;f>=0;f--){var p={};for(var g in i)p[g]="access"===g?{}:i[g];for(var g in i.access)p.access[g]=i.access[g];p.addInitializer=function(t){if(d)throw new TypeError("Cannot add initializers after decoration has completed");s.push(o(t||null))};var m=(0,r[f])("accessor"===u?{get:l.get,set:l.set}:l[h],p);if("accessor"===u){if(void 0===m)continue;if(null===m||"object"!=typeof m)throw new TypeError("Object expected");(a=o(m.get))&&(l.get=a),(a=o(m.set))&&(l.set=a),(a=o(m.init))&&n.unshift(a)}else(a=o(m))&&("field"===u?n.unshift(a):l[h]=a)}c&&Object.defineProperty(c,i.name,l),d=!0}function c(t,e,r){for(var i=arguments.length>2,n=0;n<e.length;n++)r=i?e[n].call(t,r):e[n].call(t);return i?r:void 0}function l(t){return"symbol"==typeof t?t:"".concat(t)}function d(t,e,r){return"symbol"==typeof e&&(e=e.description?"[".concat(e.description,"]"):""),Object.defineProperty(t,"name",{configurable:!0,value:r?"".concat(r," ",e):e})}function f(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)}function p(t,e,r,i){return new(r||(r=Promise))((function(n,s){function o(t){try{u(i.next(t))}catch(t){s(t)}}function a(t){try{u(i.throw(t))}catch(t){s(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(o,a)}u((i=i.apply(t,e||[])).next())}))}function g(t,e){var r,i,n,s,o={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return s={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function a(a){return function(u){return function(a){if(r)throw new TypeError("Generator is already executing.");for(;s&&(s=0,a[0]&&(o=0)),o;)try{if(r=1,i&&(n=2&a[0]?i.return:a[0]?i.throw||((n=i.return)&&n.call(i),0):i.next)&&!(n=n.call(i,a[1])).done)return n;switch(i=0,n&&(a=[2&a[0],n.value]),a[0]){case 0:case 1:n=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,i=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!((n=(n=o.trys).length>0&&n[n.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!n||a[1]>n[0]&&a[1]<n[3])){o.label=a[1];break}if(6===a[0]&&o.label<n[1]){o.label=n[1],n=a;break}if(n&&o.label<n[2]){o.label=n[2],o.ops.push(a);break}n[2]&&o.ops.pop(),o.trys.pop();continue}a=e.call(t,o)}catch(t){a=[6,t],i=0}finally{r=n=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}}var m=Object.create?function(t,e,r,i){void 0===i&&(i=r);var n=Object.getOwnPropertyDescriptor(e,r);n&&!("get"in n?!e.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return e[r]}}),Object.defineProperty(t,i,n)}:function(t,e,r,i){void 0===i&&(i=r),t[i]=e[r]};function y(t,e){for(var r in t)"default"===r||Object.prototype.hasOwnProperty.call(e,r)||m(e,t,r)}function v(t){var e="function"==typeof Symbol&&Symbol.iterator,r=e&&t[e],i=0;if(r)return r.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&i>=t.length&&(t=void 0),{value:t&&t[i++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")}function b(t,e){var r="function"==typeof Symbol&&t[Symbol.iterator];if(!r)return t;var i,n,s=r.call(t),o=[];try{for(;(void 0===e||e-- >0)&&!(i=s.next()).done;)o.push(i.value)}catch(t){n={error:t}}finally{try{i&&!i.done&&(r=s.return)&&r.call(s)}finally{if(n)throw n.error}}return o}function w(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(b(arguments[e]));return t}function E(){for(var t=0,e=0,r=arguments.length;e<r;e++)t+=arguments[e].length;var i=Array(t),n=0;for(e=0;e<r;e++)for(var s=arguments[e],o=0,a=s.length;o<a;o++,n++)i[n]=s[o];return i}function S(t,e,r){if(r||2===arguments.length)for(var i,n=0,s=e.length;n<s;n++)!i&&n in e||(i||(i=Array.prototype.slice.call(e,0,n)),i[n]=e[n]);return t.concat(i||Array.prototype.slice.call(e))}function N(t){return this instanceof N?(this.v=t,this):new N(t)}function M(t,e,r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,n=r.apply(t,e||[]),s=[];return i={},o("next"),o("throw"),o("return",(function(t){return function(e){return Promise.resolve(e).then(t,h)}})),i[Symbol.asyncIterator]=function(){return this},i;function o(t,e){n[t]&&(i[t]=function(e){return new Promise((function(r,i){s.push([t,e,r,i])>1||a(t,e)}))},e&&(i[t]=e(i[t])))}function a(t,e){try{(r=n[t](e)).value instanceof N?Promise.resolve(r.value.v).then(u,h):c(s[0][2],r)}catch(t){c(s[0][3],t)}var r}function u(t){a("next",t)}function h(t){a("throw",t)}function c(t,e){t(e),s.shift(),s.length&&a(s[0][0],s[0][1])}}function x(t){var e,r;return e={},i("next"),i("throw",(function(t){throw t})),i("return"),e[Symbol.iterator]=function(){return this},e;function i(i,n){e[i]=t[i]?function(e){return(r=!r)?{value:N(t[i](e)),done:!1}:n?n(e):e}:n}}function I(t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e,r=t[Symbol.asyncIterator];return r?r.call(t):(t=v(t),e={},i("next"),i("throw"),i("return"),e[Symbol.asyncIterator]=function(){return this},e);function i(r){e[r]=t[r]&&function(e){return new Promise((function(i,n){!function(t,e,r,i){Promise.resolve(i).then((function(e){t({value:e,done:r})}),e)}(i,n,(e=t[r](e)).done,e.value)}))}}}function A(t,e){return Object.defineProperty?Object.defineProperty(t,"raw",{value:e}):t.raw=e,t}var P=Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e};function T(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var r in t)"default"!==r&&Object.prototype.hasOwnProperty.call(t,r)&&m(e,t,r);return P(e,t),e}function R(t){return t&&t.__esModule?t:{default:t}}function k(t,e,r,i){if("a"===r&&!i)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof e?t!==e||!i:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===r?i:"a"===r?i.call(t):i?i.value:e.get(t)}function B(t,e,r,i,n){if("m"===i)throw new TypeError("Private method is not writable");if("a"===i&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof e?t!==e||!n:!e.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===i?n.call(t,r):n?n.value=r:e.set(t,r),r}function O(t,e){if(null===e||"object"!=typeof e&&"function"!=typeof e)throw new TypeError("Cannot use 'in' operator on non-object");return"function"==typeof t?e===t:t.has(e)}function C(t,e,r){if(null!=e){if("object"!=typeof e&&"function"!=typeof e)throw new TypeError("Object expected.");var i,n;if(r){if(!Symbol.asyncDispose)throw new TypeError("Symbol.asyncDispose is not defined.");i=e[Symbol.asyncDispose]}if(void 0===i){if(!Symbol.dispose)throw new TypeError("Symbol.dispose is not defined.");i=e[Symbol.dispose],r&&(n=i)}if("function"!=typeof i)throw new TypeError("Object not disposable.");n&&(i=function(){try{n.call(this)}catch(t){return Promise.reject(t)}}),t.stack.push({value:e,dispose:i,async:r})}else r&&t.stack.push({async:!0});return e}var L="function"==typeof SuppressedError?SuppressedError:function(t,e,r){var i=new Error(r);return i.name="SuppressedError",i.error=t,i.suppressed=e,i};function j(t){function e(e){t.error=t.hasError?new L(e,t.error,"An error was suppressed during disposal."):e,t.hasError=!0}return function r(){for(;t.stack.length;){var i=t.stack.pop();try{var n=i.dispose&&i.dispose.call(i.value);if(i.async)return Promise.resolve(n).then(r,(function(t){return e(t),r()}))}catch(t){e(t)}}if(t.hasError)throw t.error}()}const Z={__extends:n,__assign:s,__rest:o,__decorate:a,__param:u,__metadata:f,__awaiter:p,__generator:g,__createBinding:m,__exportStar:y,__values:v,__read:b,__spread:w,__spreadArrays:E,__spreadArray:S,__await:N,__asyncGenerator:M,__asyncDelegator:x,__asyncValues:I,__makeTemplateObject:A,__importStar:T,__importDefault:R,__classPrivateFieldGet:k,__classPrivateFieldSet:B,__classPrivateFieldIn:O,__addDisposableResource:C,__disposeResources:j}},4946:t=>{"use strict";t.exports=JSON.parse('{"aes-128-ecb":{"cipher":"AES","key":128,"iv":0,"mode":"ECB","type":"block"},"aes-192-ecb":{"cipher":"AES","key":192,"iv":0,"mode":"ECB","type":"block"},"aes-256-ecb":{"cipher":"AES","key":256,"iv":0,"mode":"ECB","type":"block"},"aes-128-cbc":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes-192-cbc":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes-256-cbc":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes128":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes192":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes256":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes-128-cfb":{"cipher":"AES","key":128,"iv":16,"mode":"CFB","type":"stream"},"aes-192-cfb":{"cipher":"AES","key":192,"iv":16,"mode":"CFB","type":"stream"},"aes-256-cfb":{"cipher":"AES","key":256,"iv":16,"mode":"CFB","type":"stream"},"aes-128-cfb8":{"cipher":"AES","key":128,"iv":16,"mode":"CFB8","type":"stream"},"aes-192-cfb8":{"cipher":"AES","key":192,"iv":16,"mode":"CFB8","type":"stream"},"aes-256-cfb8":{"cipher":"AES","key":256,"iv":16,"mode":"CFB8","type":"stream"},"aes-128-cfb1":{"cipher":"AES","key":128,"iv":16,"mode":"CFB1","type":"stream"},"aes-192-cfb1":{"cipher":"AES","key":192,"iv":16,"mode":"CFB1","type":"stream"},"aes-256-cfb1":{"cipher":"AES","key":256,"iv":16,"mode":"CFB1","type":"stream"},"aes-128-ofb":{"cipher":"AES","key":128,"iv":16,"mode":"OFB","type":"stream"},"aes-192-ofb":{"cipher":"AES","key":192,"iv":16,"mode":"OFB","type":"stream"},"aes-256-ofb":{"cipher":"AES","key":256,"iv":16,"mode":"OFB","type":"stream"},"aes-128-ctr":{"cipher":"AES","key":128,"iv":16,"mode":"CTR","type":"stream"},"aes-192-ctr":{"cipher":"AES","key":192,"iv":16,"mode":"CTR","type":"stream"},"aes-256-ctr":{"cipher":"AES","key":256,"iv":16,"mode":"CTR","type":"stream"},"aes-128-gcm":{"cipher":"AES","key":128,"iv":12,"mode":"GCM","type":"auth"},"aes-192-gcm":{"cipher":"AES","key":192,"iv":12,"mode":"GCM","type":"auth"},"aes-256-gcm":{"cipher":"AES","key":256,"iv":12,"mode":"GCM","type":"auth"}}')},5207:t=>{"use strict";t.exports=JSON.parse('{"sha224WithRSAEncryption":{"sign":"rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"RSA-SHA224":{"sign":"ecdsa/rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"sha256WithRSAEncryption":{"sign":"rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"RSA-SHA256":{"sign":"ecdsa/rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"sha384WithRSAEncryption":{"sign":"rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"RSA-SHA384":{"sign":"ecdsa/rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"sha512WithRSAEncryption":{"sign":"rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA512":{"sign":"ecdsa/rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA1":{"sign":"rsa","hash":"sha1","id":"3021300906052b0e03021a05000414"},"ecdsa-with-SHA1":{"sign":"ecdsa","hash":"sha1","id":""},"sha256":{"sign":"ecdsa","hash":"sha256","id":""},"sha224":{"sign":"ecdsa","hash":"sha224","id":""},"sha384":{"sign":"ecdsa","hash":"sha384","id":""},"sha512":{"sign":"ecdsa","hash":"sha512","id":""},"DSA-SHA":{"sign":"dsa","hash":"sha1","id":""},"DSA-SHA1":{"sign":"dsa","hash":"sha1","id":""},"DSA":{"sign":"dsa","hash":"sha1","id":""},"DSA-WITH-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-WITH-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-WITH-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-WITH-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-RIPEMD160":{"sign":"dsa","hash":"rmd160","id":""},"ripemd160WithRSA":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"RSA-RIPEMD160":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"md5WithRSAEncryption":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"},"RSA-MD5":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"}}')},1308:t=>{"use strict";t.exports=JSON.parse('{"1.3.132.0.10":"secp256k1","1.3.132.0.33":"p224","1.2.840.10045.3.1.1":"p192","1.2.840.10045.3.1.7":"p256","1.3.132.0.34":"p384","1.3.132.0.35":"p521"}')},9799:t=>{"use strict";t.exports=JSON.parse('{"modp1":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"},"modp2":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"},"modp5":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"},"modp14":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"},"modp15":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"},"modp16":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"},"modp17":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"},"modp18":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"}}')},8597:t=>{"use strict";t.exports={i8:"6.5.7"}},2562:t=>{"use strict";t.exports=JSON.parse('{"2.16.840.1.101.3.4.1.1":"aes-128-ecb","2.16.840.1.101.3.4.1.2":"aes-128-cbc","2.16.840.1.101.3.4.1.3":"aes-128-ofb","2.16.840.1.101.3.4.1.4":"aes-128-cfb","2.16.840.1.101.3.4.1.21":"aes-192-ecb","2.16.840.1.101.3.4.1.22":"aes-192-cbc","2.16.840.1.101.3.4.1.23":"aes-192-ofb","2.16.840.1.101.3.4.1.24":"aes-192-cfb","2.16.840.1.101.3.4.1.41":"aes-256-ecb","2.16.840.1.101.3.4.1.42":"aes-256-cbc","2.16.840.1.101.3.4.1.43":"aes-256-ofb","2.16.840.1.101.3.4.1.44":"aes-256-cfb"}')}},i={};function n(t){var e=i[t];if(void 0!==e)return e.exports;var s=i[t]={id:t,loaded:!1,exports:{}};return r[t].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},e=Object.getPrototypeOf?t=>Object.getPrototypeOf(t):t=>t.__proto__,n.t=function(r,i){if(1&i&&(r=this(r)),8&i)return r;if("object"==typeof r&&r){if(4&i&&r.__esModule)return r;if(16&i&&"function"==typeof r.then)return r}var s=Object.create(null);n.r(s);var o={};t=t||[null,e({}),e([]),e(e)];for(var a=2&i&&r;"object"==typeof a&&!~t.indexOf(a);a=e(a))Object.getOwnPropertyNames(a).forEach((t=>o[t]=()=>r[t]));return o.default=()=>r,n.d(s,o),s},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.nmd=t=>(t.paths=[],t.children||(t.children=[]),t),(()=>{"use strict";var t=n(9282),e=n.n(t),r=n(6048),i=n(6384),s=n(9390),o=n(4019),a=n(1487),u=n(4292),h=n(9457),c=n(4485),l=n(2477),d=n(2795),f=n(1779),p=n(2245),g=n(9702),m=n(3547),y=n(8788),v=n(6537),b=n(5522),w=n(1902);self.onmessage=async function(t){await self.initOneTime();let r=t.data[0],i=t.data[1],n=t.data[2];if(e()(i,"Must provide function name to worker"),e()(n,"Must provide callback id to worker"),!self[i])throw new Error("Method '"+i+"' is not registered with worker");t.data.splice(1,2);try{postMessage([r,n,{result:await self[i].apply(null,t.data)}])}catch(t){t instanceof Error||(t=new Error(t)),postMessage([r,n,{error:s.Z.serializeError(t)}])}},self.initOneTime=async function(){self.isInitialized||(self.WORKER_OBJECTS={},self.isInitialized=!0,m.Z.PROXY_TO_WORKER=!1)},self.httpRequest=async function(t,e){try{return await i.Z.request(Object.assign(e,{proxyToWorker:!1}))}catch(t){throw t.statusCode?new Error(JSON.stringify({statusCode:t.statusCode,statusMessage:t.message})):t}},self.setLogLevel=async function(t,e){return s.Z.setLogLevel(e)},self.getWasmMemoryUsed=async function(t){return s.Z.getWasmModule()&&s.Z.getWasmModule().HEAP8?s.Z.getWasmModule().HEAP8.length:void 0},self.moneroUtilsGetIntegratedAddress=async function(t,e,r,i){return(await m.Z.getIntegratedAddress(e,r,i)).toJson()},self.moneroUtilsValidateAddress=async function(t,e,r){return m.Z.validateAddress(e,r)},self.moneroUtilsJsonToBinary=async function(t,e){return m.Z.jsonToBinary(e)},self.moneroUtilsBinaryToJson=async function(t,e){return m.Z.binaryToJson(e)},self.moneroUtilsBinaryBlocksToJson=async function(t,e){return m.Z.binaryBlocksToJson(e)},self.daemonAddListener=async function(t,e){let r=new class extends h.Z{async onBlockHeader(r){self.postMessage([t,"onBlockHeader_"+e,r.toJson()])}};self.daemonListeners||(self.daemonListeners={}),self.daemonListeners[e]=r,await self.WORKER_OBJECTS[t].addListener(r)},self.daemonRemoveListener=async function(t,e){if(!self.daemonListeners[e])throw new l.Z("No daemon worker listener registered with id: "+e);await self.WORKER_OBJECTS[t].removeListener(self.daemonListeners[e]),delete self.daemonListeners[e]},self.connectDaemonRpc=async function(t,e){self.WORKER_OBJECTS[t]=await c.Z.connectToDaemonRpc(new u.Z(e))},self.daemonGetRpcConnection=async function(t){let e=await self.WORKER_OBJECTS[t].getRpcConnection();return e?e.getConfig():void 0},self.daemonIsConnected=async function(t){return self.WORKER_OBJECTS[t].isConnected()},self.daemonGetVersion=async function(t){return(await self.WORKER_OBJECTS[t].getVersion()).toJson()},self.daemonIsTrusted=async function(t){return self.WORKER_OBJECTS[t].isTrusted()},self.daemonGetHeight=async function(t){return self.WORKER_OBJECTS[t].getHeight()},self.daemonGetBlockHash=async function(t,e){return self.WORKER_OBJECTS[t].getBlockHash(e)},self.daemonGetBlockTemplate=async function(t,e,r){return(await self.WORKER_OBJECTS[t].getBlockTemplate(e,r)).toJson()},self.daemonGetLastBlockHeader=async function(t){return(await self.WORKER_OBJECTS[t].getLastBlockHeader()).toJson()},self.daemonGetBlockHeaderByHash=async function(t,e){return(await self.WORKER_OBJECTS[t].getBlockHeaderByHash(e)).toJson()},self.daemonGetBlockHeaderByHeight=async function(t,e){return(await self.WORKER_OBJECTS[t].getBlockHeaderByHeight(e)).toJson()},self.daemonGetBlockHeadersByRange=async function(t,e,r){let i=[];for(let n of await self.WORKER_OBJECTS[t].getBlockHeadersByRange(e,r))i.push(n.toJson());return i},self.daemonGetBlockByHash=async function(t,e){return(await self.WORKER_OBJECTS[t].getBlockByHash(e)).toJson()},self.daemonGetBlocksByHash=async function(t,e,r,i){let n=[];for(let s of await self.WORKER_OBJECTS[t].getBlocksByHash(e,r,i))n.push(s.toJson());return n},self.daemonGetBlockByHeight=async function(t,e){return(await self.WORKER_OBJECTS[t].getBlockByHeight(e)).toJson()},self.daemonGetBlocksByHeight=async function(t,e){let r=[];for(let i of await self.WORKER_OBJECTS[t].getBlocksByHeight(e))r.push(i.toJson());return r},self.daemonGetBlocksByRange=async function(t,e,r){let i=[];for(let n of await self.WORKER_OBJECTS[t].getBlocksByRange(e,r))i.push(n.toJson());return i},self.daemonGetBlocksByRangeChunked=async function(t,e,r,i){let n=[];for(let s of await self.WORKER_OBJECTS[t].getBlocksByRangeChunked(e,r,i))n.push(s.toJson());return n},self.daemonGetBlockHashes=async function(t,e,r){throw new Error("worker.getBlockHashes not implemented")},self.daemonGetTxs=async function(t,e,r){let i,n=await self.WORKER_OBJECTS[t].getTxs(e,r),s=[],o=new Set;for(let t of n)t.getBlock()||(i||(i=(new a.Z).setTxs([])),t.setBlock(i),i.getTxs().push(t)),o.has(t.getBlock())||(o.add(t.getBlock()),s.push(t.getBlock()));for(let t=0;t<s.length;t++)s[t]=s[t].toJson();return s},self.daemonGetTxHexes=async function(t,e,r){return self.WORKER_OBJECTS[t].getTxHexes(e,r)},self.daemonGetMinerTxSum=async function(t,e,r){return(await self.WORKER_OBJECTS[t].getMinerTxSum(e,r)).toJson()},self.daemonGetFeeEstimate=async function(t,e){return(await self.WORKER_OBJECTS[t].getFeeEstimate(e)).toJson()},self.daemonSubmitTxHex=async function(t,e,r){return(await self.WORKER_OBJECTS[t].submitTxHex(e,r)).toJson()},self.daemonRelayTxsByHash=async function(t,e){return self.WORKER_OBJECTS[t].relayTxsByHash(e)},self.daemonGetTxPool=async function(t){let e=await self.WORKER_OBJECTS[t].getTxPool(),r=(new a.Z).setTxs(e);for(let t of e)t.setBlock(r);return r.toJson()},self.daemonGetTxPoolHashes=async function(t){return self.WORKER_OBJECTS[t].getTxPoolHashes()},self.daemonGetTxPoolStats=async function(t){return(await self.WORKER_OBJECTS[t].getTxPoolStats()).toJson()},self.daemonFlushTxPool=async function(t,e){return self.WORKER_OBJECTS[t].flushTxPool(e)},self.daemonGetKeyImageSpentStatuses=async function(t,e){return self.WORKER_OBJECTS[t].getKeyImageSpentStatuses(e)},self.daemonGetOutputHistogram=async function(t,e,r,i,n,s){let o=[];for(let a of await self.WORKER_OBJECTS[t].getOutputHistogram(e,r,i,n,s))o.push(a.toJson());return o},self.daemonGetInfo=async function(t){return(await self.WORKER_OBJECTS[t].getInfo()).toJson()},self.daemonGetSyncInfo=async function(t){return(await self.WORKER_OBJECTS[t].getSyncInfo()).toJson()},self.daemonGetHardForkInfo=async function(t){return(await self.WORKER_OBJECTS[t].getHardForkInfo()).toJson()},self.daemonGetAltChains=async function(t){let e=[];for(let r of await self.WORKER_OBJECTS[t].getAltChains())e.push(r.toJson());return e},self.daemonGetAltBlockHashes=async function(t){return self.WORKER_OBJECTS[t].getAltBlockHashes()},self.daemonGetDownloadLimit=async function(t){return self.WORKER_OBJECTS[t].getDownloadLimit()},self.daemonSetDownloadLimit=async function(t,e){return self.WORKER_OBJECTS[t].setDownloadLimit(e)},self.daemonResetDownloadLimit=async function(t){return self.WORKER_OBJECTS[t].resetDownloadLimit()},self.daemonGetUploadLimit=async function(t){return self.WORKER_OBJECTS[t].getUploadLimit()},self.daemonSetUploadLimit=async function(t,e){return self.WORKER_OBJECTS[t].setUploadLimit(e)},self.daemonResetUploadLimit=async function(t){return self.WORKER_OBJECTS[t].resetUploadLimit()},self.daemonGetPeers=async function(t){let e=[];for(let r of await self.WORKER_OBJECTS[t].getPeers())e.push(r.toJson());return e},self.daemonGetKnownPeers=async function(t){let e=[];for(let r of await self.WORKER_OBJECTS[t].getKnownPeers())e.push(r.toJson());return e},self.daemonSetOutgoingPeerLimit=async function(t,e){return self.WORKER_OBJECTS[t].setOutgoingPeerLimit(e)},self.daemonSetIncomingPeerLimit=async function(t,e){return self.WORKER_OBJECTS[t].setIncomingPeerLimit(e)},self.daemonGetPeerBans=async function(t){let e=[];for(let r of await self.WORKER_OBJECTS[t].getPeerBans())e.push(r.toJson());return e},self.daemonSetPeerBans=async function(t,e){let r=[];for(let t of e)r.push(new o.Z(t));return self.WORKER_OBJECTS[t].setPeerBans(r)},self.daemonStartMining=async function(t,e,r,i,n){return self.WORKER_OBJECTS[t].startMining(e,r,i,n)},self.daemonStopMining=async function(t){return self.WORKER_OBJECTS[t].stopMining()},self.daemonGetMiningStatus=async function(t){return(await self.WORKER_OBJECTS[t].getMiningStatus()).toJson()},self.daemonPruneBlockchain=async function(t,e){return(await self.WORKER_OBJECTS[t].pruneBlockchain(e)).toJson()},self.daemonStop=async function(t){return self.WORKER_OBJECTS[t].stop()},self.daemonWaitForNextBlockHeader=async function(t){return(await self.WORKER_OBJECTS[t].waitForNextBlockHeader()).toJson()},self.openWalletData=async function(t,e,r,i,n,s,o){let a=o?new f.Z(o):void 0;self.WORKER_OBJECTS[t]=await w.Z.openWallet({path:"",password:r,networkType:i,keysData:n,cacheData:s,server:a,proxyToWorker:!1}),self.WORKER_OBJECTS[t].setBrowserMainPath(e)},self.createWalletKeys=async function(t,e){let r=new y.Z(e);r.setProxyToWorker(!1),self.WORKER_OBJECTS[t]=await b.a.createWallet(r)},self.createWalletFull=async function(t,e){let r=new y.Z(e),i=r.getPath();r.setPath(""),r.setProxyToWorker(!1),self.WORKER_OBJECTS[t]=await w.Z.createWallet(r),self.WORKER_OBJECTS[t].setBrowserMainPath(i)},self.isViewOnly=async function(t){return self.WORKER_OBJECTS[t].isViewOnly()},self.getNetworkType=async function(t){return self.WORKER_OBJECTS[t].getNetworkType()},self.getSeed=async function(t){return self.WORKER_OBJECTS[t].getSeed()},self.getSeedLanguage=async function(t){return self.WORKER_OBJECTS[t].getSeedLanguage()},self.getSeedLanguages=async function(t){return self.WORKER_OBJECTS[t].getSeedLanguages()},self.getPrivateSpendKey=async function(t){return self.WORKER_OBJECTS[t].getPrivateSpendKey()},self.getPrivateViewKey=async function(t){return self.WORKER_OBJECTS[t].getPrivateViewKey()},self.getPublicViewKey=async function(t){return self.WORKER_OBJECTS[t].getPublicViewKey()},self.getPublicSpendKey=async function(t){return self.WORKER_OBJECTS[t].getPublicSpendKey()},self.getAddress=async function(t,e,r){return self.WORKER_OBJECTS[t].getAddress(e,r)},self.getAddressIndex=async function(t,e){return(await self.WORKER_OBJECTS[t].getAddressIndex(e)).toJson()},self.setSubaddressLabel=async function(t,e,r,i){await self.WORKER_OBJECTS[t].setSubaddressLabel(e,r,i)},self.getIntegratedAddress=async function(t,e,r){return(await self.WORKER_OBJECTS[t].getIntegratedAddress(e,r)).toJson()},self.decodeIntegratedAddress=async function(t,e){return(await self.WORKER_OBJECTS[t].decodeIntegratedAddress(e)).toJson()},self.setDaemonConnection=async function(t,e){return self.WORKER_OBJECTS[t].setDaemonConnection(e?new f.Z(Object.assign(e,{proxyToWorker:!1})):void 0)},self.getDaemonConnection=async function(t){let e=await self.WORKER_OBJECTS[t].getDaemonConnection();return e?e.getConfig():void 0},self.isConnectedToDaemon=async function(t){return self.WORKER_OBJECTS[t].isConnectedToDaemon()},self.getRestoreHeight=async function(t){return self.WORKER_OBJECTS[t].getRestoreHeight()},self.setRestoreHeight=async function(t,e){return self.WORKER_OBJECTS[t].setRestoreHeight(e)},self.getDaemonHeight=async function(t){return self.WORKER_OBJECTS[t].getDaemonHeight()},self.getDaemonMaxPeerHeight=async function(t){return self.WORKER_OBJECTS[t].getDaemonMaxPeerHeight()},self.getHeightByDate=async function(t,e,r,i){return self.WORKER_OBJECTS[t].getHeightByDate(e,r,i)},self.isDaemonSynced=async function(t){return self.WORKER_OBJECTS[t].isDaemonSynced()},self.getHeight=async function(t){return self.WORKER_OBJECTS[t].getHeight()},self.addListener=async function(t,e){class r extends v.Z{constructor(t,e,r){super(),this.walletId=t,this.id=e,this.worker=r}getId(){return this.id}async onSyncProgress(t,e,r,i,n){this.worker.postMessage([this.walletId,"onSyncProgress_"+this.getId(),t,e,r,i,n])}async onNewBlock(t){this.worker.postMessage([this.walletId,"onNewBlock_"+this.getId(),t])}async onBalancesChanged(t,e){this.worker.postMessage([this.walletId,"onBalancesChanged_"+this.getId(),t.toString(),e.toString()])}async onOutputReceived(t){let e=t.getTx().getBlock();void 0===e&&(e=(new a.Z).setTxs([t.getTx()])),this.worker.postMessage([this.walletId,"onOutputReceived_"+this.getId(),e.toJson()])}async onOutputSpent(t){let e=t.getTx().getBlock();void 0===e&&(e=(new a.Z).setTxs([t.getTx()])),this.worker.postMessage([this.walletId,"onOutputSpent_"+this.getId(),e.toJson()])}}let i=new r(t,e,self);self.listeners||(self.listeners=[]),self.listeners.push(i),await self.WORKER_OBJECTS[t].addListener(i)},self.removeListener=async function(t,e){for(let r=0;r<self.listeners.length;r++)if(self.listeners[r].getId()===e)return await self.WORKER_OBJECTS[t].removeListener(self.listeners[r]),void self.listeners.splice(r,1);throw new l.Z("Listener is not registered with wallet")},self.isSynced=async function(t){return self.WORKER_OBJECTS[t].isSynced()},self.sync=async function(t,e,r){return await self.WORKER_OBJECTS[t].sync(void 0,e,r)},self.startSyncing=async function(t,e){return self.WORKER_OBJECTS[t].startSyncing(e)},self.stopSyncing=async function(t){return self.WORKER_OBJECTS[t].stopSyncing()},self.scanTxs=async function(t,e){return self.WORKER_OBJECTS[t].scanTxs(e)},self.rescanSpent=async function(t){return self.WORKER_OBJECTS[t].rescanSpent()},self.rescanBlockchain=async function(t){return self.WORKER_OBJECTS[t].rescanBlockchain()},self.getBalance=async function(t,e,r){return(await self.WORKER_OBJECTS[t].getBalance(e,r)).toString()},self.getUnlockedBalance=async function(t,e,r){return(await self.WORKER_OBJECTS[t].getUnlockedBalance(e,r)).toString()},self.getAccounts=async function(t,e,r){let i=[];for(let n of await self.WORKER_OBJECTS[t].getAccounts(e,r))i.push(n.toJson());return i},self.getAccount=async function(t,e,r){return(await self.WORKER_OBJECTS[t].getAccount(e,r)).toJson()},self.createAccount=async function(t,e){return(await self.WORKER_OBJECTS[t].createAccount(e)).toJson()},self.getSubaddresses=async function(t,e,r){let i=[];for(let n of await self.WORKER_OBJECTS[t].getSubaddresses(e,r))i.push(n.toJson());return i},self.createSubaddress=async function(t,e,r){return(await self.WORKER_OBJECTS[t].createSubaddress(e,r)).toJson()},self.getTxs=async function(t,e){let r,i=new a.Z(e,a.Z.DeserializationType.TX_QUERY).getTxs()[0],n=await self.WORKER_OBJECTS[t].getTxs(i),s=new Set,o=[];for(let t of n)t.getBlock()||(r||(r=(new a.Z).setTxs([])),t.setBlock(r),r.getTxs().push(t)),s.has(t.getBlock())||(s.add(t.getBlock()),o.push(t.getBlock()));for(let t=0;t<o.length;t++)o[t]=o[t].toJson();return{blocks:o}},self.getTransfers=async function(t,e){let r,i=new a.Z(e,a.Z.DeserializationType.TX_QUERY).getTxs()[0].getTransferQuery(),n=await self.WORKER_OBJECTS[t].getTransfers(i),s=[],o=new Set;for(let t of n){let e=t.getTx();e.getBlock()||(r||(r=(new a.Z).setTxs([])),e.setBlock(r),r.getTxs().push(e)),o.has(e.getBlock())||(o.add(e.getBlock()),s.push(e.getBlock()))}for(let t=0;t<s.length;t++)s[t]=s[t].toJson();return s},self.getOutputs=async function(t,e){let r,i=new a.Z(e,a.Z.DeserializationType.TX_QUERY).getTxs()[0].getOutputQuery(),n=await self.WORKER_OBJECTS[t].getOutputs(i),s=[],o=new Set;for(let t of n){let e=t.getTx();e.getBlock()||(r||(r=(new a.Z).setTxs([])),e.setBlock(r),r.getTxs().push(e)),o.has(e.getBlock())||(o.add(e.getBlock()),s.push(e.getBlock()))}for(let t=0;t<s.length;t++)s[t]=s[t].toJson();return s},self.exportOutputs=async function(t,e){return self.WORKER_OBJECTS[t].exportOutputs(e)},self.importOutputs=async function(t,e){return self.WORKER_OBJECTS[t].importOutputs(e)},self.getKeyImages=async function(t,e){let r=[];for(let i of await self.WORKER_OBJECTS[t].exportKeyImages(e))r.push(i.toJson());return r},self.importKeyImages=async function(t,e){let r=[];for(let t of e)r.push(new d.Z(t));return(await self.WORKER_OBJECTS[t].importKeyImages(r)).toJson()},self.freezeOutput=async function(t,e){return self.WORKER_OBJECTS[t].freezeOutput(e)},self.thawOutput=async function(t,e){return self.WORKER_OBJECTS[t].thawOutput(e)},self.isOutputFrozen=async function(t,e){return self.WORKER_OBJECTS[t].isOutputFrozen(e)},self.createTxs=async function(t,e){return"object"==typeof e&&(e=new p.Z(e)),(await self.WORKER_OBJECTS[t].createTxs(e))[0].getTxSet().toJson()},self.sweepOutput=async function(t,e){return"object"==typeof e&&(e=new p.Z(e)),(await self.WORKER_OBJECTS[t].sweepOutput(e)).getTxSet().toJson()},self.sweepUnlocked=async function(t,e){"object"==typeof e&&(e=new p.Z(e));let i=await self.WORKER_OBJECTS[t].sweepUnlocked(e),n=[];for(let t of i)r.Z.arrayContains(n,t.getTxSet())||n.push(t.getTxSet());let s=[];for(let t of n)s.push(t.toJson());return s},self.sweepDust=async function(t,e){let r=await self.WORKER_OBJECTS[t].sweepDust(e);return 0===r.length?{}:r[0].getTxSet().toJson()},self.relayTxs=async function(t,e){return self.WORKER_OBJECTS[t].relayTxs(e)},self.describeTxSet=async function(t,e){return(await self.WORKER_OBJECTS[t].describeTxSet(new g.Z(e))).toJson()},self.signTxs=async function(t,e){return self.WORKER_OBJECTS[t].signTxs(e)},self.submitTxs=async function(t,e){return self.WORKER_OBJECTS[t].submitTxs(e)},self.signMessage=async function(t,e,r,i,n){return self.WORKER_OBJECTS[t].signMessage(e,r,i,n)},self.verifyMessage=async function(t,e,r,i){return(await self.WORKER_OBJECTS[t].verifyMessage(e,r,i)).toJson()},self.getTxKey=async function(t,e){return self.WORKER_OBJECTS[t].getTxKey(e)},self.checkTxKey=async function(t,e,r,i){return(await self.WORKER_OBJECTS[t].checkTxKey(e,r,i)).toJson()},self.getTxProof=async function(t,e,r,i){return self.WORKER_OBJECTS[t].getTxProof(e,r,i)},self.checkTxProof=async function(t,e,r,i,n){return(await self.WORKER_OBJECTS[t].checkTxProof(e,r,i,n)).toJson()},self.getSpendProof=async function(t,e,r){return self.WORKER_OBJECTS[t].getSpendProof(e,r)},self.checkSpendProof=async function(t,e,r,i){return self.WORKER_OBJECTS[t].checkSpendProof(e,r,i)},self.getReserveProofWallet=async function(t,e){return self.WORKER_OBJECTS[t].getReserveProofWallet(e)},self.getReserveProofAccount=async function(t,e,r,i){return self.WORKER_OBJECTS[t].getReserveProofAccount(e,r,i)},self.checkReserveProof=async function(t,e,r,i){return(await self.WORKER_OBJECTS[t].checkReserveProof(e,r,i)).toJson()},self.getTxNotes=async function(t,e){return self.WORKER_OBJECTS[t].getTxNotes(e)},self.setTxNotes=async function(t,e,r){return self.WORKER_OBJECTS[t].setTxNotes(e,r)},self.getAddressBookEntries=async function(t,e){let r=[];for(let i of await self.WORKER_OBJECTS[t].getAddressBookEntries(e))r.push(i.toJson());return r},self.addAddressBookEntry=async function(t,e,r){return self.WORKER_OBJECTS[t].addAddressBookEntry(e,r)},self.editAddressBookEntry=async function(t,e,r,i,n,s){return self.WORKER_OBJECTS[t].editAddressBookEntry(e,r,i,n,s)},self.deleteAddressBookEntry=async function(t,e){return self.WORKER_OBJECTS[t].deleteAddressBookEntry(e)},self.tagAccounts=async function(t,e,r){throw new Error("Not implemented")},self.untagAccounts=async function(t,e){throw new Error("Not implemented")},self.getAccountTags=async function(t){throw new Error("Not implemented")},self.setAccountTagLabel=async function(t,e,r){throw new Error("Not implemented")},self.getPaymentUri=async function(t,e){return self.WORKER_OBJECTS[t].getPaymentUri(new p.Z(e))},self.parsePaymentUri=async function(t,e){return(await self.WORKER_OBJECTS[t].parsePaymentUri(e)).toJson()},self.getAttribute=async function(t,e){return self.WORKER_OBJECTS[t].getAttribute(e)},self.setAttribute=async function(t,e,r){return self.WORKER_OBJECTS[t].setAttribute(e,r)},self.startMining=async function(t,e,r,i){return self.WORKER_OBJECTS[t].startMining(e,r,i)},self.stopMining=async function(t){return self.WORKER_OBJECTS[t].stopMining()},self.isMultisigImportNeeded=async function(t){return self.WORKER_OBJECTS[t].isMultisigImportNeeded()},self.isMultisig=async function(t){return self.WORKER_OBJECTS[t].isMultisig()},self.getMultisigInfo=async function(t){return(await self.WORKER_OBJECTS[t].getMultisigInfo()).toJson()},self.prepareMultisig=async function(t){return self.WORKER_OBJECTS[t].prepareMultisig()},self.makeMultisig=async function(t,e,r,i){return await self.WORKER_OBJECTS[t].makeMultisig(e,r,i)},self.exchangeMultisigKeys=async function(t,e,r){return(await self.WORKER_OBJECTS[t].exchangeMultisigKeys(e,r)).toJson()},self.exportMultisigHex=async function(t){return self.WORKER_OBJECTS[t].exportMultisigHex()},self.importMultisigHex=async function(t,e){return self.WORKER_OBJECTS[t].importMultisigHex(e)},self.signMultisigTxHex=async function(t,e){return(await self.WORKER_OBJECTS[t].signMultisigTxHex(e)).toJson()},self.submitMultisigTxHex=async function(t,e){return self.WORKER_OBJECTS[t].submitMultisigTxHex(e)},self.getData=async function(t){return self.WORKER_OBJECTS[t].getData()},self.changePassword=async function(t,e,r){return self.WORKER_OBJECTS[t].changePassword(e,r)},self.isClosed=async function(t){return!self.WORKER_OBJECTS[t]||self.WORKER_OBJECTS[t].isClosed()},self.close=async function(t,e){return self.WORKER_OBJECTS[t].close(e)}})()})();
//# sourceMappingURL=monero.worker.js.map